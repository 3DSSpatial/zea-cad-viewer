{"version":3,"file":"index.umd.js","sources":["../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/process-es6.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../src/helpers/zeaDebug.js","../node_modules/debug/src/browser.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/re.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/valid.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/node_modules/yallist/yallist.js","../node_modules/semver/node_modules/yallist/iterator.js","../node_modules/semver/node_modules/lru-cache/index.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/valid.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/index.js","../node_modules/semver/ranges/simplify.js","../src/SystemDesc.js","../src/Utilities/MathFunctions.js","../src/Registry.js","../src/Utilities/StringFunctions.js","../src/Math/AttrValue.js","../src/Math/Vec2.js","../src/Math/Vec3.js","../src/Math/Vec4.js","../src/Math/RGBA.js","../src/Math/Color.js","../src/Math/EulerAngles.js","../src/Math/Mat3.js","../src/Math/Mat4.js","../src/Math/Quat.js","../src/Math/Ray.js","../src/Math/Xfo.js","../src/Math/Box2.js","../src/Math/SphereType.js","../src/Math/Box3.js","../src/Math/PlaneType.js","../src/Math/Frustum.js","../src/Utilities/EventEmitter.js","../src/Utilities/GrowingPacker.js","../src/Utilities/Allocator1D.js","../src/Utilities/EnumUtils.js","../src/SceneTree/RefCounted.js","../src/SceneTree/ParameterOwner.js","../src/SceneTree/BinReader.js","../src/SceneTree/BaseItem.js","../src/SceneTree/Utils.js","../src/SceneTree/Parameters/Parameter.js","../src/SceneTree/Parameters/NumberParameter.js","../src/SceneTree/Parameters/MultiChoiceParameter.js","../src/SceneTree/Parameters/BooleanParameter.js","../src/SceneTree/Parameters/Vec2Parameter.js","../src/SceneTree/Parameters/Vec3Parameter.js","../src/SceneTree/Parameters/Vec4Parameter.js","../src/SceneTree/Parameters/ColorParameter.js","../src/SceneTree/Parameters/QuatParameter.js","../src/SceneTree/Parameters/Mat3Parameter.js","../src/SceneTree/Parameters/Mat4Parameter.js","../src/SceneTree/Parameters/XfoParameter.js","../src/SceneTree/Parameters/ImageParameter.js","../src/SceneTree/Parameters/StringListParameter.js","../src/SceneTree/Parameters/StringParameter.js","../src/SceneTree/Parameters/CodeParameter.js","../src/SceneTree/Parameters/ListParameter.js","../src/SceneTree/Parameters/StructParameter.js","../src/SceneTree/Parameters/TreeItemParameter.js","../src/SceneTree/Parameters/ItemSetParameter.js","../src/SceneTree/Parameters/GeometryParameter.js","../src/SceneTree/Operators/OperatorInput.js","../src/SceneTree/Operators/OperatorOutput.js","../src/SceneTree/Operators/Operator.js","../src/SceneTree/Operators/CalcGlobalXfoOperator.js","../src/SceneTree/Parameters/BoundingBoxParameter.js","../src/SceneTree/TreeItem.js","../src/SceneTree/ResourceLoader/ArchiveUnpackerPlugin.js","../src/SceneTree/resourceLoader.js","../src/SceneTree/ResourceLoader/JsonLoaderPlugin.js","../src/SceneTree/ResourceLoader/TextLoaderPlugin.js","../src/SceneTree/ResourceLoader/BinaryLoaderPlugin.js","../src/SceneTree/Version.js","../src/SceneTree/BinWriter.js","../src/SceneTree/Parameters/FilePathParameter.js","../src/SceneTree/BaseImage.js","../src/SceneTree/Parameters/MaterialFloatParam.js","../src/SceneTree/Parameters/MaterialColorParam.js","../src/SceneTree/Material.js","../src/SceneTree/Parameters/MaterialParameter.js","../src/SceneTree/Geometry/Attribute.js","../src/SceneTree/Geometry/VertexAttribute.js","../src/SceneTree/Geometry/BaseGeom.js","../src/SceneTree/Geometry/Points.js","../src/SceneTree/Geometry/Lines.js","../src/SceneTree/Geometry/Mesh.js","../src/SceneTree/Geometry/GeomProxies.js","../src/SceneTree/Geometry/Shapes/ProceduralPoints.js","../src/SceneTree/Geometry/Shapes/ProceduralLines.js","../src/SceneTree/Geometry/Shapes/ProceduralMesh.js","../src/SceneTree/Geometry/Shapes/PointGrid.js","../src/SceneTree/Geometry/Shapes/Rect.js","../src/SceneTree/Geometry/Shapes/Circle.js","../src/SceneTree/Geometry/Shapes/Cross.js","../src/SceneTree/Geometry/Shapes/LinesCuboid.js","../src/SceneTree/Geometry/Shapes/Grid.js","../src/SceneTree/Geometry/Shapes/Cone.js","../src/SceneTree/Geometry/Shapes/Cuboid.js","../src/SceneTree/Geometry/Shapes/Cylinder.js","../src/SceneTree/Geometry/Shapes/Disc.js","../src/SceneTree/Geometry/Shapes/Plane.js","../src/SceneTree/Geometry/Shapes/Sphere.js","../src/SceneTree/Geometry/Shapes/Torus.js","../src/SceneTree/Images/DataImage.js","../src/SceneTree/Images/FileImage.js","../src/SceneTree/Images/LDRImage.js","../src/SceneTree/Images/LDRVideo.js","../src/external/gifuct-js.js","../src/SceneTree/Images/GIFImage.js","../src/SceneTree/Images/VLHImage.js","../src/SceneTree/Images/EnvMap.js","../src/SceneTree/Images/LabelManager.js","../src/SceneTree/Images/Label.js","../src/SceneTree/Images/VideoStreamImage2D.js","../src/SceneTree/InstanceItem.js","../src/SceneTree/BaseGeomItem.js","../src/SceneTree/GeomItem.js","../src/SceneTree/AssetLoadContext.js","../src/SceneTree/Groups/BaseGroup.js","../src/SceneTree/Groups/SelectionSet.js","../src/SceneTree/GeomLibrary.js","../src/SceneTree/MaterialLibrary.js","../src/SceneTree/AssetItem.js","../src/SceneTree/BillboardItem.js","../src/SceneTree/Camera.js","../src/SceneTree/Operators/GroupMemberXfoOperator.js","../src/SceneTree/Groups/Group.js","../src/SceneTree/Groups/KinematicGroup.js","../src/SceneTree/Groups/MaterialGroup.js","../src/SceneTree/Operators/CuttingPlaneOperator.js","../src/SceneTree/Groups/CuttingPlane.js","../src/SceneTree/SceneSettings.js","../src/SceneTree/GridTreeItem.js","../src/SceneTree/Scene.js","../src/SceneTree/VLAAsset.js","../src/SceneTree/ObjAsset.js","../src/SceneTree/Operators/RouterOperator.js","../src/SceneTree/Manipulators/BaseTool.js","../src/Renderer/Passes/GLPass.js","../src/SceneTree/Manipulators/CameraManipulator.js","../src/SceneTree/SGFactory.js","../src/Renderer/GLContext.js","../src/Renderer/processTextureParams.js","../src/Renderer/GLTexture2D.js","../src/Renderer/GLSLConstants.js","../src/Renderer/ShaderLibrary.js","../src/Renderer/GLShader.js","../src/Renderer/GLFbo.js","../src/Renderer/GLRenderTarget.js","../src/Renderer/Shaders/GLSL/index.js","../src/Renderer/Shaders/UnpackHDRShader.js","../src/Renderer/Drawing/GeomShaderBinding.js","../src/Renderer/GLHDRImage.js","../src/Renderer/Shaders/PreComputeBRDFShader.js","../src/Renderer/Shaders/ConvolveIrradianceShader.js","../src/Renderer/Shaders/ConvolveSpecularShader.js","../src/Renderer/GLProbe.js","../src/Renderer/Shaders/EnvMapShader.js","../src/Renderer/GLEnvMap.js","../src/Renderer/Shaders/ScreenQuadShader.js","../src/Renderer/GLScreenQuad.js","../src/Renderer/Drawing/GLGeom.js","../src/Renderer/Drawing/GLMesh.js","../src/Renderer/GLBaseViewport.js","../src/Renderer/GLViewport.js","../src/Renderer/VR/VRHead.js","../src/Renderer/VR/VRController.js","../src/Renderer/VR/VRViewManipulator.js","../src/Renderer/VR/VRViewport.js","../src/Renderer/Drawing/MaterialShaderBinding.js","../src/Renderer/Drawing/GLMaterial.js","../src/Renderer/Drawing/GLMaterialLibrary.js","../src/Renderer/Drawing/GLPoints.js","../src/Renderer/Drawing/GLLines.js","../src/Renderer/Drawing/GLGeomItem.js","../src/Renderer/Drawing/GLGeomItemSet.js","../src/Renderer/Drawing/GLMaterialGeomItemSets.js","../src/Renderer/Drawing/GLShaderMaterials.js","../src/Renderer/Drawing/GLGeomLibrary.js","../src/Renderer/Drawing/GLGeomItemLibrary.js","../src/Renderer/GLBaseRenderer.js","../src/Renderer/Shaders/HighlightsShader.js","../src/Renderer/Shaders/SilhouetteShader.js","../src/Renderer/GLRenderer.js","../src/Renderer/Shaders/BillboardShader.js","../src/Renderer/Shaders/EnvProjectionShader.js","../src/Renderer/Shaders/FatLinesShader.js","../src/Renderer/Shaders/FlatSurfaceShader.js","../src/Renderer/Shaders/LinesShader.js","../src/Renderer/Shaders/NormalsShader.js","../src/Renderer/Shaders/PointsShader.js","../src/Renderer/Shaders/FatPointsShader.js","../src/Renderer/Shaders/SimpleSurfaceShader.js","../src/Renderer/Shaders/StandardSurfaceShader.js","../src/Renderer/Shaders/ScreenSpaceShader.js","../src/Renderer/Passes/GLStandardGeomsPass.js","../src/Renderer/Drawing/GLGeomItemSetMultiDraw.js","../src/Renderer/Drawing/GLLinesItemSet.js","../src/Renderer/Drawing/GLPointsItemSet.js","../src/Renderer/Drawing/GLMeshItemSet.js","../src/Renderer/Drawing/GLShaderGeomSets.js","../src/Renderer/Passes/GLOpaqueGeomsPass.js","../src/Renderer/Shaders/FattenLinesShader.js","../src/Renderer/Passes/GLLinesPass.js","../src/Renderer/Passes/GLTransparentGeomsPass.js","../src/Renderer/Shaders/AtlasLayoutShader.js","../src/Renderer/GLImageAtlas.js","../src/Renderer/Passes/GLBillboardsPass.js","../src/Renderer/Passes/GLOverlayPass.js","../src/Renderer/Shaders/BoundingBoxShader.js","../src/Renderer/Passes/GLBoundingBoxPass.js","../src/index.js","../src/LibsRegistry.js"],"sourcesContent":["export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","import debug from 'debug'\n\nexport const zeaDebug = debug('zea:engine')\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","// eslint-disable-next-line require-jsdoc\nfunction isIOSDevice() {\n  return (\n    (navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i) ||\n      navigator.userAgent.match(/iPod/i)) != null\n  )\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction isMobileDevice() {\n  return (\n    (navigator.userAgent.match(/Android/i) ||\n      navigator.userAgent.match(/webOS/i) ||\n      navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i) ||\n      navigator.userAgent.match(/iPod/i) ||\n      navigator.userAgent.match(/BlackBerry/i) ||\n      navigator.userAgent.match(/Pixel/i) ||\n      navigator.userAgent.match(/Windows Phone/i)) != null\n  )\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction getBrowserDesc() {\n  const nVer = navigator.appVersion\n  const nAgt = navigator.userAgent\n  let browserName = navigator.appName\n  let fullVersion = '' + parseFloat(navigator.appVersion)\n  let majorVersion = parseInt(navigator.appVersion, 10)\n  let nameOffset\n  let verOffset\n  let ix\n\n  if (navigator.brave) {\n    browserName = 'Brave'\n    verOffset = nAgt.indexOf('Chrome')\n    fullVersion = nAgt.substring(verOffset + 7, nAgt.indexOf(' ', verOffset + 7))\n  }\n\n  // In Opera, the true version is after \"Opera\" or after \"Version\"\n  else if ((verOffset = nAgt.indexOf('Opera')) != -1) {\n    browserName = 'Opera'\n    fullVersion = nAgt.substring(verOffset + 6)\n    if ((verOffset = nAgt.indexOf('Version')) != -1) fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In MSIE, the true version is after \"MSIE\" in userAgent\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\n    browserName = 'Microsoft Internet Explorer'\n    fullVersion = nAgt.substring(verOffset + 5)\n  } else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\n    browserName = 'Edge'\n    fullVersion = nAgt.substring(verOffset + 4)\n  }\n  // In Chrome, the true version is after \"Chrome\"\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\n    browserName = 'Chrome'\n    fullVersion = nAgt.substring(verOffset + 7, nAgt.indexOf(' ', verOffset + 7))\n  }\n\n  // TOOD: Parse Samsung userAgent\n  // https://developer.samsung.com/technical-doc/view.do?v=T000000203\n\n  // In Safari, the true version is after \"Safari\" or after \"Version\"\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\n    browserName = 'Safari'\n    fullVersion = nAgt.substring(verOffset + 7)\n    if ((verOffset = nAgt.indexOf('Version')) != -1) fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In Firefox, the true version is after \"Firefox\"\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\n    browserName = 'Firefox'\n    fullVersion = nAgt.substring(verOffset + 8)\n  }\n  // In most other browsers, \"name/version\" is at the end of userAgent\n  else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n    browserName = nAgt.substring(nameOffset, verOffset)\n    fullVersion = nAgt.substring(verOffset + 1)\n    if (browserName.toLowerCase() == browserName.toUpperCase()) {\n      browserName = navigator.appName\n    }\n  }\n  // trim the fullVersion string at semicolon/space if present\n  if ((ix = fullVersion.indexOf(';')) != -1) fullVersion = fullVersion.substring(0, ix)\n  if ((ix = fullVersion.indexOf(' ')) != -1) fullVersion = fullVersion.substring(0, ix)\n\n  majorVersion = parseInt('' + fullVersion, 10)\n  if (isNaN(majorVersion)) {\n    fullVersion = '' + parseFloat(navigator.appVersion)\n    majorVersion = parseInt(navigator.appVersion, 10)\n  }\n\n  return {\n    browserName,\n    fullVersion,\n    majorVersion,\n    appName: navigator.appName,\n    userAgent: navigator.userAgent,\n  }\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction getGPUDesc() {\n  let webgl\n  try {\n    webgl = document.createElement('canvas').getContext('webgl')\n  } catch (e) {}\n  if (!webgl) return\n  let webgl2\n  try {\n    webgl2 = document.createElement('canvas').getContext('webgl2')\n  } catch (e) {}\n\n  const debugInfo = webgl.getExtension('WEBGL_debug_renderer_info')\n  if (!debugInfo) {\n    console.warn('Unable to determine GPU Info:')\n    return {\n      vendor: 'Unknown',\n      renderer: 'Unknown',\n      gpuVendor: 'Unknown',\n      maxTextureSize: 'Unknown',\n      supportsWebGL2: webgl2 != undefined,\n    }\n  }\n\n  const vendor = webgl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL)\n  const renderer = webgl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)\n  const maxTextureSize = webgl.getParameter(webgl.MAX_TEXTURE_SIZE)\n  let gpuVendor\n  if (renderer.match(/NVIDIA/i)) {\n    gpuVendor = 'NVidia'\n  } else if (renderer.match(/AMD/i) || renderer.match(/Radeon/i)) {\n    gpuVendor = 'AMD'\n  } else if (renderer.match(/Intel/i)) {\n    gpuVendor = 'Intel'\n  } else if (renderer.match(/Mali/i)) {\n    gpuVendor = 'ARM'\n  } else if (renderer.match(/Apple/i)) {\n    gpuVendor = 'Apple'\n  } else if (renderer.match(/Adreno/i)) {\n    gpuVendor = 'Adreno'\n  } else if (renderer.match(/Google Swiftshader/i)) {\n    gpuVendor = 'Google'\n  } else {\n    console.warn('Unable to determine GPU vendor:', renderer)\n  }\n\n  return {\n    vendor,\n    renderer,\n    gpuVendor,\n    maxTextureSize,\n    supportsWebGL2: webgl2 != undefined,\n  }\n}\n\nconst SystemDesc = (function () {\n  if (!globalThis.navigator) {\n    // When running in NodeJS\n    return {\n      isMobileDevice: false,\n      isIOSDevice: false,\n      browserName: 'Node',\n      webGLSupported: false,\n      gpuDesc: null,\n      deviceCategory: 'High',\n      hardwareConcurrency: 4,\n    }\n  }\n  const isMobile = isMobileDevice()\n  const browserDesc = getBrowserDesc()\n  const gpuDesc = getGPUDesc()\n\n  let deviceCategory = 'Low'\n  if (gpuDesc) {\n    // We divide devices into 3 categories.\n    // 0: low end, we dial everything down as much as possible\n    // 1: mid-range, Enb maps and Textures go to mid-lods.\n    //    Typically these devices are laptops, so the textures can't be too blurry\n    // 2: High-end: turn up as much as needed.\n    if (!isMobile) {\n      // Remove braces and split into parts\n      const parts = gpuDesc.renderer.replace(/[()]/g, '').split(' ')\n      if (gpuDesc.gpuVendor == 'NVidia') {\n        const gtxIdx = parts.indexOf('GTX')\n        if (gtxIdx != -1) {\n          const model = parts[gtxIdx + 1]\n          if (model.endsWith('M')) {\n            // laptop GPU.\n            const modelNumber = parseInt(model.substring(0, model.length - 2))\n            if (modelNumber >= 900) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else {\n            const modelNumber = parseInt(model)\n            if (modelNumber >= 1030) {\n              deviceCategory = 'High'\n            } else {\n              deviceCategory = 'Medium'\n            }\n          }\n        } else {\n          if (parts.includes('RTX') || parts.includes('TITAN') || parts.includes('Quadro')) {\n            deviceCategory = 'High'\n          } else {\n            deviceCategory = 'Low'\n          }\n        }\n      } else if (gpuDesc.gpuVendor == 'AMD') {\n        const radeonIdx = parts.indexOf('Radeon')\n        if (radeonIdx != -1) {\n          const rxIdx = parts.indexOf('RX')\n          if (rxIdx != -1) {\n            if (parts[rxIdx + 1] == 'Vega') {\n              deviceCategory = 'High'\n            } else {\n              const model = parts[rxIdx + 1]\n              let modelNumber\n              if (model.endsWith('X')) {\n                modelNumber = parseInt(model.substring(0, model.length - 2))\n                deviceCategory = 'High'\n              } else {\n                modelNumber = parseInt(model)\n              }\n\n              if (modelNumber >= 480) {\n                deviceCategory = 'High'\n              } else {\n                deviceCategory = 'Medium'\n              }\n            }\n          } else if (parts[radeonIdx + 1] == 'Pro') {\n            const modelNumber = parseInt(parts[rxIdx + 1])\n            if (modelNumber >= 450) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else if (parts[radeonIdx + 1] == 'Sky') {\n            const modelNumber = parseInt(parts[rxIdx + 1])\n            if (modelNumber >= 700) {\n              deviceCategory = 'Medium'\n            } else {\n              deviceCategory = 'Low'\n            }\n          } else {\n            deviceCategory = 'Low'\n          }\n        } else {\n          if (parts.includes('FirePro') || parts.includes('Quadro')) {\n            deviceCategory = 'High'\n          } else {\n            deviceCategory = 'Low'\n          }\n        }\n      } else if (gpuDesc.gpuVendor == 'Adreno') {\n        deviceCategory = 'Low'\n      } else if (gpuDesc.gpuVendor == 'Intel') {\n        deviceCategory = 'Low'\n      } else if (gpuDesc.gpuVendor == 'Google') {\n        deviceCategory = 'Low'\n      }\n    } else {\n      deviceCategory = 'Low'\n    }\n  }\n\n  let hardwareConcurrency = globalThis.navigator.hardwareConcurrency\n  if (!hardwareConcurrency) {\n    if (isMobile) hardwareConcurrency = 4\n    else hardwareConcurrency = 6\n  }\n\n  return {\n    isMobileDevice: isMobile,\n    isIOSDevice: isIOSDevice(),\n    browserName: browserDesc.browserName,\n    fullVersion: browserDesc.fullVersion,\n    majorVersion: browserDesc.majorVersion,\n    appName: browserDesc.appName,\n    userAgent: browserDesc.userAgent,\n    webGLSupported: gpuDesc != undefined,\n    gpuDesc,\n    deviceCategory,\n    hardwareConcurrency,\n  }\n})()\n\nif (!globalThis.ZeaSystemDesc) {\n  globalThis.ZeaSystemDesc = SystemDesc\n}\n\nexport { SystemDesc }\n","const UInt8 = 0\nconst SInt8 = 1\nconst UInt16 = 2\nconst SInt16 = 3\nconst UInt32 = 4\nconst SInt32 = 5\nconst Float32 = 6\n\n/**\n * Math Functions\n */\nclass MathFunctions {\n  /**\n   * Converts Radians to Degrees\n   *\n   * @static\n   * @param {number} rad - Radians value\n   * @return {number} - Degrees equivalent\n   */\n  static radToDeg(rad) {\n    return rad / (Math.PI / 180)\n  }\n\n  /**\n   * Converts Degrees to Radiants\n   *\n   * @static\n   * @param {number} deg - Degrees value\n   * @return {number} -  Radians equivalent\n   */\n  static degToRad(deg) {\n    return deg * (Math.PI / 180)\n  }\n\n  /**\n   * Verifies if the specified parameter is numeric.\n   *\n   * @static\n   * @param {number|any} number - Number to test\n   * @return {boolean} - `true` when is a valid number\n   */\n  static isNumeric(number) {\n    return !isNaN(parseFloat(number)) && isFinite(number)\n  }\n\n  /**\n   * Generates and returns a random integer within the specified range.\n   *\n   * @static\n   * @param {number} min - Lower value random int can be.\n   * @param {number} max - Highest value random int can be.\n   * @return {number} - Random number inside range.\n   */\n  static randomInt(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  /**\n   * Calculates a lineal interpolation between two inputs for the specified parameter(t).\n   *\n   * @static\n   * @param {number} v0 -\n   * @param {number} v1 -\n   * @param {number} t -\n   * @return {number} -\n   */\n  static lerp(v0, v1, t) {\n    return v0 + t * (v1 - v0)\n  }\n\n  /**\n   * Restricts the specified value between two numbers\n   *\n   * @static\n   * @param {number} value\n   * @param {number} min\n   * @param {number} max\n   * @return {number}\n   */\n  static clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max)\n  }\n\n  /**\n   * Returns the nearest pow of two value of the specified number.\n   *\n   * @static\n   * @param {number} value -\n   * @return {number} -\n   */\n  static nearestPow2(value) {\n    return Math.pow(2, Math.round(Math.log(value) / Math.log(2)))\n  }\n\n  /**\n   * Returns the nearest pow of ten value of the specified number.\n   *\n   * @static\n   * @param {number} value -\n   * @return {number} -\n   */\n  static nearestPow10(value) {\n    return Math.pow(10, Math.round(Math.log10(value) / Math.log10(10)))\n  }\n\n  /**\n   * Returns the next pow of two value of the specified number.\n   *\n   * @static\n   * @param {number} value -\n   * @return {number} -\n   */\n  static nextPow2(value) {\n    if (this.fract(Math.log2(value)) == 0) {\n      return value\n    }\n    let exp = 0\n\n    while (value > 0) {\n      exp++\n      value = value >> 1\n    }\n\n    return 1 << exp\n  }\n\n  /**\n   * Returns the fractional component of a number\n   *\n   * @static\n   * @param {number} value -\n   * @return {number} -\n   */\n  static fract(value) {\n    if (value == 0) return 0\n    if (value < 0) {\n      if (value > -1.0) return -value\n      return -value % Math.floor(-value)\n    }\n    if (value < 1.0) return value\n    return value % Math.floor(value)\n  }\n\n  /**\n   * Moves the specified value from one numeric domain(range) to another.\n   *\n   * @static\n   * @param {number} value -\n   * @param {number} start1 -\n   * @param {number} end1 -\n   * @param {number} start2 -\n   * @param {number} end2 -\n   * @return {number} -\n   */\n  static remap(value, start1, end1, start2, end2) {\n    return start2 + (end2 - start2) * ((value - start1) / (end1 - start1))\n  }\n\n  /**\n   * Perform Hermite interpolation between two values\n   *\n   * @static\n   * @param {number} edge0 -\n   * @param {number} edge1 -\n   * @param {number} x -\n   * @return {number} -\n   */\n  static smoothStep(edge0, edge1, x) {\n    const t = this.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0)\n    return t * t * (3.0 - 2.0 * t)\n  }\n\n  /**\n   * Performs - interpolation between two values\n   *\n   * @static\n   * @param {number} edge0 -\n   * @param {number} edge1 -\n   * @param {number} x -\n   * @return {number} -\n   */\n  static linStep(edge0, edge1, x) {\n    return this.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0)\n  }\n\n  /**\n   * Decodes a Float16 from two unsigned Int8\n   *\n   * @static\n   * @param {Uint8Array} c - Array with the two UInt8\n   * @return {number} - Decoded Float16\n   */\n  static decode16BitFloatFrom2xUInt8(c) {\n    const ix = c[0] // 1st byte: 1 bit signed num, 4 bits exponent, 3 bits mantissa (MSB)\n    const iy = c[1] // 2nd byte: 8 bit mantissa (LSB)\n\n    const s = ix & 0x80 ? 1 : -1 // get bit 8\n    const iexp = (ix & 0x78) >> 3 // mask bits 7-4\n    const msb = ix & 0x7 // mask bits 3-1\n\n    let norm = iexp == 0 ? 0 : 2048 // distinguish between normalized and sub-normalized numbers\n    const mantissa = norm + (msb << 8) + iy // implicit preceding 1 or 0 added here\n    norm = iexp == 0 ? 1 : 0 // normalization toggle\n    const exponent = Math.pow(2, iexp + norm - 16) // -5 for the the exponent bias from 2^-5 to 2^10 plus another -11 for the normalized 12 bit mantissa\n    const v = s * mantissa * exponent\n\n    return v\n  }\n\n  /**\n   * Encodes an array of two unsigned Int8 to a Float16\n   *\n   * @static\n   * @param {number} v - Float16 number\n   * @return {Uint8Array} - Encoded Unsigned Int8 array\n   */\n  static encode16BitFloatInto2xUInt8(v) {\n    const c = new Uint8Array(2)\n    // const c = [0, 0];\n    const signum = v >= 0 ? 128 : 0\n    v = Math.abs(v)\n    let exponent = 15\n    let limit = 1024 // considering the bias from 2^-5 to 2^10 (==1024)\n    for (let exp = 15; exp > 0; exp--) {\n      if (v < limit) {\n        limit /= 2\n        exponent--\n      }\n    }\n\n    let rest\n    if (exponent == 0) {\n      rest = v / limit / 2 // \"sub-normalize\" implicit preceding 0.\n    } else {\n      rest = (v - limit) / limit // normalize accordingly to implicit preceding 1.\n    }\n\n    const mantissa = Math.round(rest * 2048) // 2048 = 2^11 for the (split) 11 bit mantissa\n    const msb = mantissa / 256 // the most significant 3 bits go into the lower part of the first byte\n    const lsb = mantissa - msb * 256 // there go the other 8 bit of the lower significance\n\n    c[0] = signum + exponent * 8 + msb // color normalization for texture2D\n    c[1] = lsb\n\n    if (v >= 2048) {\n      c[0] = 255\n    }\n\n    return c\n  }\n\n  /**\n   * Transforms a 16 bit float to an encoded integer.\n   *\n   * @static\n   * @param {number} v - Float16 number to encode\n   * @return {number} - Encoded number\n   */\n  static encode16BitFloat(v) {\n    const float32Array = new Float32Array(1)\n    float32Array[0] = v\n    const int32View = new Int32Array(float32Array.buffer)\n\n    const toUInt16 = (x) => {\n      let bits = (x >> 16) & 0x8000 /* Get the sign */\n      let m = (x >> 12) & 0x07ff /* Keep one extra bit for rounding */\n      const e = (x >> 23) & 0xff /* Using int is faster here */\n\n      /* If zero, or de-normal, or exponent underflows too much for a de-normal\n       * half, return signed zero. */\n      if (e < 103) {\n        return bits\n      }\n\n      /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n      if (e > 142) {\n        bits |= 0x7c00\n        /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n         * not Inf, so make sure we set one mantissa bit too. */\n        bits |= (e == 255 ? 0 : 1) && x & 0x007fffff\n        return bits\n      }\n\n      /* If exponent underflows but not too much, return a de-normal */\n      if (e < 113) {\n        m |= 0x0800\n        /* Extra rounding may overflow and set mantissa to 0 and exponent\n         * to 1, which is OK. */\n        bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1)\n        return bits\n      }\n\n      bits |= ((e - 112) << 10) | (m >> 1)\n      /* Extra rounding. An overflow will set mantissa to 0 and increment\n       * the exponent, which is OK. */\n      bits += m & 1\n\n      return bits\n    }\n\n    return toUInt16(int32View[0])\n  }\n\n  /**\n   * As opposite of the `encode16BitFloat` method, this takes an encoded integer value,\n   * and returns the 16 bit float.\n   *\n   * @static\n   * @param {number} h - Encoded integer\n   * @return {number} - Decoded 16 bit float.\n   */\n  static decode16BitFloat(h) {\n    const s = (h & 0x8000) >> 15\n    const e = (h & 0x7c00) >> 10\n    const f = h & 0x03ff\n\n    if (e == 0) {\n      return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10))\n    } else if (e == 0x1f) {\n      return f ? NaN : (s ? -1 : 1) * Infinity\n    }\n\n    return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10))\n  }\n\n  /**\n   * Transforms an array of Float 32 to an array of unsigned Int16.\n   *\n   * @static\n   * @param {Float32Array} float32Array -\n   * @return {Uint16Array} - Unsigned Int16 array representative of the Float32Array\n   */\n  static convertFloat32ArrayToUInt16Array(float32Array) {\n    const unit16s = new Uint16Array(float32Array.length)\n    const int32View = new Int32Array(float32Array.buffer)\n    const toUInt16 = (x) => {\n      let bits = (x >> 16) & 0x8000 /* Get the sign */\n      let m = (x >> 12) & 0x07ff /* Keep one extra bit for rounding */\n      const e = (x >> 23) & 0xff /* Using int is faster here */\n\n      /* If zero, or de-normal, or exponent underflows too much for a de-normal\n       * half, return signed zero. */\n      if (e < 103) {\n        return bits\n      }\n\n      /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n      if (e > 142) {\n        bits |= 0x7c00\n        /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n         * not Inf, so make sure we set one mantissa bit too. */\n        bits |= (e == 255 ? 0 : 1) && x & 0x007fffff\n        return bits\n      }\n\n      /* If exponent underflows but not too much, return a de-normal */\n      if (e < 113) {\n        m |= 0x0800\n        /* Extra rounding may overflow and set mantissa to 0 and exponent\n         * to 1, which is OK. */\n        bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1)\n        return bits\n      }\n\n      bits |= ((e - 112) << 10) | (m >> 1)\n      /* Extra rounding. An overflow will set mantissa to 0 and increment\n       * the exponent, which is OK. */\n      bits += m & 1\n\n      return bits\n    }\n    for (let i = 0; i < float32Array.length; i++) {\n      unit16s[i] = toUInt16(int32View[i])\n    }\n    return unit16s\n  }\n}\n\nexport { UInt8, SInt8, SInt16, UInt16, SInt32, UInt32, Float32, MathFunctions }\n","import { UInt8, SInt8, UInt16, SInt16, UInt32, SInt32, Float32 } from './Utilities/MathFunctions'\n\nlet _registeredBlueprints = {}\nlet _blueprintNames = {}\nlet _blueprints = []\n\n/**\n * Registry is a static factory that handles registration/reconstruction of\n * persisted type of data, this includes classes and types.\n *\n * Note: blueprintName is required because on minification process\n * the name of classes change and we can't simply use '....constructor.name'.\n * So, we need a way of relating minified blueprint names to the one stored for persistency.\n * <br>\n * i.e.\n * ```javascript\n * // Import registry class\n * class Foo() {}\n *\n * Registry.register('Foo', Foo)\n * // In case 'Foo' class gets its name changed to 'c' on minification,\n * // and the persisted data type is 'Foo', we would know how to relate them.\n * ```\n *\n * @static\n * @class Registry\n */\nconst Registry = {\n  /**\n   * Registers a new blueprint in the factory.\n   *\n   * @param {string} blueprintName - Name of the registered blueprint(Class, type, etc)\n   * @param {function|number|any} blueprint - Blueprint representation(Class function, type)\n   */\n  register: (blueprintName, blueprint) => {\n    if (_registeredBlueprints[blueprintName]) {\n      console.warn(`There's a class registered with '${blueprintName}' name`)\n      return\n    }\n    _registeredBlueprints[blueprintName] = { blueprint, callbacks: [] }\n\n    // Note: To provide backwards compatibility, same blueprint can be stored under multiple names.\n    // Thats the reason behind using indexes instead of the blueprint.\n    const blueprintIndex = _blueprints.length\n    _blueprints.push(blueprint)\n    _blueprintNames[blueprintIndex] = blueprintName\n  },\n  /**\n   * Returns blueprint function/type by specifying its name.\n   *\n   * @param {string} blueprintName - Name of the registered blueprint(Class, type, etc)\n   * @return {function|number|any} - Blueprint representation(Class function, type)\n   */\n  getBlueprint: (blueprintName) => {\n    if (_registeredBlueprints[blueprintName]) return _registeredBlueprints[blueprintName].blueprint\n\n    throw new Error(`${blueprintName} blueprint is not registered`)\n  },\n  /**\n   * Returns class name using passing an instantiated object.\n   * If it is not registered, the name in constructor is returned.\n   *\n   * @param {function|number|any|undefined} blueprintInstance - Blueprint representation(Class function, type)\n   * @return {string} - Name of the registered blueprint(Class, type, etc)\n   */\n  getBlueprintName: (blueprintInstance) => {\n    let blueprint = blueprintInstance\n    let blueprintName = blueprintInstance\n\n    if (typeof blueprintInstance === 'object') {\n      blueprint = blueprintInstance.constructor\n      blueprintName = blueprint.name\n    }\n\n    const blueprintId = _blueprints.indexOf(blueprint)\n    if (blueprintId >= 0 && _blueprintNames[blueprintId]) return _blueprintNames[blueprintId]\n\n    throw new Error(`${blueprintName} blueprint is not registered`)\n  },\n  /**\n   * Accepting the class name and `N` number of arguments, instantiates a new object of the specified class.\n   * If the class is not registered, then `null` is returned.\n   * <br>\n   * **Note:** Although the class arguments are not literally specified in the parameters,\n   * you can pass them(As many as needed).\n   *\n   * @param {string} blueprintName - Name of the registered blueprint(Class, type, etc)\n   * @return {object|null} - Instantiated object of the specified class\n   */\n  constructClass: (blueprintName, ...args) => {\n    const blueprintData = _registeredBlueprints[blueprintName]\n    if (!blueprintData) throw new Error(`${blueprintName} blueprint is not registered`)\n\n    // eslint-disable-next-line new-cap\n    return new blueprintData.blueprint(...args)\n  },\n  /**\n   * For testing purpose only, never call this outside of the test scope.\n   *\n   * @private\n   */\n  flush: () => {\n    _registeredBlueprints = {}\n    _blueprintNames = {}\n    _blueprints = []\n  },\n}\n\nRegistry.register('UInt8', UInt8)\nRegistry.register('SInt8', SInt8)\nRegistry.register('UInt16', UInt16)\nRegistry.register('SInt16', SInt16)\nRegistry.register('UInt32', UInt32)\nRegistry.register('SInt32', SInt32)\nRegistry.register('Float32', Float32)\n\nexport { Registry }\n","/**\n * String functions\n *\n */\nclass StringFunctions {\n  /**\n   * Replaces all matches in a string.\n   *\n   * @static\n   * @param {string} str -\n   * @param {string|RegExp} pattern -\n   * @param {string} replacement -\n   * @return {string} -\n   */\n  static replaceAll(str, pattern, replacement) {\n    return str.replace(new RegExp(pattern, 'g'), replacement)\n  }\n\n  /**\n   * Returns JSON object as a formatted string, but the numeric values are fixed to the specified precision.\n   *\n   * @static\n   * @param {object} val -\n   * @param {number} [space=0] -\n   * @param {number} [precision=5] -\n   * @return {string} -\n   */\n  static stringifyJSONWithFixedPrecision(val, space = 0, precision = 5) {\n    return JSON.stringify(\n      val,\n      (key, val) => {\n        return val ? (val.toFixed ? Number(val.toFixed(precision)) : val) : val\n      },\n      space\n    )\n  }\n\n  /**\n   * Transforms the given string into a numeric value.\n   *\n   * @static\n   * @param {*} str -\n   * @return {number} -\n   */\n  static hashStr(str) {\n    let hash = 0\n    let i\n    let chr\n    let len\n    if (str.length === 0) return hash\n    for (i = 0, len = str.length; i < len; i++) {\n      chr = str.charCodeAt(i)\n      hash = (hash << 5) - hash + chr\n      hash |= 0 // Convert to 32bit integer\n    }\n    return Math.abs(hash)\n  }\n}\n\nexport { StringFunctions }\n","import { StringFunctions } from '../Utilities/StringFunctions'\n\n/**\n * Base class for Math types that can be stored in vertex attributes.\n * <br>\n * **Note:** These values use {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array} values to store their data.\n */\nclass AttrValue {\n  /**\n   * Verifies if the values stored in this Math type are valid numeric values.\n   * Returns `false` If at least one of the values is either {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Referencia/Objetos_globales/Infinity|Infinity} or\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Referencia/Objetos_globales/NaN|NaN}.\n   *\n   * @return {boolean} - Returns the result as a boolean.\n   */\n  isValid() {\n    for (const v of this.__data) {\n      if (v == Infinity || isNaN(v)) return false\n    }\n\n    return true\n  }\n\n  /**\n   * This method is a factory function for creating new instances of math types, given an existing Float32Array buffer.\n   * Each Math type implements this function to return an constructed value.\n   *\n   * @param {ArrayBuffer} buffer - the buffer value.\n   * @param {number} offset - the offset value.\n   * @return {AttrValue} - Returns the constructed value.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset) {\n    throw new Error('Not yet implemented for this type:' + this.constructor.name)\n  }\n\n  /**\n   * This method is a factory function for creating new instances of math types, given an existing ArrayBuffer.\n   * Each Math type implements this function to return an constructed value.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer\n   * @param {number} byteOffset\n   * @return {AttrValue} - Returns the constructed value.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    throw new Error('Not yet implemented for this type:' + this.constructor.name)\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - Returns the number of float values stored in this math type.\n   */\n  static numElements() {\n    throw new Error('Not yet implemented for this type:' + this.constructor.name)\n  }\n\n  /**\n   * Returns current Math type data as array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns the result as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  /**\n   * Converts this Math type to a string in JSON format.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    // eslint-disable-next-line new-cap\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n\n  /**\n   * Converts this Math type to a JSON object.\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    throw new Error('Not yet implemented for this type:' + this.constructor.name)\n  }\n}\n\nexport { AttrValue }\n","import { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\n\n/**\n * Representing a Vec2(two-dimensional floating point vector). A Vec2 is for representing 2 dimensional values, such as screen coordinates or pixel coordinates within an image.\n *\n * Math types internally store values in {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array} and\n * expose getters and setters for the component values.\n *\n * @extends AttrValue\n */\nclass Vec2 extends AttrValue {\n  /**\n   * Creates a Vec2.\n   *\n   * The type of values of the `(x, y)` coordinates can be {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array|Uint32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array|Int32Array} and\n   * {@link https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/ArrayBuffer|ArrayBuffer}.\n   * <br>\n   *\n   * ```javascript\n   *  const myVec2 = new Vec2(1.2, 3.4)\n   * ```\n   *\n   * Given an array of floats, create a Vec2 that wraps some part of it.\n   * ```javascript\n   *  const floatArray = new Float32Array(6)\n   *  floatArray[0] = 1.2\n   *  floatArray[1] = 3.4\n   *  const myVec2 = new Vec2(floatArray)\n   *  console.log(myVec2.toJSON())\n   * ```\n   * The resulting output\n   * ```json\n   *  > { x:1.2, y:3.4 }\n   * ```\n   *\n   * Given an array of floats, create a Vec2 that wraps some part of it.\n   * ```javascript\n   *  const floatArray = new Float32Array(6)\n   *  floatArray[0] = 1.2\n   *  floatArray[1] = 3.4\n   *  floatArray[2] = 5.6\n   *  floatArray[3] = 7.8\n   *  floatArray[4] = 9.0\n   *  floatArray[5] = 1.9\n   *  const myVec2 = new Vec2(floatArray.buffer, 8)\n   *  console.log(myVec2.toJSON())\n   * ```\n   * The resulting output\n   * ```json\n   *  > { x:5.6, y:7.8 }\n   * ```\n   *\n   * You can also pass one JSON object parameter.\n   * ```javascript\n   *  const myVec2 = new Vec2({ x:1.2, y:3.4 })\n   * ```\n   *\n   * @param {Number|Float32Array|Uint32Array|json} x - The x value. Default is 0.\n   * @param {Number} y - The y value. Default is 0.\n   */\n  constructor(x = 0, y = 0) {\n    super()\n\n    if (x instanceof Float32Array || x instanceof Uint32Array || x instanceof Int32Array) {\n      this.__data = x\n    } else if (x instanceof ArrayBuffer) {\n      console.warn(`deprecated, please use new Vec4(new Float32Array(buffer, byteOffset, 4))`)\n      const buffer = x\n      const byteOffset = y\n      this.__data = new Float32Array(buffer, byteOffset, 2)\n    } else if (x != null && typeof x == 'object') {\n      this.__data = new Float32Array(2)\n      this.fromJSON(x)\n    } else {\n      this.__data = new Float32Array(2)\n      this.__data[0] = x\n      this.__data[1] = y\n    }\n  }\n\n  /**\n   * Getter for `x` component.\n   * @return {number} - Returns the x component.\n   */\n  get x() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for `x` component.\n   * @param {number} val - The val param.\n   */\n  set x(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for `y` component.\n   * @return {number} - Returns the y component.\n   */\n  get y() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for `y` component.\n   * @param {number} val - The val param.\n   */\n  set y(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Setter from scalar components.\n   * @param {number} x - The x component.\n   * @param {number} y  - The y component.\n   */\n  set(x, y) {\n    this.__data[0] = x\n    this.__data[1] = y\n  }\n\n  /**\n   * Replaces this Vec2 data with the Vec2 data passed as parameter.\n   *\n   * @param {Vec2} other - The other Vec2 to set from.\n   */\n  setFromOther(other) {\n    this.x = other.x\n    this.y = other.y\n  }\n\n  /**\n   * Checks if this Vec2 contains the same values as the other Vec2.\n   * Deprecated. Use #isEqual instead.\n   *\n   * @deprecated\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {boolean} - Returns `true` if are the same Vector, otherwise, `false`.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Vec2 contains the same values as the other Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {boolean} - Returns `true` if are the same Vector, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.x == other.x && this.y == other.y\n  }\n\n  /**\n   * Checks if this Vec2 is different from another Vec2.\n   *\n   * @deprecated\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {boolean} - Returns `true` if the Vec2s are different, otherwise, `false`.\n   */\n  notEquals(other) {\n    console.warn('Deprecated. Use #notEqual instead.')\n    return this.notEqual(other)\n  }\n\n  /**\n   * Checks if this Vec2 is different from another Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {boolean} - Returns `true` if the Vec2s are different, otherwise, `false`.\n   */\n  notEqual(other) {\n    return this.x != other.x && this.y != other.y\n  }\n\n  /**\n   * Returns true if this Vec2 is approximately the same as other.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return Math.abs(this.x - other.x) < precision && Math.abs(this.y - other.y) < precision\n  }\n\n  /**\n   * Adds other to this Vec2 and returns the result as a new Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to add.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  add(other) {\n    return new Vec2(this.x + other.x, this.y + other.y)\n  }\n\n  /**\n   * Adds a Vec2 to this Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to add.\n   */\n  addInPlace(other) {\n    this.x += other.x\n    this.y += other.y\n  }\n\n  /**\n   * Subtracts a Vec2 from this Vec2 and returns the result as a new Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to subtract.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  subtract(other) {\n    return new Vec2(this.x - other.x, this.y - other.y)\n  }\n\n  /**\n   * Subtracts a Vec2 from this Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to subtract.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  subtractInPlace(other) {\n    this.x -= other.x\n    this.y -= other.y\n    return this\n  }\n\n  /**\n   * Scales this Vec2 by scalar and returns the result as a new Vec2.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  scale(scalar) {\n    return new Vec2(this.x * scalar, this.y * scalar)\n  }\n\n  /**\n   * Scales this Vec2 by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Inverts this Vec2 and returns the result as a new Vec2.\n   *\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  invert() {\n    return new Vec2(1.0 / this.x, 1.0 / this.y)\n  }\n\n  /**\n   * Inverts this Vec2.\n   *\n   * @return {Vec2} - The return value.\n   */\n  invertInPlace() {\n    this.x = 1.0 / this.x\n    this.y = 1.0 / this.y\n    return this\n  }\n\n  /**\n   * Multiplies a Vec2 with this Vec2 and returns the result as a new Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to multiply with.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  multiply(other) {\n    return new Vec2(this.x * other.x, this.y * other.y)\n  }\n\n  /**\n   * Multiplies a Vec2 with this Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to multiply with.\n   */\n  multiplyInPlace(other) {\n    this.x *= other.x\n    this.y *= other.y\n  }\n\n  /**\n   * Calculates the squared length of this Vec2.\n   *\n   * @return {number} - Returns the length squared.\n   */\n  lengthSquared() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    return x * x + y * y\n  }\n\n  /**\n   * Calculates the length of this Vec2.\n   *\n   * @return {number} - Returns the length.\n   */\n  length() {\n    return Math.sqrt(this.lengthSquared())\n  }\n\n  /**\n   * Calculates the distance to another vector.\n   *\n   * @param {Vec2} other - The other value.\n   * @return {number} - Returns the distance between vectors.\n   */\n  distanceTo(other) {\n    const x = this.__data[0] - other.x\n    const y = this.__data[1] - other.y\n    return Math.sqrt(x * x + y * y)\n  }\n\n  /**\n   * Normalizes the Vec2 and returns it as a new Vec2.\n   * Multiplies coordinates value by the inverse of the vector length.\n   *\n   * @return {Vec2} - Returns the Vec2 normalized.\n   */\n  normalize() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    let len = x * x + y * y\n    if (len < Number.EPSILON) {\n      return new Vec2()\n    }\n\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len)\n    return new Vec2(x * len, y * len)\n  }\n\n  /**\n   * Normalizes this Vec2 multiplying coordinate values by the inverse of the vector length.\n   */\n  normalizeInPlace() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    let len = x * x + y * y\n    if (len < Number.EPSILON) {\n      return\n    }\n    len = 1 / Math.sqrt(len)\n    this.set(x * len, y * len)\n  }\n\n  /**\n   * Calculates the dot product of this Vec2 against another Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {number} - Returns the dot product.\n   */\n  dot(other) {\n    return this.x * other.x + this.y * other.y\n  }\n\n  /**\n   * Calculates the cross product of this Vec2 against another Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {number} - Returns the cross product.\n   */\n  cross(other) {\n    // just calculate the z-component\n    return this.x * other.y - this.y * other.x\n  }\n\n  /**\n   * Gets the angle between this Vec2 and other assuming both are normalized vectors.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {number} - Returns the angle in radians.\n   */\n  angleTo(other) {\n    const cosine = this.normalize().dot(other.normalize())\n    if (cosine > 1.0) return 0.0\n    else if (cosine < -1.0) return Math.PI\n    else return Math.acos(cosine)\n  }\n\n  /**\n   * Gets the angle between this Vec2 and other.\n   *\n   * @param {Vec2} other - The other Vec2 to compare with.\n   * @return {number} - Returns the angle in radians.\n   */\n  signedAngleTo(other) {\n    const angle = this.angleTo(other)\n    if (this.cross(other) < 0.0) return -angle\n    else return angle\n  }\n\n  /**\n   * Rotates a Vec2 in a clockwise direction and returns a new rotated Vec2.\n   *\n   * @param {number} angle - The angle of rotation.\n   * @return {Vec2} - Returns the rotated vector.\n   */\n  rotate(angle) {\n    const cosA = Math.cos(angle)\n    const sinA = Math.sin(angle)\n    return new Vec2(this.x * cosA - this.y * sinA, this.x * sinA + this.y * cosA)\n  }\n\n  /**\n   * Performs a linear interpolation between this Vec2 and other Vec2.\n   *\n   * @param {Vec2} other - The other Vec2 to interpolate between.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  lerp(other, t) {\n    const ax = this.x\n    const ay = this.y\n    return new Vec2(ax + t * (other.x - ax), ay + t * (other.y - ay))\n  }\n\n  /**\n   * Generates a random vector with the given scale.\n   *\n   * @param {number} scale - Length of the resulting vector. If omitted, a unit vector will be returned.\n   * @return {Vec2} - The return value.\n   */\n  setRandomDir(scale = 1.0) {\n    const r = Math.random() * 2.0 * Math.PI\n    this.__data[0] = Math.cos(r) * zScale\n    this.__data[1] = Math.sin(r) * zScale\n    return this\n  }\n\n  /**\n   * Randomizes the scale of this Vec2 coordinates.\n   *\n   * @param {number} scale - The scale value.\n   * @return {Vec2} - The return value.\n   */\n  setRandom(scale = 1.0) {\n    this.__data[0] = Math.random() * scale\n    this.__data[1] = Math.random() * scale\n    return this\n  }\n\n  /**\n   * Clones this Vec2 and returns a new Vec2.\n   *\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  clone() {\n    return new Vec2(this.__data[0], this.__data[1])\n  }\n\n  /**\n   * Returns current Vec2 data as array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Vec2.\n   * @see `new Vec2`\n   *\n   * @param {...object} ...args - The ...args param.\n   * @return {Vec2} - Returns a new Vec2.\n   * @private\n   */\n  static create(...args) {\n    return new Vec2(...args)\n  }\n\n  /**\n   * Creates a new Vec2 to wrap existing memory in a buffer.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Vec2} - Returns a new Vec2.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Vec2` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Vec2} - Returns a new Vec2.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Vec2(new Float32Array(buffer, byteOffset, 2)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * The createFromFloat32Array method.\n   * @param {Float32Array} array - The array value.\n   * @return {Vec2} - Returns a new Vec2.\n   * @private\n   */\n  static createFromFloat32Array(array) {\n    return new Vec2(array)\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 2\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * Encodes Vec2 Class as a JSON object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      x: this.x,\n      y: this.y,\n    }\n  }\n\n  /**\n   * Decodes a JSON object to set the state of this class.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.x = j.x\n    this.y = j.y\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.x = reader.loadFloat32()\n    this.y = reader.loadFloat32()\n  }\n\n  /**\n   * Calculate the intersection point of 2 2d lines, returning the parameters values for each line.\n   *\n   * @param {Vec2} p0 - The point of the first line\n   * @param {Vec2} d0 - The direction of the first line\n   * @param {Vec2} p1 - The point of the second line\n   * @param {Vec2} d1 - The direction of the second line\n   * @return {array} - Returns an array containing 2 parameter values for the 2 lines.\n   */\n  static intersectionOfLines(p1, p2, p3, p4) {\n    // https://dirask.com/posts/JavaScript-how-to-calculate-intersection-point-of-two-lines-for-given-4-points-VjvnAj\n    // down part of intersection point formula\n    const d1 = (p1.x - p2.x) * (p3.y - p4.y) // (x1 - x2) * (y3 - y4)\n    const d2 = (p1.y - p2.y) * (p3.x - p4.x) // (y1 - y2) * (x3 - x4)\n    const d = d1 - d2\n\n    if (d == 0) {\n      return null\n    }\n\n    // upper part of intersection point formula\n    const u1 = p1.x * p2.y - p1.y * p2.x // (x1 * y2 - y1 * x2)\n    const u4 = p3.x * p4.y - p3.y * p4.x // (x3 * y4 - y3 * x4)\n\n    const u2x = p3.x - p4.x // (x3 - x4)\n    const u3x = p1.x - p2.x // (x1 - x2)\n    const u2y = p3.y - p4.y // (y3 - y4)\n    const u3y = p1.y - p2.y // (y1 - y2)\n\n    // intersection point formula\n\n    const px = (u1 * u2x - u3x * u4) / d\n    const py = (u1 * u2y - u3y * u4) / d\n\n    return new Vec2(px, py)\n  }\n}\n\nRegistry.register('Vec2', Vec2)\n\nexport { Vec2 }\n","import { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\nimport { Vec2 } from './Vec2.js'\n\n/**\n * Represents a three dimensional coordinate, such as 3D scene values, or mesh vertex positions.\n *\n * Math types internally store values in {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array} and\n * expose getters and setters for the component values.\n *\n * @extends AttrValue\n */\nclass Vec3 extends AttrValue {\n  /**\n   * Creates a Vec3.\n   *\n   * The type of values of the `(x, y, z)` coordinates can be {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array|Uint32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array|Int32Array} and\n   * {@link https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/ArrayBuffer|ArrayBuffer}.\n   * <br>\n   * You can also pass one JSON object parameter.\n   *\n   * @param {Number|Float32Array|json} x - The x value. Default is 0.\n   * @param {number} y - The y value. Default is 0.\n   * @param {number} z - The z value. Default is 0.\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    super()\n    if (x instanceof Float32Array || x instanceof Uint32Array) {\n      this.__data = x\n    } else if (x instanceof ArrayBuffer) {\n      console.warn(`deprecated, please use new Vec3(new Float32Array(buffer, byteOffset, 3))`)\n      const buffer = x\n      const byteOffset = y\n      this.__data = new Float32Array(buffer, byteOffset, 3)\n    } else if (x != null && typeof x == 'object') {\n      this.__data = new Float32Array(3)\n      this.fromJSON(x)\n    } else {\n      this.__data = new Float32Array(3)\n      this.__data[0] = x\n      this.__data[1] = y\n      this.__data[2] = z\n    }\n  }\n\n  /**\n   * Getter for `x` component.\n   *\n   * @return {number} - Returns the x component.\n   */\n  get x() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for `x` component.\n   *\n   * @param {number} val - The val param.\n   */\n  set x(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for `y` component.\n   *\n   * @return {number} - Returns the y component.\n   */\n  get y() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for `y` component.\n   *\n   * @param {number} val - The val param.\n   */\n  set y(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for `z` component.\n   *\n   * @return {number} - Returns the z component.\n   */\n  get z() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for `z` component.\n   *\n   * @param {number} val - The val param.\n   */\n  set z(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for `xy` swizzel.\n   *\n   * @return {Vec2} - Returns the xy components as a Vec2.\n   */\n  get xy() {\n    return new Vec2(this.__data[0], this.__data[1])\n  }\n\n  /**\n   * Getter for `yz` swizzel.\n   *\n   * @return {Vec2} - Returns the yz components as a Vec2.\n   */\n  get yz() {\n    return new Vec2(this.__data[1], this.__data[2])\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} x - The x component.\n   * @param {number} y - The y component.\n   * @param {number} z - The y component.\n   */\n  set(x, y, z) {\n    this.x = x\n    this.y = y !== undefined ? y : x\n    this.z = z !== undefined ? z : x\n  }\n\n  /**\n   * Sets the state of a Vec3 Object.\n   *\n   * @param {Float32Array} float32Array - The float32Array value.\n   */\n  setDataArray(float32Array) {\n    this.__data = float32Array\n  }\n\n  /**\n   * Sets the state of a Vec3 Object from another Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to set from.\n   */\n  setFromOther(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.z\n  }\n\n  /**\n   * Checks if the coordinates of this Vec3 are 0 0 0.\n   *\n   * @return {boolean} - Returns `true` if the coordinates are(0, 0, 0), otherwise, `false`.\n   */\n  isNull() {\n    return Math.abs(this.x) < Number.EPSILON && Math.abs(this.y) < Number.EPSILON && Math.abs(this.z) < Number.EPSILON\n  }\n\n  /**\n   * Checks if the coordinates of this Vec3 are 1 1 1.\n   *\n   * @return {boolean} - Returns `true` if the coordinates are(1, 1, 1), otherwise, `false`.\n   */\n  is111() {\n    return (\n      Math.abs(1.0 - this.x) < Number.EPSILON &&\n      Math.abs(1.0 - this.y) < Number.EPSILON &&\n      Math.abs(1.0 - this.z) < Number.EPSILON\n    )\n  }\n\n  /**\n   * @deprecated\n   * Checks if this Vec3 contains the same values as the other Vec3.\n   * Deprecated. Use #isEqual instead.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {boolean} - Returns `true` if the values are the same, otherwise, `false`.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Vec3 contains the same values as the other Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {boolean} - Returns `true` if the values are the same, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.x == other.x && this.y == other.y && this.z == other.z\n  }\n\n  /**\n   * @deprecated\n   * Checks if this Vec2 is different from another Vec2.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {boolean} - Returns `true` if the Vec3s are different, otherwise, `false`.\n   */\n  notEquals(other) {\n    console.warn('Deprecated. Use #notEqual instead.')\n    return this.notEqual(other)\n  }\n\n  /**\n   * Checks if this Vec2 is different from another Vec2.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {boolean} - Returns `true` if the Vec3s are different, otherwise, `false`.\n   */\n  notEqual(other) {\n    return this.x != other.x && this.y != other.y && this.z != other.z\n  }\n\n  /**\n   * Returns true if this Vec2 is approximately the same as other.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      Math.abs(this.x - other.x) < precision &&\n      Math.abs(this.y - other.y) < precision &&\n      Math.abs(this.z - other.z) < precision\n    )\n  }\n\n  /**\n   * Adds other to this Vec3 and return the result as a new Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to add.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  add(other) {\n    return new Vec3(this.x + other.x, this.y + other.y, this.z + other.z)\n  }\n\n  /**\n   * Adds other to this Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to add.\n   */\n  addInPlace(other) {\n    this.x += other.x\n    this.y += other.y\n    this.z += other.z\n  }\n\n  /**\n   * Subtracts other from this Vec3 and returns the result as a new Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to subtract.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  subtract(other) {\n    return new Vec3(this.x - other.x, this.y - other.y, this.z - other.z)\n  }\n\n  /**\n   * Subtracts other from this Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to subtract.\n   */\n  subtractInPlace(other) {\n    this.x -= other.x\n    this.y -= other.y\n    this.z -= other.z\n  }\n\n  /**\n   * Multiplies two Vec3s and returns the result as a new Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to multiply with.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  multiply(other) {\n    return new Vec3(this.x * other.x, this.y * other.y, this.z * other.z)\n  }\n\n  /**\n   * Multiplies two Vec3s.\n   *\n   * @param {Vec3} other - The other Vec3 to multiply with.\n   */\n  multiplyInPlace(other) {\n    this.x *= other.x\n    this.y *= other.y\n    this.z *= other.z\n  }\n\n  /**\n   * Divides two Vec3s and returns the result as a new Vec3.\n   *\n   * @param {Vec3} vec3 - The other Vec3 to divide by.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  divide(vec3) {\n    return new Vec3(this.x / vec3.x, this.y / vec3.y, this.z / vec3.z)\n  }\n\n  /**\n   * Divides two Vec3s.\n   *\n   * @param {Vec3} vec3 - The other Vec3 to divide by.\n   */\n  divideInPlace(vec3) {\n    this.x /= vec3.x\n    this.y /= vec3.y\n    this.z /= vec3.z\n  }\n\n  /**\n   * Scales this Vec3 by scalar and returns the result as a new Vec3.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  scale(scalar) {\n    return new Vec3(this.x * scalar, this.y * scalar, this.z * scalar)\n  }\n\n  /**\n   * Scales this Vec3 by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.x *= scalar\n    this.y *= scalar\n    this.z *= scalar\n  }\n\n  /**\n   * Negates this Vec3 (x = -x, y = -y and z = -z), but returns the result as a new Vec3.\n   *\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  negate() {\n    return new Vec3(-this.x, -this.y, -this.z)\n  }\n\n  /**\n   * Returns the inverse of this Vec3, but returns. the result as a new Vec3\n   *\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  inverse() {\n    return new Vec3(1.0 / this.x, 1.0 / this.y, 1.0 / this.z)\n  }\n\n  /**\n   * Calculates the squared length of this Vec3.\n   *\n   * @return {number} - Returns the length.\n   */\n  lengthSquared() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    return x * x + y * y + z * z\n  }\n\n  /**\n   * Calculates the length of this Vec3.\n   *\n   * @return {number} - Returns the length.\n   */\n  length() {\n    return Math.sqrt(this.lengthSquared())\n  }\n\n  /**\n   * Calculates the distance to another Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to calculate the distance to.\n   * @return {number} - Returns the distance between vectors.\n   */\n  distanceTo(other) {\n    const x = this.__data[0] - other.x\n    const y = this.__data[1] - other.y\n    const z = this.__data[2] - other.z\n    return Math.sqrt(x * x + y * y + z * z)\n  }\n\n  /**\n   * Normalizes the Vec3 and returns it as a new Vec3.\n   * Multiplies coordinates value by the inverse of the vector length.\n   *\n   * @return {Vec3} - Returns the Vec3 normalized.\n   */\n  normalize() {\n    let len = this.__data[0] * this.__data[0] + this.__data[1] * this.__data[1] + this.__data[2] * this.__data[2]\n    if (len < Number.EPSILON) {\n      return new Vec3()\n    }\n\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1.0 / Math.sqrt(len)\n    return new Vec3(this.__data[0] * len, this.__data[1] * len, this.__data[2] * len)\n  }\n\n  /**\n   * Normalizes this Vec3 multiplying coordinate values by the inverse of the vector length.\n   *\n   * @return {number} - The return value.\n   */\n  normalizeInPlace() {\n    let len = this.__data[0] * this.__data[0] + this.__data[1] * this.__data[1] + this.__data[2] * this.__data[2]\n    if (len < Number.EPSILON) {\n      return\n    }\n    len = Math.sqrt(len)\n    const tmp = 1.0 / len\n    this.__data[0] *= tmp\n    this.__data[1] *= tmp\n    this.__data[2] *= tmp\n\n    return len\n  }\n\n  /**\n   * Creates and returns a new Vec3 with the new coordinates(calculated with this Vec3 coordinates and the specified length).\n   *\n   * @param {number} length - The length value.\n   * @return {Vec3} - The return value.\n   */\n  resize(length) {\n    const currLen = this.__data[0] * this.__data[0] + this.__data[1] * this.__data[1] + this.__data[2] * this.__data[2]\n    if (currLen < Number.EPSILON) {\n      return\n    }\n    const scl = length / Math.sqrt(currLen)\n    return new Vec3(this.__data[0] * scl, this.__data[1] * scl, this.__data[2] * scl)\n  }\n\n  /**\n   * Modifies current coordinates using the specified length.\n   *\n   * @param {number} length - The length value.\n   */\n  resizeInPlace(length) {\n    const currLen = this.__data[0] * this.__data[0] + this.__data[1] * this.__data[1] + this.__data[2] * this.__data[2]\n    if (currLen < Number.EPSILON) {\n      return\n    }\n    const scl = length / Math.sqrt(currLen)\n    this.__data[0] *= scl\n    this.__data[1] *= scl\n    this.__data[2] *= scl\n  }\n\n  /**\n   * Calculates the dot product of this Vec3 against another Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {number} - Returns the dot product.\n   */\n  dot(other) {\n    return this.x * other.x + this.y * other.y + this.z * other.z\n  }\n\n  /**\n   * Calculates the cross product of two Vec3s and returns the result as a new Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to calculate with.\n   * @return {Vec3} - Returns the cross product as a new Vec3.\n   */\n  cross(other) {\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const bx = other.x\n    const by = other.y\n    const bz = other.z\n\n    return new Vec3(ay * bz - az * by, az * bx - ax * bz, ax * by - ay * bx)\n  }\n\n  /**\n   * Gets the angle between this Vec3 and b.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {number} - Returns the angle in radians.\n   */\n  angleTo(other) {\n    const cosine = this.dot(other)\n    if (cosine > 1.0) {\n      return 0\n    } else {\n      return Math.acos(cosine)\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between this Vec3 and other.\n   *\n   * @param {Vec3} other - The other Vec3 to interpolate between.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  lerp(other, t) {\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    return new Vec3(ax + t * (other.x - ax), ay + t * (other.y - ay), az + t * (other.z - az))\n  }\n\n  /**\n   * Returns a new Vec3 whose component values are the abs of this Vec3s component values.\n   *\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  abs() {\n    return new Vec3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\n  }\n\n  /**\n   * Sets the vector a random vector on the surface of a sphere with the radius of the given scale value.\n   *\n   * @param {number} scale - The radius of the surface sphere.\n   * @return {Vec3} - The random Vec3.\n   */\n  setRandomDir(scale = 1.0) {\n    const r = Math.random() * 2.0 * Math.PI\n    const z = Math.random() * 2.0 - 1.0\n    const zScale = Math.sqrt(1.0 - z * z) * scale\n\n    this.__data[0] = Math.cos(r) * zScale\n    this.__data[1] = Math.sin(r) * zScale\n    this.__data[2] = z * scale\n    return this\n  }\n\n  /**\n   * Generates a random vector anywhere in the sphere defined by the provided scale value.\n   *\n   * @param {number} scale - The radius of the bounding sphere.\n   * @return {Vec3} - The random Vec3.\n   */\n  setRandom(scale = 1.0) {\n    this.__data[0] = (Math.random() - 0.5) * scale\n    this.__data[1] = (Math.random() - 0.5) * scale\n    this.__data[2] = (Math.random() - 0.5) * scale\n    return this\n  }\n\n  /**\n   * Clones this Vec3 and returns a new Vec3.\n   *\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  clone() {\n    return new Vec3(this.__data[0], this.__data[1], this.__data[2])\n  }\n\n  /**\n   * Returns the type as an array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Vec3.\n   *\n   * @param {...object} ...args - The ...args param.\n   * @return {Vec3} - Returns a new Vec3.\n   * @private\n   */\n  static create(...args) {\n    return new Vec3(...args)\n  }\n\n  /**\n   * The createFromJSON method.\n   * @param {object} json - The json param.\n   * @return {Vec3} - The return value.\n   * @private\n   */\n  static createFromJSON(json) {\n    const result = new Vec3()\n    result.fromJSON(json)\n    return result\n  }\n\n  /**\n   * The createFromFloat32Buffer method.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Vec3} - Returns a new Vec3.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Vec3` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Vec3(new Float32Array(buffer, byteOffset, 3)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * The createFromFloat32Array method.\n   * @param {Float32Array} array - A Float32Array value\n   * @return {Vec3} - Returns a new Vec3.\n   * @private\n   */\n  static createFromFloat32Array(array) {\n    return new Vec3(array)\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 3\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * Encodes Vec3 Class as a JSON object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n    }\n  }\n\n  /**\n   * Decodes a JSON object to set the state of this class.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.x = j.x\n    this.y = j.y\n    this.z = j.z\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.x = reader.loadFloat32()\n    this.y = reader.loadFloat32()\n    this.z = reader.loadFloat32()\n  }\n}\n\nRegistry.register('Vec3', Vec3)\n\nexport { Vec3 }\n","/* eslint-disable new-cap */\nimport { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\nimport { Vec3 } from './Vec3.js'\n/**\n * Represents a four-dimensional coordinate.\n * Math types internally store values in {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array} and\n * expose getters and setters for the component values.\n *\n * @extends AttrValue\n */\nclass Vec4 extends AttrValue {\n  /**\n   /**\n   * Creates a Vec4.\n   *\n   * The type of values of the `(x, y, z, t)` coordinates can be {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array|Float32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array|Uint32Array},\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array|Int32Array} and\n   * {@link https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/ArrayBuffer|ArrayBuffer}.\n   * <br>\n   * You can also pass one JSON object parameter.\n   * \n   * @param {Number|Float32Array|json} x - The x value. Default is 0.\n   * @param {number} y - The y value. Default is 0.\n   * @param {number} z - The y value. Default is 0.\n   * @param {number} t - The t value. Default is 0.\n   */\n  constructor(x = 0, y = 0, z = 0, t = 0) {\n    super()\n\n    if (x instanceof Float32Array || x instanceof Uint32Array) {\n      this.__data = x\n    } else if (x instanceof ArrayBuffer) {\n      console.warn(`deprecated, please use new Vec4(new Float32Array(buffer, byteOffset, 4))`)\n      const buffer = x\n      const byteOffset = y\n      this.__data = new Float32Array(buffer, byteOffset, 4)\n    } else if (x != null && typeof x == 'object') {\n      this.__data = new Float32Array(4)\n      this.fromJSON(x)\n    } else {\n      this.__data = new Float32Array(4)\n      this.__data[0] = x\n      this.__data[1] = y\n      this.__data[2] = z\n      this.__data[3] = t\n    }\n  }\n\n  /**\n   * Getter for `x` value.\n   *\n   * @return {number} - Returns the x value.\n   */\n  get x() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for `x` value.\n   *\n   * @param {number} val - The val param.\n   */\n  set x(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for `y` value.\n   *\n   * @return {number} - Returns the y value.\n   */\n  get y() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for `y` value.\n   *\n   * @param {number} val - The val param.\n   */\n  set y(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for `z` value.\n   *\n   * @param {number} val - The val param.\n   */\n  get z() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for `z` value.\n   *\n   * @param {number} val - The val param.\n   */\n  set z(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for `t` value.\n   *\n   * @param {number} val - The val param.\n   */\n  get t() {\n    return this.__data[3]\n  }\n\n  /**\n   * Setter for `t` value.\n   *\n   * @param {number} val - The val param.\n   */\n  set t(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Getter for `w` value.\n   *\n   * @param {number} val - The val param.\n   */\n  get w() {\n    return this.__data[3]\n  }\n\n  /**\n   * Setter for `w` value.\n   *\n   * @param {number} val - The val param.\n   */\n  set w(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Getter for `xyz` swizzel.\n   *\n   * @return {number} - Returns the z value.\n   */\n  get xyz() {\n    return new Vec3(this.__data[0], this.__data[1], this.__data[2])\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} x - The x value.\n   * @param {number} y  - The y value.\n   * @param {number} z  - The y value.\n   * @param {number} t  - The t value.\n   */\n  set(x, y, z, t) {\n    this.x = x\n    this.y = y\n    this.z = z\n    this.t = t\n  }\n\n  /**\n   * Sets the state of a Vec4 Object from another Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to set from.\n   */\n  setFromOther(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.z\n    this.t = other.t\n  }\n\n  /**\n   * Checks if this Vec4 contains the same values as the other Vec4.\n   *\n   * @deprecated\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Vec4 contains the same values as the other Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  isEqual(other) {\n    return this.x == other.x && this.y == other.y && this.z == other.z && this.t == other.t\n  }\n\n  /**\n   * Checks if this Vec4 is different from another Vec4.\n   *\n   * @deprecated\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  notEquals(other) {\n    console.warn('Deprecated. Use #notEqual instead.')\n    return this.notEqual(other)\n  }\n\n  /**\n   * Checks if this Vec4 is different from another Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  notEqual(other) {\n    return this.x != other.x && this.y != other.y && this.z != other.z && this.t != other.t\n  }\n\n  /**\n   * Returns true if this Vec4 is approximately the same as other.\n   *\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - The return value.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      Math.abs(this.x - other.x) < precision &&\n      Math.abs(this.y - other.y) < precision &&\n      Math.abs(this.z - other.z) < precision &&\n      Math.abs(this.t - other.t) < precision\n    )\n  }\n\n  /**\n   * Adds other to this Vec4 and returns the result as a new Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to add.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  add(other) {\n    return new Vec4(this.x + other.x, this.y + other.y, this.z + other.z, this.t + other.t)\n  }\n\n  /**\n   * Adds other to this Vec4 mutating the values of this instance\n   *\n   * @param {Vec4} other - The other Vec4 to add.\n   */\n  addInPlace(other) {\n    this.x += other.x\n    this.y += other.y\n    this.z += other.z\n    this.t += other.t\n  }\n\n  /**\n   * Subtracts other from this Vec4 and returns then result as a new Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to subtract.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  subtract(other) {\n    return new Vec4(this.x - other.x, this.y - other.y, this.z - other.z, this.t - other.t)\n  }\n\n  /**\n   * Subtracts other from this Vec4 mutating the values of this instance\n   *\n   * @param {Vec4} other - The other Vec4 to subtract.\n   */\n  subtractInPlace(other) {\n    this.x -= other.x\n    this.y -= other.y\n    this.z -= other.z\n    this.t -= other.t\n  }\n\n  /**\n   * Multiplies two Vec4s and returns the result as a new Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to multiply with.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  multiply(other) {\n    return new Vec4(this.x * other.x, this.y * other.y, this.z * other.z, this.t * other.t)\n  }\n\n  /**\n   * Multiplies two Vec4s mutating the values of this instance\n   *\n   * @param {Vec4} other - The other Vec4 to multiply with.\n   */\n  multiplyInPlace(other) {\n    this.x *= other.x\n    this.y *= other.y\n    this.z *= other.z\n    this.t *= other.t\n  }\n\n  /**\n   * Divides two Vec4s and returns the result as a new Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to divide by.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  divide(other) {\n    return new Vec4(this.x / other.x, this.y / other.y, this.z / other.z, this.t / other.t)\n  }\n\n  /**\n   * Divides two Vec4s.\n   *\n   * @param {Vec4} other - The other Vec4 to divide by.\n   */\n  divideInPlace(other) {\n    this.x /= other.x\n    this.y /= other.y\n    this.z /= other.z\n    this.t /= other.t\n  }\n\n  /**\n   * Scales this Vec4 by scalar and returns the result as a new Vec4.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {Vec4} - The return value.\n   */\n  scale(scalar) {\n    return new Vec4(this.x * scalar, this.y * scalar, this.z * scalar, this.t * scalar)\n  }\n\n  /**\n   * Scales this Vec4 by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.set(this.x * scalar, this.y * scalar, this.z * scalar, this.t * scalar)\n  }\n\n  /**\n   * Calculates the length of this Vec4.\n   *\n   * @return {number} - Returns the length.\n   */\n  length() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const t = this.__data[2]\n    return Math.sqrt(x * x + y * y + z * z + t * t)\n  }\n\n  /**\n   * Calculates the squared length of this Vec4.\n   *\n   * @return {number} - Returns the length.\n   */\n  lengthSquared() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const t = this.__data[3]\n    return x * x + y * y + z * z + t * t\n  }\n\n  /**\n   * Normalizes the Vec4 and returns it as a new Vec4.\n   * Multiplies coordinates value by the inverse of the vector length.\n   *\n   * @return {Vec4} - Returns the Vec4 normalized.\n   */\n  normalize() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const t = this.__data[3]\n    let len = x * x + y * y + z * z + t * t\n    if (len < Number.EPSILON) {\n      return new Vec4()\n    }\n\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len)\n    return new Vec4(x * len, y * len, z * len)\n  }\n\n  /**\n   * Normalizes this Vec4 multiplying coordinate values by the inverse of the vector length.\n   */\n  normalizeInPlace() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const t = this.__data[3]\n    let len = x * x + y * y + z * z + t * t\n    if (len < Number.EPSILON) {\n      return\n    }\n    len = 1 / Math.sqrt(len)\n    this.set(x * len, y * len, z * len, t * len)\n  }\n\n  /**\n   * Calculates the dot product of this Vec4 against another Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {number} - Returns the dot product.\n   */\n  dot(other) {\n    return this.x * other.x + this.y * other.y + this.z * other.z + this.t * b.t\n  }\n\n  /**\n   * Calculates the cross product of two Vec4s and returns the result as a new Vec4.\n   *\n   * @param {Vec4} other - The other Vec4 to calculate with.\n   * @return {Vec4} - Returns the cross product as a new Vec4.\n   */\n  cross(other) {\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const at = this.t\n    const bx = other.x\n    const by = other.y\n    const bz = other.z\n    const bt = other.t\n\n    return new Vec4(ay * bz - az * by, az * bt - at * bz, at * bx - ax * bt, ax * by - ay * bx)\n  }\n\n  /**\n   * Gets the angle between this Vec4 and b.\n   *\n   * @param {Vec4} other - The other Vec4 to compare with.\n   * @return {number} - Returns the angle in radians.\n   */\n  angleTo(other) {\n    const tempA = this.normalize()\n    const tempB = other.normalize()\n    const cosine = tempA.dot(tempB)\n\n    if (cosine > 1.0) {\n      return 0\n    } else {\n      return Math.acos(cosine)\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between this Vec4 and other.\n   *\n   * @param {Vec4} other - The other Vec4 to interpolate between.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  lerp(other, t) {\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    at = this.t\n    return new Vec4(ax + t * (other.x - ax), ay + t * (other.y - ay), az + t * (other.z - az), at + t * (other.t - at))\n  }\n\n  /**\n   * Generates a random vector with the given scale.\n   *\n   * @param {number} scale - Length of the resulting vector. If omitted, a unit vector will be returned.\n   * @return {Vec4} - The return value.\n   */\n  random(scale = 1.0) {\n    const r = glMatrix.RANDOM() * 2.0 * Math.PI\n    const z = glMatrix.RANDOM() * 2.0 - 1.0\n    const zScale = Math.sqrt(1.0 - z * z) * scale\n\n    out[0] = Math.cos(r) * zScale\n    out[1] = Math.sin(r) * zScale\n    out[2] = z * scale\n    return out\n  }\n\n  /**\n   * Clones this Vec4 and returns a new Vec4.\n   *\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  clone() {\n    return new Vec4(this.__data[0], this.__data[1], this.__data[2], this.__data[3])\n  }\n\n  /**\n   * Converts this Vec4 into a Vec3.\n   *\n   * @return {Vec3} - Returns the value as a new Vec3.\n   */\n  toVec3() {\n    return new Vec3(this.__data[0], this.__data[1], this.__data[2])\n  }\n\n  /**\n   * Returns the type as an array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Vec3.\n   * @param {...object} ...args - The ...args param.\n   * @return {Vec3} - Returns a new Vec3.\n   * @private\n   */\n  static create(...args) {\n    return new Vec3(...args)\n  }\n\n  /**\n   * Creates a new Vec4 to wrap existing memory in a buffer.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Vec4} - Returns a new Vec3.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return new Vec4(new Float32Array(buffer, offset * 4, 4)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Creates an instance of a `Vec4` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Vec4} - Returns a new Vec4.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Vec4(new Float32Array(buffer, byteOffset, 4)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 4\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      t: this.t,\n    }\n  }\n\n  /**\n   * Decodes a JSON object to set the state of this class.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.x = j.x\n    this.y = j.y\n    this.z = j.z\n    this.t = j.t\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.x = reader.loadFloat32()\n    this.y = reader.loadFloat32()\n    this.z = reader.loadFloat32()\n    this.t = reader.loadFloat32()\n  }\n}\n\nRegistry.register('Vec4', Vec4)\n\nexport { Vec4 }\n","/* eslint-disable require-jsdoc */\nimport { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing the red, green, blue and alpha channel of a color as 8bit values.\n *\n * @extends AttrValue\n */\nclass RGBA extends AttrValue {\n  /**\n   * Create a RGBA.\n   * @param {number | string | Uint8Array} r - The red channel of a color.\n   * @param {number} g - The green channel of a color.\n   * @param {number} b - The blue channel of a color.\n   * @param {number} a - The alpha (transparency) channel of a color.\n   */\n  constructor(r = 0, g = 0, b = 0, a = 255) {\n    super()\n\n    if (r instanceof Uint8Array) {\n      this.__data = r\n    } else {\n      this.__data = new Uint8Array(4)\n      if (typeof r == 'string') {\n        if (r.startsWith('#')) {\n          this.setFromHex(r)\n        } else {\n          this.setFromCSSColorName(r)\n        }\n      } else {\n        this.__data[0] = r\n        this.__data[1] = g\n        this.__data[2] = b\n        this.__data[3] = a\n      }\n    }\n  }\n\n  /**\n   * Getter for red channel.\n   *\n   * @return {RGBA} - Returns the red channel.\n   */\n  get r() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for red channel.\n   *\n   * @param {number} val - The val param.\n   */\n  set r(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for green channel.\n   *\n   * @return {RGBA} - Returns the green channel.\n   */\n  get g() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for green channel.\n   *\n   * @param {number} val - The val param.\n   */\n  set g(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for blue channel.\n   *\n   * @return {RGBA} - Returns the blue channel.\n   */\n  get b() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for blue channel.\n   *\n   * @param {number} val - The val param.\n   */\n  set b(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for alpha channel.\n   *\n   * @return {RGBA} - Returns the alpha channel.\n   */\n  get a() {\n    return this.__data[3]\n  }\n  /**\n   * Setter for alpha value.\n   *\n   * @param {number} val - The val param.\n   */\n  set a(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} r - The red channel.\n   * @param {number} g  - The green channel.\n   * @param {number} b  - The blue channel.\n   * @param {number} a  - The alpha channel.\n   */\n  set(r, g, b, a = 255) {\n    this.r = r\n    this.g = g\n    this.b = b\n    this.a = a\n  }\n\n  /**\n   * Setter from another RGBA color.\n   *\n   * @param {RGBA} other - The other RGBA to set from.\n   */\n  setFromOther(other) {\n    this.r = other.r\n    this.g = other.g\n    this.b = other.b\n    this.a = other.a\n  }\n\n  /**\n   * Setter from a scalar array.\n   *\n   * @param {array} values - The array of values.\n   */\n  setFromArray(values) {\n    this.r = values[0]\n    this.g = values[1]\n    this.b = values[2]\n    this.a = values.length == 4 ? values[3] : 1.0\n  }\n\n  /**\n   * Setter from a hexadecimal value.\n   * E.g. #ff0000\n   *\n   * @param {number} hex - The hex value.\n   */\n  setFromHex(hex) {\n    function hexToRgb(hex) {\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n      return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n          }\n        : null\n    }\n    const rgb = hexToRgb(hex)\n    if (!rgb) {\n      console.warn('Invalid hex code:' + hex)\n      return\n    }\n    this.set(rgb.r, rgb.g, rgb.b)\n  }\n\n  /**\n   * Setter from a CSS color name.\n   * E.g. \"red\"\n   *\n   * @param {string} name - The CSS color name.\n   */\n  setFromCSSColorName(name) {\n    const colourNameToHex = (colour) => {\n      const colors = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        'indianred ': '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrodyellow: '#fafad2',\n        lightgrey: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370d8',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#d87093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32',\n      }\n\n      if (typeof colors[colour.toLowerCase()] != 'undefined') return colors[colour.toLowerCase()]\n\n      return false\n    }\n    if (name.startsWith('#')) {\n      this.setFromHex(name)\n    } else {\n      this.setFromHex(colourNameToHex(name))\n    }\n  }\n\n  /**\n   * Returns the hexadecimal value of this RGBA color.\n   *\n   * @return {string} - Returns the hex value.\n   */\n  toHex() {\n    function componentToHex(int) {\n      const hex = int.toString(16)\n      return hex.length == 1 ? '0' + hex : hex\n    }\n    return '#' + componentToHex(this.r) + componentToHex(this.g) + componentToHex(this.b)\n  }\n\n  /**\n   * @deprecated\n   * Returns true if this RGBA color contains the same values as the other.\n   * Deprecated. Use #isEqual instead.\n   *\n   * @param {RGBA} other - The other RGBA to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Color  contains the same values as the other.\n   *\n   * @param {Color} other - The other Color to compare with.\n   * @return {boolean} - Returns `true` if the values are the same, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.r == other.r && this.g == other.g && this.b == other.b && this.a == other.a\n  }\n\n  /**\n   * Returns true if this RGBA color is NOT exactly the same as other.\n   *\n   * @param {RGBA} other -  The other RGBA to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  notEquals(other) {\n    return this.r != other.r && this.g != other.g && this.b != other.b && this.a != other.a\n  }\n\n  /**\n   * Returns true if this RGBA color is approximately the same as other.\n   *\n   * @param {RGBA} other - The other RGBA to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      Math.abs(this.r - other.r) < precision &&\n      Math.abs(this.g - other.g) < precision &&\n      Math.abs(this.b - other.b) < precision &&\n      Math.abs(this.a - other.a) < precision\n    )\n  }\n\n  /**\n   * Returns a new RGBA color which is this RGBA color added to other.\n   *\n   * @param {RGBA} other - The other RGBA to add.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  add(other) {\n    return new RGBA(this.r + other.r, this.g + other.g, this.b + other.b, this.a + other.a)\n  }\n\n  /**\n   * Returns a new RGBA color which is this RGBA color subtracted from other.\n   *\n   * @param {RGBA} other - The other RGBA to subtract.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  subtract(other) {\n    return new RGBA(this.r - other.r, this.g - other.g, this.b - other.b, this.a - other.a)\n  }\n\n  /**\n   * Returns a new RGBA color which is this vector scaled by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  scale(scalar) {\n    return new RGBA(this.r * scalar, this.g * scalar, this.b * scalar, this.a * scalar)\n  }\n\n  /**\n   * Scales this RGBA color by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.r *= scalar\n    this.g *= scalar\n    this.b *= scalar\n    this.a *= scalar\n  }\n\n  /**\n   * Apply gamma correction to this RGBA color.\n   *\n   * @param {number} gamma - The gamma value.\n   */\n  applyGamma(gamma) {\n    this.set(Math.pow(this.r, gamma), Math.pow(this.g, gamma), Math.pow(this.b, gamma), this.a)\n  }\n\n  /**\n   * Converts to linear color space and returns a new color.\n   * @param {number} gamma - The gamma value.\n   * @return {Color} - Returns a new RGBA.\n   */\n  toLinear(gamma = 2.2) {\n    return new RGBA(Math.pow(this.r, gamma), Math.pow(this.g, gamma), Math.pow(this.b, gamma), this.a)\n  }\n\n  /**\n   * Converts to gamma color space and returns a new RGBA color.\n   *\n   * @param {number} gamma - The gamma value.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  toGamma(gamma = 2.2) {\n    return new RGBA(Math.pow(this.r, 1.0 / gamma), Math.pow(this.g, 1.0 / gamma), Math.pow(this.b, 1.0 / gamma), this.a)\n  }\n\n  /**\n   * Calculates and returns the relative luminance of the linear RGB component.\n   *\n   * @return {number} - The return value.\n   */\n  luminance() {\n    return 0.2126 * this.r + 0.7152 * this.g + 0.0722 * this.b\n  }\n\n  /**\n   * Performs a linear interpolation between this RGBA color and other.\n   *\n   * @param {RGBA} other - The other RGBA to interpolate between.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  lerp(other, t) {\n    const ar = this.r\n    const ag = this.g\n    const ab = this.b\n    const aa = this.a\n    return new RGBA(ar + t * (other.r - ar), ag + t * (other.g - ag), ab + t * (other.b - ab), aa + t * (other.a - aa))\n  }\n\n  /**\n   * Creates a random RGBA.\n   *\n   * @param {number} gammaOffset - The gamma offset.\n   * @param {boolean} randomAlpha - Determines whether the alpha channel is random.\n   * @return {RGBA} - Returns a new random RGBA.\n   */\n  static random(gammaOffset = 0.0, randomAlpha = false) {\n    if (gammaOffset > 0.0) {\n      return new RGBA(\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        randomAlpha ? gammaOffset + Math.random() * (1.0 - gammaOffset) : 1.0\n      )\n    } else if (gammaOffset < 0.0) {\n      return new RGBA(\n        Math.random() * (1.0 + gammaOffset),\n        Math.random() * (1.0 + gammaOffset),\n        Math.random() * (1.0 + gammaOffset),\n        randomAlpha ? Math.random() * (1.0 + gammaOffset) : 1.0\n      )\n    } else {\n      return new RGBA(Math.random(), Math.random(), Math.random(), randomAlpha ? Math.random() : 1.0)\n    }\n  }\n\n  /**\n   * Clones this RGBA color and returns a new RGBA color.\n   *\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  clone() {\n    return new RGBA(this.__data[0], this.__data[1], this.__data[2], this.__data[3])\n  }\n\n  /**\n   * Returns the type as an array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  /**\n   * Returns the type as a 3 component array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as a 3 component array.\n   */\n  as3ComponentArray() {\n    return [this.__data[0], this.__data[1], this.__data[2]]\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new RGBA color.\n   * @param {...object} ...args - The ...args param.\n   * @return {RGBA} - Returns a new RGBA.\n   * @private\n   */\n  static create(...args) {\n    return new RGBA(...args)\n  }\n\n  /**\n   * The createFromFloat32Buffer method.\n   *\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {RGBA} - Returns a new color.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `RGBA` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {RGBA} - Returns a new RGBA.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new RGBA(new Uint8Array(buffer, byteOffset, 4)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 4\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      r: this.r,\n      g: this.g,\n      b: this.b,\n      a: this.a,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.r = j.r\n    this.g = j.g\n    this.b = j.b\n    this.a = j.a\n  }\n\n  /**\n   * Returns the CSS rgba string.\n   *\n   * @return {string} - The return value.\n   */\n  toCSSString() {\n    return (\n      'rgba(' +\n      Math.round(this.r * 255) +\n      ', ' +\n      Math.round(this.g * 255) +\n      ', ' +\n      Math.round(this.b * 255) +\n      ', ' +\n      this.a +\n      ')'\n    )\n  }\n}\n\nRegistry.register('RGBA', RGBA)\n\nexport { RGBA }\n","/* eslint-disable require-jsdoc */\nimport { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing a color as 4 floating point values.\n *\n * @extends AttrValue\n */\nclass Color extends AttrValue {\n  /**\n   * Creates a `Color` object with an RGBA structure.\n   *\n   * @param {number | string | Float32Array | ArrayBuffer} r - The red channel of a color.\n   * @param {number} g - The green channel of a color.\n   * @param {number} b - The blue channel of a color.\n   * @param {number} a - The alpha (transparency) channel of a color.\n   */\n  constructor(r = 0, g = 0, b = 0, a = 1.0) {\n    super()\n\n    if (r instanceof Float32Array) {\n      this.__data = r\n    } else if (r instanceof ArrayBuffer) {\n      console.warn(`deprecated, please use new Vec4(new Float32Array(buffer, byteOffset, 4))`)\n      const buffer = r\n      const byteOffset = g\n      this.__data = new Float32Array(buffer, byteOffset, 4)\n    } else {\n      this.__data = new Float32Array(4)\n      if (typeof r == 'string') {\n        if (r.startsWith('#')) {\n          this.setFromHex(r)\n        } else {\n          this.setFromCSSColorName(r)\n        }\n      } else {\n        this.__data[0] = r\n        this.__data[1] = g\n        this.__data[2] = b\n        this.__data[3] = a\n      }\n    }\n  }\n\n  /**\n   * Getter for red channel.\n   *\n   * @return {number} - Returns the red channel.\n   */\n  get r() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for red channel.\n   *\n   * @param {number} val - The val param.\n   */\n  set r(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for green channel.\n   *\n   * @return {number} - Returns the green channel.\n   */\n  get g() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for green channel.\n   * @param {number} val - The val param.\n   */\n  set g(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for blue channel.\n   *\n   * @return {number} - Returns the blue channel.\n   */\n  get b() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for blue channel.\n   *\n   * @param {number} val - The val param.\n   */\n  set b(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for alpha channel.\n   *\n   * @return {number} - Returns the alpha channel.\n   */\n  get a() {\n    return this.__data[3]\n  }\n  /**\n   * Setter for alpha value.\n   *\n   * @param {number} val - The val param.\n   */\n  set a(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} r - The red channel.\n   * @param {number} g  - The green channel.\n   * @param {number} b  - The blue channel.\n   * @param {number} a  - The alpha channel.\n   */\n  set(r, g, b, a = 1.0) {\n    this.r = r\n    this.g = g\n    this.b = b\n    this.a = a\n  }\n\n  /**\n   * Sets current color state with another `Color` object.\n   *\n   * @param {Color} other - The other color to set from.\n   */\n  setFromOther(other) {\n    this.r = other.r\n    this.g = other.g\n    this.b = other.b\n    this.a = other.a\n  }\n\n  /**\n   * Setter from a hexadecimal string value.\n   * E.g. #ff0000\n   * @param {string} hex - The hex string value.\n   */\n  setFromHex(hex) {\n    function hexToRgb(hex) {\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n      return result\n        ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n          }\n        : null\n    }\n    const rgb = hexToRgb(hex)\n    if (!rgb) {\n      console.warn('Invalid hex code:' + hex)\n      return\n    }\n    this.set(rgb.r / 255, rgb.g / 255, rgb.b / 255)\n  }\n\n  /**\n   * Sets the Color values from a CSS color name.\n   * E.g. \"red\"\n   * @param {string} name - The CSS color name.\n   */\n  setFromCSSColorName(name) {\n    const colourNameToHex = (colour) => {\n      const colors = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        'indianred ': '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrodyellow: '#fafad2',\n        lightgrey: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370d8',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#d87093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32',\n      }\n\n      if (typeof colors[colour.toLowerCase()] != 'undefined') return colors[colour.toLowerCase()]\n\n      return false\n    }\n    if (name.startsWith('#')) {\n      this.setFromHex(name)\n    } else {\n      this.setFromHex(colourNameToHex(name))\n    }\n  }\n\n  /**\n   * Returns the hexadecimal value of this color, including the leading \"#\" character.\n   *\n   * @return {string} - Returns the hex value.\n   */\n  toHex() {\n    const toHex = (c) => {\n      const int = Math.round(c * 255)\n      const hex = int.toString(16)\n      return hex.length == 1 ? '0' + hex : hex\n    }\n    return `#${toHex(this.r)}${toHex(this.g)}${toHex(this.b)}`\n  }\n\n  /**\n   * @deprecated\n   * Returns true if this color contains the same values as the other.\n   * Deprecated. Use #isEqual instead.\n   *\n   * @param {Color} other - The other color to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Color  contains the same values as the other.\n   *\n   * @param {Color} other - The other Color to compare with.\n   * @return {boolean} - Returns `true` if the values are the same, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.r == other.r && this.g == other.g && this.b == other.b && this.a == other.a\n  }\n\n  /**\n   * Returns true if this color is NOT exactly the same as other.\n   *\n   * @param {Color} other - The other color to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  notEquals(other) {\n    return this.r != other.r && this.g != other.g && this.b != other.b && this.a != other.a\n  }\n\n  /**\n   * Returns true if this color is approximately the same as other.\n   *\n   * @param {Color} other - The other color to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      Math.abs(this.r - other.r) < precision &&\n      Math.abs(this.g - other.g) < precision &&\n      Math.abs(this.b - other.b) < precision &&\n      Math.abs(this.a - other.a) < precision\n    )\n  }\n\n  /**\n   * Returns a new Color which is this Color added to other.\n   *\n   * @param {Color} other - The other color to add.\n   * @return {Color} - Returns a new color.\n   */\n  add(other) {\n    return new Color(this.r + other.r, this.g + other.g, this.b + other.b, this.a + other.a)\n  }\n\n  /**\n   * Updates this Color by adding the values from the other color.\n   *\n   * @param {Color} other - The other color to add.\n   */\n  addInPlace(other) {\n    this.r += other.r\n    this.g += other.g\n    this.b += other.b\n    this.a += other.a\n  }\n\n  /**\n   * Returns a new color which is this color subtracted from other.\n   *\n   * @param {Color} other - The other color to subtract.\n   * @return {Color} - Returns a new color.\n   */\n  subtract(other) {\n    return new Color(this.r - other.r, this.g - other.g, this.b - other.b, this.a - other.a)\n  }\n\n  /**\n   * Scales this color by scalar and return the result as a new Vec4.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {Color} - Returns a new color.\n   */\n  scale(scalar) {\n    return new Color(this.r * scalar, this.g * scalar, this.b * scalar, this.a * scalar)\n  }\n\n  /**\n   * Scales this color by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.r *= scalar\n    this.g *= scalar\n    this.b *= scalar\n    this.a *= scalar\n  }\n\n  /**\n   * Apply gamma correction to this color\n   *\n   * @param {number} gamma - The gamma value.\n   */\n  applyGamma(gamma) {\n    this.set(Math.pow(this.r, gamma), Math.pow(this.g, gamma), Math.pow(this.b, gamma), this.a)\n  }\n\n  /**\n   * Converts to linear color space and returns a new color\n   *\n   * @param {number} gamma - The gamma value.\n   * @return {Color} - Returns a new color.\n   */\n  toLinear(gamma = 2.2) {\n    return new Color(Math.pow(this.r, gamma), Math.pow(this.g, gamma), Math.pow(this.b, gamma), this.a)\n  }\n\n  /**\n   * returns a new color value value is mapped into a gamma curve\n   *\n   * @param {number} gamma - The gamma value.\n   * @return {Color} - Returns a new color.\n   */\n  toGamma(gamma = 2.2) {\n    return new Color(\n      Math.pow(this.r, 1.0 / gamma),\n      Math.pow(this.g, 1.0 / gamma),\n      Math.pow(this.b, 1.0 / gamma),\n      this.a\n    )\n  }\n\n  /**\n   * Calculates and returns the luminance of the linear RGB components.\n   *\n   * @return {number} - The return value.\n   */\n  luminance() {\n    return 0.2126 * this.r + 0.7152 * this.g + 0.0722 * this.b\n  }\n\n  /**\n   * Performs a linear interpolation between this color and other.\n   *\n   * @param {Color} other - The other color to interpolate between.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Color} - Returns a new color.\n   */\n  lerp(other, t) {\n    const ar = this.r\n    const ag = this.g\n    const ab = this.b\n    const aa = this.a\n    return new Color(ar + t * (other.r - ar), ag + t * (other.g - ag), ab + t * (other.b - ab), aa + t * (other.a - aa))\n  }\n\n  /**\n   * Creates a random color.\n   *\n   * @param {number} gammaOffset - The gamma offset. Values between 0 and 1 increase the average brightness of the generated color. Values between 0 and -1 darken the generated color values.\n   * @param {boolean} randomAlpha - Determines whether the alpha channel is random. If not, the alpha values will be 1.0.\n   * @return {Color} - The new random color.\n   */\n  static random(gammaOffset = 0.0, randomAlpha = false) {\n    if (gammaOffset > 0.0) {\n      return new Color(\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        gammaOffset + Math.random() * (1.0 - gammaOffset),\n        randomAlpha ? gammaOffset + Math.random() * (1.0 - gammaOffset) : 1.0\n      )\n    }\n\n    if (gammaOffset < 0.0) {\n      return new Color(\n        Math.random() * (1.0 + gammaOffset),\n        Math.random() * (1.0 + gammaOffset),\n        Math.random() * (1.0 + gammaOffset),\n        randomAlpha ? Math.random() * (1.0 + gammaOffset) : 1.0\n      )\n    }\n\n    return new Color(Math.random(), Math.random(), Math.random(), randomAlpha ? Math.random() : 1.0)\n  }\n\n  /**\n   * Clones this color and returns a new color.\n   *\n   * @return {Color} - Returns a new color.\n   */\n  clone() {\n    return new Color(this.__data[0], this.__data[1], this.__data[2], this.__data[3])\n  }\n\n  /**\n   * Returns the type as an array. Often used to pass types to the GPU.\n   *\n   * @return {array} - Returns as an array.\n   */\n  asArray() {\n    return this.__data\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new color.\n   * @param {...object} ...args - The ...args param.\n   * @return {Color} - Returns a new color.\n   * @private\n   */\n  static create(...args) {\n    return new Color(...args)\n  }\n\n  /**\n   * The createFromFloat32Buffer method.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Color} - Returns a new color.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Color` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Color} - Returns a new color.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Color(new Float32Array(buffer, byteOffset, 4)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 4\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      r: this.r,\n      g: this.g,\n      b: this.b,\n      a: this.a,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.r = j.r\n    this.g = j.g\n    this.b = j.b\n    this.a = j.a\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.r = reader.loadFloat32()\n    this.g = reader.loadFloat32()\n    this.b = reader.loadFloat32()\n    this.a = reader.loadFloat32()\n  }\n}\n\nRegistry.register('Color', Color)\n\nexport { Color }\n","import { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing euler angles. Euler angles describe rotating an object\n * around its various axis in a specified axis order.\n *\n * @extends AttrValue\n */\nclass EulerAngles extends AttrValue {\n  /**\n   * Create a euler angle. Receives the xyz values in radians and the order that the rotations are applied.\n   * <br>\n   * Order parameter values: `XYZ: 0`, `YZX: 1`, `ZXY: 2`, `XZY: 3`, `ZYX: 4`, `YXZ: 5`\n   * <br>\n   * It could be either the `string` or the `number` value.\n   *\n   * @param {number} x - The angle of the x axis in radians. Default is 0.\n   * @param {number} y - The angle of the y axis in radians. Default is 0.\n   * @param {number} z - The angle of the z axis in radians. Default is 0.\n   * @param {number | string} order - The order in which the rotations are applied.\n   */\n  constructor(x = 0, y = 0, z = 0, order = 0) {\n    super()\n\n    if (!isNaN(order)) this.order = order\n    else {\n      switch (order) {\n        case 'XYZ':\n          this.order = 0\n          break\n        case 'YZX':\n          this.order = 1\n          break\n        case 'ZXY':\n          this.order = 2\n          break\n        case 'XZY':\n          this.order = 3\n          break\n        case 'ZYX':\n          this.order = 4\n          break\n        case 'YXZ':\n          this.order = 5\n          break\n        default:\n          throw new Error('Invalid Euler Angles Order:' + order)\n      }\n    }\n    if (x instanceof ArrayBuffer) {\n      const buffer = x\n      const byteOffset = y\n      this.__data = new Float32Array(buffer, byteOffset, 4)\n    } else {\n      this.__data = new Float32Array(3)\n      this.__data[0] = x\n      this.__data[1] = y\n      this.__data[2] = z\n    }\n  }\n\n  /**\n   * Getter for x axis rotation.\n   *\n   * @return {number} - Returns the x axis rotation.\n   */\n  get x() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for x axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set x(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for y axis rotation.\n   *\n   * @return {number} - Returns the y axis rotation.\n   */\n  get y() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for y axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set y(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for z axis rotation.\n   *\n   * @return {number} - Returns the z axis rotation.\n   */\n  get z() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for z axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set z(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Sets the EulerAngles\n   *\n   * @param {number} x - The x axis rotation in radians.\n   * @param {number} y - The y axis rotation in radians.\n   * @param {number} z - The z axis rotation in radians.\n   */\n  set(x, y, z) {\n    this.__data[0] = x\n    this.__data[1] = y\n    this.__data[2] = z\n  }\n}\n\nRegistry.register('EulerAngles', EulerAngles)\n\nexport { EulerAngles }\n","/* eslint-disable new-cap */\nimport { AttrValue } from './AttrValue.js'\nimport { Vec3 } from './Vec3.js'\nimport { Registry } from '../Registry'\n\n/**\n * A class representing a 3x3 matrix.\n * This matrix class is based on GLM, and is column major.\n *\n * @extends AttrValue\n */\nclass Mat3 extends AttrValue {\n  /**\n   * Initializes the Mat3 class with given data.\n   *\n   * @param {number | ArrayBuffer} m00 - Row 0, column 0.\n   * @param {number} m01 - Row 0, column 1.\n   * @param {number} m02 - Row 0, column 2.\n   * @param {number} m10 - Row 1, column 0.\n   * @param {number} m11 - Row 1, column 1.\n   * @param {number} m12 - Row 1, column 2.\n   * @param {number} m20 - Row 2, column 0.\n   * @param {number} m21 - Row 2, column 1.\n   * @param {number} m22 - Row 2, column 2.\n   */\n  constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n    super()\n\n    if (m00 instanceof Vec3 && m01 instanceof Vec3 && m02 instanceof Vec3) {\n      this.__data = new Float32Array(9)\n      this.set(m00.x, m00.y, m00.z, m01.x, m01.y, m01.z, m02.x, m02.y, m02.z)\n    } else if (m00 instanceof Float32Array || m00 instanceof Uint32Array) {\n      this.__data = m00\n    } else if (m00 instanceof ArrayBuffer) {\n      console.warn(`Deprecated, please use new Vec3(new Float32Array(buffer, byteOffset, 9))`)\n      const buffer = m00\n      const byteOffset = m01\n      this.__data = new Float32Array(buffer, byteOffset, 9)\n    } else {\n      this.__data = new Float32Array(9)\n      this.set(m00, m01, m02, m10, m11, m12, m20, m21, m22)\n    }\n  }\n\n  // /////////////////////////////////////////\n  // properties\n\n  /**\n   * Getter for row 0, column 0.\n   * @return {number} - Returns the m00 value.\n   */\n  get m00() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for row 0, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m00(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for row 0, column 1.\n   *\n   * @return {number} - Returns the m01 value.\n   */\n  get m01() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for row 0, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m01(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for row 0, column 2.\n   *\n   * @return {number} - Returns the m02 value.\n   */\n  get m02() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for row 0, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m02(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for row 1, column 0.\n   *\n   * @return {number} - Returns the m10 value.\n   */\n  get m10() {\n    return this.__data[3]\n  }\n\n  /**\n   * Setter for row 1, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m10(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Getter for row 1, column 1\n   *\n   * @return {number} - Returns the m11 value.\n   */\n  get m11() {\n    return this.__data[4]\n  }\n\n  /**\n   * Setter for row 1, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m11(val) {\n    this.__data[4] = val\n  }\n\n  /**\n   * Getter for row 1, column 2.\n   *\n   * @return {number} - Returns the m12 value.\n   */\n  get m12() {\n    return this.__data[5]\n  }\n\n  /**\n   * Setter for row 1, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m12(val) {\n    this.__data[5] = val\n  }\n\n  /**\n   * Getter for row 2, column 0.\n   *\n   * @return {number} - Returns the m20 value.\n   */\n  get m20() {\n    return this.__data[6]\n  }\n\n  /**\n   * Setter for row 2, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m20(val) {\n    this.__data[6] = val\n  }\n\n  /**\n   * Getter for row 2, column 1.\n   *\n   * @return {number} - Returns the m21 value.\n   */\n  get m21() {\n    return this.__data[7]\n  }\n\n  /**\n   * Setter for row 2, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m21(val) {\n    this.__data[7] = val\n  }\n\n  /**\n   * Getter for row 2, column 2.\n   *\n   * @return {number} - Returns the m22 value.\n   */\n  get m22() {\n    return this.__data[8]\n  }\n\n  /**\n   * Setter for row 2, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m22(val) {\n    this.__data[8] = val\n  }\n\n  /**\n   * Getter for the `x` axis.\n   *\n   * @return {Vec3} - Returns the `x` axis as a Vec3.\n   */\n  get xAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 0)\n  }\n\n  /**\n   * Setter for the `x` axis.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set xAxis(vec3) {\n    this.xAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  /**\n   * Getter for the `y` axis.\n   * * @return {Vec3} - Returns the `y` axis as a Vec3.\n   */\n  get yAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 3 * 4)\n  }\n\n  /**\n   * Setter for the `y` axis.\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set yAxis(vec3) {\n    this.yAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  /**\n   * Getter for the `z` axis.\n   * * @return {Vec3} - Returns the `z` axis as a Vec3.\n   */\n  get zAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 6 * 4)\n  }\n\n  /**\n   * Setter for the `z` axis.\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set zAxis(vec3) {\n    this.zAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  // /////////////////////////////////////////\n  // Setters\n\n  /**\n   * Sets the state of the Mat3 class\n   *\n   * @param {number} m00 - Row 0, column 0.\n   * @param {number} m01 - Row 0, column 1.\n   * @param {number} m02 - Row 0, column 2.\n   * @param {number} m10 - Row 1, column 0.\n   * @param {number} m11 - Row 1, column 1.\n   * @param {number} m12 - Row 1, column 2.\n   * @param {number} m20 - Row 2, column 0.\n   * @param {number} m21 - Row 2, column 1.\n   * @param {number} m22 - Row 2, column 2.\n   */\n  set(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n    this.__data[0] = m00\n    this.__data[1] = m01\n    this.__data[2] = m02\n    this.__data[3] = m10\n    this.__data[4] = m11\n    this.__data[5] = m12\n    this.__data[6] = m20\n    this.__data[7] = m21\n    this.__data[8] = m22\n  }\n\n  /**\n   * Sets state of the Mat3 with the identity  Matrix\n   */\n  setIdentity() {\n    this.set()\n  }\n\n  /**\n   * Sets state of the Mat3 from another Mat3\n   * <br>\n   * Note: works with either Mat3 or Mat4.\n   *\n   * @param {Mat3} mat - The mat value.\n   */\n  setFromMat(mat) {\n    this.__data[0] = mat.m00\n    this.__data[1] = mat.m01\n    this.__data[2] = mat.m02\n    this.__data[3] = mat.m10\n    this.__data[4] = mat.m11\n    this.__data[5] = mat.m12\n    this.__data[6] = mat.m20\n    this.__data[7] = mat.m21\n    this.__data[8] = mat.m22\n  }\n\n  /**\n   * Scales and calculates the cross product of the `Vec3` and sets the result in the Mat3\n   * Note: the resulting matrix +Z axis is aligned with the provided direction value.\n   *\n   * @param {Vec3} dir - The dir value.\n   * @param {Vec3} up - The up value.\n   */\n  setFromDirectionAndUpvector(dir, up) {\n    const zAxis = dir\n    const zLen = zAxis.length()\n    if (zLen < Number.EPSILON) {\n      this.setIdentity()\n      return\n    }\n    zAxis.scaleInPlace(1 / zLen)\n\n    const xAxis = up.cross(zAxis)\n    const xLen = xAxis.length()\n    if (xLen > Number.EPSILON) xAxis.scaleInPlace(1 / xLen)\n\n    const yAxis = zAxis.cross(xAxis)\n    const yLen = yAxis.length()\n    if (yLen > Number.EPSILON) yAxis.scaleInPlace(1 / yLen)\n\n    this.set(xAxis.x, xAxis.y, xAxis.z, yAxis.x, yAxis.y, yAxis.z, zAxis.x, zAxis.y, zAxis.z)\n  }\n\n  /**\n   * Inverts a Mat3 and returns the result as a new instance.\n   *\n   * @return {Mat3} - Returns a new Mat3.\n   */\n  inverse() {\n    const a00 = this.__data[0]\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a10 = this.__data[3]\n    const a11 = this.__data[4]\n    const a12 = this.__data[5]\n    const a20 = this.__data[6]\n    const a21 = this.__data[7]\n    const a22 = this.__data[8]\n    const b01 = a22 * a11 - a12 * a21\n    const b11 = -a22 * a10 + a12 * a20\n    const b21 = a21 * a10 - a11 * a20\n    // Calculate the determinant\n    const det = a00 * b01 + a01 * b11 + a02 * b21\n\n    if (!det) {\n      console.warn('Unable to invert Mat3')\n      return null\n    }\n    det = 1.0 / det\n\n    return new Mat3(\n      b01 * det,\n      (-a22 * a01 + a02 * a21) * det,\n      (a12 * a01 - a02 * a11) * det,\n      b11 * det,\n      (a22 * a00 - a02 * a20) * det,\n      (-a12 * a00 + a02 * a10) * det,\n      b21 * det,\n      (-a21 * a00 + a01 * a20) * det,\n      (a11 * a00 - a01 * a10) * det\n    )\n  }\n\n  /**\n   * Inverts a Mat3 in place modifying its values.\n   *\n   * @return {boolean} - The return value.\n   */\n  invertInPlace() {\n    const a00 = this.__data[0]\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a10 = this.__data[3]\n    const a11 = this.__data[4]\n    const a12 = this.__data[5]\n    const a20 = this.__data[6]\n    const a21 = this.__data[7]\n    const a22 = this.__data[8]\n    const b01 = a22 * a11 - a12 * a21\n    const b11 = -a22 * a10 + a12 * a20\n    const b21 = a21 * a10 - a11 * a20\n    // Calculate the determinant\n    const det = a00 * b01 + a01 * b11 + a02 * b21\n\n    if (!det) {\n      console.warn('Unable to invert Mat3')\n      return false\n    }\n    det = 1.0 / det\n\n    this.set(\n      b01 * det,\n      (-a22 * a01 + a02 * a21) * det,\n      (a12 * a01 - a02 * a11) * det,\n      b11 * det,\n      (a22 * a00 - a02 * a20) * det,\n      (-a12 * a00 + a02 * a10) * det,\n      b21 * det,\n      (-a21 * a00 + a01 * a20) * det,\n      (a11 * a00 - a01 * a10) * det\n    )\n    return true\n  }\n\n  /**\n   * Transposes (exchanges columns with rows) this matrix\n   * and returns the result as a new instance.\n   *\n   * @return {Mat3} - Return a new transposed Mat3.\n   */\n  transpose() {\n    return Mat3(\n      this.__data[0],\n      this.__data[3],\n      this.__data[6],\n      this.__data[1],\n      this.__data[4],\n      this.__data[7],\n      this.__data[2],\n      this.__data[5],\n      this.__data[8]\n    )\n  }\n\n  /**\n   * Transposes (exchanges columns with rows) this matrix modifying its values.\n   */\n  transposeInPlace() {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a12 = this.__data[5]\n\n    this.__data[1] = this.__data[3]\n    this.__data[2] = this.__data[6]\n    this.__data[3] = a01\n    this.__data[5] = this.__data[7]\n    this.__data[6] = a02\n    this.__data[7] = a12\n  }\n\n  /**\n   * Transforms the Vec3 with a Mat3.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   * @return {Vec3} - Return the result as a new Vec3.\n   */\n  transformVec3(vec3) {\n    return new Vec3(\n      this.__data[0] * vec3.x + this.__data[1] * vec3.y + this.__data[2] * vec3.z,\n      this.__data[3] * vec3.x + this.__data[4] * vec3.y + this.__data[5] * vec3.z,\n      this.__data[6] * vec3.x + this.__data[7] * vec3.y + this.__data[8] * vec3.z\n    )\n  }\n\n  /**\n   * Clones this Mat3 returning a new instance.\n   *\n   * @return {Mat3} - Returns a new Mat3.\n   */\n  clone() {\n    return new Mat3(\n      this.__data[0],\n      this.__data[1],\n      this.__data[2],\n      this.__data[3],\n      this.__data[4],\n      this.__data[5],\n      this.__data[6],\n      this.__data[7],\n      this.__data[8],\n      this.__data[9]\n    )\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Create a new Mat3.\n   * @param {...object} ...args - The ...args param.\n   * @return {Mat3} - Returns a new Mat3.\n   * @private\n   */\n  static create(...args) {\n    return new Mat3(...args)\n  }\n\n  /**\n   * Creates a new Mat3 to wrap existing memory in a buffer.\n   *\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Mat3} - Returns a new Mat3.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Mat3` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Mat3} - Returns a new Mat3.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Mat3(new Float32Array(buffer, byteOffset, 9)) // 4 bytes per 32bit float\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.__data = reader.loadFloat32Array(9)\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return this.__data\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json param.\n   */\n  fromJSON(json) {\n    this.__data = new Float32Array(json)\n  }\n\n  // ///////////////////////////\n  // Debugging\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return this.toJSON().toString()\n  }\n}\n\nRegistry.register('Mat3', Mat3)\n\nexport { Mat3 }\n","import { AttrValue } from './AttrValue.js'\nimport { Vec3 } from './Vec3.js'\nimport { Mat3 } from './Mat3.js'\nimport { Registry } from '../Registry'\n\n/**\n * A class representing a 4x4 matrix.\n * This matrix class is based on GLM, and is column major.\n *\n * @extends AttrValue\n */\nclass Mat4 extends AttrValue {\n  /**\n   * Initializes the Mat3 class with given data.\n   *\n   * @param {number | Float32Array | ArrayBuffer} m00 - Row 0, column 0.\n   * @param {number} m01 - Row 0, column 1.\n   * @param {number} m02 - Row 0, column 2.\n   * @param {number} m03 - Row 0, column 3.\n   * @param {number} m10 - Row 1, column 0.\n   * @param {number} m11 - Row 1, column 1.\n   * @param {number} m12 - Row 1, column 2.\n   * @param {number} m13 - Row 1, column 3.\n   * @param {number} m20 - Row 2, column 0.\n   * @param {number} m21 - Row 2, column 1.\n   * @param {number} m22 - Row 2, column 2.\n   * @param {number} m23 - Row 2, column 3.\n   * @param {number} m30 - Row 3, column 0.\n   * @param {number} m31 - Row 3, column 1.\n   * @param {number} m32 - Row 3, column 2.\n   * @param {number} m33 - Row 3, column 3.\n   */\n  constructor(\n    m00 = 1,\n    m01 = 0,\n    m02 = 0,\n    m03 = 0,\n    m10 = 0,\n    m11 = 1,\n    m12 = 0,\n    m13 = 0,\n    m20 = 0,\n    m21 = 0,\n    m22 = 1,\n    m23 = 0,\n    m30 = 0,\n    m31 = 0,\n    m32 = 0,\n    m33 = 1\n  ) {\n    super()\n\n    if (m00 instanceof Float32Array) {\n      this.__data = m00\n    } else if (m00 instanceof ArrayBuffer) {\n      const buffer = m00\n      const byteOffset = m01\n      this.__data = new Float32Array(buffer, byteOffset, 16)\n    } else {\n      this.__data = new Float32Array(16)\n      this.set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33)\n    }\n  }\n\n  // /////////////////////////////////////////\n  // properties\n\n  /**\n   * Getter for row 0, column 0.\n   *\n   * @return {number} - Returns the m00 value.\n   */\n  get m00() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for row 0, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m00(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for row 0, column 1.\n   *\n   * @return {number} - Returns the m01 value.\n   */\n  get m01() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for row 0, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m01(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for row 0, column 2.\n   *\n   * @return {number} - Returns the m02 value.\n   */\n  get m02() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for row 0, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m02(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for row 0, column 3.\n   *\n   * @return {number} - Returns the m03 value.\n   */\n  get m03() {\n    return this.__data[3]\n  }\n\n  /**\n   * Setter for row 0, column 3.\n   *\n   * @param {number} val - The val param.\n   */\n  set m03(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Getter for row 1, column 0.\n   *\n   * @return {number} - Returns the m10 value.\n   */\n  get m10() {\n    return this.__data[4]\n  }\n\n  /**\n   * Setter for row 1, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m10(val) {\n    this.__data[4] = val\n  }\n\n  /**\n   * Getter for row 1, column 1.\n   *\n   * @return {number} - Returns the m11 value.\n   */\n  get m11() {\n    return this.__data[5]\n  }\n\n  /**\n   * Setter for row 1, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m11(val) {\n    this.__data[5] = val\n  }\n\n  /**\n   * Getter for row 1, column 2.\n   *\n   * @return {number} - Returns the m12 value.\n   */\n  get m12() {\n    return this.__data[6]\n  }\n\n  /**\n   * Setter for row 1, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m12(val) {\n    this.__data[6] = val\n  }\n\n  /**\n   * Getter for row 1, column 3.\n   *\n   * @return {number} - Returns the m13 value.\n   */\n  get m13() {\n    return this.__data[7]\n  }\n\n  /**\n   * Setter for row 1, column 3.\n   *\n   * @param {number} val - The val param.\n   */\n  set m13(val) {\n    this.__data[7] = val\n  }\n\n  /**\n   * Getter for row 2, column 0.\n   *\n   * @return {number} - Returns the m20 value.\n   */\n  get m20() {\n    return this.__data[8]\n  }\n\n  /**\n   * Setter for row 2, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m20(val) {\n    this.__data[8] = val\n  }\n\n  /**\n   * Getter for row 2, column 1.\n   *\n   * @return {number} - Returns the m21 value.\n   */\n  get m21() {\n    return this.__data[9]\n  }\n\n  /**\n   * Setter for row 2, column 1\n   *\n   * @param {number} val - The val param.\n   */\n  set m21(val) {\n    this.__data[9] = val\n  }\n\n  /**\n   * Getter for row 2, column 2.\n   *\n   * @return {number} - Returns the m22 value.\n   */\n  get m22() {\n    return this.__data[10]\n  }\n\n  /**\n   * Setter for row 2, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m22(val) {\n    this.__data[10] = val\n  }\n\n  /**\n   * Getter for row 2, column 3.\n   *\n   * @return {number} - Returns the m23 value.\n   */\n  get m23() {\n    return this.__data[11]\n  }\n\n  /**\n   * Setter for row 2, column 3.\n   *\n   * @param {number} val - The val param.\n   */\n  set m23(val) {\n    this.__data[11] = val\n  }\n\n  /**\n   * Getter for row 3, column 0\n   *\n   * @return {number} - Returns the m30 value.\n   */\n  get m30() {\n    return this.__data[12]\n  }\n\n  /**\n   * Setter for row 3, column 0.\n   *\n   * @param {number} val - The val param.\n   */\n  set m30(val) {\n    this.__data[12] = val\n  }\n\n  /**\n   * Getter for row 3, column 1.\n   *\n   * @return {number} - Returns the m31 value.\n   */\n  get m31() {\n    return this.__data[13]\n  }\n\n  /**\n   * Setter for row 3, column 1.\n   *\n   * @param {number} val - The val param.\n   */\n  set m31(val) {\n    this.__data[13] = val\n  }\n\n  /**\n   * Getter for row 3, column 2.\n   *\n   * @return {number} - Returns the m32 value.\n   */\n  get m32() {\n    return this.__data[14]\n  }\n\n  /**\n   * Setter for row 3, column 2.\n   *\n   * @param {number} val - The val param.\n   */\n  set m32(val) {\n    this.__data[14] = val\n  }\n\n  /**\n   * Getter for row 3, column 3.\n   *\n   * @return {number} - Returns the m33 value.\n   */\n  get m33() {\n    return this.__data[15]\n  }\n\n  /**\n   * Setter for row 3, column 3.\n   *\n   * @param {number} val - The val param.\n   */\n  set m33(val) {\n    this.__data[15] = val\n  }\n\n  /**\n   * Getter for the `x` axis.\n   *\n   * @return {Vec3} - Returns the `x` axis as a Vec3.\n   */\n  get xAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 0)\n  }\n\n  /**\n   * Setter for the `x` axis.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set xAxis(vec3) {\n    this.xAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  /**\n   * Getter for the `y` axis.\n   *\n   * @return {Vec3} - Returns the `y` axis as a Vec3.\n   */\n  get yAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 4 * 4)\n  }\n\n  /**\n   * Setter for the `y` axis.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set yAxis(vec3) {\n    this.yAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  /**\n   * Getter for the `z` axis.\n   *\n   * @return {Vec3} - Returns the `z` axis as a Vec3.\n   */\n  get zAxis() {\n    return Vec3.createFromBuffer(this.__data.buffer, 8 * 4)\n  }\n\n  /**\n   * Setter for the `z` axis.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   */\n  set zAxis(vec3) {\n    this.zAxis.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  /**\n   * Getter for the translation of the matrix. Assumes the translation values are 12, 13, & 14.\n   *\n   * @return {Vec3} - Returns the translation.\n   */\n  get translation() {\n    return Vec3.createFromBuffer(this.__data.buffer, 12 * 4)\n  }\n\n  /**\n   * Setter for the translation of the matrix. Assumes the translation values are 12, 13, & 14.\n   *\n   * @param {Vec3} vec3 - The translation.\n   */\n  set translation(vec3) {\n    this.translation.set(vec3.x, vec3.y, vec3.z)\n  }\n\n  // /////////////////////////////////////////\n  // Setters\n\n  /**\n   * Sets the state of the Mat4 class\n   *\n   * @param {number} m00 - Row 0, column 0.\n   * @param {number} m01 - Row 0, column 1.\n   * @param {number} m02 - Row 0, column 2.\n   * @param {number} m03 - Row 0, column 3.\n   * @param {number} m10 - Row 1, column 0.\n   * @param {number} m11 - Row 1, column 1.\n   * @param {number} m12 - Row 1, column 2.\n   * @param {number} m13 - Row 1, column 3.\n   * @param {number} m20 - Row 2, column 0.\n   * @param {number} m21 - Row 2, column 1.\n   * @param {number} m22 - Row 2, column 2.\n   * @param {number} m23 - Row 2, column 3.\n   * @param {number} m30 - Row 3, column 0.\n   * @param {number} m31 - Row 3, column 1.\n   * @param {number} m32 - Row 3, column 2.\n   * @param {number} m33 - Row 3, column 3.\n   */\n  set(\n    m00 = 1,\n    m01 = 0,\n    m02 = 0,\n    m03 = 0,\n    m10 = 0,\n    m11 = 1,\n    m12 = 0,\n    m13 = 0,\n    m20 = 0,\n    m21 = 0,\n    m22 = 1,\n    m23 = 0,\n    m30 = 0,\n    m31 = 0,\n    m32 = 0,\n    m33 = 1\n  ) {\n    this.__data[0] = m00\n    this.__data[1] = m01\n    this.__data[2] = m02\n    this.__data[3] = m03\n    this.__data[4] = m10\n    this.__data[5] = m11\n    this.__data[6] = m12\n    this.__data[7] = m13\n    this.__data[8] = m20\n    this.__data[9] = m21\n    this.__data[10] = m22\n    this.__data[11] = m23\n    this.__data[12] = m30\n    this.__data[13] = m31\n    this.__data[14] = m32\n    this.__data[15] = m33\n  }\n\n  /**\n   * Sets state of the Mat4 with the identity  Matrix\n   */\n  setIdentity() {\n    this.set()\n  }\n\n  /**\n   * Sets the state of the Mat4 Object.\n   *\n   * @param {Float32Array} float32Array - The float32Array value.\n   */\n  setDataArray(float32Array) {\n    this.__data = float32Array\n  }\n\n  /**\n   * Sets state of the Mat4 from another Mat4\n   * <br>\n   * Note: works with either Mat3 or Mat4.\n   *\n   * @param {Mat4} mat4 - The mat4 value.\n   */\n  setFromMat4(mat4) {\n    this.__data[0] = mat4.m00\n    this.__data[1] = mat4.m01\n    this.__data[2] = mat4.m02\n    this.__data[3] = mat4.m03\n    this.__data[4] = mat4.m10\n    this.__data[5] = mat4.m11\n    this.__data[6] = mat4.m12\n    this.__data[7] = mat4.m13\n    this.__data[8] = mat4.m20\n    this.__data[9] = mat4.m21\n    this.__data[10] = mat4.m22\n    this.__data[11] = mat4.m23\n    this.__data[12] = mat4.m30\n    this.__data[13] = mat4.m31\n    this.__data[14] = mat4.m32\n    this.__data[15] = mat4.m33\n  }\n\n  /**\n   * Returns a Mat3 made up of the top left of the mat4 values.\n   *\n   * @return {Mat3} - Returns a new Mat3.\n   */\n  toMat3() {\n    return new Mat3(\n      this.__data[0],\n      this.__data[1],\n      this.__data[2],\n      this.__data[4],\n      this.__data[5],\n      this.__data[6],\n      this.__data[8],\n      this.__data[9],\n      this.__data[10]\n    )\n  }\n\n  /**\n   * Transposes (exchanges columns with rows) this matrix.\n   */\n  transposeInPlace() {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a03 = this.__data[3]\n    const a12 = this.__data[6]\n    const a13 = this.__data[7]\n    const a23 = this.__data[11]\n\n    this.__data[1] = this.__data[4]\n    this.__data[2] = this.__data[8]\n    this.__data[3] = this.__data[12]\n    this.__data[4] = a01\n    this.__data[6] = this.__data[9]\n    this.__data[7] = this.__data[13]\n    this.__data[8] = a02\n    this.__data[9] = a12\n    this.__data[11] = this.__data[14]\n    this.__data[12] = a03\n    this.__data[13] = a13\n    this.__data[14] = a23\n  }\n\n  /**\n   * Transposes (exchanges columns with rows) this matrix\n   * and returns the result as a new instance.\n   *\n   * @return {Mat4} - Return a new transposed Mat4.\n   */\n  transpose() {\n    return new Mat4(\n      this.__data[0],\n      this.__data[4],\n      this.__data[8],\n      this.__data[12],\n      this.__data[1],\n      this.__data[5],\n      this.__data[9],\n      this.__data[13],\n      this.__data[2],\n      this.__data[6],\n      this.__data[10],\n      this.__data[14],\n      this.__data[3],\n      this.__data[7],\n      this.__data[11],\n      this.__data[15]\n    )\n  }\n\n  /**\n   * Inverts a Mat4 and returns the result as a new instance.\n   *\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  inverse() {\n    const a00 = this.__data[0]\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a03 = this.__data[3]\n    const a10 = this.__data[4]\n    const a11 = this.__data[5]\n    const a12 = this.__data[6]\n    const a13 = this.__data[7]\n    const a20 = this.__data[8]\n    const a21 = this.__data[9]\n    const a22 = this.__data[10]\n    const a23 = this.__data[11]\n    const a30 = this.__data[12]\n    const a31 = this.__data[13]\n    const a32 = this.__data[14]\n    const a33 = this.__data[15]\n\n    const b00 = a00 * a11 - a01 * a10\n    const b01 = a00 * a12 - a02 * a10\n    const b02 = a00 * a13 - a03 * a10\n    const b03 = a01 * a12 - a02 * a11\n    const b04 = a01 * a13 - a03 * a11\n    const b05 = a02 * a13 - a03 * a12\n    const b06 = a20 * a31 - a21 * a30\n    const b07 = a20 * a32 - a22 * a30\n    const b08 = a20 * a33 - a23 * a30\n    const b09 = a21 * a32 - a22 * a31\n    const b10 = a21 * a33 - a23 * a31\n    const b11 = a22 * a33 - a23 * a32\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\n\n    if (!det) {\n      console.warn('Unable to invert Mat4')\n      return null\n    }\n    det = 1.0 / det\n\n    return new Mat4(\n      (a11 * b11 - a12 * b10 + a13 * b09) * det,\n      (a02 * b10 - a01 * b11 - a03 * b09) * det,\n      (a31 * b05 - a32 * b04 + a33 * b03) * det,\n      (a22 * b04 - a21 * b05 - a23 * b03) * det,\n      (a12 * b08 - a10 * b11 - a13 * b07) * det,\n      (a00 * b11 - a02 * b08 + a03 * b07) * det,\n      (a32 * b02 - a30 * b05 - a33 * b01) * det,\n      (a20 * b05 - a22 * b02 + a23 * b01) * det,\n      (a10 * b10 - a11 * b08 + a13 * b06) * det,\n      (a01 * b08 - a00 * b10 - a03 * b06) * det,\n      (a30 * b04 - a31 * b02 + a33 * b00) * det,\n      (a21 * b02 - a20 * b04 - a23 * b00) * det,\n      (a11 * b07 - a10 * b09 - a12 * b06) * det,\n      (a00 * b09 - a01 * b07 + a02 * b06) * det,\n      (a31 * b01 - a30 * b03 - a32 * b00) * det,\n      (a20 * b03 - a21 * b01 + a22 * b00) * det\n    )\n  }\n\n  /**\n   * Inverts a Mat4.\n   *\n   * @return {boolean} - The return value.\n   */\n  invertInPlace() {\n    const a00 = this.__data[0]\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a03 = this.__data[3]\n    const a10 = this.__data[4]\n    const a11 = this.__data[5]\n    const a12 = this.__data[6]\n    const a13 = this.__data[7]\n    const a20 = this.__data[8]\n    const a21 = this.__data[9]\n    const a22 = this.__data[10]\n    const a23 = this.__data[11]\n    const a30 = this.__data[12]\n    const a31 = this.__data[13]\n    const a32 = this.__data[14]\n    const a33 = this.__data[15]\n\n    const b00 = a00 * a11 - a01 * a10\n    const b01 = a00 * a12 - a02 * a10\n    const b02 = a00 * a13 - a03 * a10\n    const b03 = a01 * a12 - a02 * a11\n    const b04 = a01 * a13 - a03 * a11\n    const b05 = a02 * a13 - a03 * a12\n    const b06 = a20 * a31 - a21 * a30\n    const b07 = a20 * a32 - a22 * a30\n    const b08 = a20 * a33 - a23 * a30\n    const b09 = a21 * a32 - a22 * a31\n    const b10 = a21 * a33 - a23 * a31\n    const b11 = a22 * a33 - a23 * a32\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\n\n    if (!det) {\n      console.warn('Unable to invert Mat4')\n      return false\n    }\n    det = 1.0 / det\n\n    this.set(\n      (a11 * b11 - a12 * b10 + a13 * b09) * det,\n      (a02 * b10 - a01 * b11 - a03 * b09) * det,\n      (a31 * b05 - a32 * b04 + a33 * b03) * det,\n      (a22 * b04 - a21 * b05 - a23 * b03) * det,\n      (a12 * b08 - a10 * b11 - a13 * b07) * det,\n      (a00 * b11 - a02 * b08 + a03 * b07) * det,\n      (a32 * b02 - a30 * b05 - a33 * b01) * det,\n      (a20 * b05 - a22 * b02 + a23 * b01) * det,\n      (a10 * b10 - a11 * b08 + a13 * b06) * det,\n      (a01 * b08 - a00 * b10 - a03 * b06) * det,\n      (a30 * b04 - a31 * b02 + a33 * b00) * det,\n      (a21 * b02 - a20 * b04 - a23 * b00) * det,\n      (a11 * b07 - a10 * b09 - a12 * b06) * det,\n      (a00 * b09 - a01 * b07 + a02 * b06) * det,\n      (a31 * b01 - a30 * b03 - a32 * b00) * det,\n      (a20 * b03 - a21 * b01 + a22 * b00) * det\n    )\n    return true\n  }\n\n  /**\n   * Multiplies two Mat4s and returns the result as a new instance.\n   *\n   * @param {Mat4} other - The other Mat4 to multiply with.\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  multiply(other) {\n    const a00 = this.__data[0]\n    const a01 = this.__data[1]\n    const a02 = this.__data[2]\n    const a03 = this.__data[3]\n    const a10 = this.__data[4]\n    const a11 = this.__data[5]\n    const a12 = this.__data[6]\n    const a13 = this.__data[7]\n    const a20 = this.__data[8]\n    const a21 = this.__data[9]\n    const a22 = this.__data[10]\n    const a23 = this.__data[11]\n    const a30 = this.__data[12]\n    const a31 = this.__data[13]\n    const a32 = this.__data[14]\n    const a33 = this.__data[15]\n\n    // Cache only the current line of the second matrix\n    const b = other.asArray()\n    let b0 = b[0]\n    let b1 = b[1]\n    let b2 = b[2]\n    let b3 = b[3]\n    const result = new Mat4()\n    result.m00 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    result.m01 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    result.m02 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    result.m03 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[4]\n    b1 = b[5]\n    b2 = b[6]\n    b3 = b[7]\n    result.m10 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    result.m11 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    result.m12 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    result.m13 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[8]\n    b1 = b[9]\n    b2 = b[10]\n    b3 = b[11]\n    result.m20 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    result.m21 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    result.m22 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    result.m23 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[12]\n    b1 = b[13]\n    b2 = b[14]\n    b3 = b[15]\n    result.m30 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    result.m31 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    result.m32 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    result.m33 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n    return result\n  }\n\n  /**\n   * Multiplies two Mat4s in place explicitly.\n   *\n   * @param {Mat4} other - The other Mat4 to multiply with.\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  multiplyInPlace(other) {\n    const a = this.asArray()\n    const a00 = a[0]\n    const a01 = a[1]\n    const a02 = a[2]\n    const a03 = a[3]\n    const a10 = a[4]\n    const a11 = a[5]\n    const a12 = a[6]\n    const a13 = a[7]\n    const a20 = a[8]\n    const a21 = a[9]\n    const a22 = a[10]\n    const a23 = a[11]\n    const a30 = a[12]\n    const a31 = a[13]\n    const a32 = a[14]\n    const a33 = a[15]\n\n    // Cache only the current line of the second matrix\n    const b = other.asArray()\n    let b0 = b[0]\n    let b1 = b[1]\n    let b2 = b[2]\n    let b3 = b[3]\n    this.m00 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m01 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m02 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m03 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[4]\n    b1 = b[5]\n    b2 = b[6]\n    b3 = b[7]\n    this.m10 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m11 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m12 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m13 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[8]\n    b1 = b[9]\n    b2 = b[10]\n    b3 = b[11]\n    this.m20 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m21 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m22 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m23 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[12]\n    b1 = b[13]\n    b2 = b[14]\n    b3 = b[15]\n    this.m30 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m31 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m32 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m33 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n    return this\n  }\n\n  /**\n   * Post multiplies two Mat4s in place explicitly.\n   *\n   * @param {Mat4} other - The other Mat4 to multiply with.\n   * @return {Mat3} - Returns the result as a new Mat4.\n   */\n  postMultiplyInPlace(other) {\n    const a = other.asArray()\n    const a00 = a[0]\n    const a01 = a[1]\n    const a02 = a[2]\n    const a03 = a[3]\n    const a10 = a[4]\n    const a11 = a[5]\n    const a12 = a[6]\n    const a13 = a[7]\n    const a20 = a[8]\n    const a21 = a[9]\n    const a22 = a[10]\n    const a23 = a[11]\n    const a30 = a[12]\n    const a31 = a[13]\n    const a32 = a[14]\n    const a33 = a[15]\n\n    // Cache only the current line of the second matrix\n    const b = this.asArray()\n    let b0 = b[0]\n    let b1 = b[1]\n    let b2 = b[2]\n    let b3 = b[3]\n    this.m00 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m01 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m02 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m03 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[4]\n    b1 = b[5]\n    b2 = b[6]\n    b3 = b[7]\n    this.m10 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m11 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m12 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m13 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[8]\n    b1 = b[9]\n    b2 = b[10]\n    b3 = b[11]\n    this.m20 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m21 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m22 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m23 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n\n    b0 = b[12]\n    b1 = b[13]\n    b2 = b[14]\n    b3 = b[15]\n    this.m30 = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30\n    this.m31 = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31\n    this.m32 = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32\n    this.m33 = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33\n    return this\n  }\n\n  /**\n   * Translate a Mat4 by the given vector.\n   *\n   * @param {Vec3} v3 - The given vector to translate along.\n   * @return {Mat4} - The return value.\n   */\n  translateInPlace(v3) {\n    const a = this.__data\n    const x = v3.x\n    const y = v3.y\n    const z = v3.z\n    a[12] = a[0] * x + a[4] * y + a[8] * z + a[12]\n    a[13] = a[1] * x + a[5] * y + a[9] * z + a[13]\n    a[14] = a[2] * x + a[6] * y + a[10] * z + a[14]\n    a[15] = a[3] * x + a[7] * y + a[11] * z + a[15]\n    return this\n  }\n\n  /**\n   * Generates a look-at matrix with the given position, focal point, and up axis.\n   *\n   * @param {Vec3} pos - Position of the viewer.\n   * @param {Vec3} target - Point the viewer is looking at.\n   * @param {Vec3} up - Vec3 pointing up.\n   */\n  setLookAt(pos, target, up) {\n    const zAxis = pos.subtract(target)\n    const zLen = zAxis.length()\n    if (zLen < Number.EPSILON) {\n      this.setIdentity()\n      return\n    }\n    zAxis.scaleInPlace(1.0 / zLen)\n\n    const xAxis = up.cross(zAxis)\n    const xLen = xAxis.length()\n    if (xLen > Number.EPSILON) xAxis.scaleInPlace(1.0 / xLen)\n\n    const yAxis = zAxis.cross(xAxis)\n    const yLen = yAxis.length()\n    if (yLen > Number.EPSILON) yAxis.scaleInPlace(1.0 / yLen)\n\n    /* eslint-disable prettier/prettier*/\n    this.set(\n      xAxis.x,\n      xAxis.y,\n      xAxis.z,\n      0,\n      yAxis.x,\n      yAxis.y,\n      yAxis.z,\n      0,\n      zAxis.x,\n      zAxis.y,\n      zAxis.z,\n      0,\n      pos.x,\n      pos.y,\n      pos.z,\n      1\n    )\n    /* eslint-enable prettier/prettier*/\n  }\n\n  /**\n   * Creates a matrix from a given angle around a given axis.\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotate(dest, dest, rad, axis);\n   *\n   * @param {Vec3} axis - The axis to rotate around.\n   * @param {number} rad - The angle to rotate the matrix by.\n   * @return {Mat4} - The return value.\n   */\n  setRotation(axis, rad) {\n    const len = axis.length()\n\n    if (Math.abs(len) < Number.EPSILON) {\n      return null\n    }\n\n    const x = axis.x / len\n    const y = axis.y / len\n    const z = axis.z / len\n\n    const s = Math.sin(rad)\n    const c = Math.cos(rad)\n    const t = 1 - c\n\n    // Perform rotation-specific matrix multiplication\n    const a = this.__data\n    a[0] = x * x * t + c\n    a[1] = y * x * t + z * s\n    a[2] = z * x * t - y * s\n    a[3] = 0\n    a[4] = x * y * t - z * s\n    a[5] = y * y * t + c\n    a[6] = z * y * t + x * s\n    a[7] = 0\n    a[8] = x * z * t + y * s\n    a[9] = y * z * t - x * s\n    a[10] = z * z * t + c\n    a[11] = 0\n    a[12] = 0\n    a[13] = 0\n    a[14] = 0\n    a[15] = 1\n    return this\n  }\n\n  /**\n   * Creates a matrix from the given angle around the X axis.\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateX(dest, dest, rad);\n   *\n   * @param {number} rad - The angle to rotate the matrix by.\n   * @return {Mat4} - The return value.\n   */\n  setXRotation(rad) {\n    const s = Math.sin(rad)\n    const c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    const a = this.__data\n    /* eslint-disable prettier/prettier*/\n    a[0] = 1\n    a[1] = 0\n    a[2] = 0\n    a[3] = 0\n    a[4] = 0\n    a[5] = c\n    a[6] = s\n    a[7] = 0\n    a[8] = 0\n    a[9] = -s\n    a[10] = c\n    a[11] = 0\n    a[12] = 0\n    a[13] = 0\n    a[14] = 0\n    a[15] = 1\n    /* eslint-enable prettier/prettier*/\n    return this\n  }\n\n  /**\n   * Creates a matrix from the given angle around the Y axis.\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateY(dest, dest, rad);\n   *\n   * @param {number} rad - The angle to rotate the matrix by.\n   * @return {Mat4} - The return value.\n   */\n  setYRotation(rad) {\n    const s = Math.sin(rad)\n    const c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    const a = this.__data\n    /* eslint-disable prettier/prettier*/\n    a[0] = c\n    a[1] = 0\n    a[2] = -s\n    a[3] = 0\n    a[4] = 0\n    a[5] = 1\n    a[6] = 0\n    a[7] = 0\n    a[8] = s\n    a[9] = 0\n    a[10] = c\n    a[11] = 0\n    a[12] = 0\n    a[13] = 0\n    a[14] = 0\n    a[15] = 1\n    /* eslint-enable prettier/prettier*/\n    return this\n  }\n\n  /**\n   * Creates a matrix from the given angle around the Z axis.\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.rotateZ(dest, dest, rad);\n   *\n   * @param {number} rad - The angle to rotate the matrix by.\n   * @return {Mat4} - The return value.\n   */\n  setZRotation(rad) {\n    const s = Math.sin(rad)\n    const c = Math.cos(rad)\n\n    // Perform axis-specific matrix multiplication\n    const a = this.__data\n    /* eslint-disable prettier/prettier*/\n    a[0] = c\n    a[1] = s\n    a[2] = 0\n    a[3] = 0\n    a[4] = -s\n    a[5] = c\n    a[6] = 0\n    a[7] = 0\n    a[8] = 0\n    a[9] = 0\n    a[10] = 1\n    a[11] = 0\n    a[12] = 0\n    a[13] = 0\n    a[14] = 0\n    a[15] = 1\n    /* eslint-enable prettier/prettier*/\n    return this\n  }\n\n  /**\n   * Transforms the Vec4 with a Mat4.\n   *\n   * @param {Vec4} vec - The vec value.\n   * @return {Vec4} - Return the result as a new Vec4.\n   */\n  transformVec4(vec) {\n    const a = this.__data\n    const x = vec.x\n    const y = vec.y\n    const z = vec.z\n    const w = vec.t\n    return new Vec4(\n      a[0] * x + a[4] * y + a[8] * z + a[12] * w,\n      a[1] * x + a[5] * y + a[9] * z + a[13] * w,\n      a[2] * x + a[6] * y + a[10] * z + a[14] * w,\n      a[3] * x + a[7] * y + a[11] * z + a[15] * w\n    )\n  }\n\n  /**\n   * Transforms the Vec3 with a Mat4.\n   *\n   * @param {Vec3} vec - The vec value.\n   * @return {Vec3} - Return the result as a new Vec3.\n   */\n  transformVec3(vec) {\n    const a = this.__data\n    const x = vec.x\n    const y = vec.y\n    const z = vec.z\n    return new Vec3(\n      a[0] * x + a[4] * y + a[8] * z + a[12],\n      a[1] * x + a[5] * y + a[9] * z + a[13],\n      a[2] * x + a[6] * y + a[10] * z + a[14]\n    )\n  }\n\n  /**\n   * Rotates a given `Vec3` and the result is returned as a new `Vec3`, applying only the top left components of the matrix, so not applying any translation.\n   * @param {Vec3} vec - The vec value.\n   * @return {Vec3} - Return the result as a new Vec3.\n   */\n  rotateVec3(vec) {\n    const a = this.__data\n    const x = vec.x\n    const y = vec.y\n    const z = vec.z\n    return new Vec3(a[0] * x + a[4] * y + a[8] * z, a[1] * x + a[5] * y + a[9] * z, a[2] * x + a[6] * y + a[10] * z)\n  }\n\n  /**\n   * Set the perspective from a Mat4.\n   *\n   * @param {number} fovY - The fovY value.\n   * @param {number} aspect - The aspect value.\n   * @param {number} near - The near value.\n   * @param {number} far - The far value.\n   */\n  setPerspectiveMatrix(fovY, aspect, near, far) {\n    const f = Math.tan(Math.PI * 0.5 - 0.5 * fovY)\n    const rangeInv = 1.0 / (near - far)\n    /* eslint-disable prettier/prettier*/\n    this.set(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, (near + far) * rangeInv, -1, 0, 0, near * far * rangeInv * 2, 0)\n    /* eslint-enable prettier/prettier*/\n  }\n\n  /**\n   * Calculates the orthographic matrix and sets the state of the Mat4 class\n   *\n   * @param {number} left - The left value.\n   * @param {number} right - The right value.\n   * @param {number} bottom - The bottom value.\n   * @param {number} top - The top value.\n   * @param {number} near - The near value.\n   * @param {number} far - The far value.\n   */\n  setOrthographicMatrix(left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right)\n    const bt = 1 / (bottom - top)\n    const nf = 1 / (near - far)\n    /* eslint-disable prettier/prettier*/\n    this.set(\n      -2 * lr,\n      0,\n      0,\n      0,\n      0,\n      -2 * bt,\n      0,\n      0,\n      0,\n      0,\n      2 * nf,\n      0,\n      (left + right) * lr,\n      (top + bottom) * bt,\n      (far + near) * nf,\n      1\n    )\n    /* eslint-enable prettier/prettier*/\n  }\n\n  /**\n   * Set the Matrix to be a scale matrix.\n   *\n   * @param {number} x - The x value.\n   * @param {number} y - The y value.\n   * @param {number} z - The z value.\n   */\n  setScale(x, y, z) {\n    /* eslint-disable prettier/prettier*/\n    if (x instanceof Vec3) {\n      this.set(x.x, 0, 0, 0, 0, x.y, 0, 0, 0, 0, x.z, 0, 0, 0, 0, 1)\n    } else {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1)\n    }\n    /* eslint-enable prettier/prettier*/\n  }\n\n  /**\n   * Loads a 3x4 matrix data into a the Mat4.\n   *\n   * @param {array} m3x4 - The m3x4 value.\n   */\n  setFromMat3x4Array(m3x4) {\n    /* eslint-disable prettier/prettier*/\n    this.set(\n      m3x4[0],\n      m3x4[1],\n      m3x4[2],\n      0,\n      m3x4[3],\n      m3x4[4],\n      m3x4[5],\n      0,\n      m3x4[6],\n      m3x4[7],\n      m3x4[8],\n      0,\n      m3x4[9],\n      m3x4[10],\n      m3x4[11],\n      1\n    )\n    /* eslint-enable prettier/prettier*/\n  }\n\n  /**\n   * Creates a new Mat4 to wrap existing memory in a buffer.\n   *\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Mat4} - Returns a new Mat4.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Mat4` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Mat4(new Float32Array(buffer, byteOffset, 16)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Clones this Mat4 returning a new instance.\n   *\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  clone() {\n    return new Mat4(\n      this.__data[0],\n      this.__data[1],\n      this.__data[2],\n      this.__data[3],\n      this.__data[4],\n      this.__data[5],\n      this.__data[6],\n      this.__data[7],\n      this.__data[8],\n      this.__data[9],\n      this.__data[10],\n      this.__data[11],\n      this.__data[12],\n      this.__data[13],\n      this.__data[14],\n      this.__data[15]\n    )\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Mat4.\n   * @param {...object} ...args - The ...args param.\n   * @return {Mat4} - Returns a new Mat4.\n   * @private\n   */\n  static create(...args) {\n    return new Mat4(...args)\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return this.__data\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json param.\n   */\n  fromJSON(json) {\n    if (json instanceof Array) this.__data = new Float32Array(json)\n    else if (json instanceof Object) this.__data = new Float32Array(Object.values(json))\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.__data = reader.loadFloat32Array(16)\n  }\n}\n\nRegistry.register('Mat4', Mat4)\n\nexport { Mat4 }\n","/* eslint-disable no-unused-vars */\nimport { AttrValue } from './AttrValue.js'\nimport { Vec3 } from './Vec3.js'\nimport { Mat3 } from './Mat3.js'\nimport { Mat4 } from './Mat4.js'\nimport { EulerAngles } from './EulerAngles.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing a quaternion. Quaternions are used to represent 3 dimensional rotations.\n *\n * While Quaternions are difficult to understand they have important mathematical properties that make them very useful in 3d engines.\n * They can be directly multiplied together in the same was as matrices.\n * They can be interpolated from one value to another while maintaining constant angular velocity.\n * They can be converted to other more easily understood representations such as EulerAngles or Matrices.\n *\n * @extends AttrValue\n */\nclass Quat extends AttrValue {\n  /**\n   * Creates a quaternion.\n   *\n   * @param {number | ArrayBuffer | object} x - The angle of the x axis. Default is 0. Or a Float32Array containing 4 values.\n   * @param {number} y - The angle of the y axis. Default is 0.\n   * @param {number} z - The angle of the z axis. Default is 0.\n   * @param {number} w - The w value. Default is 1.\n   */\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super()\n\n    if (x instanceof Float32Array) {\n      this.__data = x\n    } else if (x instanceof ArrayBuffer) {\n      console.warn(`deprecated, please use new Vec4(new Float32Array(buffer, byteOffset, 4))`)\n      const buffer = x\n      const byteOffset = y\n      this.__data = new Float32Array(buffer, byteOffset, 4)\n    } else {\n      this.__data = new Float32Array(4)\n      if (typeof x === 'object') {\n        this.__data[0] = 0\n        this.__data[1] = 0\n        this.__data[2] = 0\n        this.__data[3] = 1\n        for (const key in x) {\n          if (Array.isArray(x[key])) this[key].call(this, ...x[key])\n          else this[key].call(this, x[key])\n        }\n      } else {\n        this.__data[0] = x\n        this.__data[1] = y\n        this.__data[2] = z\n        this.__data[3] = w\n      }\n    }\n  }\n\n  /**\n   * Getter for `x` axis rotation.\n   *\n   * @return {number} - Returns the x axis rotation.\n   */\n  get x() {\n    return this.__data[0]\n  }\n\n  /**\n   * Setter for `x` axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set x(val) {\n    this.__data[0] = val\n  }\n\n  /**\n   * Getter for `y` axis rotation.\n   *\n   * @return {number} - Returns the y axis rotation.\n   */\n  get y() {\n    return this.__data[1]\n  }\n\n  /**\n   * Setter for `y` axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set y(val) {\n    this.__data[1] = val\n  }\n\n  /**\n   * Getter for `z` axis rotation.\n   *\n   * @return {number} - Returns the z axis rotation.\n   */\n  get z() {\n    return this.__data[2]\n  }\n\n  /**\n   * Setter for `z` axis rotation.\n   *\n   * @param {number} val - The val param.\n   */\n  set z(val) {\n    this.__data[2] = val\n  }\n\n  /**\n   * Getter for `w` value.\n   *\n   * @return {number} - Returns the w value.\n   */\n  get w() {\n    return this.__data[3]\n  }\n\n  /**\n   * Setter for `w`.\n   * @param {number} val - The val param.\n   */\n  set w(val) {\n    this.__data[3] = val\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} x - The x axis rotation.\n   * @param {number} y  - The y axis rotation.\n   * @param {number} z  - The z axis rotation.\n   * @param {number} w  - The w value.\n   */\n  set(x, y, z, w) {\n    this.__data[0] = x\n    this.__data[1] = y\n    this.__data[2] = z\n    this.__data[3] = w\n  }\n\n  /**\n   * Sets the state of the Quat class using a Float32Array.\n   *\n   * @param {Float32Array} float32Array - The float32Array value.\n   */\n  setDataArray(float32Array) {\n    this.__data = float32Array\n  }\n\n  /**\n   * Setter from another vector.\n   *\n   * @param {Quat} other - The other vector to set from.\n   */\n  setFromOther(other) {\n    this.__data[0] = other.x\n    this.__data[1] = other.y\n    this.__data[2] = other.z\n    this.__data[3] = other.w\n  }\n\n  /**\n   * Set this Quat from a euler rotation.\n   *\n   * @param {EulerAngles} eulerAngles - The euler angles rotation.\n   */\n  setFromEulerAngles(eulerAngles) {\n    const ordered = new Vec3()\n\n    switch (eulerAngles.order) {\n      case 0:\n        // 'XYZ'\n        ordered.set(eulerAngles.x, -eulerAngles.y, eulerAngles.z)\n        break\n      case 1:\n        // 'YZX'\n        ordered.set(eulerAngles.y, -eulerAngles.z, eulerAngles.x)\n        break\n      case 2:\n        // 'ZXY'\n        ordered.set(eulerAngles.z, -eulerAngles.x, eulerAngles.y)\n        break\n      case 3:\n        // 'XZY'\n        ordered.set(eulerAngles.x, eulerAngles.z, eulerAngles.y)\n        break\n      case 4:\n        // 'ZYX'\n        ordered.set(eulerAngles.z, eulerAngles.y, eulerAngles.x)\n        break\n      case 5:\n        // 'YXZ'\n        ordered.set(eulerAngles.y, eulerAngles.x, eulerAngles.z)\n        break\n      default:\n        throw new Error('Invalid EulerAngles order:', eulerAngles.order)\n    }\n\n    const ti = ordered.x * 0.5\n    const tj = ordered.y * 0.5\n    const tk = ordered.z * 0.5\n    const ci = Math.cos(ti)\n    const cj = Math.cos(tj)\n    const ck = Math.cos(tk)\n    const si = Math.sin(ti)\n    const sj = Math.sin(tj)\n    const sk = Math.sin(tk)\n    const cc = ci * ck\n    const cs = ci * sk\n    const sc = si * ck\n    const ss = si * sk\n    const ai = cj * sc - sj * cs\n    const aj = cj * ss + sj * cc\n    const ak = cj * cs - sj * sc\n\n    this.w = cj * cc + sj * ss\n\n    switch (eulerAngles.order) {\n      case 0:\n        // ' XYZ'\n        this.x = ai\n        this.y = -aj\n        this.z = ak\n        break\n      case 1:\n        // 'YZX'\n        this.x = ak\n        this.y = ai\n        this.z = -aj\n        break\n      case 2:\n        // 'ZXY'\n        this.x = -aj\n        this.y = ak\n        this.z = ai\n        break\n      case 3:\n        // 'XZY'\n        this.x = ai\n        this.y = ak\n        this.z = aj\n        break\n      case 4:\n        // 'ZYX'\n        this.x = ak\n        this.y = aj\n        this.z = ai\n        break\n      case 5:\n        // 'YXZ'\n        this.x = aj\n        this.y = ai\n        this.z = ak\n        break\n      default:\n        throw new Error('Invalid EulerAngles order:', eulerAngles.order)\n    }\n  }\n\n  /**\n   * Converts Quat to an EulerAngles\n   *\n   * @param {number | string} rotationOrder - The order in which the rotations are applied.\n   * @return {EulerAngles} - The return value.\n   */\n  toEulerAngles(rotationOrder) {\n    const ordered = new Vec3()\n    switch (rotationOrder) {\n      case 0:\n        /* ' XYZ' */\n        ordered.set(this.z, this.x, this.y)\n        break\n      case 1:\n        /* 'YZX' */\n        ordered.set(this.x, this.y, this.z)\n        break\n      case 2:\n        /* 'ZXY' */\n        ordered.set(this.y, this.z, this.x)\n        break\n      case 3:\n        /* 'XZY' */\n        ordered.set(this.y, -this.x, this.z)\n        break\n      case 4:\n        /* 'ZYX' */\n        ordered.set(this.x, -this.z, this.y)\n        break\n      case 5:\n        /* 'YXZ' */\n        ordered.set(this.z, -this.y, this.x)\n        break\n      default:\n        throw new Error('Invalid rotation order:' + rotationOrder)\n    }\n\n    const euler = new Vec3()\n    const test = ordered.x * ordered.y + ordered.z * this.w\n    if (test > 0.49999) {\n      // singularity at north pole\n      euler.y = 2.0 * Math.atan2(ordered.x, this.w)\n      euler.z = Math.PI * 0.5\n      euler.x = 0.0\n    } else if (test < -0.49999) {\n      // singularity at south pole\n      euler.y = -2.0 * Math.atan2(ordered.x, this.w)\n      euler.z = Math.PI * -0.5\n      euler.x = 0.0\n    } else {\n      const sqx = ordered.x * ordered.x\n      const sqy = ordered.y * ordered.y\n      const sqz = ordered.z * ordered.z\n      euler.y = Math.atan2(2.0 * ordered.y * this.w - 2.0 * ordered.x * ordered.z, 1.0 - 2.0 * sqy - 2.0 * sqz)\n      euler.z = Math.asin(2.0 * test)\n      euler.x = Math.atan2(2.0 * ordered.x * this.w - 2.0 * ordered.y * ordered.z, 1.0 - 2.0 * sqx - 2.0 * sqz)\n    }\n\n    switch (rotationOrder) {\n      case 0:\n        /* ' XYZ' */\n        return new EulerAngles(euler.y, euler.z, euler.x, rotationOrder)\n      case 1:\n        /* 'YZX' */\n        return new EulerAngles(euler.x, euler.y, euler.z, rotationOrder)\n      case 2:\n        /* 'ZXY' */\n        return new EulerAngles(euler.z, euler.x, euler.y, rotationOrder)\n      case 3:\n        /* 'XZY' */\n        return new EulerAngles(-euler.y, euler.x, euler.z, rotationOrder)\n      case 4:\n        /* 'ZYX' */\n        return new EulerAngles(euler.x, euler.z, -euler.y, rotationOrder)\n      case 5:\n        /* 'YXZ' */\n        return new EulerAngles(euler.z, -euler.y, euler.x, rotationOrder)\n    }\n  }\n\n  /**\n   * Set this Quat to a rotation defined by an axis and an angle (in radians).\n   *\n   * @param {Vec3} axis - The axis around which to rotate.\n   * @param {number} angle - The angle to rotate\n   */\n  setFromAxisAndAngle(axis, angle) {\n    const halfAngle = angle / 2.0\n    const vec = axis.normalize().scale(Math.sin(halfAngle))\n    this.set(vec.x, vec.y, vec.z, Math.cos(halfAngle))\n  }\n\n  /**\n   * Sets the state of the Quat to look in a particular direction along the z axis.\n   * > The camera looks down the negative z axis, so to set a rotation value\n   * > for the camera, remember to negate the direction vector.\n   *\n   * @param {Vec3} dir - The direction value.\n   * @param {Vec3} up - The up vector.\n   */\n  setFromDirectionAndUpvector(dir, up) {\n    const mat3 = new Mat3()\n    mat3.setFromDirectionAndUpvector(dir, up)\n    this.setFromMat3(mat3)\n  }\n\n  /**\n   * Sets the state of the `Quat` from two `Vec3`. The quaternion would then represent the rotation from v0 to v1 in 3d space.\n   *\n   * @param {Vec3} v0 - The v0 unit vector.\n   * @param {Vec3} v1 - The v1 unit vector.\n   */\n  setFrom2Vectors(v0, v1) {\n    const c = v0.cross(v1)\n    const d = v0.dot(v1)\n    const s = Math.sqrt((1 + d) * 2)\n    // this.set( s/2, c.x / s, c.y / s, c.z / s );\n    this.set(c.x / s, c.y / s, c.z / s, s / 2)\n    this.normalizeInPlace()\n  }\n\n  /**\n   * Set the Quat from a Mat3.\n   *\n   * @param {Mat3} mat3 - The mat3 value.\n   */\n  setFromMat3(mat3) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    const fTrace = mat3.__data[0] + mat3.__data[4] + mat3.__data[8]\n    let fRoot\n\n    if (fTrace > 0.0) {\n      // |w| > 1/2, may as well choose w > 1/2\n      fRoot = Math.sqrt(fTrace + 1) // 2w\n      this.__data[3] = 0.5 * fRoot\n      fRoot = 0.5 / fRoot // 1/(4w)\n      this.__data[0] = (mat3.__data[5] - mat3.__data[7]) * fRoot\n      this.__data[1] = (mat3.__data[6] - mat3.__data[2]) * fRoot\n      this.__data[2] = (mat3.__data[1] - mat3.__data[3]) * fRoot\n    } else {\n      // |w| <= 1/2\n      let i = 0\n      if (mat3.__data[4] > mat3.__data[0]) i = 1\n      if (mat3.__data[8] > mat3.__data[i * 3 + i]) i = 2\n      const j = (i + 1) % 3\n      const k = (i + 2) % 3\n\n      fRoot = Math.sqrt(mat3.__data[i * 3 + i] - mat3.__data[j * 3 + j] - mat3.__data[k * 3 + k] + 1.0)\n      this.__data[i] = 0.5 * fRoot\n      fRoot = 0.5 / fRoot\n      this.__data[3] = (mat3.__data[j * 3 + k] - mat3.__data[k * 3 + j]) * fRoot\n      this.__data[j] = (mat3.__data[j * 3 + i] + mat3.__data[i * 3 + j]) * fRoot\n      this.__data[k] = (mat3.__data[k * 3 + i] + mat3.__data[i * 3 + k]) * fRoot\n    }\n    this.normalizeInPlace()\n  }\n\n  /**\n   * Set the Quat from a Mat4.\n   *\n   * @param {Mat4} mat4 - The mat4 value.\n   */\n  setFromMat4(mat4) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    const fTrace = mat4.__data[0] + mat4.__data[5] + mat4.__data[10]\n    let fRoot\n\n    if (fTrace > 0.0) {\n      // |w| > 1/2, may as well choose w > 1/2\n      fRoot = Math.sqrt(fTrace + 1) // 2w\n      this.__data[3] = 0.5 * fRoot\n      fRoot = 0.5 / fRoot // 1/(4w)\n      this.__data[0] = (mat4.__data[6] - mat4.__data[9]) * fRoot\n      this.__data[1] = (mat4.__data[8] - mat4.__data[2]) * fRoot\n      this.__data[2] = (mat4.__data[1] - mat4.__data[4]) * fRoot\n    } else {\n      // |w| <= 1/2\n      let i = 0\n      if (mat4.__data[5] > mat4.__data[0]) i = 1\n      if (mat4.__data[10] > mat4.__data[i * 4 + i]) i = 2\n      const j = (i + 1) % 3\n      const k = (i + 2) % 3\n\n      fRoot = Math.sqrt(mat4.__data[i * 4 + i] - mat4.__data[j * 4 + j] - mat4.__data[k * 4 + k] + 1.0)\n      this.__data[i] = 0.5 * fRoot\n      fRoot = 0.5 / fRoot\n      this.__data[3] = (mat4.__data[j * 4 + k] - mat4.__data[k * 4 + j]) * fRoot\n      this.__data[j] = (mat4.__data[j * 4 + i] + mat4.__data[i * 4 + j]) * fRoot\n      this.__data[k] = (mat4.__data[k * 4 + i] + mat4.__data[i * 4 + k]) * fRoot\n    }\n    this.normalizeInPlace()\n  }\n\n  /**\n   * Checks if the angle of the Quat is less that ` Number.EPSILON`\n   *\n   * @return {boolean} - Returns true or false.\n   */\n  isIdentity() {\n    return this.getAngle() < Number.EPSILON\n  }\n\n  /**\n   * Return the angle of the Quat.\n   *\n   * @return {number} - The return value.\n   */\n  getAngle() {\n    return Math.acos(this.w) * 2.0\n  }\n\n  /**\n   * @deprecated\n   * Returns true if this Quat contains the same values as the other.\n   * Deprecated. Use #isEqual instead.\n   *\n   * @param {Quat} other - The other Quat to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  equal(other) {\n    console.warn('Deprecated. Use #isEqual instead.')\n    return this.isEqual(other)\n  }\n\n  /**\n   * Checks if this Quat contains the same values as the other Quat.\n   *\n   * @param {Quat} other - The other Quat to compare with.\n   * @return {boolean} - Returns `true` if are the same Vector, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.x == other.x && this.y == other.y && this.z == other.z && this.w == other.w\n  }\n\n  /**\n   * Returns true if this Quat is NOT exactly the same other.\n   *\n   * @param {Quat} other - The other Quat to compare with.\n   * @return {boolean} - Returns true or false.\n   */\n  notEquals(other) {\n    return this.x != other.x && this.y != other.y && this.z != other.z && this.w != other.w\n  }\n\n  /**\n   * Returns true if this Quat is approximately the same as other\n   *\n   * @param {Quat} other - The other Quat to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      Math.abs(this.x - other.x) < precision &&\n      Math.abs(this.y - other.y) < precision &&\n      Math.abs(this.z - other.z) < precision &&\n      Math.abs(this.w - other.w) < precision\n    )\n  }\n\n  /**\n   * Adds other to this Quat and return the result as a new Quat.\n   *\n   * @param {Quat} other - The other Quat to add.\n   * @return {Quat} - Returns a new Quat.\n   */\n  add(other) {\n    return new Quat(this.x + other.x, this.y + other.y, this.z + other.z, this.w + other.w)\n  }\n\n  /**\n   * Adds other to this Quat.\n   *\n   * @param {Quat} other - The other Quat to add.\n   */\n  addInPlace(other) {\n    this.x += other.x\n    this.y += other.y\n    this.z += other.z\n    this.w += other.w\n  }\n\n  /**\n   * Subtracts other from this Quat and returns the result as a new Quat.\n   *\n   * @param {Quat} other - The other Quat to subtract.\n   * @return {Quat} - Returns a new Quat.\n   */\n  subtract(other) {\n    return new Quat(this.x - other.x, this.y - other.y, this.z - other.z, this.w - other.w)\n  }\n\n  /**\n   * Scales this Quat by scalar and returns the result as a new Quat.\n   *\n   * @param {number} scalar - The scalar value.\n   * @return {Quat} - Returns a new Vec3.\n   */\n  scale(scalar) {\n    return new Quat(this.x * scalar, this.y * scalar, this.z * scalar, this.w * scalar)\n  }\n\n  /**\n   * Scales this Quat by scalar.\n   *\n   * @param {number} scalar - The scalar value.\n   */\n  scaleInPlace(scalar) {\n    this.x *= scalar\n    this.y *= scalar\n    this.z *= scalar\n    this.w *= scalar\n  }\n\n  /**\n   * Calculates the length of this Quat.\n   *\n   * @return {number} - Returns the length.\n   */\n  length() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const w = this.__data[3]\n    return Math.sqrt(x * x + y * y + z * z + w * w)\n  }\n\n  /**\n   * Calculates the squared length of this Quat.\n   *\n   * @return {number} - Returns the length.\n   */\n  lengthSquared() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const w = this.__data[3]\n    return x * x + y * y + z * z + w * w\n  }\n\n  /**\n   * Normalizes the Quat and returns it as a new Quat.\n   *\n   * @return {Quat} - Returns the Quat normalized.\n   */\n  normalize() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const w = this.__data[3]\n    let len = x * x + y * y + z * z + w * w\n    if (len < Number.EPSILON) {\n      return new Quat()\n    }\n\n    // TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len)\n    return new Quat(x * len, y * len, z * len, w * len)\n  }\n\n  /**\n   * Normalizes the Quat, modifying its values in place.\n   */\n  normalizeInPlace() {\n    const x = this.__data[0]\n    const y = this.__data[1]\n    const z = this.__data[2]\n    const w = this.__data[3]\n    let len = x * x + y * y + z * z + w * w\n    if (len < Number.EPSILON) {\n      return\n    }\n    len = 1 / Math.sqrt(len)\n    this.set(x * len, y * len, z * len, w * len)\n  }\n\n  /**\n   * Calculates the dot product of this quat against another.\n   *\n   * @param {Quat} other - The other Quat to compare with.\n   * @return {number} - Returns the dot product.\n   */\n  dot(other) {\n    return this.x * other.x + this.y * other.y + this.z * other.z + this.w * other.w\n  }\n\n  /**\n   * Calculates the cross product of two Quats and returns the result as a new Quat.\n   *\n   * @param {Quat} other - The other Quat to calculate with.\n   * @return {Quat} - Returns the cross product as a new Quat.\n   */\n  cross(other) {\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const at = this.w\n    const bx = other.x\n    const by = other.y\n    const bz = other.z\n    const bt = other.w\n\n    return new Quat(ay * bz - az * by, az * bt - at * bz, at * bx - ax * bt, ax * by - ay * bx)\n  }\n\n  /**\n   * Returns the rotational conjugate of this Quat.\n   * Conjugation represents the same rotation of the Quat but\n   * in the opposite direction around the rotational axis.\n   *\n   * @return {Quat} - the return value.\n   */\n  conjugate() {\n    return new Quat(-this.x, -this.y, -this.z, this.w)\n  }\n\n  /**\n   * Return the inverse of the `Quat`\n   *\n   * @return {Quat} - Returns a new Quat.\n   */\n  inverse() {\n    return this.conjugate()\n  }\n\n  /**\n   * Aligns this quaternion with another one ensuring that the delta between\n   * the Quat values is the shortest path over the hyper-sphere.\n   *\n   *  @param {Quat} other - The other Quat to divide by.\n   */\n  alignWith(other) {\n    if (this.dot(other) < 0.0) {\n      this.set(-this.x, -this.y, -this.z, -this.w)\n    }\n  }\n\n  /**\n   * Multiplies two this quat by another returning the result as a new Quat.\n   *\n   * @param {Quat} other - The other Quat to multiply.\n   * @return {Quat} - Returns a new Quat.\n   */\n  multiply(other) {\n    const ax = this.__data[0]\n    const ay = this.__data[1]\n    const az = this.__data[2]\n    const aw = this.__data[3]\n    const bx = other.__data[0]\n    const by = other.__data[1]\n    const bz = other.__data[2]\n    const bw = other.__data[3]\n\n    return new Quat(\n      ax * bw + aw * bx + ay * bz - az * by,\n      ay * bw + aw * by + az * bx - ax * bz,\n      az * bw + aw * bz + ax * by - ay * bx,\n      aw * bw - ax * bx - ay * by - az * bz\n    )\n  }\n\n  /**\n   * Multiplies this quat by another, modifying its values in place.\n   *\n   * @param {Quat} other - The other Quat to multiply.\n   */\n  multiplyInPlace(other) {\n    const ax = this.__data[0]\n    const ay = this.__data[1]\n    const az = this.__data[2]\n    const aw = this.__data[3]\n    const bx = other.__data[0]\n    const by = other.__data[1]\n    const bz = other.__data[2]\n    const bw = other.__data[3]\n\n    this.set(\n      ax * bw + aw * bx + ay * bz - az * by,\n      ay * bw + aw * by + az * bx - ax * bz,\n      az * bw + aw * bz + ax * by - ay * bx,\n      aw * bw - ax * bx - ay * by - az * bz\n    )\n  }\n\n  /**\n   * Rotates a vector by this quaternion.\n   * Don't forget to normalize the quaternion unless\n   * you want axial translation as well as rotation.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   * @return {Vec3} - Returns a new Vec3.\n   */\n  rotateVec3(vec3) {\n    const vq = new Quat(vec3.x, vec3.y, vec3.z, 0.0)\n    const pq = this.multiply(vq).multiply(this.conjugate())\n    return new Vec3(pq.x, pq.y, pq.z)\n  }\n\n  /**\n   * Sets this quaternion to a rotation by the given angle about the X axis.\n   *\n   * @param {number} rad - Angle (in radians) to rotate.\n   */\n  rotateX(rad) {\n    rad *= 0.5\n\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const aw = this.w\n    const bx = Math.sin(rad)\n    const bw = Math.cos(rad)\n\n    this.x = ax * bw + aw * bx\n    this.y = ay * bw + az * bx\n    this.z = az * bw - ay * bx\n    this.w = aw * bw - ax * bx\n  }\n\n  /**\n   * Sets this quaternion to a rotation by the given angle about the Y axis.\n   *\n   * @param {number} rad - Angle (in radians) to rotate.\n   */\n  rotateY(rad) {\n    rad *= 0.5\n\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const aw = this.w\n    const by = Math.sin(rad)\n    const bw = Math.cos(rad)\n\n    this.x = ax * bw - az * by\n    this.y = ay * bw + aw * by\n    this.z = az * bw + ax * by\n    this.w = aw * bw - ay * by\n  }\n\n  /**\n   * Sets this quaternion to a rotation by the given angle about the Z axis.\n   *\n   * @param {number} rad - Angle (in radians) to rotate.\n   */\n  rotateZ(rad) {\n    rad *= 0.5\n\n    const ax = this.x\n    const ay = this.y\n    const az = this.z\n    const aw = this.w\n    const bz = Math.sin(rad)\n    const bw = Math.cos(rad)\n\n    this.x = ax * bw + ay * bz\n    this.y = ay * bw - ax * bz\n    this.z = az * bw + aw * bz\n    this.w = aw * bw - az * bz\n  }\n\n  /**\n   * Converts this Quat to a Mat3 (a 3x3 matrix).\n   *\n   * @return {Mat3} - TReturns a new Mat3.\n   */\n  toMat3() {\n    const x = this.x\n    const y = this.y\n    const z = this.z\n    const w = this.w\n    const x2 = x + x\n    const y2 = y + y\n    const z2 = z + z\n    const xx = x * x2\n    const yx = y * x2\n    const yy = y * y2\n    const zx = z * x2\n    const zy = z * y2\n    const zz = z * z2\n    const wx = w * x2\n    const wy = w * y2\n    const wz = w * z2\n\n    const mat3 = new Mat3()\n    mat3.__data[0] = 1 - yy - zz\n    mat3.__data[3] = yx - wz\n    mat3.__data[6] = zx + wy\n\n    mat3.__data[1] = yx + wz\n    mat3.__data[4] = 1 - xx - zz\n    mat3.__data[7] = zy - wx\n\n    mat3.__data[2] = zx - wy\n    mat3.__data[5] = zy + wx\n    mat3.__data[8] = 1 - xx - yy\n\n    return mat3\n  }\n\n  /**\n   * Calculates a Vec3 value aligned with the X axis of this quaternion.\n   *\n   * @return {Vec3} - The resulting Vec3 value\n   */\n  getXaxis() {\n    const xy = this.x * this.y\n    const xz = this.x * this.z\n    const yy = this.y * this.y\n    const yw = this.y * this.w\n    const zz = this.z * this.z\n    const zw = this.z * this.w\n\n    return new Vec3(1.0 - 2.0 * (zz + yy), 2.0 * (xy + zw), 2.0 * (xz - yw))\n  }\n\n  /**\n   * Calculates a Vec3 value aligned with the Y axis of this quaternion.\n   *\n   * @return {Vec3} - The resulting Vec3 value\n   */\n  getYaxis() {\n    const xx = this.x * this.x\n    const xy = this.x * this.y\n    const xw = this.x * this.w\n    const yz = this.y * this.z\n    const zz = this.z * this.z\n    const zw = this.z * this.w\n\n    return new Vec3(2.0 * (xy - zw), 1.0 - 2.0 * (zz + xx), 2.0 * (yz + xw))\n  }\n\n  /**\n   * Calculates a Vec3 value aligned with the Z axis of this quaternion.\n   *\n   * @return {Vec3} - The resulting Vec3 value\n   */\n  getZaxis() {\n    const xx = this.x * this.x\n    const xz = this.x * this.z\n    const xw = this.x * this.w\n\n    const yy = this.y * this.y\n    const yz = this.y * this.z\n    const yw = this.y * this.w\n    const temp = new Vec3()\n\n    return new Vec3(2.0 * (yw + xz), 2.0 * (yz - xw), 1.0 - 2.0 * (yy + xx))\n  }\n\n  /**\n   * Reflects this quaternion according to the axis provided.\n   *\n   * @param {number} axisIndex - An integer with value of 0 for the X axis, 1 for the Y axis, and 2 for the Z axis.\n   * @return {Quat} - Returns a new Quat.\n   */\n  mirror(axisIndex) {\n    switch (axisIndex) {\n      case 0:\n        return new Quat(this.z, this.w, this.x, this.y)\n      case 1:\n        return new Quat(-this.w, this.z, this.y, -this.x)\n      case 2:\n        return new Quat(this.x, this.y, this.z, -this.w)\n    }\n  }\n\n  /**\n   * Converts this Quat to a Mat4 (a 4x4 matrix).\n   *\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  toMat4() {\n    const x = this.x\n    const y = this.y\n    const z = this.z\n    const w = this.w\n    const x2 = x + x\n    const y2 = y + y\n    const z2 = z + z\n    const xx = x * x2\n    const yx = y * x2\n    const yy = y * y2\n    const zx = z * x2\n    const zy = z * y2\n    const zz = z * z2\n    const wx = w * x2\n    const wy = w * y2\n    const wz = w * z2\n\n    // Set the columns\n    const mat4 = new Mat4()\n    mat4.__data[0] = 1 - yy - zz\n    mat4.__data[4] = yx - wz\n    mat4.__data[8] = zx + wy\n\n    mat4.__data[1] = yx + wz\n    mat4.__data[5] = 1 - xx - zz\n    mat4.__data[9] = zy - wx\n\n    mat4.__data[2] = zx - wy\n    mat4.__data[6] = zy + wx\n    mat4.__data[10] = 1 - xx - yy\n\n    return mat4\n  }\n\n  /**\n   * Performs a linear interpolation of this Quat towards another Quat, returning the result as a new Quat.\n   *\n   * @param {Quat} other  - The other Quat to interpolate towards.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Quat} - Returns a new Quat.\n   */\n  lerp(other, t) {\n    const result = new Quat(\n      this.x + t * (other.x - this.x),\n      this.y + t * (other.y - this.y),\n      this.z + t * (other.z - this.z),\n      this.w + t * (other.w - this.w)\n    )\n    result.normalizeInPlace()\n    return result\n  }\n\n  /**\n   * Performs a spherical linear interpolation of this Quat towards another Quat, returning the result as a new Quat.\n   *\n   * @param {Quat} other - The other Quat to interpolate towards.\n   * @param {number} t - Interpolation amount between the two inputs.\n   * @return {Quat} - Returns a new Quat.\n   */\n  slerp(other, t) {\n    // https://www.lix.polytechnique.fr/~nielsen/WEBvisualcomputing/programs/slerp.cpp\n    // const dotProduct = this.x * other.x + this.y * other.y + this.z * other.z + this.w * other.w\n    const dotProduct = this.dot(other)\n\n    // algorithm adapted from Shoemake's paper\n    const lambda = t / 2\n\n    const theta = Math.acos(dotProduct)\n    if (theta < 0.0) theta = -theta\n\n    const st = Math.sin(theta)\n    const sut = Math.sin(lambda * theta)\n    const sout = Math.sin((1 - lambda) * theta)\n    const coeff1 = sout / st\n    const coeff2 = sut / st\n\n    const result = new Quat(\n      coeff1 * this.x + coeff2 * other.x,\n      coeff1 * this.y + coeff2 * other.y,\n      coeff1 * this.z + coeff2 * other.z,\n      coeff1 * this.w + coeff2 * other.w\n    )\n    result.normalizeInPlace()\n    return result\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Quat.\n   * @param {...object} ...args - The ...args param.\n   * @return {Quat} - Returns a new Quat.\n   * @private\n   */\n  static create(...args) {\n    return new Quat(...args)\n  }\n\n  /**\n   * Creates a new Quat to wrap existing memory in a buffer.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} offset - The offset value.\n   * @return {Quat} - Returns a new Quat.\n   * @deprecated\n   * @private\n   */\n  static createFromFloat32Buffer(buffer, offset = 0) {\n    console.warn('Deprecated, use #createFromBuffer instead')\n    return this.createFromBuffer(buffer, offset * 4)\n  }\n\n  /**\n   * Creates an instance of a `Quat` using an ArrayBuffer.\n   *\n   * @static\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {number} byteOffset - The offset value.\n   * @return {Quat} - Returns a new Quat.\n   */\n  static createFromBuffer(buffer, byteOffset) {\n    return new Quat(new Float32Array(buffer, byteOffset, 4)) // 4 bytes per 32bit float\n  }\n\n  /**\n   * Returns the number of Float32 elements used by this type. Used to calculate storage requirements for large arrays of this type.\n   * @return {number} - The return value.\n   * @private\n   */\n  static numElements() {\n    return 4\n  }\n\n  /**\n   * Clones this Quat and returns a new Quat.\n   *\n   * @return {Quat} - Returns a new Quat.\n   */\n  clone() {\n    return new Quat(this.__data[0], this.__data[1], this.__data[2], this.__data[3])\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      w: this.w,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.__data[0] = j.x\n    this.__data[1] = j.y\n    this.__data[2] = j.z\n    this.__data[3] = j.w\n    this.normalizeInPlace()\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.x = reader.loadFloat32()\n    this.y = reader.loadFloat32()\n    this.z = reader.loadFloat32()\n    this.w = reader.loadFloat32()\n  }\n}\n\nRegistry.register('Quat', Quat)\n\nexport { Quat }\n","/* eslint-disable new-cap */\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { MathFunctions } from '../Utilities/MathFunctions'\nimport { Vec3 } from './Vec3.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing a ray that starts from an origin in a specified direction.\n */\nclass Ray {\n  /**\n   * Create a ray.\n   *\n   * @param {Vec3} start - The origin of the ray.\n   * @param {Vec3} dir - The direction of the ray.\n   */\n  constructor(start = undefined, dir = undefined) {\n    if (start instanceof Vec3) {\n      this.start = start\n    } else {\n      this.start = new Vec3()\n    }\n    if (dir instanceof Vec3) {\n      this.dir = dir\n    } else {\n      this.dir = new Vec3()\n    }\n  }\n\n  /**\n   * Get the closest point on the ray to the given point.\n   *\n   * @param {Vec3} point - The point in 3D space.\n   * @return {Ray} - Returns the distance along the ray where the closest point occurs.\n   */\n  closestPoint(point) {\n    const w = point.subtract(this.start)\n    const c1 = w.dot(this.dir)\n    if (c1 < Number.EPSILON) return 0\n    const c2 = this.dir.dot(this.dir)\n    if (c2 < Number.EPSILON) return 0\n    return c1 / c2\n  }\n\n  /**\n   * Get the closest point between the ray and the given line segment made of the 2 points.\n   *\n   * @param {Vec3} p0 - The point in 3D space.\n   * @param {Vec3} p1 - The point in 3D space.\n   * @return {array} - Returns an array containing 2 scalar values indicating 0: the fraction of the line segment, 1: distance along the Ray\n   */\n  closestPointOnLineSegment(p0, p1) {\n    const u = this.dir\n    const v = p1.subtract(p0)\n    const v_len = v.length()\n    v.normalizeInPlace()\n    const w = this.start.subtract(p0)\n    const a = u.dot(u) // always >= 0\n    const b = u.dot(v)\n    const c = v.dot(v) // always >= 0\n    const d = u.dot(w)\n    const e = v.dot(w)\n\n    if (a == 0.0 && c == 0.0) {\n      return [this.start.distanceTo(p0), 0.0]\n    }\n    if (a == 0.0) {\n      return [0.0, 0.0]\n    }\n    if (c == 0.0) {\n      return [this.closestPoint(p0), 0.0]\n    }\n    const D = a * c - b * b // always >= 0\n\n    // compute the ray parameters of the two closest points\n    let this_t\n    let seg_t\n    if (D < 0.001) {\n      // the lines are almost parallel\n      this_t = 0.0\n      if (b > c) {\n        // use the largest denominator\n        seg_t = d / b\n      } else {\n        seg_t = e / c\n      }\n    } else {\n      this_t = (b * e - c * d) / D\n      seg_t = (a * e - b * d) / D\n    }\n    return [this_t, MathFunctions.clamp(seg_t / v_len, 0, 1)]\n  }\n\n  /**\n   * Get the closest point at a distance.\n   *\n   * @param {Vec3} dist - The distance value.\n   * @return {Ray} - Returns a Ray.\n   */\n  pointAtDist(dist) {\n    return this.start.add(this.dir.scale(dist))\n  }\n\n  /**\n   * Returns the two ray params that represent the closest point between the two rays.\n   *\n   * @param {Ray} ray - The ray value.\n   * @return {array} - Returns an array containing 2 scalar values indicating 0: the fraction of the line segment, 1: distance along the Ray\n   */\n  intersectRayVector(ray) {\n    const u = this.dir\n    const v = ray.dir\n    const w = this.start.subtract(ray.start)\n    const a = u.dot(u) // always >= 0\n    const b = u.dot(v)\n    const c = v.dot(v) // always >= 0\n    const d = u.dot(w)\n    const e = v.dot(w)\n    if (a == 0.0 && c == 0.0) {\n      return [0.0, this.start.distanceTo(ray.start)]\n    }\n    if (a == 0.0) {\n      return [ray.closestPoint(this.start), 0.0]\n    }\n    if (c == 0.0) {\n      return [1.0, this.closestPoint(ray.start)]\n    }\n    const D = a * c - b * b // always >= 0\n\n    // compute the ray parameters of the two closest points\n    let this_t\n    let ray_t\n    if (D < 0.001) {\n      // the lines are almost parallel\n      this_t = 0.0\n      if (b > c) {\n        // use the largest denominator\n        ray_t = d / b\n      } else {\n        ray_t = e / c\n      }\n    } else {\n      this_t = (b * e - c * d) / D\n      ray_t = (a * e - b * d) / D\n    }\n    return [this_t, ray_t]\n  }\n\n  /**\n   * Returns one ray param representing the intersection\n   * of this ray against the plane defined by the given ray.\n   *\n   * @param {Vec3} plane - The plane to intersect with.\n   * @return {number} - The return value.\n   */\n  intersectRayPlane(plane) {\n    const w = this.start.subtract(plane.start)\n    const D = plane.dir.dot(this.dir)\n    const N = -plane.dir.dot(w)\n\n    if (Math.abs(D) < Number.PRECISION) {\n      // segment is parallel to plane\n      if (N == 0.0) return -1.0\n      // segment lies in plane\n      else return -1.0 // no intersection\n    }\n    // they are not parallel\n    // compute intersect param\n    const sI = N / D\n    if (sI < -Number.PRECISION) {\n      return -1 // no intersection\n    }\n    return sI\n  }\n\n  /**\n   * Determines if this Box3 intersects a ray.\n   *\n   * @param {Box3} box3 - The box to check for intersection against.\n   * @param {number} tolerance - The tolerance of the test.\n   * @return {boolean} - The return value.\n   */\n  intersectRayBox3(box3, tolerance = 0) {\n    // https://www.scratchapixel.com/lessons/3d-basic-rendering/minimal-ray-tracer-rendering-simple-shapes/ray-box-intersection\n\n    const invDir = new Vec3(1 / this.dir.x, 1 / this.dir.y, 1 / this.dir.z)\n    const sign = []\n    sign[0] = invDir.x < 0\n    sign[1] = invDir.y < 0\n    sign[2] = invDir.z < 0\n\n    const bounds = []\n    if (tolerance > 0) {\n      const diag = box3.diagonal()\n      diag.normalizeInPlace()\n      diag.scaleInPlace(tolerance)\n      bounds[0] = box3.p0.subtract(diag)\n      bounds[1] = box3.p1.add(diag)\n    } else {\n      bounds[0] = box3.p0\n      bounds[1] = box3.p1\n    }\n\n    let tMin = (bounds[sign[0]].x - this.start.x) * invDir.x\n    let tMax = (bounds[1 - sign[0]].x - this.start.x) * invDir.x\n    const tyMin = (bounds[sign[1]].y - this.start.y) * invDir.y\n    const tyMax = (bounds[1 - sign[1]].y - this.start.y) * invDir.y\n\n    if (tMin > tyMax || tyMin > tMax) return false\n    if (tyMin > tMin) tMin = tyMin\n    if (tyMax < tMax) tMax = tyMax\n\n    const tzMin = (bounds[sign[2]].z - this.start.z) * invDir.z\n    const tzMax = (bounds[1 - sign[2]].z - this.start.z) * invDir.z\n\n    if (tMin > tzMax || tzMin > tMax) return false\n    if (tzMin > tMin) tMin = tzMin\n    if (tzMax < tMax) tMax = tzMax\n\n    return true\n  }\n\n  /**\n   * Clones this Ray and returns a new Ray.\n   *\n   * @return {Ray} - Returns a new Ray.\n   */\n  clone() {\n    return new Ray(this.start.clone(), this.dir.clone())\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Ray.\n   * @param {...object} ...args - The ...args param.\n   * @return {Ray} - Returns a new Ray.\n   * @private\n   */\n  static create(...args) {\n    return new Ray(...args)\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      start: this.start,\n      dir: this.dir,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.start.fromJSON(j.start)\n    this.dir.fromJSON(j.dir)\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('Ray', Ray)\n\nexport { Ray }\n","/* eslint-disable no-unused-vars */\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { Vec3 } from './Vec3.js'\nimport { Mat4 } from './Mat4.js'\nimport { Quat } from './Quat.js'\nimport { Registry } from '../Registry'\n\nconst sc_helper = new Vec3(1, 1, 1)\n\n/**\n * Class representing an Xfo transform, which is a transformation decomposed into 3 component values. Translation, Orientation, and Scaling.\n */\nclass Xfo {\n  /**\n   * Initializes the Xfo object.\n   * <br>\n   * **Note:** You can leave it empty and use other methods ti set the state of the class.\n   *\n   * @see [`setFromOther`](#setFromOther) [`fromMat4`](#fromMat4) [`setFromFloat32Array`](#setFromFloat32Array) [`fromJSON`](#fromJSON)\n   *\n   * @param {Float32Array | Vec3} tr - The translation value.\n   * @param {Quat} ori - The orientation value.\n   * @param {Vec3} sc - The scaling value.\n   */\n  constructor(tr = undefined, ori = undefined, sc = undefined) {\n    if (tr instanceof Float32Array) {\n      this.setFromFloat32Array(tr)\n      return\n    }\n    if (tr instanceof Vec3) {\n      this.tr = tr\n    } else if (tr instanceof Quat && ori == undefined && sc == undefined) {\n      this.tr = new Vec3()\n      this.ori = tr // Xfo constructor with just a Quat.\n      this.sc = new Vec3(1, 1, 1)\n      return\n    } else {\n      this.tr = new Vec3()\n    }\n    if (ori instanceof Quat) {\n      this.ori = ori\n    } else {\n      this.ori = new Quat()\n    }\n    if (sc instanceof Vec3) {\n      this.sc = sc\n    } else {\n      this.sc = new Vec3(1, 1, 1)\n    }\n  }\n\n  /**\n   * Sets the state of the Xfo object.\n   *\n   * @param {Vec3} tr - The translation value.\n   * @param {Quat} ori - The orientation value.\n   * @param {Vec3} sc - The scaling value.\n   */\n  set(tr, ori, sc = undefined) {\n    this.tr = tr\n    this.ori = ori\n    if (sc instanceof Vec3) this.sc = sc\n  }\n\n  /**\n   * Sets the state of the Xfo object using another Xfo object.\n   *\n   * @param {Xfo} other - The other Xfo to set from.\n   */\n  setFromOther(other) {\n    this.tr = other.tr\n    this.ori = other.ori\n    this.sc = other.sc\n  }\n\n  /**\n   * Verifies that the Xfo object is an `identity`, checking that the translation, orientation and scaling attributes are in their initial state.\n   *\n   * @return {boolean} - The return value.\n   */\n  isIdentity() {\n    return this.tr.isNull() && this.ori.isIdentity() && this.sc.is111()\n  }\n\n  /**\n   * Checks if this Vec3 contains the same values as the other Vec3.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @return {boolean} - Returns `true` if are the same Vector, otherwise, `false`.\n   */\n  isEqual(other) {\n    return this.tr.isEqual(other.tr) && this.ori.isEqual(other.ori) && this.sc.isEqual(other.sc)\n  }\n\n  /**\n   * Returns true if this Vec2 is approximately the same as other.\n   *\n   * @param {Vec3} other - The other Vec3 to compare with.\n   * @param {number} precision - The precision to which the values must match.\n   * @return {boolean} - Returns true or false.\n   */\n  approxEqual(other, precision = Number.EPSILON) {\n    return (\n      (other.tr ? this.tr.approxEqual(other.tr, precision) : true) &&\n      (other.ori ? this.ori.approxEqual(other.ori, precision) : true) &&\n      (other.sc ? this.sc.approxEqual(other.sc, precision) : true)\n    )\n  }\n\n  /**\n   * The setLookAt method.\n   * @param {Vec3} pos - The position value.\n   * @param {Vec3} target - The target value.\n   * @param {Vec3} up - The up value.\n   */\n  setLookAt(pos, target, up) {\n    // Note: We look along the -z axis. Negate the direction.\n    const dir = pos.subtract(target)\n    const dirLen = dir.length()\n    if (dirLen < Number.EPSILON) {\n      throw new Error('Invalid dir')\n      return\n    }\n    this.ori.setFromDirectionAndUpvector(dir, up)\n    this.tr = pos\n  }\n\n  /**\n   * Multiplies two Xfo transforms.\n   *\n   * @param {Xfo} xfo - The xfo to multiply with.\n   * @return {Xfo} - Returns an Xfo.\n   */\n  multiply(xfo) {\n    let this_sc = this.sc\n    if (this.sc.x != this.sc.y || this.sc.x != this.sc.z) {\n      this_sc = xfo.ori.rotateVec3(this.sc)\n      if (Math.sign(this_sc.x) != Math.sign(this.sc.x)) this_sc.x = -this_sc.x\n      if (Math.sign(this_sc.y) != Math.sign(this.sc.y)) this_sc.y = -this_sc.y\n      if (Math.sign(this_sc.z) != Math.sign(this.sc.z)) this_sc.z = -this_sc.z\n    }\n    const result = new Xfo(\n      this.tr.add(this.ori.rotateVec3(this_sc.multiply(xfo.tr))),\n      this.ori.multiply(xfo.ori),\n      this_sc.multiply(xfo.sc)\n    )\n    return result\n  }\n\n  /**\n   * Returns the inverse of the Xfo object, but returns. the result as a new Xfo.\n   *\n   * @return {Xfo} - Returns a new Xfo.\n   */\n  inverse() {\n    const result = new Xfo()\n    result.ori = this.ori.inverse()\n\n    if (this.sc.x != this.sc.y || this.sc.x != this.sc.z) {\n      // Note: the following code has not been tested and\n      // may not be quite correct. We need to setup\n      // unit tests for this kind of sample.\n      // An example would be to lay out some boxes on different rotations\n      // and with non-uniform scale. Then parent them together. If they\n      // remain stationary, after parenting, then this math is correct.\n      result.sc = result.ori.rotateVec3(this.sc)\n      if (Math.sign(result.sc.x) != Math.sign(this.sc.x)) result.sc.x = -result.sc.x\n      if (Math.sign(result.sc.y) != Math.sign(this.sc.y)) result.sc.y = -result.sc.y\n      if (Math.sign(result.sc.z) != Math.sign(this.sc.z)) result.sc.z = -result.sc.z\n    } else {\n      result.sc = this.sc.inverse()\n    }\n    result.tr = result.ori.rotateVec3(this.tr.negate().multiply(result.sc))\n    return result\n  }\n\n  /**\n   * Transforms Xfo object using a `Vec3` object. First scaling it, then rotating and finally adding the result to current translation object.\n   *\n   * @param {Vec3} vec3 - The vec3 value.\n   * @return {Vec3} - The return value.\n   */\n  transformVec3(vec3) {\n    return this.tr.add(this.ori.rotateVec3(this.sc.multiply(vec3)))\n  }\n\n  /**\n   * Converts this Xfo to a Mat4 (a 4x4 matrix).\n   *\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  toMat4() {\n    const scl = new Mat4(this.sc.x, 0, 0, 0, 0, this.sc.y, 0, 0, 0, 0, this.sc.z, 0, 0, 0, 0, 1.0)\n\n    const rot = this.ori.toMat4()\n\n    const trn = new Mat4()\n    trn.translation = this.tr\n\n    return trn.multiply(rot).multiply(scl)\n  }\n\n  /**\n   * Sets the state of the Xfo object using Mat4.\n   * @deprecated\n   * @param {Mat4} mat4 - The mat4 value.\n   */\n  fromMat4(mat4) {\n    this.setFromMat4(mat4)\n  }\n\n  /**\n   * Sets the state of the Xfo object using Mat4.\n   * @deprecated\n   * @param {Mat4} mat4 - The mat4 value.\n   */\n  setFromMat4(mat4) {\n    this.tr = mat4.translation\n    this.ori.setFromMat4(mat4)\n  }\n\n  /**\n   * Sets the state of the Xfo object using an `Float32array`.\n   * <br>\n   * **Note:** You can set the byteOffset in your `Float32array` object\n   *\n   * @param {Float32Array} float32array - The float32array value.\n   */\n  setFromFloat32Array(float32array) {\n    if (float32array.length == 7) {\n      this.tr = new Vec3(float32array.buffer, float32array.byteOffset)\n      this.ori = new Quat(float32array.buffer, float32array.byteOffset + 12)\n      this.sc = new Vec3(1, 1, 1)\n      return\n    }\n    if (float32array.length == 8) {\n      this.tr = new Vec3(float32array.buffer, float32array.byteOffset)\n      this.ori = new Quat(float32array.buffer, float32array.byteOffset + 12)\n      const scl = float32array[7]\n      this.sc = new Vec3(scl, scl, scl)\n      return\n    }\n    if (float32array.length == 10) {\n      this.tr = new Vec3(float32array.buffer, float32array.byteOffset)\n      this.ori = new Quat(float32array.buffer, float32array.byteOffset + 12)\n      this.sc = new Vec3(float32array.buffer, float32array.byteOffset + 21)\n      return\n    }\n  }\n\n  /**\n   * Clones this Xfo and returns a new Xfo.\n   *\n   * @return {Xfo} - Returns a new Xfo.\n   */\n  clone() {\n    return new Xfo(this.tr.clone(), this.ori.clone(), this.sc.clone())\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Factory function to creates a new Xfo.\n   * @param {...object} ...args - The ...args param.\n   * @return {Xfo} - returns a new Xfo.\n   * @private\n   */\n  static create(...args) {\n    return new Xfo(...args)\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    const j = {\n      tr: this.tr.toJSON(),\n      ori: this.ori.toJSON(),\n    }\n    if (!this.sc.is111()) j.sc = this.sc.toJSON()\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.tr.fromJSON(j.tr)\n    this.ori.fromJSON(j.ori)\n    if (j.sc) {\n      this.sc.fromJSON(j.sc)\n    }\n  }\n\n  /**\n   * Loads the state of the value from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  readBinary(reader) {\n    this.tr.readBinary(reader)\n    this.ori.readBinary(reader)\n    this.sc.readBinary(reader)\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    // eslint-disable-next-line new-cap\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('Xfo', Xfo)\n\nexport { Xfo }\n","import { StringFunctions } from '../Utilities/StringFunctions'\n\nimport { Vec2 } from './Vec2'\nimport { Registry } from '../Registry'\n\n/**\n * Represents a box in 2D space. Needing two Vec2 vectors describing the corners\n */\nclass Box2 {\n  /**\n   * Creates a Box2 object using Vec2s.\n   * In case the parameters are not passed by, their values are pre-defined:\n   * <br>\n   * p0 is a Vec2 with {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY|`Number.POSITIVE_INFINITY`}\n   * <br>\n   * p1 is a Vec2 with {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY|`Number.NEGATIVE_INFINITY`}\n   *\n   * @param {Vec2} p0 - A point representing the corners of a 2D box.\n   * @param {Vec2} p1 - A point representing the corners of a 2D box.\n   */\n  constructor(p0 = undefined, p1 = undefined) {\n    if (p0 instanceof Vec2) {\n      this.p0 = p0\n    } else {\n      this.p0 = new Vec2(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n    }\n    if (p1 instanceof Vec2) {\n      this.p1 = p1\n    } else {\n      this.p1 = new Vec2(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY)\n    }\n  }\n\n  /**\n   * Sets both corner points\n   *\n   * @param {Vec2} p0 - A point representing the corners of a 2D box.\n   * @param {Vec2} p1 - A point representing the corners of a 2D box.\n   */\n  set(p0, p1) {\n    this.p0 = p0\n    this.p1 = p1\n  }\n\n  /**\n   * Resets the box2 back to an uninitialized state.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY|`Number.POSITIVE_INFINITY`}\n   * and {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY|`Number.NEGATIVE_INFINITY`}\n   */\n  reset() {\n    this.p0.x = Number.POSITIVE_INFINITY\n    this.p1.x = Number.NEGATIVE_INFINITY\n    this.p0.y = Number.POSITIVE_INFINITY\n    this.p1.y = Number.NEGATIVE_INFINITY\n  }\n\n  /**\n   * Returns `true` if the box has been expanded to contain a point.\n   *\n   * @return {boolean} - The return value.\n   */\n  isValid() {\n    return (\n      this.p0.x != Number.POSITIVE_INFINITY &&\n      this.p1.x != Number.NEGATIVE_INFINITY &&\n      this.p0.y != Number.POSITIVE_INFINITY &&\n      this.p1.y != Number.NEGATIVE_INFINITY\n    )\n  }\n\n  /**\n   * Expands the Box2 to contain the new point.\n   *\n   * @param {Vec2} point - A point represents the corners of a 2D box.\n   */\n  addPoint(point) {\n    if (this.p0.x == Number.POSITIVE_INFINITY || point.x < this.p0.x) this.p0.x = point.x\n    if (this.p0.y == Number.POSITIVE_INFINITY || point.y < this.p0.y) this.p0.y = point.y\n\n    if (this.p1.y == Number.NEGATIVE_INFINITY || point.x > this.p1.x) this.p1.x = point.x\n    if (this.p1.y == Number.NEGATIVE_INFINITY || point.y > this.p1.y) this.p1.y = point.y\n  }\n\n  /**\n   * Returns the length of the diagonal of the box.\n   *\n   * @return {number} - Returns the distance.\n   */\n  size() {\n    return this.p1.distanceTo(this.p0)\n  }\n\n  /**\n   * Returns the diagonal vector of the B=box from p0 to p1.\n   *\n   * @return {Vec3} - Returns a Vec3.\n   */\n  diagonal() {\n    return this.p1.subtract(this.p0)\n  }\n\n  /**\n   * Returns the center point of a Box2.\n   *\n   * @return {Vec2} - Returns a Vec2.\n   */\n  center() {\n    const result = this.p1.subtract(this.p0)\n    result.scaleInPlace(0.5)\n    result.addInPlace(this.p0)\n    return result\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Box2.\n   * @param {...object} ...args - The ...args param.\n   * @return {Box2} - Returns a new Box2.\n   * @private\n   */\n  static create(...args) {\n    return new Box2(...args)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Encodes `Box2` Class as a JSON object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      p0: this.p0.toJSON(),\n      p1: this.p1.toJSON(),\n    }\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    // eslint-disable-next-line new-cap\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('Box2', Box2)\n\nexport { Box2 }\n","/* eslint-disable new-cap */\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\nimport { Vec3 } from './Vec3.js'\n\n/**\n * Class representing a mathematical sphere, as opposed to the Sphere class derived from ProceduralMesh.\n *\n * @extends AttrValue\n */\nclass SphereType extends AttrValue {\n  /**\n   * Create a sphere.\n   * @param {Vec3} pos - The position of the sphere.\n   * @param {number} radius - The radius of the sphere.\n   */\n  constructor(pos, radius = 0) {\n    super()\n    if (pos instanceof Vec3) {\n      this.pos = pos\n    } else {\n      this.pos = new Vec3()\n    }\n    this.radius = radius\n  }\n\n  /**\n   * Clones this sphere and returns a new sphere.\n   *\n   * @return {Sphere} - Returns a new sphere.\n   */\n  clone() {\n    return new Sphere(this.pos.clone(), this.radius)\n  }\n\n  /**\n   * Checks if this sphere intersects a box.\n   *\n   * @param {Box3} box - The box value.\n   * @return {boolean} - The return value.\n   */\n  intersectsBox(box) {\n    return box.intersectsSphere(this)\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      pos: this.pos.toJSON(),\n      radius: this.radius,\n    }\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new sphere.\n   *\n   * @param {...object} ...args - The ...args param.\n   * @return {Sphere} - Returns a new sphere.\n   * @private\n   */\n  static create(...args) {\n    return new Sphere(...args)\n  }\n}\n\nRegistry.register('SphereType', SphereType)\n\nexport { SphereType }\n","import { StringFunctions } from '../Utilities/StringFunctions'\nimport { MathFunctions } from '../Utilities/MathFunctions'\nimport { Vec3 } from './Vec3.js'\nimport { Mat4 } from './Mat4.js'\nimport { SphereType } from './SphereType.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing a box in 3D space.\n * Represents a box in 3D space defined by two Vec3 values which define opposing corners of the box.\n */\nclass Box3 {\n  /**\n   * Creates a Box3 object using Vec3s.\n   * In case the parameters are not passed by, their values are pre-defined:\n   * <br>\n   * p0 is a Vec2 with {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY|`Number.POSITIVE_INFINITY`}\n   * <br>\n   * p1 is a Vec2 with {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY|`Number.NEGATIVE_INFINITY`}\n   *\n   * @param {Vec3} p0 - A point representing the corners of a 3D box.\n   * @param {Vec3} p1 - A point representing the corners of a 3D box.\n   */\n  constructor(p0 = undefined, p1 = undefined) {\n    if (p0 instanceof Float32Array) {\n      this.setFromFloat32Array(p0)\n      return\n    }\n    if (p0 instanceof Vec3) {\n      this.p0 = p0\n    } else {\n      this.p0 = new Vec3(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\n    }\n    if (p1 instanceof Vec3) {\n      this.p1 = p1\n    } else {\n      this.p1 = new Vec3(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY)\n    }\n  }\n\n  /**\n   * Getter for the lower (x, y, z) boundary of the box.\n   *\n   * @return {Vec3} - Returns the minimum Vec3.\n   */\n  get min() {\n    return this.p0\n  }\n\n  /**\n   * Getter for the upper (x, y, z) boundary of the box.\n   *\n   * @return {Vec3} - Returns the maximum Vec3.\n   */\n  get max() {\n    return this.p1\n  }\n\n  /**\n   * Sets both Vec3 points\n   *\n   * @param {Vec3} p0 - A point representing the corners of a 3D box.\n   * @param {Vec3} p1 - A point representing the corners of a 3D box.\n   */\n  set(p0, p1) {\n    this.p0 = p0\n    this.p1 = p1\n  }\n\n  /**\n   * Resets the box3 back to an uninitialized state.\n   */\n  reset() {\n    this.p0.x = Number.POSITIVE_INFINITY\n    this.p0.y = Number.POSITIVE_INFINITY\n    this.p0.z = Number.POSITIVE_INFINITY\n    this.p1.x = Number.NEGATIVE_INFINITY\n    this.p1.y = Number.NEGATIVE_INFINITY\n    this.p1.z = Number.NEGATIVE_INFINITY\n  }\n\n  /**\n   * Returns `true` if the box has been expanded to contain a point.\n   *\n   * @return {boolean} - The return value.\n   */\n  isValid() {\n    return (\n      this.p0.x != Number.POSITIVE_INFINITY &&\n      this.p1.x != Number.NEGATIVE_INFINITY &&\n      this.p0.y != Number.POSITIVE_INFINITY &&\n      this.p1.y != Number.NEGATIVE_INFINITY &&\n      this.p0.z != Number.POSITIVE_INFINITY &&\n      this.p1.z != Number.NEGATIVE_INFINITY\n    )\n  }\n\n  /**\n   * Expands the Box3 to contain the new point.\n   *\n   * @param {Vec3} point - A point represents the corners of a 3D box.\n   */\n  addPoint(point) {\n    if (point.x != Number.POSITIVE_INFINITY && point.x != Number.NEGATIVE_INFINITY) {\n      if (point.x < this.p0.x) this.p0.x = point.x\n      if (point.x > this.p1.x) this.p1.x = point.x\n    }\n    if (point.y != Number.POSITIVE_INFINITY && point.y != Number.NEGATIVE_INFINITY) {\n      if (point.y < this.p0.y) this.p0.y = point.y\n      if (point.y > this.p1.y) this.p1.y = point.y\n    }\n    if (point.z != Number.POSITIVE_INFINITY && point.z != Number.NEGATIVE_INFINITY) {\n      if (point.z < this.p0.z) this.p0.z = point.z\n      if (point.z > this.p1.z) this.p1.z = point.z\n    }\n  }\n\n  /**\n   * Adds `Box3` to this `Box3`, of the Xfo instance is passed in the parameters\n   * it proceeds to apply the transform for the Vec3.\n   *\n   * @param {Box3} box3 - A 3D box.\n   * @param {Xfo} xfo - A 3D transform.\n   */\n  addBox3(box3, xfo = undefined) {\n    if (xfo) {\n      // Transform each corner of the Box3 into the new coordinate system.\n      this.addPoint(xfo.transformVec3(box3.p0))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p0.x, box3.p0.y, box3.p1.z)))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p0.x, box3.p1.y, box3.p0.z)))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p1.x, box3.p0.y, box3.p0.z)))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p0.x, box3.p1.y, box3.p1.z)))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p1.x, box3.p0.y, box3.p1.z)))\n      this.addPoint(xfo.transformVec3(new Vec3(box3.p1.x, box3.p1.y, box3.p0.z)))\n      this.addPoint(xfo.transformVec3(box3.p1))\n    } else {\n      this.addPoint(box3.p0)\n      this.addPoint(box3.p1)\n    }\n  }\n\n  /**\n   * Returns the length of the diagonal of the box.\n   *\n   * @return {number} - Returns the distance.\n   */\n  size() {\n    return this.p1.distanceTo(this.p0)\n  }\n\n  /**\n   * Returns the diagonal vector of the B=box from p0 to p1.\n   *\n   * @return {Box3} - Returns a Box3.\n   */\n  diagonal() {\n    return this.p1.subtract(this.p0)\n  }\n\n  /**\n   * Returns the center point of a Box3.\n   *\n   * @return {Vec3} - Returns a Vec3.\n   */\n  center() {\n    const result = this.p1.subtract(this.p0)\n    result.scaleInPlace(0.5)\n    result.addInPlace(this.p0)\n    return result\n  }\n\n  /**\n   * Converts this Box3 to a Mat4 (a 4x4 matrix). The returned mat4 would transform a unit cube into the shape of the Bounding box.\n   *\n   * @return {Mat4} - Returns a new Mat4.\n   */\n  toMat4() {\n    const scx = this.p1.x - this.p0.x\n    const scy = this.p1.y - this.p0.y\n    const scz = this.p1.z - this.p0.z\n    return new Mat4(scx, 0, 0, 0, 0, scy, 0, 0, 0, 0, scz, 0, this.p0.x, this.p0.y, this.p0.z, 1.0)\n  }\n\n  /**\n   * Calculates and returns the bounding Sphere of the Box3\n   *\n   * @return {SphereType} - The return value.\n   */\n  getBoundingSphere() {\n    return new SphereType(this.center(), this.diagonal().length() * 0.5)\n  }\n\n  /**\n   * Determines if this Box3 intersects a given box value.\n   *\n   * @param {Box3} box - The box to check for intersection against.\n   * @return {boolean} - Returns true if the shapes intersect.\n   */\n  intersectsBox(box) {\n    // Using 6 splitting planes to rule out intersections.\n    return box.max.x < this.min.x ||\n      box.min.x > this.max.x ||\n      box.max.y < this.min.y ||\n      box.min.y > this.max.y ||\n      box.max.z < this.min.z ||\n      box.min.z > this.max.z\n      ? false\n      : true\n  }\n\n  /**\n   * Determines if this Box3 intersects a sphere.\n   *\n   * @param {Sphere} sphere - The sphere to check for intersection against.\n   * @return {boolean} - Returns true if the shapes intersect.\n   */\n  intersectsSphere(sphere) {\n    // var closestPoint = new Vector3();\n\n    // Find the point on the AABB closest to the sphere center.\n    // this.clampPoint( sphere.center, closestPoint );\n\n    // If that point is inside the sphere, the AABB and sphere intersect.\n    return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius\n  }\n\n  /**\n   * Determines if this Box3 intersects a plane.\n   *\n   * @param {Plane} plane - The plane to check for intersection against.\n   * @return {boolean} - Returns true if the shapes intersect.\n   */\n  intersectsPlane(plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n\n    let min\n    let max\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x\n      max = plane.normal.x * this.max.x\n    } else {\n      min = plane.normal.x * this.max.x\n      max = plane.normal.x * this.min.x\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y\n      max += plane.normal.y * this.max.y\n    } else {\n      min += plane.normal.y * this.max.y\n      max += plane.normal.y * this.min.y\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z\n      max += plane.normal.z * this.max.z\n    } else {\n      min += plane.normal.z * this.max.z\n      max += plane.normal.z * this.min.z\n    }\n\n    return min <= -plane.constant && max >= -plane.constant\n  }\n\n  /**\n   * Clones this Box3 and returns a new Box3.\n   * @return {Box3} - Returns a new Box3.\n   */\n  clone() {\n    return new Box3(this.p0.clone(), this.p1.clone())\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new Box3.\n   * @param {...object} ...args - The ...args param.\n   * @return {Box3} - Returns a new Box3.\n   * @private\n   */\n  static create(...args) {\n    return new Box3(...args)\n  }\n\n  /**\n   * The sizeInBytes method.\n   * @return {number} - The return value.\n   * @private\n   */\n  static sizeInBytes() {\n    return 24\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Encodes `Box3` Class as a JSON object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      p0: this.p0.toJSON(),\n      p1: this.p1.toJSON(),\n    }\n  }\n\n  /**\n   * Decodes a JSON object to set the state of this class.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    // We need to verify that p0 and p1 axes are numeric, so in case they are not, we restore them to their default values.\n    // This, because 'Infinity' and '-Infinity' are stringified as 'null'.\n    const p0 = {\n      x: MathFunctions.isNumeric(j.p0.x) ? j.p0.x : Number.POSITIVE_INFINITY,\n      y: MathFunctions.isNumeric(j.p0.y) ? j.p0.y : Number.POSITIVE_INFINITY,\n      z: MathFunctions.isNumeric(j.p0.z) ? j.p0.z : Number.POSITIVE_INFINITY,\n    }\n    const p1 = {\n      x: MathFunctions.isNumeric(j.p1.x) ? j.p1.x : Number.NEGATIVE_INFINITY,\n      y: MathFunctions.isNumeric(j.p1.y) ? j.p1.y : Number.NEGATIVE_INFINITY,\n      z: MathFunctions.isNumeric(j.p1.z) ? j.p1.z : Number.NEGATIVE_INFINITY,\n    }\n    this.p0.fromJSON(p0)\n    this.p1.fromJSON(p1)\n  }\n\n  /**\n   * The setFromFloat32Array method.\n   * @param {Float32Array} float32array - The float32array value.\n   * @private\n   */\n  setFromFloat32Array(float32array) {\n    this.p0 = new Vec3(float32array.buffer, float32array.byteOffset)\n    this.p1 = new Vec3(float32array.buffer, float32array.byteOffset + 12)\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    // eslint-disable-next-line new-cap\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('Box3', Box3)\n\nexport { Box3 }\n","/* eslint-disable new-cap */\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { AttrValue } from './AttrValue.js'\nimport { Registry } from '../Registry'\nimport { Vec3 } from './Vec3.js'\n\n/**\n * Class representing a plane.\n *\n * @extends AttrValue\n */\nclass PlaneType extends AttrValue {\n  /**\n   * Create a plane.\n   *\n   * @param {Vec3} normal - The normal of the plane.\n   * @param {number} w - The w value.\n   */\n  constructor(normal, w = 0) {\n    super()\n    if (normal instanceof Vec3) {\n      this.normal = normal\n    } else {\n      this.normal = new Vec3()\n    }\n    this.w = w\n  }\n\n  /**\n   * Setter from scalar components.\n   *\n   * @param {number} x - The x value.\n   * @param {number} y - The y value.\n   * @param {number} z - The z value.\n   * @param {number} w - The w value.\n   */\n  set(x, y, z, w) {\n    this.normal.set(x, y, z)\n    this.w = w\n  }\n\n  /**\n   * The divideScalar method\n   *\n   * @param {number} value - The value value.\n   */\n  divideScalar(value) {\n    this.normal.scaleInPlace(1 / value)\n    this.w /= value\n  }\n\n  /**\n   * Calculates the distance from a point to this plane.\n   *\n   * @param {Vec3} point - The point value.\n   * @return {number} - The return value.\n   */\n  distanceToPoint(point) {\n    return point.dot(this.normal) + this.w\n  }\n\n  /**\n   * Normalize this plane in place modifying its values.\n   */\n  normalizeInPlace() {\n    const inverseNormalLength = 1.0 / this.normal.length()\n    this.normal.scaleInPlace(inverseNormalLength)\n    this.w *= inverseNormalLength\n  }\n\n  /**\n   * Clones this plane and returns a new plane.\n   *\n   * @return {Plane} - Returns a new plane.\n   */\n  clone() {\n    return new Plane(this.normal.clone(), this.w)\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * Creates a new plane.\n   * @param {...object} ...args - The ...args param.\n   * @return {Plane} - Returns a new plane.\n   * @private\n   */\n  static create(...args) {\n    return new Plane(...args)\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      normal: this.normal.toJSON(),\n      w: this.w,\n    }\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('PlaneType', PlaneType)\n\nexport { PlaneType }\n","/* eslint-disable new-cap */\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { Vec3 } from './Vec3.js'\nimport { PlaneType } from './PlaneType.js'\nimport { Registry } from '../Registry'\n\n/**\n * Class representing a Frustum. Frustums are used to determine what\n * is inside the camera's field of view.\n * @private\n * */\nclass Frustum {\n  /**\n   * Create a Frustum\n   * @param {PlaneType} p0 - the p0 value.\n   * @param {PlaneType} p1 - the p1 value.\n   * @param {PlaneType} p2 - the p2 value.\n   * @param {PlaneType} p3 - the p3 value.\n   * @param {PlaneType} p4 - the p4 value.\n   * @param {PlaneType} p5 - the p5 value.\n   */\n  constructor(p0, p1, p2, p3, p4, p5) {\n    this.planes = [\n      p0 || new PlaneType(),\n      p1 || new PlaneType(),\n      p2 || new PlaneType(),\n      p3 || new PlaneType(),\n      p4 || new PlaneType(),\n      p5 || new PlaneType(),\n    ]\n  }\n\n  /**\n   * The setFromMatrix configures a Frustum object using a matrix.\n   * Typically the matrix is a model view projection matrix.\n   * @param {Mat4} mat4 - The matrix to use.\n   */\n  setFromMatrix(mat4) {\n    const m = mat4\n    const planes = this.planes\n    planes[0].set(m.m03 - m.m00, m.m13 - m.m10, m.m23 - m.m20, m.m33 - m.m30)\n    planes[1].set(m.m03 + m.m00, m.m13 + m.m10, m.m23 + m.m20, m.m33 + m.m30)\n    planes[2].set(m.m03 + m.m01, m.m13 + m.m11, m.m23 + m.m21, m.m33 + m.m31)\n    planes[3].set(m.m03 - m.m01, m.m13 - m.m11, m.m23 - m.m21, m.m33 - m.m31)\n    planes[4].set(m.m03 - m.m02, m.m13 - m.m12, m.m23 - m.m22, m.m33 - m.m32)\n    planes[5].set(m.m03 + m.m02, m.m13 + m.m12, m.m23 + m.m22, m.m33 + m.m32)\n\n    planes.forEach((plane) => plane.normalizeInPlace())\n  }\n\n  /**\n   * Tests a box to see if it is entirely within the frustum.\n   * @param {Box3} box3 - The box to test.\n   * @return {boolean} - True if the frustum intersects the box.\n   */\n  intersectsBox(box3) {\n    const p = new Vec3()\n    const planes = this.planes\n    const { min, max } = box3\n\n    for (let i = 0; i < 6; i++) {\n      const plane = planes[i]\n\n      // corner at max distance\n      p.x = plane.normal.x > 0 ? max.x : min.x\n      p.y = plane.normal.y > 0 ? max.y : min.y\n      p.z = plane.normal.z > 0 ? max.z : min.z\n\n      if (plane.distanceToPoint(p) < 0) return false\n    }\n    return true\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @return {object} - The json object.\n   */\n  toJSON() {\n    return {\n      p0: this.p0.toJSON(),\n      p1: this.p1.toJSON(),\n      p2: this.p2.toJSON(),\n      p3: this.p3.toJSON(),\n      p4: this.p4.toJSON(),\n      p5: this.p5.toJSON(),\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object.\n   */\n  fromJSON(j) {\n    this.p0.fromJSON(j.p0)\n    this.p1.fromJSON(j.p1)\n    this.p2.fromJSON(j.p2)\n    this.p3.fromJSON(j.p3)\n    this.p4.fromJSON(j.p4)\n    this.p5.fromJSON(j.p5)\n  }\n\n  /**\n   * Calls `toJSON` method and stringifies it.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return StringFunctions.stringifyJSONWithFixedPrecision(this.toJSON())\n  }\n}\n\nRegistry.register('Frustum', Frustum)\n\nexport { Frustum }\n","let counter = 0\n\n/**\n * Provides an interface for emitting events under given names, and registering listeners to those events.\n * This is a base class for most classes in the Scene Tree and Renderer, enabling observers to listen to changes throughout the system.\n * The interface exposed is similar to [EventEmitter](https://nodejs.org/api/events.html#events_class_eventemitter) in Node.\n *\n * Similar to how the DOM event system in the browser works, events are registered by name.\n * Example: Registering a listener for a custom event, and then emitting that event.\n * ```javascript\n *  const ee = new EventEmitter()\n *\n *  ee.on('myEvent', (event) => {\n *    console.log('My Event was emitted:', event)\n *  })\n *\n *  ee.emit('myEvent', { data: 42 })\n * ```\n *\n *\n */\nclass EventEmitter {\n  /**\n   * Initializes an empty `listeners` map that will host all the events,\n   * which implies that it doesn't allow multiple events with the same name.\n   * <br>\n   */\n  constructor() {\n    this.listeners = {}\n    this.__id = ++counter\n  }\n\n  /**\n   * Returns the unique id of the object.\n   * @private\n   * @return {number} - The Id of the ParameterOwner object.\n   */\n  getId() {\n    return this.__id\n  }\n\n  /**\n   * Adds a listener function for a given event name.\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {function} listener - The listener function(callback).\n   * @return {number} - the id that can be used to remove the listener.\n   */\n  on(eventName, listener) {\n    if (!listener) {\n      throw new Error('Missing listener.')\n    }\n\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = []\n    }\n\n    const listeners = this.listeners[eventName]\n\n    if (listeners.includes(listener)) {\n      throw new Error(`Listener \"${listener.name}\" already connected to event \"${eventName}\".`)\n    }\n\n    // TODO: Deprecate alongside #addListener.\n    const id = listeners.length\n    listeners[id] = listener\n\n    return id\n  }\n\n  /**\n   * Similar to the `on` method with the difference that when the event is triggered,\n   * it is automatically unregistered meaning that the event listener will be triggered at most one time.\n   *\n   * Useful for events that we expect to trigger one time, such as when assets load.\n   * ```javascript\n   * const asset = new Asset();\n   * asset.once('loaded', () => {\n   *   console.log(\"Yay! the asset is loaded\")\n   * })\n   * ```\n   *\n   * @param {string} eventName - The eventName value\n   * @param {function} listener - The listener value\n   * @return {number} - the id that can be used to remove the listener.\n   */\n  once(eventName, listener) {\n    const cb = (event) => {\n      listener(event)\n      this.off(eventName, cb)\n    }\n\n    return this.on(eventName, cb)\n  }\n\n  /**\n   * Removes a listener function from the specified event, using either the function or the index id. Depends on what is passed in.\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {function|number} listener - The listener function or the id number.\n   */\n  off(eventName, listener) {\n    if (!listener) {\n      throw new Error('Missing callback function (listener).')\n    }\n\n    if (typeof listener == 'number') {\n      console.warn('Deprecated. Un-register using the original listener instead.')\n      this.removeListenerById(eventName, listener)\n      return\n    }\n\n    const listeners = this.listeners[eventName] || []\n\n    const ids = []\n\n    listeners.forEach((e, i) => {\n      if (e === listener) {\n        ids.push(i)\n      }\n    })\n\n    if (ids.length == 0) {\n      throw new Error(`Listener \"${listener.name}\" is not connected to \"${eventName}\" event`)\n    } else {\n      for (const id of ids) {\n        listeners[id] = undefined\n      }\n    }\n  }\n\n  /**\n   * @deprecated Use #on instead.\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {function} listener - The listener function(callback).\n   * @return {number} - the id that can be used to remove the listener.\n   */\n  addListener(eventName, listener) {\n    console.warn('Deprecated. Use #on instead.')\n\n    return this.on(eventName, listener)\n  }\n\n  /**\n   * @deprecated Use #off instead.\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {function} listener - The listener function.\n   */\n  removeListener(eventName, listener) {\n    console.warn('Deprecated. Use #off instead.')\n\n    this.off(eventName, listener)\n  }\n\n  /**\n   * remove listener by ID returned from #on\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {number} id - The id returned by addListener\n   */\n  removeListenerById(eventName, id) {\n    const listeners = this.listeners[eventName]\n\n    if (!listeners) {\n      console.warn('callback :' + id + ' was not connected to this signal:' + eventName)\n      return\n    }\n\n    if (!listeners[id]) throw new Error('Invalid ID')\n\n    listeners[id] = undefined\n  }\n\n  /**\n   * Triggers all listener functions in an event.\n   *\n   * @param {string} eventName - The name of the event.\n   * @param {object|string|any} event - The data you want to pass down to all listener functions as parameter.\n   */\n  emit(eventName, event) {\n    const listeners = this.listeners[eventName] || []\n\n    listeners.forEach((fn) => {\n      // Skip disconnected listeners.\n      if (fn) {\n        fn(event)\n      }\n    })\n  }\n}\n\nexport { EventEmitter }\n","// Taken from here: https://github.com/jakesgordon/bin-packing/blob/master/js/packer.growing.js\n\nimport { EventEmitter } from './EventEmitter'\n\n/******************************************************************************\n\nThis is a binary tree based bin packing algorithm that is more complex than\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\nheight, it starts with the width and height of the first block passed and then\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\nto maintain a roughly square ratio by making 'smart' choices about whether to\ngrow right or down.\n\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\nthe new block is BOTH wider and taller than the current target then it will be\nrejected. This makes it very important to initialize with a sensible starting\nwidth and height. If you are providing sorted input (largest first) then this\nwill not be an issue.\n\nA potential way to solve this limitation would be to allow growth in BOTH\ndirections at once, but this requires maintaining a more complex tree\nwith 3 children (down, right and center) and that complexity can be avoided\nby simply chosing a sensible starting block.\n\nBest results occur when the input blocks are sorted by height, or even better\nwhen sorted by max(width,height).\n\nInputs:\n------\n\n  blocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n  marks each block that fits with a .fit attribute pointing to a\n  node with .x and .y coordinates\n\nExample:\n-------\n\n  var blocks = [\n    { w: 100, h: 100 },\n    { w: 100, h: 100 },\n    { w:  80, h:  80 },\n    { w:  80, h:  80 },\n    etc\n    etc\n  ];\n\n  var packer = new GrowingPacker();\n  packer.fit(blocks);\n\n  for(var n = 0 ; n < blocks.length ; n++) {\n    var block = blocks[n];\n    if (block.fit) {\n      Draw(block.fit.x, block.fit.y, block.w, block.h);\n    }\n  }\n\n\n******************************************************************************/\n\nclass GrowingPacker extends EventEmitter {\n  constructor(w = 0, h = 0) {\n    super()\n    this.root = {\n      x: 0,\n      y: 0,\n      w: w,\n      h: h,\n    }\n  }\n\n  fit(blocks) {\n    const len = blocks.length\n    if (len == 0) return\n    let resized = false\n    if (this.root.w < blocks[0].w) {\n      this.root.w = blocks[0].w\n      resized = true\n    }\n    if (this.root.h < blocks[0].h) {\n      this.root.h = blocks[0].h\n      resized = true\n    }\n    if (resized) {\n      this.emit('resized', { width: this.root.w, height: this.root.h })\n    }\n    const eachBlock = (block) => {\n      block.fit = this.__addBlock(block)\n    }\n    blocks.forEach(eachBlock)\n  }\n\n  __addBlock(block) {\n    const node = this.findNode(this.root, block.w, block.h)\n    if (node) return this.splitNode(node, block.w, block.h)\n    else return this.growNode(block.w, block.h)\n  }\n\n  addBlock(block) {\n    let resized = false\n    if (this.root.w < block.w) {\n      this.root.w = block.w\n      resized = true\n    }\n    if (this.root.h < block.h) {\n      this.root.h = block.h\n      resized = true\n    }\n    if (resized) {\n      this.emit('resized', { width: this.root.w, height: this.root.h })\n    }\n    const node = this.findNode(this.root, block.w, block.h)\n    if (node) return this.splitNode(node, block.w, block.h)\n    else return this.growNode(block.w, block.h)\n  }\n\n  findNode(root, w, h) {\n    if (root.used) return this.findNode(root.right, w, h) || this.findNode(root.down, w, h)\n    else if (w <= root.w && h <= root.h) return root\n    else return null\n  }\n\n  splitNode(node, w, h) {\n    node.used = true\n    node.down = {\n      x: node.x,\n      y: node.y + h,\n      w: node.w,\n      h: node.h - h,\n    }\n    node.right = {\n      x: node.x + w,\n      y: node.y,\n      w: node.w - w,\n      h: h,\n    }\n    return node\n  }\n\n  growNode(w, h) {\n    const canGrowDown = w <= this.root.w\n    const canGrowRight = h <= this.root.h\n\n    const shouldGrowRight = canGrowRight && this.root.h >= this.root.w + w // attempt to keep square-ish by growing right when height is much greater than width\n    const shouldGrowDown = canGrowDown && this.root.w >= this.root.h + h // attempt to keep square-ish by growing down  when width  is much greater than height\n\n    if (shouldGrowRight) return this.growRight(w, h)\n    else if (shouldGrowDown) return this.growDown(w, h)\n    else if (canGrowRight) return this.growRight(w, h)\n    else if (canGrowDown) return this.growDown(w, h)\n    else return null // need to ensure sensible root starting size to avoid this happening\n  }\n\n  growRight(w, h) {\n    this.root = {\n      used: true,\n      x: 0,\n      y: 0,\n      w: this.root.w + w,\n      h: this.root.h,\n      down: this.root,\n      right: {\n        x: this.root.w,\n        y: 0,\n        w: w,\n        h: this.root.h,\n      },\n    }\n    const node = this.findNode(this.root, w, h)\n    let res\n    if (node) res = this.splitNode(node, w, h)\n    this.emit('resized', { width: this.root.w, height: this.root.h })\n    return res\n  }\n\n  growDown(w, h) {\n    this.root = {\n      used: true,\n      x: 0,\n      y: 0,\n      w: this.root.w,\n      h: this.root.h + h,\n      down: {\n        x: 0,\n        y: this.root.h,\n        w: this.root.w,\n        h: h,\n      },\n      right: this.root,\n    }\n    const node = this.findNode(this.root, w, h)\n    let res\n    if (node) res = this.splitNode(node, w, h)\n    this.emit('resized', { width: this.root.w, height: this.root.h })\n    return res\n  }\n}\n\nexport { GrowingPacker }\n","import { EventEmitter } from './EventEmitter'\nimport { MathFunctions } from './MathFunctions'\n\n/**\n * An Allocation1D represents an allocated block of memory.\n *\n */\nclass Allocation1D {\n  /**\n   * Initializes the allocation\n   * @param {number} start - The start of the allocated block of memory.\n   * @param {number} size - The size of the allocated block of memory.\n   */\n  constructor(start = 0, size = 0) {\n    this.start = start\n    this.size = size\n  }\n}\n\n/**\n * An 1D allocator is used to manage packing multiple smaller blocks of data\n * into a single large block of memory, supporting resizing and re-allocating.\n * As allocations are changed, fragmentation occurs as blocks must be moved\n *\n * Example:\n * ```javascript\n * const allocator = new Allocator1D()\n *\n * let memory = new Uint32Array(25)\n * allocator.on('resize', () => {\n *   memory = new Uint32Array(allocator.reservedSpace)\n * })\n * allocator.on('dataReallocated', (event) => {\n *   // during allocation, a defragment might occur, which means\n *   // we need to reload some of our data.\n * })\n *\n * allocator.allocate(1, 5)\n * allocator.allocate(2, 10)\n * allocator.allocate(3, 10)\n * allocator.allocate(4, 20)\n * allocator.allocate(3, 20) // resize 3 to grow the allocated space.\n * allocator.allocate(1, 7) // resize 1 to fit into the previous space of 3, leaving a new free block.\n * allocator.allocate(1, 10) // resize 1 to fit into the previous space of 3, consuming the free block.\n * ```\n *\n */\nclass Allocator1D extends EventEmitter {\n  /**\n   * Initializes the allocator ready to start work\n   */\n  constructor() {\n    super()\n    this.freeList = []\n    this.allocations = []\n    this.allocationsMap = {} // A mapping of id to index within the allocations list\n    this.allocatedSpace = 0\n    this.reservedSpace = 0\n    this.freeSpace = 0\n  }\n\n  /**\n   * Returns the Allocates for the given Id.\n   *\n   * @param {number} id - The unique numerical identifer for the block.\n   * @return {Allocation1D} - The allocation\n   */\n  getAllocation(id) {\n    return this.allocations[this.allocationsMap[id]]\n  }\n\n  /**\n   * Allocates space for a new or existing item. The id is a handle that the consuming code uses to\n   * track allocations.\n   *\n   * @param {number} id - The unique numerical identifer for the block.\n   * @param {number} size - The name of the event.\n   * @return {Allocation1D} - The new allocation\n   */\n  allocate(id, size) {\n    if (this.allocationsMap[id] != undefined) {\n      const index = this.allocationsMap[id]\n      const allocation = this.allocations[index]\n      // Resizing smaller\n      if (size == allocation.size) {\n        return allocation\n      } else if (size < allocation.size) {\n        // Split this block into 2. We use the first one for our item, and the second is put on the free list.\n        const splitBlockSize = allocation.size - size\n        // this.allocations.splice(index + 1, 0, new Allocation1D(allocation.start + size, splitBlockSize))\n        this.addBlock(index + 1, new Allocation1D(allocation.start + size, splitBlockSize))\n        this.freeBlock(index + 1)\n        allocation.size = size\n\n        return allocation\n      } else {\n        // Try to consume any free blocks directly to our right.\n        const nextIndex = index + 1\n        if (this.freeList.includes(nextIndex) && allocation.size + this.allocations[nextIndex].size >= size) {\n          const freeBlock = this.allocations[nextIndex]\n          if (allocation.size + freeBlock.size == size) {\n            // consume this free block\n            allocation.size += freeBlock.size\n            this.freeSpace -= freeBlock.size\n            this.freeList.splice(this.freeList.indexOf(nextIndex), 1)\n            // this.allocations.splice(nextIndex, 1)\n            this.removeBlock(nextIndex)\n            return allocation\n          } else {\n            // We want to shrink the next block by the amount we consumed\n            const consumed = size - allocation.size\n            allocation.size += consumed\n            this.freeSpace -= consumed\n            freeBlock.start += consumed\n            freeBlock.size -= consumed\n            return allocation\n          }\n        } else {\n          // free up this slot an find a new one\n          // If the slot was at the end of the allocated memory, just decrement\n          // the allocated space making it immediately available for use.\n          delete this.allocationsMap[id]\n          if (allocation.start + allocation.size == this.allocatedSpace) {\n            this.removeBlock(index)\n            this.allocatedSpace -= allocation.size\n          } else {\n            this.freeBlock(index)\n          }\n        }\n      }\n    }\n\n    let freeItemIndex = -1\n    for (let i = 0; i < this.freeList.length; i++) {\n      const freeIndex = this.freeList[i]\n      const allocation = this.allocations[freeIndex]\n      if (allocation.size == size) {\n        freeItemIndex = freeIndex\n        break\n      } else if (allocation.size > size) {\n        freeItemIndex = freeIndex\n      }\n    }\n\n    if (freeItemIndex != -1) {\n      const freeItem = this.allocations[freeItemIndex]\n      this.freeSpace -= freeItem.size\n      this.freeList.splice(this.freeList.indexOf(freeItemIndex), 1)\n      if (freeItem.size > size) {\n        // Split this block into 2. We use the first one for our item, and the second is put on the free list.\n        const splitBlockSize = freeItem.size - size\n        // this.allocations.splice(freeItemIndex + 1, 0, new Allocation1D(freeItem.start + size, splitBlockSize))\n        this.addBlock(freeItemIndex + 1, new Allocation1D(freeItem.start + size, splitBlockSize))\n        this.freeBlock(freeItemIndex + 1)\n\n        // sort the free list from biggest to smallest\n        this.freeList.sort((a, b) => this.allocations[a].size < this.allocations[b].size)\n\n        this.allocations[freeItemIndex].size = size\n      }\n      this.allocationsMap[id] = freeItemIndex\n    } else {\n      const start = this.allocatedSpace\n      const index = this.allocations.length\n      this.allocatedSpace += size\n      const reserved = MathFunctions.nextPow2(this.allocatedSpace)\n      if (reserved != this.reservedSpace) {\n        this.reservedSpace = reserved\n        this.emit('resized', { reservedSpace: this.reservedSpace })\n      }\n      this.allocations.push(new Allocation1D(start, size))\n      this.allocationsMap[id] = index\n    }\n    return this.allocations[this.allocationsMap[id]]\n  }\n\n  /**\n   * Adds a new block\n   * @private\n   *\n   * @param {number} index - The index where the block should be inserted.\n   * @param {Allocation1D} allocation - The allocation to insert\n   */\n  addBlock(index, allocation) {\n    this.allocations.splice(index, 0, allocation)\n    for (const id in this.allocationsMap) {\n      if (this.allocationsMap[id] >= index) {\n        this.allocationsMap[id]++\n      }\n    }\n    for (let i = 0; i < this.freeList.length; i++) {\n      if (this.freeList[i] >= index) {\n        this.freeList[i]++\n      }\n    }\n  }\n\n  /**\n   * Remove a new block\n   * @private\n   *\n   * @param {number} index - The index where the block should be inserted.\n   * @param {Allocation1D} allocation - The allocation to insert\n   */\n  removeBlock(index) {\n    this.allocations.splice(index, 1)\n    for (const id in this.allocationsMap) {\n      if (this.allocationsMap[id] > index) {\n        this.allocationsMap[id]--\n      }\n    }\n    for (let i = 0; i < this.freeList.length; i++) {\n      if (this.freeList[i] > index) {\n        this.freeList[i]--\n      }\n    }\n  }\n\n  /**\n   * Frees a block by either growing neighboring blocks or adding a new free block\n   * @private\n   *\n   * @param {number} index - The index of the block to free.\n   */\n  freeBlock(index) {\n    const allocation = this.allocations[index]\n    this.freeSpace += allocation.size\n\n    // check for free blocks on either side of the allocated space\n    // and allow them to consume this block intead of adding a new smaller\n    // block.\n    const prevIndex = index - 1\n    if (this.freeList.includes(prevIndex)) {\n      const prevAllocation = this.allocations[prevIndex]\n      prevAllocation.size += allocation.size\n      this.removeBlock(index)\n      return\n    }\n\n    const nextIndex = index + 1\n    if (this.freeList.includes(nextIndex)) {\n      const nextAllocation = this.allocations[nextIndex]\n      nextAllocation.start -= allocation.size\n      nextAllocation.size += allocation.size\n      this.removeBlock(index)\n      return\n    }\n\n    this.freeList.push(index)\n  }\n\n  /**\n   * Deallocate space for an existing item, making it free for other uses.\n   *\n   * @param {number} id - The unique numerical identifer for the block.\n   */\n  deallocate(id) {\n    const index = this.allocationsMap[id]\n    if (index == undefined) {\n      throw new Error(`allocation ${id} does not exist.`)\n    }\n    this.freeBlock(index)\n    delete this.allocationsMap[id]\n  }\n\n  /**\n   * Returns the ratio of fragmented memory over reserved memory.\n   *\n   * @return {number} The fragmentation ratio. Between 0 and some value less than 1\n   */\n  getFragmentation() {\n    return this.freeSpace / this.allocatedSpace\n  }\n\n  /**\n   * Defragment the memory space reducing memory requirements.\n   * TODO: Implement this method.\n   */\n  defragment() {\n    // move the freeblocks to the end of the memory so that\n    // we can then reduce the memory used.\n  }\n\n  /**\n   * Checks that the allocations are consistent and not corrupt in any way.\n   */\n  verifyConsistency() {\n    if (Object.keys(this.allocationsMap).length + this.freeList.length != this.allocations.length) {\n      throw new Error('number of blocks does not match the number of allocations')\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const id in this.allocationsMap) {\n      const index = this.allocationsMap[id]\n      if (this.freeList.includes(index)) {\n        // eslint-disable-next-line no-throw-literal\n        throw new Error('block of used memory is also on the free list')\n      }\n    }\n    let size = 0\n    for (let i = 0; i < this.allocations.length; i++) {\n      const allocation = this.allocations[i]\n      if (allocation.start != size) {\n        // eslint-disable-next-line no-throw-literal\n        throw 'blocks of memory are not sequential'\n      }\n      size += allocation.size\n    }\n    if (size != this.allocatedSpace) {\n      // eslint-disable-next-line no-throw-literal\n      throw `allocated size: ${this.allocatedSpace}  does not match allocated blocks: ${size}`\n    }\n    if (this.reservedSpace < this.allocatedSpace) {\n      // eslint-disable-next-line no-throw-literal\n      throw `reserved space: ${this.reservedSpace} is less than allocated space: ${this.allocatedSpace}`\n    }\n  }\n}\n\nexport { Allocator1D }\n","const POINTER_TYPES = {\n  mouse: 'mouse',\n  touch: 'touch',\n  xr: 'xr',\n}\n\nexport { POINTER_TYPES }\n","import { EventEmitter } from '../Utilities/index'\n\nlet counter = 0\n\n/** Class representing a ref counted object. RefCounted\n *  objects track ownership and allow explicit cleanup\n *  of resources. This is necessary when JavaScript\n *  objects own references to GPU resources that need to\n *  be cleaned up when the JavaScript object is destroyed.\n * @private\n */\nclass RefCounted extends EventEmitter {\n  /**\n   * Create a ref counted object.\n   */\n  constructor() {\n    super()\n    if (this.constructor.name == 'RefCounted') {\n      throw new Error('RefCounted should not be instantiated directly.')\n    }\n    this.__id = ++counter\n    this.__refs = []\n    this.__destroyed = false\n  }\n\n  /**\n   * Returns the unique id of the object. Every Object has a unique\n   * identifier which is based on a counter that is incremented.\n   * @return {any} - The return value.\n   */\n  getId() {\n    return this.__id\n  }\n\n  /**\n   * The numRefs method.\n   * @return {number} - The return value.\n   */\n  numRefs() {\n    return this.__refs.length\n  }\n\n  /**\n   * The addRef method.\n   * @param {any} referer - The referer value.\n   * @return {boolean} - The return value.\n   */\n  addRef(referer) {\n    if (!referer) throw new Error('Error in RefCounted.addRef: Must provide a referer')\n\n    // Note: an object can be reffeed multiple times.\n    // e.g. we can create a temporary ref while we re-attach a tree item to a new parent.\n    this.__refs.push(referer)\n    return true\n  }\n\n  /**\n   * The removeRef method.\n   * @param {any} referer - The referer value.\n   */\n  removeRef(referer) {\n    if (!referer) throw new Error('Error in RefCounted.removeRef: Must provide a referer')\n    const index = this.__refs.indexOf(referer)\n    if (index == -1) throw new Error('Error in RefCounted.removeRef: referer not found in refs list.')\n\n    this.__refs.splice(index, 1)\n    if (this.__refs.length == 0) {\n      this.destroy()\n    }\n  }\n\n  /**\n   * The getRefer method.\n   * @param {number} index - The index value.\n   * @return {any} - The return value.\n   */\n  getRefer(index) {\n    return this.__refs[index]\n  }\n\n  /**\n   * The getRefIndex method.\n   * @param {any} referer - The referer value.\n   * @return {any} - The return value.\n   */\n  getRefIndex(referer) {\n    return this.__refs.indexOf(referer)\n  }\n\n  /**\n   * Returns true if this object has already been destroyed.\n   * @return {boolean} - Returns true or false.\n   */\n  isDestroyed() {\n    return this.__destroyed\n  }\n\n  /**\n   * The destroy method is invoked when the last owner\n   * is removed from a RefCounted object. Derived objects can\n   * override this method to perform explicit cleanup.\n   * The destructing signal is triggered so observers can\n   * respond to this objects destruction.\n   */\n  destroy() {\n    this.__destroyed = true\n    // console.log(this.constructor.name + \" destructing\");\n    this.emit('destructing', {})\n  }\n}\nexport { RefCounted }\n","/* eslint-disable guard-for-in */\n/* eslint-disable valid-jsdoc */\nimport { EventEmitter } from '../Utilities/EventEmitter'\nimport { Registry } from '../Registry'\n\n/**\n * Class that allows other classes to be parameterized by `Parameter` type of objects.\n * Not only hosting parameters, but their events.\n *\n * @extends {EventEmitter}\n */\nclass ParameterOwner extends EventEmitter {\n  /**\n   * Creates an instance of ParameterOwner by initializing parameter hosting mappings and events.\n   * <br>\n   * Every Object has a unique identifier which is based on a counter that is incremented.\n   */\n  constructor() {\n    super()\n    this.__params = []\n    this.__paramMapping = {}\n    this.deprecatedParamMapping = {}\n    this.__paramEventListenerIDs = {}\n  }\n\n  // --- Params ---\n\n  /**\n   * @deprecated\n   * Returns the number of parameters current object has.\n   *\n   * @return {number} - Amount of parameters in current object.\n   */\n  numParameters() {\n    console.warn('Deprecated. Use #getNumParameters instead.')\n    return this.getNumParameters()\n  }\n\n  /**\n   * Returns the number of parameters current object has.\n   *\n   * @return {number} - Amount of parameters in current object.\n   */\n  getNumParameters() {\n    return this.__params.length\n  }\n\n  /**\n   * Returns all the parameters of the object.\n   *\n   * @return {array} - Parameter List\n   */\n  getParameters() {\n    return this.__params\n  }\n\n  /**\n   * Returns the index of a parameter in parameter list.\n   *\n   * @param {string} paramName - Name of the parameter.\n   * @return {number} - Position in the array\n   */\n  getParameterIndex(paramName) {\n    return this.__paramMapping[paramName]\n  }\n\n  /**\n   * Returns `Parameter` object in a given index\n   *\n   * @param {number} index - Position of the parameter in the array\n   * @return {Parameter} - Parameter object value\n   */\n  getParameterByIndex(index) {\n    return this.__params[index]\n  }\n\n  /**\n   * Validates if the specified parameter exists in the object.\n   *\n   * @param {string} paramName - The parameter name.\n   * @return {boolean} - The return value.\n   */\n  hasParameter(paramName) {\n    return paramName in this.__paramMapping\n  }\n\n  /**\n   * Add a mapping from one name to a new parameter.\n   * This is used to handle migrating parameters to new names.\n   *\n   * @param {string} key - The parameter name.\n   * @param {string} paramName - The parameter name.\n   * @return {boolean} - The return value.\n   */\n  addParameterDeprecationMapping(key, paramName) {\n    this.deprecatedParamMapping[key] = paramName\n  }\n\n  /**\n   * Returns `Parameter` object using the given name\n   *\n   * @param {string} paramName - The parameter name.\n   * @return {Parameter} - Parameter object value\n   */\n  getParameter(paramName) {\n    let index = this.__paramMapping[paramName]\n    if (index == undefined) {\n      const newParamName = this.deprecatedParamMapping[paramName]\n      if (!newParamName) return null\n      else {\n        console.warn(`Parameter name ${paramName} is now deprecated. Please use ${newParamName} instead.`)\n        index = this.__paramMapping[newParamName]\n      }\n    }\n    return this.__params[index]\n  }\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   * @param {object} event - The event object emitted by the parameter.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    this.emit('parameterValueChanged', event)\n  }\n\n  /**\n   * Adds `Parameter` object to the owner's parameter list.\n   *\n   * @emits `parameterAdded` with the name of the param.\n   * @param {Parameter} param - The parameter to add.\n   * @return {Parameter} - With `owner` and `valueChanged` event set.\n   */\n  addParameter(param) {\n    return this.insertParameter(param, this.__params.length)\n  }\n\n  /**\n   * Adds `Parameter` object to the owner's parameter list using the index.\n   * It replaces the event in the specified index.\n   *\n   *\n   * @emits `parameterAdded` with the name of the param.\n   * @param {Parameter} param - The parameter to insert.\n   * @param {number} index - The index value.\n   * @return {Parameter} - With `owner` and `valueChanged` event set.\n   */\n  insertParameter(param, index) {\n    const name = param.getName()\n    if (this.__paramMapping[name] != undefined) {\n      console.warn('Replacing Parameter:' + name)\n      this.removeParameter(name)\n    }\n    param.setOwner(this)\n \n\n    this.__paramEventListenerIDs[name] = param.on('valueChanged', (event) => {\n      // Note: spread operators cause errors on iOS 11.\n      const newEvent = { param }\n      for (const key in event) newEvent[key] = event[key]\n      this.__parameterValueChanged(newEvent)\n    })\n\n    this.__params.splice(index, 0, param)\n\n    for (let i = index; i < this.__params.length; i++) {\n      this.__paramMapping[this.__params[i].getName()] = i\n    }\n    this.emit('parameterAdded', { name })\n    return param\n  }\n\n  /**\n   * Removes `Parameter` from owner, by using parameter's name.\n   * @emits `parameterRemoved` with the name of the param.\n   * @param {string} name - The parameter name.\n   */\n  removeParameter(name) {\n    if (this.__paramMapping[name] == undefined) {\n      throw new Error('Unable to remove Parameter:' + name)\n    }\n    const index = this.__paramMapping[name]\n    const param = this.__params[this.__paramMapping[name]]\n\n    param.removeListenerById('valueChanged', this.__paramEventListenerIDs[name])\n    this.__params.splice(index, 1)\n\n    delete this.__paramMapping[name]\n    for (let i = index; i < this.__params.length; i++) {\n      this.__paramMapping[this.__params[i].getName()] = i\n    }\n\n    this.emit('parameterRemoved', { name })\n  }\n\n  /**\n   * Replaces old `Parameter` by passing a new one with the same name.\n   *\n   * @param {Parameter} param - The parameter to replace.\n   * @return {Parameter} - `Parameter` with `valueChanged` event set.\n   */\n  replaceParameter(param) {\n    const name = param.getName()\n    if (this.__paramMapping[name] == undefined) {\n      throw new Error('Unable to replace Parameter:' + paramName)\n    }\n    const index = this.__paramMapping[name]\n    this.removeParameter(name)\n    this.insertParameter(param, index)\n    return param\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const json = {}\n    const paramsJSON = {}\n    let savedParams = 0\n    for (const param of this.__params) {\n      const paramJSON = param.toJSON(context)\n      if (paramJSON) {\n        paramsJSON[param.getName()] = paramJSON\n        savedParams++\n      }\n    }\n    if (savedParams > 0) json.params = paramsJSON\n    return json\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.params) {\n      for (const key in j.params) {\n        const pj = j.params[key]\n        const param = this.getParameter(key)\n        if (!param) console.warn('Param not found:' + key)\n        else {\n          if (pj.paramPath) {\n            context.resolvePath(\n              pj.paramPath,\n              (param) => {\n                this.replaceParameter(param)\n              },\n              (reason) => {\n                console.warn('Unable to resolve shared parameter:' + pj.paramPath)\n              }\n            )\n          } else {\n            param.fromJSON(pj, context)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Uses passed in BinReader object(containing an Int32 array with all the parameters) to reconstruct all parameters state.\n   * <br>\n   * In each iteration of the array, propType and propName are extracted and\n   * used to build the right `Parameter` class. Then all of them are added to the object.\n   *\n   * @emits `parameterAdded` with the name of the param.\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    // TODO: make this work\n\n    if (context.versions['zea-engine'].compare([0, 0, 3]) >= 0) {\n      const numProps = reader.loadUInt32()\n      for (let i = 0; i < numProps; i++) {\n        const propType = reader.loadStr()\n        const propName = reader.loadStr()\n        let param = this.getParameter(propName)\n        if (!param) {\n          param = Registry.constructClass(propType, propName)\n          if (!param) {\n            console.error('Unable to construct prop:' + propName + ' of type:' + propType)\n            continue\n          }\n          this.addParameter(param)\n        }\n        param.readBinary(reader, context)\n      }\n    }\n  }\n\n  /**\n   * Converts object's JSON value and converts it to a string.\n   *\n   * @return {string} - String of object's parameter list state.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * Copies Parameters from another `ParameterOwner` to current object.\n   *\n   * @param {ParameterOwner} src - The ParameterOwner copy from.\n   * @param {object} context - The context value.\n   */\n  copyFrom(src, context) {\n    // Note: Loop over the parameters in reverse order,\n    // this is because often, parameter dependencies\n    // are bottom to top (bottom params dependent on higher params).\n    // This means that as a parameter is set with a new value\n    // it will dirty the params below it.\n    let i = src.getNumParameters()\n    while (i--) {\n      const srcParam = src.getParameterByIndex(i)\n      const param = this.getParameter(srcParam.getName())\n      if (param) {\n        // Note: we are not cloning the values.\n        param.loadValue(srcParam.getValue())\n      } else {\n        this.addParameter(srcParam.clone(context))\n      }\n    }\n  }\n}\n\nexport { ParameterOwner }\n","import util from 'util'\n\n/* eslint-disable no-unused-vars */\nimport { Vec2, Vec3, Quat, Color, Box2, Box3 } from '../Math/index'\nimport { MathFunctions } from '../Utilities/MathFunctions'\n\n/**\n * Reads binary data in a specific encoding. Used in loading binary data such as zcad files.\n */\nclass BinReader {\n  /**\n   * Create a bin reader.\n   *\n   * @param {Buffer} data - The data buffer.\n   * @param {number} byteOffset - The byte offset value to start reading the buffer.\n   * @param {boolean} isMobileDevice - The isMobileDevice value.\n   */\n  constructor(data, byteOffset = 0, isMobileDevice = true) {\n    this.__data = data\n    this.__byteOffset = byteOffset\n    this.__dataView = new DataView(this.__data)\n    this.__isMobileDevice = isMobileDevice\n    this.utf8decoder = util.TextDecoder ? new util.TextDecoder() : new TextDecoder()\n  }\n\n  /**\n   * Returns state of whether or not the `BinReader` object was instantiated from a mobile device.\n   *\n   * @return {Boolean} - Returns true is a mobile device is detected.\n   */\n  get isMobileDevice() {\n    return this.__isMobileDevice\n  }\n\n  /**\n   * Returns the data buffer we're reading from.\n   *\n   * @return {Buffer} - The data buffer we are reading from,\n   */\n  get data() {\n    return this.__data\n  }\n\n  /**\n   * Returns the length of the buffer.\n   *\n   * @return {number} - The total length of the buffer\n   */\n  get byteLength() {\n    return this.__dataView.byteLength\n  }\n\n  /**\n   * Returns remaining length of the buffer to read.\n   *\n   * @return {number} - The remaining length of the buffer to read.\n   */\n  get remainingByteLength() {\n    return this.__dataView.byteLength - this.__byteOffset\n  }\n\n  /**\n   * Returns current byte offset in the buffer.\n   * @return {number} - The current offset in the binary buffer\n   */\n  pos() {\n    return this.__byteOffset\n  }\n\n  /**\n   * Sets the byte offset value.\n   * @param {number} byteOffset - The byteOffset param.\n   */\n  seek(byteOffset) {\n    this.__byteOffset = byteOffset\n  }\n\n  /**\n   * Adds offset bytes to current offset value.\n   *\n   * @param {number} byteOffset - The byte Offset amount.\n   */\n  advance(byteOffset) {\n    this.__byteOffset += byteOffset\n  }\n\n  /**\n   * Returns the unsigned Uint8 value at current byte offset position,\n   * and adds one byte to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadUInt8() {\n    const result = this.__dataView.getUint8(this.__byteOffset)\n    this.__byteOffset += 1\n    return result\n  }\n\n  /**\n   * Returns the unsigned Uint16 value at current byte offset position,\n   * and adds two bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadUInt16() {\n    const result = this.__dataView.getUint16(this.__byteOffset, true)\n    this.__byteOffset += 2\n    return result\n  }\n\n  /**\n   * Returns the unsigned Uint32 value at current byte offset position,\n   * and adds four bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadUInt32() {\n    const result = this.__dataView.getUint32(this.__byteOffset, true)\n    this.__byteOffset += 4\n    return result\n  }\n\n  /**\n   * Returns the signed Int32 value at current byte offset position,\n   * and adds four bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadSInt32() {\n    const result = this.__dataView.getInt32(this.__byteOffset, true)\n    this.__byteOffset += 4\n    return result\n  }\n\n  /**\n   * Returns the Float16 value at current byte offset position,\n   * and adds four bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadFloat16() {\n    const uint16 = this.loadUInt16()\n    return MathFunctions.decode16BitFloat(uint16)\n  }\n\n  /**\n   * Returns the Float16 value at current byte offset position,\n   * and adds two bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadUFloat16() {\n    const result = this.loadFloat16()\n    if (result < 0.0) {\n      return 2048.0 - result // Note: subtract a negative number to add it.\n    } else {\n      return result\n    }\n  }\n\n  /**\n   * Returns a single signed Float16 value at current byte offset position from 2 unsigned Int8 values,\n   * and adds two bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadFloat16From2xUInt8() {\n    const result = this.__dataView.getFloat16(this.__byteOffset, true)\n    // const uint8s = this.loadUInt8Array(2);\n    // return Math.decode16BitFloat(uint8s);\n    this.__byteOffset += 2\n    return result\n  }\n\n  /**\n   * Loads and returns a single Signed integer value from 2 Unsigned Float16 values.\n   * @return {number} - The return value.\n   */\n  loadUInt32From2xUFloat16() {\n    const partA = this.loadUFloat16()\n    const partB = this.loadUFloat16()\n    return partA + partB * 4096\n  }\n\n  /**\n   * Loads and returns a single Signed integer value from 2 signed Float16 values.\n   * @return {number} - The return value.\n   */\n  loadSInt32From2xFloat16() {\n    const partA = this.loadFloat16()\n    const partB = this.loadFloat16()\n    return partA + partB * 2048\n  }\n\n  /**\n   * Returns the Float32 value at current byte offset position,\n   * and adds four bytes to the offset.\n   *\n   * @return {number} - The return value.\n   */\n  loadFloat32() {\n    const result = this.__dataView.getFloat32(this.__byteOffset, true)\n    this.__byteOffset += 4\n    return result\n  }\n\n  /**\n   * Reads buffer and return an unsigned Int8 array with the specified size,\n   * starting from current byte offset.<br>\n   * Byte offset is increased by the specified byte size.\n   *\n   * @param {number} size - The size param.\n   * @param {boolean} clone - The clone param.\n   * @return {Uint8Array} - The return value.\n   */\n  loadUInt8Array(size = undefined, clone = false) {\n    if (size == undefined) size = this.loadUInt32()\n    const result = new Uint8Array(this.__data, this.__byteOffset, size)\n    this.__byteOffset += size\n    const pad = this.__byteOffset % 4\n    // this.readPad();\n    return result\n  }\n\n  /**\n   * Reads buffer and return an unsigned Int16 array with the specified size,\n   * starting from current byte offset.<br>\n   * Byte offset is increased by the specified byte size x 2.\n   *\n   * @param {number} size - The size param.\n   * @param {boolean} clone - The clone param.\n   * @return {Uint16Array} - The return value.\n   */\n  loadUInt16Array(size = undefined, clone = false) {\n    if (size == undefined) size = this.loadUInt32()\n    if (size == 0) return new Uint16Array()\n    this.readPad(2)\n    let result\n    if (this.__isMobileDevice) {\n      result = new Uint16Array(size)\n      for (let i = 0; i < size; i++) {\n        result[i] = this.__dataView.getUint16(this.__byteOffset, true)\n        this.__byteOffset += 2\n      }\n    } else {\n      result = new Uint16Array(this.__data, this.__byteOffset, size)\n      this.__byteOffset += size * 2\n    }\n    // this.readPad();\n    return result\n  }\n\n  /**\n   * Reads buffer and return an unsigned Int32 array with the specified size,\n   * starting from current byte offset.<br>\n   * Byte offset is increased by the specified byte size x 4.\n   *\n   * @param {number} size - The size param.\n   * @param {boolean} clone - The clone param.\n   * @return {Uint32Array} - The return value.\n   */\n  loadUInt32Array(size = undefined, clone = false) {\n    if (size == undefined) size = this.loadUInt32()\n    if (size == 0) return new Uint32Array()\n    this.readPad(4)\n    let result\n    if (this.__isMobileDevice) {\n      result = new Uint32Array(size)\n      for (let i = 0; i < size; i++) {\n        result[i] = this.__dataView.getUint32(this.__byteOffset, true)\n        this.__byteOffset += 4\n      }\n    } else {\n      result = new Uint32Array(this.__data, this.__byteOffset, size)\n      this.__byteOffset += size * 4\n    }\n    return result\n  }\n\n  /**\n   * Reads buffer and return a Float32 array with the specified size,\n   * starting from current byte offset.<br>\n   * Byte offset is increased by the specified byte size x 4.\n   *\n   * @param {number} size - The size param.\n   * @param {boolean} clone - The clone param.\n   * @return {Float32Array} - The return value.\n   */\n  loadFloat32Array(size = undefined, clone = false) {\n    if (size == undefined) size = this.loadUInt32()\n    if (size == 0) return new Float32Array()\n    this.readPad(4)\n    let result\n    if (this.__isMobileDevice) {\n      result = new Float32Array(size)\n      for (let i = 0; i < size; i++) {\n        result[i] = this.__dataView.getFloat32(this.__byteOffset, true)\n        this.__byteOffset += 4\n      }\n    } else {\n      result = new Float32Array(this.__data, this.__byteOffset, size)\n      this.__byteOffset += size * 4\n    }\n    return result\n  }\n\n  /**\n   * Returns next string.\n   * First looks for the string length description in the next four bytes in the buffer(Starting from byte offset).\n   *\n   * @return {string} - The return value.\n   */\n  loadStr() {\n    const numChars = this.loadUInt32()\n    const chars = new Uint8Array(this.__data, this.__byteOffset, numChars)\n    this.__byteOffset += numChars\n    return this.utf8decoder.decode(chars)\n  }\n\n  /**\n   * Returns an array of strings.\n   * First reading the size of the array then reading each string.\n   *\n   * @return {Array} - The return value.\n   */\n  loadStrArray() {\n    const size = this.loadUInt32()\n    const result = []\n    for (let i = 0; i < size; i++) {\n      result[i] = this.loadStr()\n    }\n    return result\n  }\n\n  /**\n   * Creates and returns a `Vec2` object with the next two signed Int32 values in the buffer.\n   *\n   * @return {Vec2} - Returns a Vec2.\n   */\n  loadSInt32Vec2() {\n    const x = this.loadSInt32()\n    const y = this.loadSInt32()\n    return new Vec2(x, y)\n  }\n\n  /**\n   * Creates and returns a `Vec2` object with the next two unsigned Int32 values in the buffer.\n   * @return {Vec2} - Returns a Vec2.\n   */\n  loadUInt32Vec2() {\n    const x = this.loadUInt32()\n    const y = this.loadUInt32()\n    return new Vec2(x, y)\n  }\n\n  /**\n   * Creates and returns a `Vec2` object with the next two Float16 values in the buffer.\n   *\n   * @return {Vec2} - Returns a Vec2.\n   */\n  loadFloat16Vec2() {\n    const x = this.loadFloat16()\n    const y = this.loadFloat16()\n    return new Vec2(x, y)\n  }\n\n  /**\n   * Creates and returns a `Vec2` object with the next two Float32 values in the buffer.\n   * @return {Vec2} - Returns a Vec2.\n   */\n  loadFloat32Vec2() {\n    const x = this.loadFloat32()\n    const y = this.loadFloat32()\n    return new Vec2(x, y)\n  }\n\n  /**\n   * Creates and returns a `Vec3` object with the next three Float16 values in the buffer.\n   *\n   * @return {Vec3} - Returns a Vec3.\n   */\n  loadFloat16Vec3() {\n    const x = this.loadFloat16()\n    const y = this.loadFloat16()\n    const z = this.loadFloat16()\n    return new Vec3(x, y, z)\n  }\n\n  /**\n   * Creates and returns a `Vec3` object with the next three Float32 values in the buffer.\n   *\n   * @return {Vec3} - Returns a Vec3.\n   */\n  loadFloat32Vec3() {\n    const x = this.loadFloat32()\n    const y = this.loadFloat32()\n    const z = this.loadFloat32()\n    return new Vec3(x, y, z)\n  }\n\n  /**\n   * Creates and returns a `Quat` object with the next four Float16 values in the buffer.\n   *\n   * @return {Quat} - Returns a Quat.\n   */\n  loadFloat16Quat() {\n    const x = this.loadFloat16()\n    const y = this.loadFloat16()\n    const z = this.loadFloat16()\n    const w = this.loadFloat16()\n    return new Quat(x, y, z, w)\n  }\n\n  /**\n   * Creates and returns a `Quat` object with the next four Float32 values in the buffer.\n   * @return {Quat} - Returns a Quat.\n   */\n  loadFloat32Quat() {\n    const x = this.loadFloat32()\n    const y = this.loadFloat32()\n    const z = this.loadFloat32()\n    const w = this.loadFloat32()\n    return new Quat(x, y, z, w)\n  }\n\n  /**\n   * Creates and returns a `Color` object with the next three Float32 values in the buffer.\n   *\n   * @return {Color} - Returns a Color.\n   */\n  loadRGBFloat32Color() {\n    const r = this.loadFloat32()\n    const g = this.loadFloat32()\n    const b = this.loadFloat32()\n    return new Color(r, g, b)\n  }\n\n  /**\n   * Creates and returns a RGBA `Color` object with the next four Float32 values in the buffer.\n   * @return {Color} - Returns a Color.\n   */\n  loadRGBAFloat32Color() {\n    const r = this.loadFloat32()\n    const g = this.loadFloat32()\n    const b = this.loadFloat32()\n    const a = this.loadFloat32()\n    return new Color(r, g, b, a)\n  }\n\n  /**\n   * Creates and returns a `Color` object with the next three unsigned Int8 values in the buffer.\n   * @return {Color} - Returns a Color.\n   */\n  loadRGBUInt8Color() {\n    const r = this.loadUInt8()\n    const g = this.loadUInt8()\n    const b = this.loadUInt8()\n    return new Color(r / 255, g / 255, b / 255)\n  }\n\n  /**\n   * Creates and returns a RGBA `Color` object with the next four unsigned Int8 values in the buffer.\n   * @return {Color} - Returns a Color.\n   */\n  loadRGBAUInt8Color() {\n    const r = this.loadUInt8()\n    const g = this.loadUInt8()\n    const b = this.loadUInt8()\n    const a = this.loadUInt8()\n    return new Color(r / 255, g / 255, b / 255, a / 255)\n  }\n\n  /**\n   * Creates and returns a `Box2` object with the next four Float32 values in the buffer.\n   * Next four because it creates two Vec2.\n   *\n   * @return {Box2} - Returns a Box2.\n   */\n  loadBox2() {\n    return new Box2(this.loadFloat32Vec2(), this.loadFloat32Vec2())\n  }\n\n  /**\n   * Creates and returns a `Box2` object with the next six Float32 values in the buffer.\n   * Next four because it creates two Vec3.\n   *\n   * @return {Box3} - Returns a Box3.\n   */\n  loadBox3() {\n    return new Box3(this.loadFloat32Vec3(), this.loadFloat32Vec3())\n  }\n\n  /**\n   * Given a stridee value, advance the pointer to the end of the current stride.\n   * @param {number} stride - The stride param.\n   */\n  readPad(stride) {\n    const pad = this.__byteOffset % stride\n    if (pad != 0) this.__byteOffset += stride - pad\n  }\n}\n\nexport { BinReader }\n","/* eslint-disable no-unused-vars */\nimport { ParameterOwner } from './ParameterOwner.js'\nimport { BinReader } from './BinReader.js'\nimport { Registry } from '../Registry'\n\nlet numBaseItems = 0\n\n/**\n * Base class for Items in the scene. It can be parameterized and can emit events.\n *\n * **Events**\n * * **nameChanged:** Emitted every time the Item's name is change. mostly in `setName` method.\n * * **selectedChanged:** Emitted `selected` status changes, mostly in `setSelected` method.\n *\n * @extends {ParameterOwner}\n */\nclass BaseItem extends ParameterOwner {\n  /**\n   * Create a base item by defining its name.\n   *\n   * @param {string} name - The name of the base item.\n   */\n  constructor(name) {\n    super()\n    this.__name = name ? name : ''\n    this.__path = [this.__name]\n    this.__ownerItem = undefined // TODO: will create a circular ref. Figure out and use weak refs\n\n    // Note: one day we will remove the concept of 'selection' from the engine\n    // and keep it only in UX. to Select an item, we will add it to the selection\n    // in the selection manager. Then the selection group will apply a highlight.\n    this.__selectable = true\n    this.__selected = false\n\n    this.__metaData = {}\n\n    numBaseItems++\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * The getNumBaseItems method returns the total number of base items created.\n   * This method is used in debugging memory consumption.\n   *\n   * @return {number} - Returns the total number of base items created.\n   */\n  static getNumBaseItems() {\n    return numBaseItems\n  }\n\n  // ////////////////////////////////////////\n  // Name and Path\n\n  /**\n   * Returns the name of the base item.\n   *\n   * @return {string} - Returns the base item name.\n   */\n  getName() {\n    return this.__name\n  }\n\n  /**\n   * Sets the name of the base item(Updates path).\n   *\n   * @emits `nameChanged` with `newName` and `oldName` data.\n   * @param {string} name - The base item name.\n   */\n  setName(name) {\n    if (this.__name != name) {\n      const oldName = this.__name\n      this.__name = name\n      this.__updatePath()\n      this.emit('nameChanged', { newName: name, oldName })\n    }\n  }\n\n  /**\n   * When the name or the hierarchy changes, this method\n   * recomputes and caches the path of this item.\n   * @private\n   */\n  __updatePath() {\n    if (this.__ownerItem == undefined) this.__path = [this.__name]\n    else {\n      this.__path = [...this.__ownerItem.getPath(), this.__name]\n    }\n  }\n\n  /**\n   * Returns the current path of the item in the tree as an array of names.\n   *\n   * @return {array} - Returns an array.\n   */\n  getPath() {\n    return this.__path\n  }\n\n  // Path Traversal\n\n  /**\n   * The resolvePath method traverses the subtree from this item down\n   * matching each name in the path with a child until it reaches the\n   * end of the path.\n   *\n   * @param {array} path - The path value.\n   * @param {number} index - The index value.\n   * @return {BaseItem|Parameter} - The return value.\n   */\n  resolvePath(path, index = 0) {\n    if (index == 0) {\n      if (path[0] == '.' || path[0] == this.__name) index++\n    }\n    if (index == path.length) {\n      return this\n    }\n    if (path[index] == '>' && index == path.length - 1) {\n      return this.getParameter(path[index + 1])\n    }\n\n    // Maybe the name is a parameter name.\n    const param = this.getParameter(path[index])\n    if (param) {\n      return param\n    }\n    throw new Error('Invalid path:' + path + '[' + index + '] member not found')\n  }\n\n  // ////////////////////////////////////////\n  // Owner Item\n\n  /**\n   * The getOwner method returns the current owner of the item.\n   * The item is a child of the current owner.\n   *\n   * @return {object} - Returns the current owner.\n   */\n  getOwner() {\n    // return this.__private.get('ownerItem');\n    return this.__ownerItem\n  }\n\n  /**\n   * The setOwner method assigns a new owner to the item.\n   *\n   * @param {object} ownerItem - The new owner item.\n   */\n  setOwner(ownerItem) {\n    // this.__private.set(ownerItem, ownerItem);\n    if (this.__ownerItem !== ownerItem) {\n      this.__ownerItem = ownerItem\n      this.__updatePath()\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Selectability and Selection\n\n  /**\n   * Returns a boolean indicating if this item is selectable.\n   *\n   * @return {boolean} - Returns a boolean indicating if the item is selectable.\n   */\n  getSelectable() {\n    return this.__selectable\n  }\n\n  /**\n   * Modifies the selectability of this item.\n   *\n   * @param {boolean} val - A boolean indicating the selectability of the item.\n   * @return {boolean} - Returns true if value changed.\n   */\n  setSelectable(val) {\n    if (this.__selectable != val) {\n      this.__selectable = val\n      this.emit('selectabilityChanged', { value: this.__selectable })\n      return true\n    }\n    return false\n  }\n\n  /**\n   * The isSelected method.\n   * @return {boolean} - The return value.\n   */\n  isSelected() {\n    return this.__selected\n  }\n\n  /**\n   * Returns `true` if this item has been selected.\n   *\n   * @return {boolean} - The current selection state.\n   */\n  getSelected() {\n    return this.__selected\n  }\n\n  /**\n   * Changes the current state of the selection of this item.\n   *\n   * @emits `selectedChanged` with selected state\n   * @param {boolean} sel - Boolean indicating the new selection state.\n   */\n  setSelected(sel) {\n    this.__selected = sel\n    this.emit('selectedChanged', { selected: this.__selected })\n  }\n\n  // ////////////////////////////////////////\n  // Metadata\n\n  /**\n   * Gets Item's meta-data value by passing the `key` string.\n   *\n   * @param {string} key - The key value under which to check for metadata.\n   * @return {object|string|any} - Returns the metadata associated with the given key.\n   */\n  getMetadata(key) {\n    return this.__metaData[key]\n  }\n\n  /**\n   * Checks to see if there is metadata for a given key.\n   *\n   * @param {string} key - The key value under which to check for metadata.\n   * @return {boolean} - Returns `true` if metadata exists under the given key, otherwise returns `false`.\n   */\n  hasMetadata(key) {\n    return key in this.__metaData\n  }\n\n  /**\n   * Assigns metadata to a given key.\n   *\n   * @param {string} key - The key value under which the metadata is is going to be saved.\n   * @param {object} metaData - The metaData value.\n   */\n  setMetadata(key, metaData) {\n    this.__metaData[key] = metaData\n  }\n\n  /**\n   * Removes metadata for a given key.\n   *\n   * @param {string} key - The key value.\n   */\n  deleteMetadata(key) {\n    delete this.__metaData[key]\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Encodes the current object as a json object.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    j.name = this.__name\n    j.type = Registry.getBlueprintName(this)\n    return j\n  }\n\n  /**\n   * Decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.name) this.__name = j.name\n    super.fromJSON(j, context)\n  }\n\n  /**\n   * Sets state of current Item(Including parameters) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    const type = reader.loadStr()\n    this.setName(reader.loadStr())\n\n    // Note: parameters follow name...\n    super.readBinary(reader, context)\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * Clones this base item and returns a new base item.\n   * <br>\n   * **Note:** Each class should implement clone to be cloneable.\n   * @param {object} context - The context value.\n   */\n  clone(context) {\n    throw new Error(this.constructor.name + ' does not implement its clone method')\n  }\n\n  /**\n   * When a BaseItem is cloned, initially the constructor is\n   * called to generate a new instance. This instance then copies\n   * its values from the source using this method.\n   * This method copies any relevant data from the source object to\n   * ensure that it represents a valid clone.\n   * Derived classes override this method to copy any relevant\n   * data from the source object.\n   *\n   * @param {BaseItem} src - The BaseItem to copy from.\n   * @param {object} context - The context value.\n   */\n  copyFrom(src, context) {\n    super.copyFrom(src, context)\n    this.setName(src.getName())\n  }\n}\n\nexport { BaseItem }\n","const getFileFolder = function (filePath) {\n  return filePath.substring(0, filePath.lastIndexOf('/')) + '/'\n}\n\nconst loadFile = function (url, responseType, onSucceed, onFail, onProgress) {\n  try {\n    const xhr = new XMLHttpRequest()\n    xhr.responseType = responseType\n    xhr.addEventListener('timeout', function (event) {\n      throw new Error('The request for ' + url + ' timed out.')\n    })\n    xhr.addEventListener('error', function (event) {\n      throw new Error('The request for ' + url + ': xhr.readyState:' + xhr.readyState)\n      onFail(xhr.statusText)\n    })\n    xhr.addEventListener('abort', function (event) {\n      throw new Error('The request for ' + url + ': xhr.readyState:' + xhr.readyState)\n      onFail(xhr.statusText)\n    })\n    xhr.addEventListener('loadend', function (event) {\n      if (xhr.status == 200) onSucceed(xhr)\n      else onFail(xhr.statusText)\n    })\n    xhr.open('GET', url, true)\n    xhr.send()\n    // xhr.open();\n  } catch (err) {\n    onFail(err)\n  }\n}\n\nconst loadTextfile = function (url, onSucceed, onFail = undefined, onProgress = undefined) {\n  loadFile(\n    url,\n    'text',\n    (xhr) => {\n      onSucceed(xhr.responseText)\n    },\n    (statusText) => {\n      if (onFail != undefined) onFail(statusText)\n      else {\n        throw new Error('Unable to XHR File:' + url)\n      }\n    },\n    (total, loaded) => {\n      if (onProgress != undefined) onProgress(total, loaded)\n    }\n  )\n}\n\nconst loadJSONfile = function (url, onSucceed, onFail = undefined, onProgress = undefined) {\n  loadFile(\n    url,\n    'json',\n    (xhr) => {\n      onSucceed(xhr.response, xhr)\n    },\n    (statusText) => {\n      if (onFail != undefined) onFail(statusText)\n      else {\n        throw new Error('Unable to XHR File:' + url)\n      }\n    },\n    (total, loaded) => {\n      if (onProgress != undefined) onProgress(total, loaded)\n    }\n  )\n}\n\nconst loadXMLfile = function (url, onSucceed, onFail = undefined, onProgress = undefined) {\n  loadFile(\n    url,\n    'document',\n    (xhr) => {\n      onSucceed(xhr.responseXML)\n    },\n    (statusText) => {\n      if (onFail != undefined) onFail(statusText)\n      else {\n        throw new Error('Unable to XHR File:' + url)\n      }\n    },\n    (total, loaded) => {\n      if (onProgress != undefined) onProgress(total, loaded)\n    }\n  )\n}\n\nconst loadBinfile = function (url, onSucceed, onFail = undefined, onProgress = undefined) {\n  loadFile(\n    url,\n    'arraybuffer',\n    (xhr) => {\n      onSucceed(xhr.response)\n    },\n    (statusText) => {\n      if (onFail != undefined) onFail(statusText)\n      else {\n        throw new Error('Unable to XHR File:' + url)\n      }\n    },\n    (total, loaded) => {\n      if (onProgress != undefined) onProgress(total, loaded)\n    }\n  )\n}\n\nexport { getFileFolder, loadTextfile, loadJSONfile, loadXMLfile, loadBinfile }\n","import { EventEmitter } from '../../Utilities/EventEmitter.js'\nimport { Registry } from '../../Registry'\n\nconst OperatorOutputMode = {\n  OP_WRITE: 0,\n  OP_READ_WRITE: 1,\n}\n\n/**\n * Represents a reactive type of attribute that can be owned by a `ParameterOwner` class.\n *\n * **Events**\n * * **nameChanged:** Triggered when the name of the parameter changes.\n * * **valueChanged:** Triggered when the value of the parameter changes.\n */\nclass Parameter extends EventEmitter {\n  /**\n   * When initializing a new parameter, the passed in value could be anything.\n   * If it is a new type of value, just ensure you register it in the `Registry`.\n   *\n   * How to use it:\n   *\n   * ```javascript\n   *  // Creating a parameter object\n   *  const param = new Parameter('Title', 'Awesome Parameter Value', 'String')\n   *\n   *   // Capturing events\n   *  param.on('valueChanged', (...params) => console.log('Value changed!'))\n   *\n   *  // Changing parameter's value will cause `valueChanged` event to trigger.\n   *  param.setValue('A New Awesome Parameter Value')\n   *  // As result the console log code will execute: Value Changed!\n   * ```\n   *\n   * @param {string} name - The name of the parameter.\n   * @param {object|string|number|any} value - The value of the parameter.\n   * @param {string} dataType - The data type of the parameter.\n   */\n  constructor(name, value, dataType) {\n    super()\n\n    this.__name = name\n    this.__value = value\n    this.__dataType = dataType ? dataType : undefined\n    this.__boundOps = []\n    this.__dirtyOpIndex = 0\n    this.__cleaning = false\n  }\n\n  /**\n   * Copies and returns the exact clone of current parameter\n   *\n   * @return {Parameter} - Clone of current parameter\n   */\n  clone() {\n    const clonedParameter = new Parameter(this.__name, this.__value, this.__dataType)\n    return clonedParameter\n  }\n\n  /**\n   * Returns specified name of the parameter.\n   *\n   * @return {string} - Returns the name.\n   */\n  getName() {\n    return this.__name\n  }\n\n  /**\n   * Sets the name of the current parameter.\n   *\n   * @param {string} name - The base parameter name.\n   * @return {Parameter} - The instance itself.\n   */\n  setName(name) {\n    if (name === this.__name) {\n      return this\n    }\n\n    const prevName = this.__name\n    this.__name = name\n    this.emit('nameChanged', { newName: this.__name, prevName })\n  }\n\n  /**\n   * Returns the owner item of the current parameter.\n   *\n   * @return {ParameterOwner} - The return value.\n   */\n  getOwner() {\n    return this.ownerItem\n  }\n\n  /**\n   * Sets the owner item of the current parameter.\n   *\n   * @param {ParameterOwner} ownerItem - The ownerItem value.\n   */\n  setOwner(ownerItem) {\n    this.ownerItem = ownerItem\n  }\n\n  /**\n   * Returns the parameter's path as an array of strings.\n   * Includes owner's path in case it is owned by a `ParameterOwner`.\n   *\n   * @return {array} - The return value.\n   */\n  getPath() {\n    if (this.ownerItem && this.ownerItem.getName) {\n      return [...this.ownerItem.getPath(), this.__name]\n    } else {\n      return [this.__name]\n    }\n  }\n\n  /**\n   * Returns parameter's data type.\n   *\n   * @return {string} - The return value.\n   */\n  getDataType() {\n    return this.__dataType\n  }\n\n  // ////////////////////////////////////////////////\n  // Operator bindings\n\n  /**\n   * Binds an OperatorOutput to this parameter.\n   *\n   * @param {OperatorOutput} operatorOutput - The output that we are unbinding from the Parameter\n   * @param {number} index - The index(optional) that the output is being bound at.\n   * @return {number} - The index of the bound output.\n   */\n  bindOperatorOutput(operatorOutput, index = -1) {\n    if (index == -1) index = this.__boundOps.length\n    this.__boundOps.splice(index, 0, operatorOutput)\n    // Update the remaining binding indices\n    for (let i = index; i < this.__boundOps.length; i++) {\n      this.__boundOps[i].setParamBindIndex(i)\n    }\n    // If we weren't already dirty, make sure to emit a 'valueChanged' anyway.\n    this.__findFirstOP_WRITE()\n    if (!this.setDirty(index)) this.emit('valueChanged', { mode: 0 })\n    return index\n  }\n\n  /**\n   * The unbindOperator method.\n   *\n   * @param {OperatorOutput} operatorOutput - The output that we are unbinding from the Parameter\n   * @return {boolean} - The return value.\n   */\n  unbindOperator(operatorOutput) {\n    const index = operatorOutput.getParamBindIndex()\n    this.__boundOps.splice(index, 1)\n    // Update the remaining binding indices\n    for (let i = index; i < this.__boundOps.length; i++) {\n      this.__boundOps[i].setParamBindIndex(i)\n    }\n    this.__findFirstOP_WRITE()\n    this.setDirty(Math.max(0, index - 1))\n    return index\n  }\n\n  /**\n   * Find the first operator in our stack which writes using an OP_WRITE connection.\n   * All operators before this op can be ignored during dirty propagation.\n   * @private\n   */\n  __findFirstOP_WRITE() {\n    this.__firstOP_WRITE = this.__boundOps.length\n    if (this.__boundOps.length > 0) {\n      for (this.__firstOP_WRITE--; this.__firstOP_WRITE > 0; this.__firstOP_WRITE--) {\n        // Find the first OP_WRITE binding. (Note: we could cache this)\n        if (this.__boundOps[this.__firstOP_WRITE].getMode() == OperatorOutputMode.OP_WRITE) break\n      }\n    }\n  }\n\n  /**\n   * Dirties this Parameter so subsequent calls to `getValue` will cause an evaluation of its bound operators.\n   *\n   * @param {number} index - Index of the operator\n   * @return {boolean} - `true` if the Parameter was made dirty, else `false` if it was already dirty.\n   */\n  setDirty(index) {\n    // Determine the first operator in the stack that must evaluate to clean the parameter.\n    if (index < this.__dirtyOpIndex) {\n      // If we must dirty all operators in the stack from the last OP_WRITE to the end.\n      // Note: If a setDirty call comes from an op that precedes an OP_WRITE operator, we\n      // can safely discard it, as its output will have no effect on the value of this parameter.\n      let newDirtyIndex = this.__firstOP_WRITE\n      if (newDirtyIndex <= index) {\n        this.__dirtyOpIndex = newDirtyIndex\n        for (newDirtyIndex++; newDirtyIndex < this.__boundOps.length; newDirtyIndex++) {\n          // Dirty all the other bound ops from the OP_WRITE to the top of the stack.\n          if (newDirtyIndex != index) {\n            // This will cause the other outputs of the operator to become dirty.\n            this.__boundOps[newDirtyIndex].getOperator().setDirty()\n          }\n        }\n        this.emit('valueChanged', { mode: 0 })\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Returns true if this parameter is currently dirty and will evaluate its bound\n   * operators if its value is requested by a call to getValue.\n   *\n   * @return {boolean} - Returns a boolean.\n   */\n  isDirty() {\n    return this.__dirtyOpIndex < this.__boundOps.length\n  }\n\n  /**\n   * Returns the index of the first 'dirty' binding in the stack. This will be the index of the\n   * first operator that will evaluate when the parameter needs to be cleaned.\n   *\n   * @return {number} - The index of the dirty binding in the binding stack.\n   */\n  getDirtyBindingIndex() {\n    return this.__dirtyOpIndex\n  }\n\n  /**\n   * The setCleanFromOp method.\n   * @param {any} value - The computed value to be stored in the Parameter.\n   * @param {number} index - The index of the bound OperatorOutput.\n   */\n  setCleanFromOp(value, index) {\n    if (index != this.__dirtyOpIndex) {\n      if (index < this.__dirtyOpIndex) {\n        // This can happen when an operator in the following case.\n\n        // ParamA [OpC, OpB, OpA]\n        // ParamB [OpC, OpA]\n        // When OpB dirties ParamA, and is evaluated, ParamB is considered clean because OpA was never dirtied\n\n        // We see this message when parameters are evaluated as soon as a change is detected instead of\n        // in batches. Now that all rendering code is pulling data only during the render cycle, we ara\n        // not seeing it anymore. However, maybe with a UI open, it will start emitting this warning.\n        // Note: this would be caused, if a Parameter is already cleaned by an Operator, and yet the Operator\n        // is re-evaluating. I am not sure how this can occur.\n        // const op = operatorOutput.getOperator()\n        // console.log(\n        //   `Operator:: ${\n        //     op.constructor.name\n        //   } with name: ${op.getName()} is being cleaned immediately, instead of lazily.`\n        // )\n        console.log(`Parameter is cleaned when it was already clean to that point in the stack:`, this.getPath())\n      } else if (this.__boundOps[index].getMode() != OperatorOutputMode.OP_WRITE) {\n        // A parameter can become dirty (so __dirtyOpIndex == 0), and then another operator bound on top.\n        // if the next op is a WRITE op, then we can fast forward the dirty index.\n        const thisClassName = Registry.getBlueprintName(this)\n        const op = this.__boundOps[index].getOperator()\n        const opClassName = Registry.getBlueprintName(op)\n        throw new Error(\n          `Parameter: ${thisClassName} with name: ${this.getName()} is not cleaning all outputs during evaluation of op: ${opClassName} with name: ${op.getName()}`\n        )\n      }\n    } else {\n      // console.log(`cleaned:`, this.getPath())\n    }\n\n    this.__value = value\n\n    // As each operator writes its value, the dirty value is incremented\n    this.__dirtyOpIndex = index + 1\n  }\n\n  /**\n   * During operator evaluation, operators can use this method to retrieve the existing\n   * value of one of their outputs.\n   * @param {number} index - The index of the bound OperatorOutput to evaluate up to.\n   * @return {object|string|number|any} - The return value.\n   */\n  getValueFromOp(index) {\n    // Note: during evaluation of an Operator that writes to multiple outputs,\n    // it can write to an output with an IO setting, which means it retrieves\n    // the previous value while calculating the next.\n    if (this.__dirtyOpIndex < index) {\n      this._clean(index)\n    }\n    return this.__value\n  }\n\n  /**\n   * Cleans the parameter up tp the index of the specified index of the bound OperatorOutput\n   *\n   * @param {number} index - The index of the bound OperatorOutput to evaluate up to.\n   */\n  _clean(index) {\n    if (this.__cleaning) {\n      throw new Error(`Cycle detected when cleaning: ${this.getPath()}. Operators need to be rebound to fix errors`)\n    }\n    this.__cleaning = true\n\n    while (this.__dirtyOpIndex < index) {\n      const tmp = this.__dirtyOpIndex\n      const operatorOutput = this.__boundOps[this.__dirtyOpIndex]\n      // The op can get the current value and modify it in place\n      // and set the output to clean.\n      operatorOutput.getOperator().evaluate()\n\n      if (tmp == this.__dirtyOpIndex) {\n        // During initial configuration of an operator, cleaning outputs might be disabled.\n        const op = this.__boundOps[this.__dirtyOpIndex].getOperator()\n        const opClassName = Registry.getBlueprintName(op)\n        console.warn(\n          `Operator: ${opClassName} with name: ${op.getName()} is not cleaning its outputs during evaluation`\n        )\n        this.__dirtyOpIndex++\n      }\n    }\n\n    this.__cleaning = false\n  }\n\n  /**\n   * Returns parameter's value.\n   *\n   * @param {number} mode - The mode value.\n   * @return {object|string|number|any} - The return value.\n   */\n  getValue(mode) {\n    if (mode != undefined) {\n      console.warn(\"WARNING in Parameter.setValue: 'mode' is deprecated.\")\n    }\n    if (this.__dirtyOpIndex < this.__boundOps.length) {\n      this._clean(this.__boundOps.length)\n    }\n    return this.__value\n  }\n\n  /**\n   * Sets value of the parameter.\n   *\n   * @param {object|string|number|any} value - The value param.\n   */\n  setValue(value) {\n    if (value == undefined) {\n      // eslint-disable-next-line no-throw-literal\n      throw 'undefined was passed into the set value for param:' + this.getName()\n    }\n\n    if (this.__boundOps.length > 0) {\n      for (let i = this.__boundOps.length - 1; i >= 0; i--) {\n        const operatorOutput = this.__boundOps[i]\n        value = operatorOutput.backPropagateValue(value)\n        if (operatorOutput.getMode() == 0 /* OP_WRITE */) return\n      }\n    }\n\n    if (!value.fromJSON) {\n      // Note: equality tests on anything but simple values is going to be super expensive.\n      if (this.__value == value) return\n    }\n    this.__value = value\n\n    // Note: only users call 'setValue'. Operators call 'setCleanFromOp'\n    this.emit('valueChanged', {})\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The loadValue is used to change the value of a parameter, without triggering a\n   * valueChanges, or setting the USER_EDITED state.\n   *\n   * @param {any} value - The context value.\n   */\n  loadValue(value) {\n    this.__value = value\n  }\n\n  /**\n   * The toJSON method serializes this instance as a JSON.\n   * It can be used for persistence, data transfer, etc.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    if (this.__value.toJSON) return { value: this.__value.toJSON(context) }\n    else return { value: this.__value }\n  }\n\n  /**\n   * The fromJSON method takes a JSON and deserializes into an instance of this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.value == undefined) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n\n    if (j.value.type && this.__value == undefined) {\n      this.__value = Registry.constructClass(j.value.type)\n    }\n    if (this.__value == undefined || !this.__value.fromJSON) {\n      this.__value = j.value\n    } else {\n      this.__value.fromJSON(j.value, context)\n    }\n    this.emit('valueChanged', {})\n  }\n\n  /**\n   * The readBinary method.\n   *\n   * @param {object} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    console.warn(`TODO: Parameter: ${this.constructor.name} with name: ${this.__name} does not implement readBinary`)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {Parameter} - Returns a new cloned parameter.\n   */\n  clone() {\n    const clonedValue = this.__value\n    if (clonedValue.clone) clonedValue = clonedValue.clone()\n    const clonedParam = new Parameter(this.__name, clonedValue, this.__dataType)\n    return clonedParam\n  }\n}\n\nexport { OperatorOutputMode, Parameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores numeric values.\n *\n * ```javascript\n * const numberParam = new NumberParameter('MyNumber', 15)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(numberParam)\n * ```\n *\n * @extends Parameter\n */\nclass NumberParameter extends Parameter {\n  /**\n   * Create a number parameter.\n   * @param {string} name - The name of the number parameter.\n   * @param {number} value - The value of the parameter.\n   * @param {array} range - An array with two numbers. If defined, the parameter value will be clamped.\n   * @param {number} step - The step value. If defined, the parameter value will be rounded to the nearest integer.\n   */\n  constructor(name, value = 0, range = undefined, step = undefined) {\n    super(name, value, 'Number')\n    // The value might not have a range.\n    if (range && !Array.isArray(range)) console.error('Range value must be an array of 2 numbers.')\n    this.__range = range\n    this.__step = step\n  }\n\n  /**\n   * Returns the range to which the parameter is restrained.\n   *\n   * @return {array} - The return value.\n   */\n  getRange() {\n    return this.__range\n  }\n\n  /**\n   * Sets the range to which the parameter is restrained.\n   *\n   * @param {array} range - The range value.\n   */\n  setRange(range) {\n    // Should be an array [0, 20]\n    this.__range = range\n  }\n\n  /**\n   * Returns the step number, which is the one used for rounding.\n   *\n   * @return {number} - The return value.\n   */\n  getStep() {\n    return this.__step\n  }\n\n  /**\n   * Returns step value.\n   *\n   * @param {number} step - The step value.\n   */\n  setStep(step) {\n    this.__step = step\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    if (this.__range) j.range = this.__range\n    if (this.__step) j.step = this.__step\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n    if (j.range) this.__range = j.range\n    if (j.step) this.__step = j.step\n  }\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value = reader.loadFloat32()\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new number parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {NumberParameter} - Returns a new number parameter.\n   */\n  clone() {\n    const clonedParam = new NumberParameter(this.__name, this.__value, this.__range, this.__step)\n    return clonedParam\n  }\n}\n\n// eslint-disable-next-line require-jsdoc\nclass Float32Parameter extends NumberParameter {\n  // eslint-disable-next-line require-jsdoc\n  readBinary(reader, context) {\n    this.__value = reader.loadFloat32()\n  }\n}\n\n// eslint-disable-next-line require-jsdoc\nclass SInt32Parameter extends NumberParameter {\n  // eslint-disable-next-line require-jsdoc\n  readBinary(reader, context) {\n    this.__value = reader.loadSInt32()\n  }\n}\n\n// eslint-disable-next-line require-jsdoc\nclass UInt32Parameter extends NumberParameter {\n  // eslint-disable-next-line require-jsdoc\n  readBinary(reader, context) {\n    this.__value = reader.loadUInt32()\n  }\n}\n\nRegistry.register('NumberParameter', NumberParameter)\nRegistry.register('Property_SInt32', SInt32Parameter)\nRegistry.register('Property_UInt32', UInt32Parameter)\nRegistry.register('Property_Float32', Float32Parameter)\n\nexport { NumberParameter }\n","import { Registry } from '../../Registry'\nimport { NumberParameter } from './NumberParameter.js'\n\n/**\n * Represents a specific type of parameter, that stores multiple choice(array) values.\n *\n * i.e.:\n * ```javascript\n * const multiChoiceParameter =  new MultiChoiceParameter('InitialXfoMode', GROUP_INITIAL_XFO_MODES.average, [\n *                                  'manual',\n *                                  'first',\n *                                  'average',\n *                                  'global',\n *                                ])\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(multiChoiceParameter)\n * ```\n * @extends NumberParameter\n */\nclass MultiChoiceParameter extends NumberParameter {\n  /**\n   * Create a multi choice parameter.\n   * @param {string} name - The name of the multi choice parameter.\n   * @param {number} index - The index value.\n   * @param {array} choices - The choices value.\n   */\n  constructor(name, index, choices) {\n    super(name, index, [0, choices.length], 1)\n    this.choices = choices\n  }\n\n  /**\n   * Returns choices array.\n   *\n   * @return {array} - The return value.\n   */\n  getChoices() {\n    return this.choices\n  }\n\n  /**\n   * Sets parameter index value.\n   *\n   * @param {string|number} value - The value param.\n   */\n  setValue(value) {\n    if (typeof value === 'string') {\n      super.setValue(this.choices.indexOf(value))\n    } else {\n      super.setValue(value)\n    }\n  }\n}\n\nRegistry.register('MultiChoiceParameter', MultiChoiceParameter)\n\nexport { MultiChoiceParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `boolean` values.\n *\n * i.e.:\n * ```javascript\n * const booleanParam = new BooleanParameter('MyBoolean', true)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(booleanParam)\n * ```\n * @extends Parameter\n */\nclass BooleanParameter extends Parameter {\n  /**\n   * Creates a new parameter with `Boolean` data type.\n   *\n   * @param {string} name - The name of the boolean parameter.\n   * @param {boolean} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value, 'Boolean')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Loads the boolean values from the binary buffer.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value = reader.loadUInt8() != 0\n  }\n\n  /**\n   * The clone method constructs a new boolean parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {BooleanParameter} - Returns a new cloned boolean parameter.\n   */\n  clone() {\n    const clonedParam = new BooleanParameter(this.__name, this.__value)\n    return clonedParam\n  }\n}\n\nRegistry.register('BooleanParameter', BooleanParameter)\nRegistry.register('Property_Boolean', BooleanParameter)\n\nexport { BooleanParameter }\n","import { Registry } from '../../Registry'\nimport { Vec2 } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Vec2(two-dimensional coordinate) values.\n *\n * i.e.:\n * ```javascript\n * const vec2Param = new Vec2Parameter('MyVec2', new Vec2(1.2, 3.4))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(vec2Param)\n * ```\n *\n * **Events**\n * * **rangeChanged:** Triggered when rage array changes.\n *\n * @extends Parameter\n */\nclass Vec2Parameter extends Parameter {\n  /**\n   * Create a Vec2 parameter.\n   *\n   * @param {string} name - The name of the Vec2 parameter.\n   * @param {Vec2} value - The value of the parameter.\n   * @param {array} range - The range value is an array of two `Vec2` objects.\n   */\n  constructor(name, value, range = undefined) {\n    super(name, value ? value : new Vec2(), 'Vec2')\n    this.__range = range\n  }\n\n  /**\n   * Returns the range of values in which current parameter can be.\n   *\n   * @return {array} - The return value.\n   */\n  getRange() {\n    // Range should be an array of 2 vec2s. [min(x,y), max(x,y)]\n    return this.__range\n  }\n\n  /**\n   * The __setRange method.\n   * @param {array} range - The range value.\n   * @private\n   */\n  __setRange(range) {\n    // Should be an array [0, 20]\n    this.__range = range\n    this.emit('rangeChanged', { range })\n  }\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  /**\n   * The clone method constructs a new Vec2 parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {Vec2Parameter} - Returns a new Vec2 parameter.\n   */\n  clone() {\n    const clonedParam = new Vec2Parameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('Vec2Parameter', Vec2Parameter)\n\nexport { Vec2Parameter }\n","import { Registry } from '../../Registry'\nimport { Vec3 } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Vec3(three-dimensional coordinate) values.\n *\n * i.e.:\n * ```javascript\n * const vec3Param = new Vec3Parameter('MyVec3', new Vec3(1.2, 3.4, 1))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(vec3Param)\n * ```\n * @extends Parameter\n */\nclass Vec3Parameter extends Parameter {\n  /**\n   * Create a Vec3 parameter.\n   * @param {string} name - The name of the Vec3 parameter.\n   * @param {Vec3} value - The value of the parameter.\n   * @param {array} range - The range value is an array of two `Vec2` objects.\n   */\n  constructor(name, value, range = undefined) {\n    super(name, value ? value : new Vec3(), 'Vec3')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new Vec3 parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {Vec3Parameter} - Returns a new Vec3 parameter.\n   */\n  clone() {\n    const clonedParam = new Vec3Parameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('Vec3Parameter', Vec3Parameter)\nRegistry.register('Property_Vec3_32f', Vec3Parameter)\n\nexport { Vec3Parameter }\n","import { Registry } from '../../Registry'\nimport { Vec4 } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Vec3(four-dimensional coordinate) values.\n *\n * i.e.:\n * ```javascript\n * const vec4Param = new Vec4Parameter('MyVec4', new Vec4(1.2, 3.4, 1, 4.2))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(vec4Param)\n * ```\n *\n * @extends Parameter\n */\nclass Vec4Parameter extends Parameter {\n  /**\n   * Create a Vec4 parameter.\n   * @param {string} name - The name of the Vec4 parameter.\n   * @param {Vec4} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Vec4(), 'Vec4')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new Vec4 parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {Vec4Parameter} - Returns a new Vec4 parameter.\n   */\n  clone() {\n    const clonedParam = new Vec4Parameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('Vec4Parameter', Vec4Parameter)\n\nexport { Vec4Parameter }\n","import { Registry } from '../../Registry'\nimport { Color } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `Color` values.\n *\n * i.e.:\n * ```javascript\n * const colorParam = new ColorParameter('MyColor', new Color(0, 254, 2))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(colorParam)\n * ```\n *\n * @extends Parameter\n */\nclass ColorParameter extends Parameter {\n  /**\n   * Create a color parameter.\n   * @param {string} name - The name of the color parameter.\n   * @param {Color} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Color(), 'Color')\n  }\n\n  /**\n   * Extracts `Color` values from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    const value = reader.loadRGBAFloat32Color()\n    // If the value is in linear space, then we should convert it to gamma space.\n    // Note: !! this should always be done in preprocessing...\n    value.applyGamma(2.2)\n\n    this.__value = value\n  }\n\n  /**\n   * The clone method constructs a new color parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {ColorParameter} - Returns a new cloned color parameter.\n   */\n  clone() {\n    const clonedParam = new ColorParameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('ColorParameter', ColorParameter)\n\nexport { ColorParameter }\n","import { Registry } from '../../Registry'\nimport { Quat } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Vec3(four-dimensional coordinate) values.\n *\n * i.e.:\n * ```javascript\n * const quatParam = new QuatParameter('MyQuat', new Quat(1.2, 3.4, 1, 4.2))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(quatParam)\n * ```\n *\n * @extends Parameter\n */\nclass QuatParameter extends Parameter {\n  /**\n   * Create a Quat parameter.\n   * @param {string} name - The name of the Quat parameter.\n   * @param {Quat} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Quat(), 'Quat')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new Quat parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {QuatParameter} - Returns a new Quat parameter.\n   */\n  clone() {\n    const clonedParam = new QuatParameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('QuatParameter', QuatParameter)\n\nexport { QuatParameter }\n","import { Registry } from '../../Registry'\nimport { Mat3 } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Mat3(3x3 matrix) values.\n *\n * i.e.:\n * ```javascript\n * const mat3Param = new Ma3Parameter('MyMat3', new Mat3(...args))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(mat3Param)\n * ```\n *\n * @extends Parameter\n */\nclass Mat3Parameter extends Parameter {\n  /**\n   * Create a Mat3 parameter.\n   * @param {string} name - The name of the Mat3 parameter.\n   * @param {Vec3} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Mat3(), 'Mat3')\n  }\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  /**\n   * The clone method constructs a new Mat3 parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {Mat3Parameter} - Returns a new cloned Mat3 parameter.\n   */\n  clone() {\n    const clonedParam = new Mat3Parameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('Mat3Parameter', Mat3Parameter)\n\nexport { Mat3Parameter }\n","import { Registry } from '../../Registry'\nimport { Mat4 } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Mat4(4x4 matrix) values.\n *\n * i.e.:\n * ```javascript\n * const mat4Param = new Ma3Parameter('MyMat4', new Mat4(...args))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(mat4Param)\n * ```\n *\n * @extends Parameter\n */\nclass Mat4Parameter extends Parameter {\n  /**\n   * Create a Mat4 parameter.\n   *\n   * @param {string} name - The name of the Mat4 parameter.\n   * @param {Mat4} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Mat4(), 'Mat4')\n  }\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  /**\n   * The clone method constructs a new Mat4 parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {Mat4Parameter} - Returns a new cloned Mat4 parameter.\n   */\n  clone() {\n    const clonedParam = new Mat4Parameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('Mat4Parameter', Mat4Parameter)\n\nexport { Mat4Parameter }\n","import { Registry } from '../../Registry'\nimport { Xfo } from '../../Math/index'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `Xfo` transform values.\n *\n * ```javascript\n * const xfoParam = new XfoParameter('MyXfo', new Xfo(new Vec3(1.2, 3.4, 1)))\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(xfoParam)\n * ```\n *\n * @extends Parameter\n */\nclass XfoParameter extends Parameter {\n  /**\n   * Create a Xfo parameter.\n   * @param {string} name - The name of the Xfo parameter.\n   * @param {Xfo} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value ? value : new Xfo(), 'Xfo')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Extracts a number value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value.readBinary(reader)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new Xfo parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {XfoParameter} - Returns a new Xfo parameter.\n   */\n  clone() {\n    const clonedParam = new XfoParameter(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('XfoParameter', XfoParameter)\n\nexport { XfoParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `BaseImage` values.\n *\n * i.e.:\n * ```javascript\n * // Since `Label` is a `BaseImage` implementation, it helps us with the example.\n * const label = new Label('My awesome label', 'LabelPack')\n * const imageParam = new ImageParameter('MyImage', label)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(imageParam)\n * ```\n *\n * @extends Parameter\n */\nclass ImageParameter extends Parameter {\n  /**\n   * Create an image parameter.\n   *\n   * @param {string} name - The name of the image parameter.\n   * @param {BaseImage} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value, 'BaseImage')\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    if (this.__value) {\n      j.imageType = Registry.getBlueprintName(this.__value)\n    }\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  fromJSON(j, context) {\n    if (j.imageType) {\n      this.__value = Registry.constructClass(j.imageType)\n    }\n    return super.fromJSON(j, context)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new image parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {ImageParameter} - Returns a new cloned image parameter.\n   */\n  clone() {\n    const clonedParam = new ImageParameter(this.__name, this.__value)\n    return clonedParam\n  }\n}\n\nRegistry.register('ImageParameter', ImageParameter)\n\nexport { ImageParameter }\n","import { Parameter } from './Parameter.js'\nimport { Registry } from '../../Registry'\n\n/**\n * A parameter for storing an array of string values.\n *\n * @extends Parameter\n */\nclass StringListParameter extends Parameter {\n  /**\n   * Create a string parameter.\n   * @param {string} name - The name of the material color parameter.\n   * @param {string} value - The value of the parameter.\n   */\n  constructor(name, value = []) {\n    super(name, value, 'String[]')\n    this.multiLine = false\n  }\n\n  /**\n   * Extracts the string value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value = reader.loadStrArray()\n  }\n\n  /**\n   * The clone method constructs a new string parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {StringListParameter} - Returns a new string parameter.\n   */\n  clone() {\n    const clonedParam = new StringListParameter(this.__name, this.__value)\n    return clonedParam\n  }\n}\n\nRegistry.register('StringListParameter', StringListParameter)\nRegistry.register('Property_StringList', StringListParameter)\n\nexport { StringListParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores Mat4(4x4 matrix) values.\n *\n * i.e.:\n * ```javascript\n * const stringParam = new StringParameter('MyString', 'A String value goes here')\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(stringParam)\n * ```\n *\n * @extends Parameter\n */\nclass StringParameter extends Parameter {\n  /**\n   * Create a string parameter.\n   * @param {string} name - The name of the material color parameter.\n   * @param {string} value - The value of the parameter.\n   */\n  constructor(name, value = '') {\n    super(name, value, 'String')\n    this.multiLine = false\n  }\n\n  /**\n   * Sets flag that indicates if the string contains new line feeds.\n   *\n   * @param {boolean} multiLine - The multiLine value.\n   */\n  setMultiLine(multiLine) {\n    this.multiLine = multiLine\n  }\n\n  /**\n   * Returns multi-line flag value.\n   *\n   * @return {boolean} - The return value.\n   */\n  getMultiLine() {\n    return this.multiLine\n  }\n\n  /**\n   * Extracts the string value from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    this.__value = reader.loadStr()\n  }\n\n  /**\n   * The clone method constructs a new string parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {StringParameter} - Returns a new string parameter.\n   */\n  clone() {\n    const clonedParam = new StringParameter(this.__name, this.__value)\n    return clonedParam\n  }\n}\n\nRegistry.register('StringParameter', StringParameter)\nRegistry.register('Property_String', StringParameter)\n\nexport { StringParameter }\n","import { Registry } from '../../Registry'\nimport { StringParameter } from './StringParameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `string` values.\n *\n * i.e.:\n * ```javascript\n * const codeStr = `const sayHello = () => console.log('Hello World')`\n * const codeParam = new CodeParameter('MyCode', codeStr)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(codeParam)\n * ```\n *\n * @deprecated\n * @extends StringParameter\n */\nclass CodeParameter extends StringParameter {\n  /**\n   * Creates a code parameter.\n   * The default language is `js`.\n   *\n   * @param {string} name - The name of the code parameter.\n   * @param {string} value - The value of the parameter.\n   */\n  constructor(name, value = '') {\n    super(name, value, 'String')\n    this.lang = 'js'\n  }\n\n  /**\n   * Sets code language for parameter.\n   *\n   * @param {string} lang - The language value.\n   */\n  setLanguage(lang) {\n    this.lang = lang\n  }\n\n  /**\n   * Returns code language of parameter.\n   *\n   * @return {string} - Returns the language.\n   */\n  getLanguage() {\n    return this.lang\n  }\n\n  /**\n   * The clone method constructs a new code parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {CodeParameter} - Returns a new cloned code parameter.\n   */\n  clone() {\n    const clonedParam = new CodeParameter(this.__name, this.__value)\n    return clonedParam\n  }\n}\n\nRegistry.register('CodeParameter', CodeParameter)\n\nexport { CodeParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * A Parameter for storing list(array) values.\n *\n * i.e.:\n * ```javascript\n * const listParam = new ListParameter('MyList', GearParameter)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(listParam)\n * ```\n *\n * **Events**\n * * **valueChanged:** Triggered when setting a value changes in the array(insert, add, remove).\n * * **elementAdded:** Triggered when an element is added to the array(add, insert).\n * * **elementRemoved:** Triggered when an element is removed from the array\n *\n * @extends Parameter\n */\nclass ListParameter extends Parameter {\n  /**\n   * Create a list parameter.\n   * @param {string} name - The name of the list parameter.\n   * @param {string|Parameter} dataType - The dataType value.\n   */\n  constructor(name, dataType) {\n    super(name, [])\n    this.__dataType = dataType\n  }\n\n  /**\n   * The __filter method.\n   * @param {string|Parameter} item - The item value.\n   * @return {boolean} - The return value.\n   *\n   * @private\n   */\n  __filter(item) {\n    return true\n  }\n\n  /**\n   * Returns the count of items in the array.\n   *\n   * @return {number} - The return value.\n   */\n  getCount() {\n    return this.__value.length\n  }\n\n  /**\n   * Returns value from the array in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @return {Parameter|string} - The return value.\n   */\n  getElement(index) {\n    return this.__value[index]\n  }\n\n  /**\n   * Sets a value in the specified array's index.\n   *\n   * @param {number} index - The index value.\n   * @param {string|Parameter} value - The value value.\n   */\n  setElement(index, value) {\n    this.__value[index] = value\n    this.emit('valueChanged', {})\n  }\n\n  /**\n   * Adds a new element at the end of the array pile.\n   *\n   * @param {string|Parameter} elem - The elem value.\n   * @return {string|Parameter} - The return value.\n   */\n  addElement(elem) {\n    if (elem == undefined) elem = new this.__dataType()\n    else {\n      if (!this.__filter(elem)) return\n    }\n\n    this.__value.push(elem)\n    this.emit('elementAdded', { elem, index: this.__value.length - 1 })\n    this.emit('valueChanged', {})\n    return elem\n  }\n\n  /**\n   * Removes an array element from the specified index\n   *\n   * @param {number} index - The index value.\n   */\n  removeElement(index) {\n    const elem = this.__value[index]\n    this.__value.splice(index, 1)\n    this.emit('elementRemoved', { elem, index })\n    this.emit('valueChanged', {})\n  }\n\n  /**\n   * Inserts a new element in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @param {string|Parameter} elem - The elem value.\n   */\n  insertElement(index, elem) {\n    if (!this.__filter(elem)) return\n    this.__value.splice(index, 0, elem)\n    // this.setValue(this.__value);\n    this.emit('elementAdded', { elem, index })\n    this.emit('valueChanged', {})\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const items = []\n    for (const p of this.__value) {\n      if (typeof this.__dataType === 'string') items.push(p)\n      else items.push(p.toJSON(context))\n    }\n    return {\n      items,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.items == undefined) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n\n    this.__value = []\n    for (let i = 0; i < j.items.length; i++) {\n      let elem\n      if (typeof this.__dataType === 'string') {\n        elem = j.items[i]\n      } else {\n        console.log(this.__dataType)\n        elem = new this.__dataType()\n        elem.fromJSON(j.items[i], context)\n      }\n      this.__value.push(elem)\n      this.emit('elementAdded', { elem, index: this.__value.length - 1 })\n    }\n    this.emit('valueChanged', { mode: 0 })\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new list parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {ListParameter} - Returns a new list parameter.\n   */\n  clone() {\n    const clonedValue = this.__value.slice(0)\n    const clonedParam = new ListParameter(this.__name, this.__dataType)\n    clonedParam.setValue(clonedValue)\n    return clonedParam\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    for (let i = 0; i < this.__value.length; i++) {\n      if (this.__value[i] instanceof Parameter) this.__value[i].destroy()\n      this.removeElement(i)\n    }\n  }\n}\n\nRegistry.register('ListParameter', ListParameter)\n\nexport { ListParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that stores multiple parameters in object format.\n *\n * i.e.:\n * ```javascript\n * const structParam = new StructParameter('MyStructParam')\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(structParam)\n * ```\n *\n * **Events**\n * * **valueChanged:** Triggered whenever parameter's value changes.\n *\n * @extends Parameter\n */\nclass StructParameter extends Parameter {\n  /**\n   * Create a struct parameter.\n   * @param {string} name - The name of the struct parameter.\n   */\n  constructor(name) {\n    super(name, {}, 'Struct')\n    this.__members = []\n  }\n\n  /**\n   * The _addMember method.\n   * @param {Parameter} parameter - The parameter value.\n   * @return {Parameter} - The return value.\n   * @private\n   */\n  _addMember(parameter) {\n    this.__value[parameter.getName()] = parameter.getValue()\n    parameter.on('valueChanged', () => {\n      this.__value[parameter.getName()] = parameter.getValue()\n    })\n    this.__members.push(parameter)\n    this.emit('valueChanged', {})\n    return parameter\n  }\n\n  /**\n   * The getParameter method.\n   *\n   * @private\n   * @param {string} name - The parameter name.\n   * @return {Parameter} - The return value.\n   */\n  getParameter(name) {\n    for (const p of this.__members) {\n      if (p.getName() == name) return p\n    }\n  }\n\n  /**\n   * Looks for a member parameter with the specified name and returns it.\n   *\n   * @param {string} name - The parameter name.\n   * @return {Parameter} - The return value.\n   */\n  getMember(name) {\n    return this.getParameter(name)\n  }\n\n  /**\n   * Returns the name of all parameters in StructParameter.\n   *\n   * @return {array} - The return value.\n   */\n  getMemberNames() {\n    const names = []\n    for (let i = 0; i < this.__members.length; i++) {\n      const member = this.__members[i]\n      if (member != null) names[i] = member.getName()\n    }\n    return names\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const members = []\n    for (const p of this.__members) members.push(p.toJSON(context))\n    return {\n      members,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.members == undefined) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n\n    for (let i = 0; i < j.members.length; i++) {\n      if (j.members[i]) {\n        this.__members[i].fromJSON(j.members[i], context)\n      }\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Destroy\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n    for (const p of this.__members) p.destroy()\n  }\n}\n\nRegistry.register('StructParameter', StructParameter)\n\nexport { StructParameter }\n","/* eslint-disable require-jsdoc */\nimport { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/**\n * Represents a specific type of parameter, that only stores `TreeItem` values.\n *\n * i.e.:\n * ```javascript\n * const treeItem = new TreeItem('tree1')\n * const treeItemParam = new TreeItemParameter('MyTreeItem', treeItem)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(treeItemParam)\n * ```\n *\n * **Events**\n * * **treeItemGlobalXfoChanged:** Triggered when computed world Xfo of parameter's `TreeItem` changes.\n * * **valueChanged:** Triggered when parameter's value changes.\n *\n * @extends Parameter\n */\nclass TreeItemParameter extends Parameter {\n  /**\n   * Create a tree item parameter.\n   * @param {string} name - The name of the tree item parameter.\n   * @param {function} filterFn - The filterFn value.\n   */\n  constructor(name, filterFn = undefined) {\n    super(name, undefined, 'TreeItem')\n    this.__filterFn = filterFn\n    this.listenerIDs = {}\n  }\n\n  __emitTreeItemGlobalXfoChanged(event) {\n    this.emit('treeItemGlobalXfoChanged', event)\n  }\n\n  /**\n   * Sets parameter value's owner `TreeItem`.\n   *\n   * @param {TreeItem} owner - The owner value.\n   */\n  setOwner(owner) {\n    this.__owner = owner\n  }\n\n  /**\n   * Returns parameter value's owner `TreeItem`.\n   *\n   * @return {TreeItem} - The return value.\n   */\n  getOwner() {\n    return this.__owner\n  }\n\n  /**\n   * The setFilterFn method.\n   * @param {function} flterFn - The flterFn value.\n   */\n  setFilterFn() {\n    this.__filterFn = filterFn\n  }\n\n  /**\n   * The getFilterFn method.\n   * @return {function} - The return value.\n   */\n  getFilterFn() {\n    return this.__filterFn\n  }\n\n  /**\n   * Sets parameter's `TreeItem` value.\n   *\n   * @param {TreeItem} treeItem - The treeItem value\n   * @return {boolean} - The return value.\n   */\n  setValue(treeItem) {\n    // 0 == normal set. 1 = changed via cleaner fn, 2=change by loading/cloning code.\n    if (this.__filterFn && !this.__filterFn(treeItem)) return false\n    if (this.__value !== treeItem) {\n      if (this.__value) {\n        this.__value.removeListenerById('globalXfoChanged', this.listenerIDs['globalXfoChanged'])\n      }\n      this.__value = treeItem\n      if (this.__value) {\n        this.listenerIDs['globalXfoChanged'] = this.__value.on('globalXfoChanged', (event) => {\n          this.__emitTreeItemGlobalXfoChanged(event)\n        })\n      }\n\n      this.emit('valueChanged', {})\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    return {\n      value: context.makeRelative(this.__value.getPath()),\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.value == undefined) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n    context.resolvePath(\n      j.value,\n      (treeItem) => {\n        this.setValue(treeItem)\n      },\n      () => {\n        console.warn('Unable to resolve tree item parameter value:' + pj.paramPath)\n      }\n    )\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new tree item parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {TreeItemParameter} - Returns a new tree item parameter.\n   */\n  clone() {\n    const clonedParam = new TreeItemParameter(this.__name, this.__filterFn)\n    return clonedParam\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    if (this.__value) {\n      this.__value.removeListenerById('globalXfoChanged', this.listenerIDs['globalXfoChanged'])\n    }\n  }\n}\n\nRegistry.register('TreeItemParameter', TreeItemParameter)\n\nexport { TreeItemParameter }\n","import { Parameter } from './Parameter.js'\n\n/** Class representing an item set parameter.\n * @extends Parameter\n * @private\n */\nclass ItemSetParameter extends Parameter {\n  /**\n   * Create an item set parameter.\n   * @param {string} name - The name of the item set parameter.\n   * @param {any} filterFn - The filterFn value.\n   */\n  constructor(name, filterFn) {\n    super(name, undefined, 'BaseItem')\n    this.__items = new Set()\n    this.__filterFn = filterFn // Note: the filter Fn indicates that users will edit the set.\n  }\n\n  /**\n   * The setFilterFn method.\n   * @param {any} filterFn - The filterFn value.\n   */\n  setFilterFn(filterFn) {\n    this.__filterFn = filterFn\n  }\n\n  /**\n   * The getFilterFn method.\n   * @return {any} - The return value.\n   */\n  getFilterFn() {\n    return this.__filterFn\n  }\n\n  /**\n   * The getItem method.\n   * @param {number} index - The index param.\n   * @return {any} - The return value.\n   */\n  getItem(index) {\n    return Array.from(this.__items)[index]\n  }\n\n  /**\n   * The addItem method.\n   * @param {any} item - The item value.\n   * @param {boolean} emitValueChanged - The emit value.\n   * @return {boolean} - The return value.\n   */\n  addItem(item, emitValueChanged = true) {\n    if (this.__filterFn && !this.__filterFn(item)) {\n      console.warn('ItemSet __filterFn rejecting item:', item.getPath())\n      return false\n    }\n    this.__items.add(item)\n    const index = Array.from(this.__items).indexOf(item)\n    this.emit('itemAdded', { item, index })\n    if (emitValueChanged) this.emit('valueChanged', {})\n    return index\n  }\n\n  /**\n   * Adds items to the parameter value\n   *\n   * @param {Set} items - list of items to add to the parameter\n   * @param {boolean} [emitValueChanged=true]\n   * @memberof ItemSetParameter\n   */\n  addItems(items, emitValueChanged = true) {\n    items.forEach((item) => this.addItem(item, false))\n    if (emitValueChanged) this.emit('valueChanged', {})\n  }\n\n  /**\n   * The removeItem method.\n   * @param {any} index - The index value.\n   * @param {boolean} emitValueChanged - The emit param.\n   * @return {any} - The return value.\n   */\n  removeItem(index, emitValueChanged = true) {\n    const item = Array.from(this.__items)[index]\n    this.__items.delete(item)\n    this.emit('itemRemoved', { item, index })\n    if (emitValueChanged) this.emit('valueChanged', {})\n    return item\n  }\n\n  /**\n   * The setItems method.\n   * @param {any} items - The item param.\n   * @param {boolean} emit - The emit param.\n   */\n  setItems(items, emit = true) {\n    for (let i = this.__items.length - 1; i >= 0; i--) {\n      const item = this.__items[i]\n      if (!items.has(item)) {\n        this.removeItem(item, false)\n      }\n    }\n    for (const item of items) {\n      if (!this.__items.has(item)) {\n        this.addItem(item, false)\n      }\n    }\n    if (emit) this.emit('valueChanged', {})\n  }\n\n  /**\n   * The clearItems method.\n   * @param {boolean} emitValueChanged - The emit value.\n   */\n  clearItems(emitValueChanged = true) {\n    this.__items.clear()\n    if (emitValueChanged) this.emit('valueChanged', {})\n  }\n\n  /**\n   * The getNumItems method.\n   * @return {any} - The return value.\n   */\n  getNumItems() {\n    return Array.from(this.__items).length\n  }\n\n  /**\n   * The getValue method.\n   * @return {any} - The return value.\n   */\n  getValue() {\n    return this.__items\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @param {object} context - The context value.\n   * @return {object} - The return value.\n   */\n  toJSON(context) {\n    return {}\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {}\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a item set new parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {ItemSetParameter} - Returns a new item set parameter.\n   */\n  clone() {\n    const clonedParam = new ItemSetParameter(this.__name, this.__filterFn)\n    return clonedParam\n  }\n}\n\nexport { ItemSetParameter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\n\n/** Class representing a geometry parameter.\n * @extends Parameter\n * @private\n */\nclass GeometryParameter extends Parameter {\n  /**\n   * Create a geometry parameter.\n   * @param {string} name - The name of the color parameter.\n   * @param {any} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, undefined, 'Geometry')\n    this.listenerIDs = {}\n    this.setValue(value)\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  __emitBoundingBoxDirtied(event) {\n    this.emit('boundingBoxChanged', event)\n  }\n\n  /**\n   * The setValue method.\n   * @param {any} value - The geom value.\n   */\n  setValue(value) {\n    // 0 == normal set. 1 = changed via cleaner fn, 2 = change by loading/cloning code.\n    if (this.__value !== value) {\n      if (this.__value) {\n        this.__value.removeListenerById('boundingBoxChanged', this.listenerIDs['boundingBoxChanged'])\n      }\n      this.__value = value\n      if (this.__value) {\n        this.listenerIDs['boundingBoxChanged'] = this.__value.on('boundingBoxChanged', (event) => {\n          this.__emitBoundingBoxDirtied(event)\n        })\n      }\n\n      this.emit('valueChanged', {})\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The loadValue is used to change the value of a parameter, without triggering a\n   * valueChanges, or setting the USER_EDITED state.\n   *\n   * @param {any} value - The context value.\n   */\n  loadValue(value) {\n    if (this.__value) {\n      this.__value.removeListenerById('boundingBoxChanged', this.listenerIDs['boundingBoxChanged'])\n    }\n    this.__value = value\n    if (this.__value) {\n      this.listenerIDs['boundingBoxChanged'] = this.__value.on('boundingBoxChanged', (event) => {\n        this.__emitBoundingBoxDirtied(event)\n      })\n    }\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    return super.toJSON(context)\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  fromJSON(j, context) {\n    return super.fromJSON(j, context)\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new geometry parameter, copies its values\n   * from this parameter and returns it.\n   * @return {GeometryParameter} - Returns a new geometry parameter.\n   */\n  clone() {\n    const clonedParam = new GeometryParameter(this.__name, this.__value)\n    return clonedParam\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    // Note: some parameters hold refs to geoms/materials,\n    // which need to be explicitly cleaned up.\n    // e.g. freeing GPU Memory.\n\n    if (this.__value) {\n      this.__value.removeListenerById('boundingBoxChanged', this.listenerIDs['boundingBoxChanged'])\n    }\n  }\n}\n\nRegistry.register('GeometryParameter', GeometryParameter)\n\nexport { GeometryParameter }\n","import { EventEmitter } from '../../Utilities/EventEmitter'\n\n/** Class representing an operator input.\n * @extends EventEmitter\n */\nclass OperatorInput extends EventEmitter {\n  /**\n   * Create an operator input.\n   * @param {string} name - The name value.\n   */\n  constructor(name) {\n    super()\n    this.listenerIDs = {}\n\n    this.__name = name\n    this._param = undefined\n  }\n\n  /**\n   * The getName method.\n   * @return {any} - The return value.\n   */\n  getName() {\n    return this.__name\n  }\n\n  /**\n   * Sets operator that owns this input. Called by the operator when adding inputs\n   * @param {Operator} op - The operator object.\n   */\n  setOperator(op) {\n    this._op = op\n  }\n\n  /**\n   * Returns operator that owns this input.\n   * @return {Operator} - The operator object.\n   */\n  getOperator() {\n    return this._op\n  }\n\n  /**\n   * Returns true if this input is connected to a parameter.\n   * @return {boolean} - The return value.\n   */\n  isConnected() {\n    return this._param != undefined\n  }\n\n  /**\n   * The getParam method.\n   * @return {any} - The return value.\n   */\n  getParam() {\n    return this._param\n  }\n\n  /**\n   * @private\n   * The handler function for when the input paramter changes.\n   * @param {object} event - The event object.\n   */\n  _paramValueChanged(event) {\n    if (this._op) this._op.setDirty(this.__name)\n  }\n\n  /**\n   * Assigns the Paramter to be used to provide the input value.\n   * @param {Parameter} param - The param value.\n   */\n  setParam(param) {\n    if (this._param) {\n      this._param.removeListenerById('valueChanged', this.listenerIDs['valueChanged'])\n    }\n    this._param = param\n    if (this._param) {\n      this.listenerIDs['valueChanged'] = this._param.on('valueChanged', (event) => {\n        this._paramValueChanged(event)\n      })\n    }\n    this.emit('paramSet', { param: this._param })\n  }\n\n  /**\n   * The getValue method.\n   * @return {any} - The return value.\n   */\n  getValue() {\n    if (this._param) return this._param.getValue()\n  }\n\n  /**\n   * The setValue method.\n   * @param {any} value - The value param.\n   */\n  setValue(value) {\n    if (this._param) {\n      this._param.setValue(value)\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const paramPath = this._param ? this._param.getPath() : ''\n    return {\n      name: this.__name,\n      paramPath: context && context.makeRelative ? context.makeRelative(paramPath) : paramPath,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.paramPath) {\n      // Note: the tree should have fully loaded by the time we are loading operators\n      // even new items and groups should have been created. Operators and state machines\n      // are loaded last.\n      context.resolvePath(\n        j.paramPath,\n        (param) => {\n          this.setParam(param)\n        },\n        (reason) => {\n          console.warn(\"OperatorInput: '\" + this.getName() + \"'. Unable to connect to:\" + j.paramPath)\n        }\n      )\n    }\n  }\n\n  /**\n   * The detach method is called when an operator is being removed from the scene tree.\n   * It removes all connections to parameters in the scene.\n   */\n  detach() {\n    // This function is called when we want to suspend an operator\n    // from functioning because it is deleted and on the undo stack.\n    // Once operators have persistent connections,\n    // we will simply uninstall the output from the parameter.\n    if (this._param) {\n      this.__value.removeListenerById('valueChanged', this.listenerIDs['valueChanged'])\n    }\n  }\n\n  /**\n   * The reattach method can be called when re-instating an operator in the scene.\n   */\n  reattach() {\n    this.detached = false\n    if (this._param) {\n      this.listenerIDs['valueChanged'] = this._param.on('valueChanged', (event) => {\n        this._paramValueChanged(event)\n      })\n    }\n  }\n}\n\nexport { OperatorInput }\n","import { OperatorOutputMode } from '../Parameters/Parameter'\nimport { EventEmitter } from '../../Utilities/EventEmitter'\n\n/** Class representing an operator output.\n * @extends EventEmitter\n */\nclass OperatorOutput extends EventEmitter {\n  /**\n   * Create an operator output.\n   * @param {string} name - The name value.\n   * @param {OperatorOutputMode} operatorOutputMode - The mode which the OperatorOutput uses to bind to its target parameter.\n   */\n  constructor(name, operatorOutputMode = OperatorOutputMode.OP_WRITE) {\n    super()\n    this.__name = name\n    this._mode = operatorOutputMode\n    this._param = undefined\n    this._paramBindIndex = -1\n    this.detached = false\n  }\n\n  /**\n   * Returns name of the output.\n   * @return {string} - The name string.\n   */\n  getName() {\n    return this.__name\n  }\n\n  /**\n   * Sets operator that owns this output. Called by the operator when adding outputs\n   * @param {Operator} op - The operator object.\n   */\n  setOperator(op) {\n    this._op = op\n  }\n\n  /**\n   * Returns operator that owns this output.\n   * @return {Operator} - The operator object.\n   */\n  getOperator() {\n    return this._op\n  }\n\n  /**\n   * Returns mode that the output writes to be parameter. Must be a number from OperatorOutputMode\n   * @return {OperatorOutputMode} - The mode value.\n   */\n  getMode() {\n    return this._mode\n  }\n\n  /**\n   * Returns true if this output is connected to a parameter.\n   * @return {boolean} - The return value.\n   */\n  isConnected() {\n    return this._param != undefined\n  }\n\n  /**\n   * The getParam method.\n   * @return {any} - The return value.\n   */\n  getParam() {\n    return this._param\n  }\n\n  /**\n   * Sets the Parameter for this out put to write to.\n   * @param {Parameter} param - The param value.\n   * @param {number} index - The index to bind at in the Parameter.\n   */\n  setParam(param, index = -1) {\n    if (this._param) {\n      this._param.unbindOperator(this)\n    }\n    this._param = param\n    if (this._param) {\n      this._paramBindIndex = this._param.bindOperatorOutput(this, index)\n    }\n    this.emit('paramSet', { param: this._param })\n  }\n\n  /**\n   * Returns the index of the binding on the parameter of this OperatorOutput\n   * up to date.\n   * @return {number} index - The index of the binding on the parameter.\n   */\n  getParamBindIndex() {\n    return this._paramBindIndex\n  }\n\n  /**\n   * If bindings change on a Parameter, it will call this method to ensure the output index is\n   * up to date.\n   * @param {number} index - The index of the binding on the parameter.\n   */\n  setParamBindIndex(index) {\n    this._paramBindIndex = index\n  }\n\n  /**\n   * Propagates dirty to the connected parameter.\n   */\n  setDirty() {\n    if (this._param) {\n      this._param.setDirty(this._paramBindIndex)\n    }\n  }\n\n  /**\n   * The getValue method.\n   * @return {any} - The return value.\n   */\n  getValue() {\n    if (this._param) {\n      return this._param.getValueFromOp(this._paramBindIndex)\n    } else {\n      throw new Error('Cannot call getValue on OperatorOutput that is not connected:', this.__name)\n    }\n  }\n\n  /**\n   * When the value on a Parameter is modified by a user by calling 'setValue,\n   * then if any operators are bound, the value of the Parameter cannot be modified\n   * directly as it is the result of a computation. Instead, the Parameter calls\n   * 'backPropagateValue' on the Operator to cause the Operator to handle propagating\n   * the value to one or more of its inputs.\n   * to its inputs.\n   * @param {any} value - The value param.\n   * @return {any} - The modified value.\n   */\n  backPropagateValue(value) {\n    if (this._param) {\n      value = this._op.backPropagateValue(value, this)\n    }\n    return value\n  }\n\n  /**\n   * The setClean method.\n   * @param {any} value - The value param.\n   */\n  setClean(value) {\n    if (this._param) {\n      this._param.setCleanFromOp(value, this._paramBindIndex)\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const paramPath = this._param ? this._param.getPath() : ''\n    return {\n      name: this.__name,\n      paramPath: context && context.makeRelative ? context.makeRelative(paramPath) : paramPath,\n      paramBindIndex: this._paramBindIndex,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.paramPath) {\n      // Note: the tree should have fully loaded by the time we are loading operators\n      // even new items and groups should have been created. Operators and state machines\n      // are loaded last.\n      context.resolvePath(\n        j.paramPath,\n        (param) => {\n          this.setParam(param, j.paramBindIndex)\n        },\n        (reason) => {\n          console.warn(\"OperatorOutput: '\" + this.getName() + \"'. Unable to connect to:\" + j.paramPath)\n        }\n      )\n    }\n  }\n\n  /**\n   * The detach method is called when an operator is being removed from the scene tree.\n   * It removes all connections to parameters in the scene.\n   */\n  detach() {\n    // This function is called when we want to suspend an operator\n    // from functioning because it is deleted and on the undo stack.\n    // Once operators have persistent connections,\n    // we will simply uninstall the output from the parameter.\n    this.detached = true\n    this._paramBindIndex = this._param ? this._param.unbindOperator(this) : -1\n  }\n\n  /**\n   * The reattach method can be called when re-instating an operator in the scene.\n   */\n  reattach() {\n    this.detached = false\n    if (this._param) {\n      this._paramBindIndex = this._param.bindOperatorOutput(this, this._paramBindIndex)\n    }\n  }\n\n  /**\n   * The rebind rebinds the outputs to be at the top of the stack for its parameter.\n   */\n  rebind() {\n    if (this._param) {\n      this._param.unbindOperator(this)\n      this._paramBindIndex = this._param.bindOperatorOutput(this)\n    }\n  }\n}\n\nexport { OperatorOutput }\n","import { Registry } from '../../Registry'\nimport { BaseItem } from '../BaseItem.js'\nimport { OperatorInput } from './OperatorInput'\nimport { OperatorOutput } from './OperatorOutput'\n\n/**\n * Class representing an operator.\n *\n * @extends BaseItem\n */\nclass Operator extends BaseItem {\n  /**\n   * Create an operator.\n   * @param {string} name - The name value.\n   */\n  constructor(name) {\n    super(name)\n    this.__inputs = new Map()\n    this.__outputs = new Map()\n  }\n\n  /**\n   * This method sets the state of the operator to dirty which propagates\n   * to the outputs of this operator, and which may then propagate to other\n   * operators. When the scene is cleaned, which usually is caused by rendering\n   * then the chain of operators are cleaned by triggering evaluation.\n   * @private\n   */\n  setDirty() {\n    this.__outputs.forEach((output) => output.setDirty())\n  }\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   *\n   * @param {object} event\n   * @private\n   */\n  __parameterValueChanged(event) {\n    super.__parameterValueChanged(event)\n    this.setDirty()\n  }\n\n  /**\n   * The addInput method.\n   * @param {string|OperatorInput} input - The name of the input, or the input object\n   * @return {array} - The return value.\n   */\n  addInput(input) {\n    if (typeof input == 'string') input = new OperatorInput(input)\n    else if (!(input instanceof OperatorInput)) {\n      throw new Error(`addInput only accepts string or OperatorInput`)\n    }\n    input.setOperator(this)\n    this.__inputs.set(input.getName(), input)\n    this.setDirty()\n    return input\n  }\n\n  /**\n   * The removeInput method.\n   * @param {string|OperatorInput} input - The name of the input, or the input object\n   */\n  removeInput(input) {\n    if (typeof input == 'string') input = this.getInput(input)\n    if (!(input instanceof OperatorInput)) {\n      throw new Error(`removeInput only accepts string or OperatorInput`)\n    }\n    if (input.getParam()) input.setParam(null)\n    this.__inputs.delete(input.getName())\n  }\n\n  /**\n   * Getter for the number of inputs in this operator.\n   * @return {number} - Returns the number of inputs.\n   */\n  getNumInputs() {\n    return this.__inputs.size\n  }\n\n  /**\n   * The getInputByIndex method.\n   * @param {number} index - The index value.\n   * @return {object} - The return value.\n   */\n  getInputByIndex(index) {\n    return Array.from(this.__inputs.values())[index]\n  }\n\n  /**\n   * The getInput method.\n   * @param {string} name - The name value.\n   * @return {OperatorInput} - The return value.\n   */\n  getInput(name) {\n    return this.__inputs.get(name)\n  }\n\n  /**\n   * The addOutput method.\n   * @param {string|OperatorOutput} output - The name of the output, or the output object\n   * @return {array} - The return value.\n   */\n  addOutput(output) {\n    if (typeof output == 'string') output = new OperatorOutput(output)\n    else if (!(output instanceof OperatorOutput)) {\n      throw new Error(`addOutput only accepts string or OperatorOutput`)\n    }\n    output.setOperator(this)\n    if (this.getOutput(output.getName())) throw new Error(`Operator output already exists ${output.getName()}`)\n    this.__outputs.set(output.getName(), output)\n    this.setDirty()\n    return output\n  }\n\n  /**\n   * The removeOutput method.\n   * @param {string|OperatorOutput} output - The name of the output, or the output object\n   */\n  removeOutput(output) {\n    if (typeof output == 'string') output = this.getOutput(output)\n    if (!(output instanceof OperatorOutput)) {\n      throw new Error(`removeOutput only accepts string or OperatorInput`)\n    }\n    if (output.getParam()) output.setParam(null)\n    this.__outputs.delete(output.getName())\n  }\n\n  /**\n   * Getter for the number of outputs in this operator.\n   * @return {number} - Returns the number of outputs.\n   */\n  getNumOutputs() {\n    return this.__outputs.size\n  }\n\n  /**\n   * The getOutputByIndex method.\n   * @param {number} index - The index value.\n   * @return {object} - The return value.\n   */\n  getOutputByIndex(index) {\n    return Array.from(this.__outputs.values())[index]\n  }\n\n  /**\n   * The getOutput method.\n   * @param {string} name - The name value.\n   * @return {OperatorOutput} - The return value.\n   */\n  getOutput(name) {\n    return this.__outputs.get(name)\n  }\n\n  /**\n   * The evaluate method.\n   * Computes the values of each of the outputs based on the values of the inputs\n   * and the values of outputs with mode OP_READ_WRITE.\n   * This method must be implemented by all Operators.\n   */\n  evaluate() {\n    throw new Error('Not yet implemented')\n  }\n\n  /**\n   * When the value on a Parameter is modified by a user by calling 'setValue,\n   * then if any operators are bound, the value of the Parameter cannot be modified\n   * directly as it is the result of a computation. Instead, the Parameter calls\n   * 'backPropagateValue' on the Operator to cause the Operator to handle propagating\n   * the value to one or more of its inputs.\n   * to its inputs.\n   * @param {any} value - The value param.\n   * @return {any} - The modified value.\n   */\n  backPropagateValue(value) {\n    // TODO: Implement me for custom manipulations.\n    return value\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    j.type = Registry.getBlueprintName(this)\n\n    const inputs = []\n    this.__inputs.forEach((input) => {\n      inputs.push(input.toJSON(context))\n    })\n    j.inputs = inputs\n\n    const outputs = []\n    this.__outputs.forEach((output) => {\n      outputs.push(output.toJSON(context))\n    })\n    j.outputs = outputs\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n\n    if (j.inputs) {\n      j.inputs.forEach((inputJson, index) => {\n        let input\n        if (inputJson.name) {\n          input = this.getInput(inputJson.name)\n          if (!input) {\n            input = this.addInput(inputJson.name)\n          }\n        } else {\n          input = this.getInputByIndex(index)\n        }\n        input.fromJSON(inputJson, context)\n      })\n    }\n    if (j.outputs) {\n      j.outputs.forEach((outputJson, index) => {\n        let output\n        if (outputJson.name) {\n          output = this.getOutput(outputJson.name)\n          if (!output) {\n            output = this.addOutput(outputJson.name)\n          }\n        } else {\n          output = this.getOutputByIndex(index)\n        }\n        output.fromJSON(outputJson, context)\n      })\n    }\n  }\n\n  /**\n   * The detach method.\n   */\n  detach() {\n    this.__inputs.forEach((input) => input.detach())\n    this.__outputs.forEach((output) => output.detach())\n  }\n\n  /**\n   * The reattach method.\n   */\n  reattach() {\n    this.__inputs.forEach((input) => input.reattach())\n    this.__outputs.forEach((output) => output.reattach())\n  }\n\n  /**\n   * The rebind method.\n   */\n  rebind() {\n    this.__outputs.forEach((output) => output.rebind())\n  }\n}\n\nexport { Operator }\n","import { Operator } from './Operator.js'\nimport { OperatorInput } from './OperatorInput.js'\nimport { OperatorOutput } from './OperatorOutput.js'\n\n/** The operator the calculates the global Xfo of a TreeItem based on its parents GlobalXfo and its own LocalXfo\n * @extends Operator\n * @private\n */\nclass CalcGlobalXfoOperator extends Operator {\n  /**\n   * Create a CalcGlobalXfoOperator operator.\n   * @param {XfoParameter} globalXfoParam - The globalXfoParam of the TreeItem being bound\n   * @param {XfoParameter} localXfoParam - The localXfoParam of the TreeItem being bound\n   */\n  constructor(globalXfoParam, localXfoParam) {\n    super('CalcGlobalXfoOperator')\n    this.addInput(new OperatorInput('ParentGlobal'))\n    this.addInput(new OperatorInput('LocalXfo')).setParam(localXfoParam)\n    this.addOutput(new OperatorOutput('GlobalXfo')).setParam(globalXfoParam)\n  }\n\n  /**\n   * The backPropagateValue method inverts the mathematics of the 'evaluate'\n   * method so it can propagate the value backwards to its inputs.\n   * @param {Xfo} value - the new value being set on the output GlobalXfo\n   */\n  backPropagateValue(value) {\n    const localXfoParam = this.getInput('LocalXfo').getParam()\n    const parentGlobalInput = this.getInput('ParentGlobal')\n    if (parentGlobalInput.isConnected()) {\n      const parentGlobalXfo = parentGlobalInput.getValue()\n      localXfoParam.setValue(parentGlobalXfo.inverse().multiply(value))\n    } else {\n      localXfoParam.setValue(value)\n    }\n  }\n\n  /**\n   * The evaluate method calculates a new global Xfo based on the parents Global Xfo,\n   * and the local Xfo value.\n   */\n  evaluate() {\n    const localXfo = this.getInput('LocalXfo').getValue()\n    const parentGlobalInput = this.getInput('ParentGlobal')\n    const globalXfoOutput = this.getOutput('GlobalXfo')\n    if (parentGlobalInput.isConnected()) {\n      const parentGlobalXfo = parentGlobalInput.getValue()\n      globalXfoOutput.setClean(parentGlobalXfo.multiply(localXfo), this)\n    } else {\n      globalXfoOutput.setClean(localXfo, this)\n    }\n  }\n}\n\n// Registry.register('CalcGlobalXfoOperator', CalcGlobalXfoOperator)\n\nexport { CalcGlobalXfoOperator }\n","import { Parameter } from './Parameter'\nimport { Box3 } from '../../Math/Box3'\n\n/**\n * Represents a specific type of parameter, that only stores `Box3` values.\n *\n * i.e.:\n * ```javascript\n * const boundingBox = new BoundingBoxParameter('MyBBox', new TreeItem())\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(boundingBox)\n * ```\n * @extends Parameter\n */\nclass BoundingBoxParameter extends Parameter {\n  /**\n   * Creates an instance of BoundingBoxParameter.\n   * @param {string} name - Name of the parameter\n   * @param {TreeItem} treeItem - `TreeItem` that contains `Box3` representing the Bounding Box\n   */\n  constructor(name, treeItem) {\n    super(name, new Box3(), 'Box3')\n    this.treeItem = treeItem\n    this.dirty = true\n  }\n\n  /**\n   * Makes parameter value be dirty, so when `getValue` is called,\n   * an evaluation is then executed to re-calculate the BoundingBox\n   *\n   * @memberof BoundingBoxParameter\n   */\n  setDirty() {\n    this.dirty = true\n    this.emit('valueChanged')\n  }\n\n  /**\n   * Returns bounding box value\n   *\n   * @return {Box3} - The return value.\n   */\n  getValue() {\n    if (this.dirty) {\n      this.__value = this.treeItem._cleanBoundingBox(this.__value)\n    }\n    return this.__value\n  }\n}\n\nexport { BoundingBoxParameter }\n","import { Xfo, Box3 } from '../Math/index'\nimport { Registry } from '../Registry'\nimport { BooleanParameter, XfoParameter } from './Parameters/index'\nimport { BaseItem } from './BaseItem.js'\nimport { CalcGlobalXfoOperator } from './Operators/CalcGlobalXfoOperator.js'\nimport { BoundingBoxParameter } from './Parameters/BoundingBoxParameter.js'\n\n/**\n * Class representing an Item in the scene tree with hierarchy capabilities (has children).\n * It has the capability to add and remove children.\n * <br>\n * <br>\n * **Parameters**\n * * **Visible(`BooleanParameter`):** Shows/Hides the item.\n * * **LocalXfo(`XfoParameter`):** Specifies the offset of this tree item from its parent.\n * * **GlobalXfo(`XfoParameter`):** Provides the computed world Xfo of this tree item.\n * * **BoundingBox(`BoundingBox`):** Provides the bounding box for the tree item and all of its children in the 3d scene.\n *\n * **Events**\n * * **globalXfoChanged:** Emitted when the value of GlobalXfo parameter changes.\n * * **visibilityChanged:** Emitted when the visibility on the tree item changes.\n * * **highlightChanged:** Emitted when the highlight on the tree item changes.\n * * **childAdded:** Emitted when a item is added as a child.\n * * **childRemoved:** Emitted when an item is removed from the child nodes.\n * * **pointerDown:** Emitted when a pointerDown event happens in an item.\n * * **pointerUp:** Emitted when a pointerUp event happens in an item.\n * * **pointerMove:** Emitted when a pointerMove event happens in an item.\n * * **pointerEnter:** Emitted when a pointerEnter event happens in an item.\n *\n * @extends {BaseItem}\n */\nclass TreeItem extends BaseItem {\n  /**\n   * Creates a tree item with the specified name.\n   *\n   * @param {string} name - The name of the tree item. It's the identifier of the tree item.\n   * It's an identifier intended to be human readable.\n   * It's included in the path that we use to access a particular item.\n   * It's used to display it in the tree.\n   */\n  constructor(name) {\n    super(name)\n\n    // Controls if this TreeItem or its children contribute to the bounding boxes\n    // in the scene. If set to false, Camera framing will ignore this item,\n    this.disableBoundingBox = false\n\n    this.__visibleCounter = 1 // Visible by Default.\n    this.__visible = true\n    this.__highlightMapping = {}\n    this.__highlights = []\n\n    this.__childItems = []\n    this.__childItemsEventHandlers = []\n    this.__childItemsMapping = {}\n\n    // /////////////////////////////////////\n    // Add parameters.\n\n    this.__visibleParam = this.addParameter(new BooleanParameter('Visible', true))\n    this.__localXfoParam = this.addParameter(new XfoParameter('LocalXfo', new Xfo()))\n    this.__globalXfoParam = this.addParameter(new XfoParameter('GlobalXfo', new Xfo()))\n    this.__boundingBoxParam = this.addParameter(new BoundingBoxParameter('BoundingBox', this))\n\n    this.globalXfoOp = new CalcGlobalXfoOperator(this.__globalXfoParam, this.__localXfoParam)\n    this.__globalXfoParam.on('valueChanged', (event) => {\n      this._setBoundingBoxDirty()\n      // Note: deprecate this event.\n      this.emit('globalXfoChanged', event)\n    })\n\n    this.__visibleParam.on('valueChanged', () => {\n      this.__visibleCounter += this.__visibleParam.getValue() ? 1 : -1\n      this.__updateVisibility()\n    })\n  }\n\n  /**\n   * Sets the owner (another TreeItem) of the current TreeItem.\n   * @param {TreeItem} parentItem - The parent item.\n   */\n  setOwner(parentItem) {\n    if (this.__ownerItem) {\n      // The effect of the invisible owner is removed.\n      if (!this.__ownerItem.isVisible()) this.__visibleCounter++\n      const index = this.__ownerItem.getChildIndex(this)\n      if (index >= 0) this.__ownerItem.__unbindChild(index, this)\n    }\n\n    super.setOwner(parentItem)\n\n    // this._setGlobalXfoDirty()\n    if (this.__ownerItem) {\n      // The effect of the invisible owner is added.\n      if (!this.__ownerItem.isVisible()) this.__visibleCounter--\n\n      this.globalXfoOp.getInput('ParentGlobal').setParam(this.__ownerItem.getParameter('GlobalXfo'))\n      // this.__ownerItem.on('globalXfoChanged', this._setGlobalXfoDirty)\n    } else {\n      this.globalXfoOp.getInput('ParentGlobal').setParam(null)\n    }\n\n    this.__updateVisibility()\n  }\n\n  /**\n   * The __updatePath method.\n   * @private\n   */\n  __updatePath() {\n    super.__updatePath()\n    for (const childItem of this.__childItems) {\n      if (childItem) childItem.__updatePath()\n    }\n  }\n\n  /**\n   * Returns the parent of current TreeItem.\n   *\n   * @return {TreeItem|undefined} - Returns the parent item.\n   */\n  getParentItem() {\n    return this.getOwner()\n  }\n\n  /**\n   * Sets the parent of current TreeItem.\n   *\n   * @param {TreeItem} parentItem - The parent item.\n   */\n  setParentItem(parentItem) {\n    this.setOwner(parentItem)\n  }\n\n  // ////////////////////////////////////////\n  // Global Matrix\n\n  /**\n   * @deprecated\n   * Returns the value of local Xfo transform parameter.\n   *\n   * @return {Xfo} - Returns the local Xfo.\n   */\n  getLocalXfo() {\n    console.warn(`Deprecated. use \"getParameter('LocalXfo').getValue()\"`)\n    return this.__localXfoParam.getValue()\n  }\n\n  /**\n   * @deprecated\n   * Sets the local Xfo transform parameter.\n   *\n   * @param {Xfo} xfo - The local xfo transform.\n   */\n  setLocalXfo(xfo) {\n    console.warn(`Deprecated. use \"getParameter('LocalXfo').setValue(xfo)\"`)\n    this.__localXfoParam.setValue(xfo)\n  }\n\n  /**\n   * @deprecated\n   * Returns the global Xfo transform.\n   *\n   * @return {Xfo} - Returns the global Xfo.\n   */\n  getGlobalXfo() {\n    console.warn(`Deprecated. use \"getParameter('GlobalXfo').getValue()\"`)\n    return this.__globalXfoParam.getValue()\n  }\n\n  /**\n   * @deprecated\n   * Sets the global Xfo transform.\n   * @param {Xfo} xfo - The global xfo transform.\n   */\n  setGlobalXfo(xfo) {\n    console.warn(`Deprecated. use \"getParameter('GlobalXfo').setValue(xfo)\"`)\n    this.__globalXfoParam.setValue(xfo)\n  }\n\n  // ////////////////////////////////////////\n  // Visibility\n\n  /**\n   * @deprecated\n   * Returns visible parameter value for current TreeItem.\n   *\n   * @return {boolean} - The visible param value.\n   */\n  getVisible() {\n    console.warn('Deprecated. Use #isVisible')\n    return this.isVisible()\n  }\n\n  /**\n   * Returns visible parameter value for current TreeItem.\n   *\n   * @return {boolean} - The visible param value.\n   */\n  isVisible() {\n    // Should never be more than 1, but can be less than 0.\n    return this.__visibleCounter > 0\n  }\n\n  /**\n   * Sets visible parameter value.\n   *\n   * @param {number} val - The val param.\n   */\n  setVisible(val) {\n    this.__visibleParam.setValue(val)\n  }\n\n  /**\n   * Updates current TreeItem visible state and propagates its value to children elements.\n   *\n   * @param {number} val - The val param.\n   */\n  propagateVisibility(val) {\n    this.__visibleCounter += val\n    this.__updateVisibility()\n  }\n\n  /**\n   * The __updateVisibility method.\n   * @return {boolean} - Returns a boolean.\n   * @private\n   */\n  __updateVisibility() {\n    const visible = this.__visibleCounter > 0\n    if (visible != this.__visible) {\n      this.__visible = visible\n      for (const childItem of this.__childItems) {\n        if (childItem instanceof TreeItem) childItem.propagateVisibility(this.__visible ? 1 : -1)\n      }\n      this.emit('visibilityChanged', { visible })\n      return true\n    }\n    return false\n  }\n\n  // ////////////////////////////////////////\n  // Highlights\n\n  /**\n   * Adds a highlight to the tree item.\n   *\n   * @param {string} name - The name of the tree item.\n   * @param {Color} color - The color of the highlight.\n   * @param {boolean} propagateToChildren - A boolean indicating whether to propagate to children.\n   */\n  addHighlight(name, color, propagateToChildren = false) {\n    // If the highlight was already in the list,\n    // remove it and put it at the top.\n    if (name in this.__highlightMapping) {\n      if (this.__highlights[this.__highlights.length - 1] != name) {\n        // The highlight was already in the list, but not at the top. Move it to the top.\n        const id = this.__highlights.indexOf(name)\n        this.__highlights.splice(id, 1)\n        this.__highlights.push(name)\n        this.emit('highlightChanged', { name, color })\n      } else {\n        // This item is already highlighted with this highlight\n        if (!this.__highlightMapping[name].isEqual(color)) {\n          this.__highlightMapping[name] = color\n          this.emit('highlightChanged', { name, color })\n        }\n      }\n    } else {\n      this.__highlights.push(name)\n      this.__highlightMapping[name] = color\n      this.emit('highlightChanged', { name, color })\n    }\n\n    if (propagateToChildren) {\n      this.__childItems.forEach((childItem) => {\n        if (childItem instanceof TreeItem) childItem.addHighlight(name, color, propagateToChildren)\n      })\n    }\n  }\n\n  /**\n   * Removes a highlight to the tree item.\n   *\n   * @param {string} name - The name of the tree item.\n   * @param {boolean} propagateToChildren - A boolean indicating whether to propagate to children.\n   */\n  removeHighlight(name, propagateToChildren = false) {\n    if (name in this.__highlightMapping) {\n      if (this.__highlights[this.__highlights.length - 1] == name) {\n        this.__highlights.pop()\n        delete this.__highlightMapping[name]\n\n        if (this.__highlights.length > 0) {\n          const nextName = this.__highlights[this.__highlights.length - 1]\n          const nextColor = this.__highlightMapping[nextName]\n          this.emit('highlightChanged', { name: nextName, color: nextColor })\n        } else {\n          // The last highlight was removed, so emit an event saying we are no longer highlighted.\n          this.emit('highlightChanged', {})\n        }\n      } else {\n        // The removed highlight was not the current highlight, so no change needs to be shown.\n        const id = this.__highlights.indexOf(name)\n        this.__highlights.splice(id, 1)\n        delete this.__highlightMapping[name]\n      }\n    }\n    if (propagateToChildren) {\n      this.__childItems.forEach((childItem) => {\n        if (childItem instanceof TreeItem) childItem.removeHighlight(name, propagateToChildren)\n      })\n    }\n  }\n\n  /**\n   * Returns the color of the current highlight.\n   *\n   * @return {Color} - The color value.\n   */\n  getHighlight() {\n    if (this.__highlights.length > 0) return this.__highlightMapping[this.__highlights[this.__highlights.length - 1]]\n  }\n\n  /**\n   * Returns `true` if this items has a highlight color assigned.\n   *\n   * @return {boolean} - `True` if this item is highlighted.\n   */\n  isHighlighted() {\n    return this.__highlights.length > 0\n  }\n\n  // ////////////////////////////////////////\n  // Bounding Box\n\n  /**\n   * Getter for a bounding box.\n   * @private\n   */\n  get boundingBox() {\n    console.warn(\"getter is deprecated. Please use 'getBoundingBox'\")\n    return this.getBoundingBox()\n  }\n\n  /**\n   * @deprecated\n   * Returns bounding box parameter value.\n   * @private\n   * @return {Box3} - The return value.\n   */\n  getBoundingBox() {\n    console.warn(\"getter is deprecated. Please use 'getParameter('BoundingBox').getValue()'\")\n    return this.__boundingBoxParam.getValue()\n  }\n\n  /**\n   * The _cleanBoundingBox method.\n   * @param {Box3} bbox - The bounding box value.\n   * @return {Box3} - The return value.\n   * @private\n   */\n  _cleanBoundingBox(bbox) {\n    bbox.reset()\n    this.__childItems.forEach((childItem) => {\n      if (childItem instanceof TreeItem)\n        if (childItem.isVisible()) {\n          // console.log(\" - \", childItem.constructor.name, childItem.getName(), childItem.getParameter('GlobalXfo').getValue().sc.x, childItem.getBoundingBox().toString())\n          bbox.addBox3(childItem.getParameter('BoundingBox').getValue())\n        }\n    })\n    // console.log(this.getName(), bbox.toString())\n    return bbox\n  }\n\n  /**\n   * The _childBBoxChanged method.\n   * @private\n   */\n  _childBBoxChanged() {\n    this._setBoundingBoxDirty()\n  }\n\n  /**\n   * The _setBoundingBoxDirty method.\n   * @private\n   */\n  _setBoundingBoxDirty() {\n    if (this.__boundingBoxParam) {\n      // Will cause boundingChanged to emit\n      this.__boundingBoxParam.setDirty()\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Children\n\n  /**\n   * Returns children list, but children are not required to have hierarchy structure(`TreeItem`).\n   * Meaning that it could be another kind of item than `TreeItem`.\n   * <br>\n   * i.e. **BaseImage**\n   *\n   * @return {array} - List of `BaseItem` owned by current TreeItem.\n   */\n  getChildren() {\n    return this.__childItems\n  }\n\n  /**\n   * Returns the number of child elements current `TreeItem` has.\n   *\n   * @deprecated since version 0.0.80\n   * @return {number} - The return value.\n   */\n  numChildren() {\n    console.warn('Deprecated. Use #getNumChildren')\n    return this.__childItems.length\n  }\n\n  /**\n   * Returns the number of child elements current `TreeItem` has.\n   *\n   * @return {number} - The return value.\n   */\n  getNumChildren() {\n    return this.__childItems.length\n  }\n\n  /**\n   * Verifies if there's a child with the specified name.\n   * If there's one, modifiers are applied to the name and returned.\n   *\n   * @param {string} name - The name value.\n   * @return {string} - Returns a unique name.\n   */\n  generateUniqueName(name) {\n    if (!(name in this.__childItemsMapping)) return name\n\n    let index = 1\n    if (name.length > 4 && !Number.isNaN(parseInt(name.substring(name.length - 4))))\n      index = parseInt(name.substr(name.length - 4))\n    else if (name.length > 3 && !Number.isNaN(parseInt(name.substring(name.length - 3))))\n      index = parseInt(name.substr(name.length - 3))\n    else if (name.length > 2 && !Number.isNaN(parseInt(name.substring(name.length - 2))))\n      index = parseInt(name.substr(name.length - 2))\n\n    const names = []\n    for (const c of this.__childItems) {\n      // Sometimes we have an empty child slot.\n      // We resize the child vector, and then populate it.\n      if (c) {\n        names.push(c.getName())\n      }\n    }\n\n    let uniqueName = name\n    while (true) {\n      let suffix = '' + index\n      while (suffix.length < 2) {\n        suffix = '0' + suffix\n      }\n\n      uniqueName = name + suffix\n      if (!names.includes(uniqueName)) break\n      index++\n    }\n    return uniqueName\n  }\n\n  /**\n   * The __updateMapping method.\n   * @param {any} start - The start value.\n   * @private\n   */\n  __updateMapping(start) {\n    // If a child has been added or removed from the\n    // tree item, we need to update the acceleration structure.\n    for (let i = start; i < this.__childItems.length; i++) {\n      this.__childItemsMapping[this.__childItems[i].getName()] = i\n    }\n  }\n\n  /**\n   * The _childNameChanged event handler.\n   * @param {object} event - The start value.\n   * @private\n   */\n  _childNameChanged(event) {\n    // Update the acceleration structure.\n    const index = this.__childItemsMapping[event.oldName]\n    delete this.__childItemsMapping[event.oldName]\n    this.__childItemsMapping[event.newName] = index\n  }\n\n  /**\n   * Inserts a child. It accepts all kind of `BaseItem`, not only `TreeItem`.\n   *\n   * @param {BaseItem} childItem - The child BaseItem to insert.\n   * @param {number} index - The index to add the child item.\n   * @param {boolean} maintainXfo - Boolean that determines if the Xfo value is maintained.\n   * @param {boolean} fixCollisions - Modify the name of the item to avoid name collisions.\n   * If false, an exception wll be thrown instead if a name collision occurs.\n   * @return {number} - The index of the child item in this items children array.\n   */\n  insertChild(childItem, index, maintainXfo = false, fixCollisions = true) {\n    if (childItem.getName() in this.__childItemsMapping) {\n      if (fixCollisions) {\n        childItem.setName(this.generateUniqueName(childItem.getName()))\n      } else {\n        throw new Error(\"Item '\" + childItem.getName() + \"' is already a child of :\" + this.getPath())\n      }\n    }\n    if (!(childItem instanceof BaseItem)) {\n      throw new Error('Object is is not a tree item :' + childItem.constructor.name)\n    }\n\n    const listenerIDs = {}\n    listenerIDs['nameChanged'] = childItem.on('nameChanged', (event) => {\n      this._childNameChanged(event)\n    })\n\n    let newLocalXfo\n    if (childItem instanceof TreeItem) {\n      if (maintainXfo) {\n        const globalXfo = this.getParameter('GlobalXfo').getValue()\n        const childGlobalXfo = childItem.getParameter('GlobalXfo').getValue()\n        newLocalXfo = globalXfo.inverse().multiply(childGlobalXfo)\n      }\n\n      listenerIDs['boundingChanged'] = childItem.on('boundingChanged', (event) => {\n        this._setBoundingBoxDirty(event)\n      })\n      listenerIDs['visibilityChanged'] = childItem.on('visibilityChanged', (event) => {\n        this._setBoundingBoxDirty(event)\n      })\n    }\n\n    this.__childItems.splice(index, 0, childItem)\n    this.__childItemsEventHandlers.splice(index, 0, listenerIDs)\n    this.__childItemsMapping[childItem.getName()] = index\n    this.__updateMapping(index)\n\n    childItem.setOwner(this)\n\n    if (childItem instanceof TreeItem) {\n      if (maintainXfo) childItem.getParameter('LocalXfo').setValue(newLocalXfo)\n      this._setBoundingBoxDirty()\n\n      this.__highlights.forEach((name) => {\n        const color = this.__highlightMapping[name]\n        childItem.addHighlight(name, color, true)\n      })\n    }\n\n    this.emit('childAdded', { childItem, index })\n\n    return childItem\n  }\n\n  /**\n   * Adds a child. It accepts all kind of `BaseItem`, not only `TreeItem`.\n   *\n   * @param {BaseItem} childItem - The child BaseItem to add.\n   * @param {boolean} maintainXfo - Boolean that determines if\n   * the Global Xfo value is maintained. If true, when moving\n   * items in the hierarchy from one parent to another, the local Xfo\n   * of the item will be modified to maintain and the Global Xfo.\n   * Note: this option defaults to false because we expect that is the\n   * behavior users would expect when manipulating the tree in code.\n   * To be safe and unambiguous, always try to specify this value.\n   * @param {boolean} fixCollisions - Modify the name of the item to avoid\n   * name collisions with other children of the same parent.\n   * If false, an exception wll be thrown instead if a name collision occurs.\n   * @return {BaseItem} childItem - The child BaseItem that was added.\n   */\n  addChild(childItem, maintainXfo = true, fixCollisions = true) {\n    const index = this.__childItems.length\n    this.insertChild(childItem, index, maintainXfo, fixCollisions)\n    return childItem\n  }\n\n  /**\n   * Returns child element in the specified index.\n   *\n   * @param {number} index - The index to remove the child TreeItem.\n   * @return {BaseItem|undefined} - Return the child TreeItem.\n   */\n  getChild(index) {\n    return this.__childItems[index]\n  }\n\n  /**\n   * Returns child element with the specified name.\n   *\n   * @param {string} name - The name value.\n   * @return {BaseItem|null} - Return the child BaseItem.\n   */\n  getChildByName(name) {\n    const index = this.__childItemsMapping[name]\n    if (index != undefined) {\n      return this.__childItems[index]\n    }\n    return null\n  }\n\n  /**\n   * Returns children names as an array of strings.\n   *\n   * @return {array} - An array of names for each child.\n   */\n  getChildNames() {\n    const names = []\n    for (let i = 0; i < this.__childItems.length; i++) {\n      const childItem = this.__childItems[i]\n      if (childItem != null) names[i] = childItem.getName()\n    }\n    return names\n  }\n\n  /**\n   * UnBind an item from the group. This method is called\n   * automatically when an item is removed from the group.\n   * @param {number} index - The index value.\n   * @param {TreeItem} childItem - item to unbind.\n   * @private\n   */\n  __unbindChild(index, childItem) {\n    const listenerIDs = this.__childItemsEventHandlers[index]\n    // eslint-disable-next-line guard-for-in\n    for (const key in listenerIDs) {\n      childItem.removeListenerById(key, listenerIDs[key])\n    }\n\n    this.__childItems.splice(index, 1)\n    this.__childItemsEventHandlers.splice(index, 1)\n    delete this.__childItemsMapping[childItem.getName()]\n    this.__updateMapping(index)\n\n    if (childItem instanceof TreeItem) {\n      this._setBoundingBoxDirty()\n    }\n\n    this.emit('childRemoved', { childItem, index })\n  }\n\n  /**\n   * Removes a child BaseItem by specifying its index.\n   *\n   * @param {number} index - The index value.\n   */\n  removeChild(index) {\n    const childItem = this.__childItems[index]\n\n    if (!childItem) {\n      return\n    }\n\n    this.__unbindChild(index, childItem)\n    childItem.setOwner(undefined)\n  }\n\n  /**\n   * Removes a child BaseItem by specifying its name.\n   *\n   * @param {string} name - The name param.\n   * @return {BaseItem} - Return the child TreeItem.\n   */\n  removeChildByName(name) {\n    const index = this.__childItemsMapping[name]\n    if (index != undefined) {\n      return this.removeChild(index)\n    }\n    return null\n  }\n\n  /**\n   * Removes the provided item from this TreeItem if it is one of its children.\n   * An exception is thrown if the item is not a child of this tree item.\n   *\n   * @param {BaseItem} childItem - The child TreeItem to remove.\n   */\n  removeChildByHandle(childItem) {\n    const index = this.__childItems.indexOf(childItem)\n    if (index == -1) throw new Error('Error in removeChildByHandle. Child not found:' + childItem.getName())\n    this.removeChild(index)\n  }\n\n  /**\n   * Removes all children Items.\n   */\n  removeAllChildren() {\n    let index = this.__childItems.length\n    while (index--) {\n      this.removeChild(index)\n    }\n    this._setBoundingBoxDirty()\n  }\n\n  /**\n   * Returns index position of the specified item.\n   *\n   * @param {BaseItem} childItem - The child TreeItem value.\n   * @return {number} - Child index in children array.\n   */\n  getChildIndex(childItem) {\n    return this.__childItems.indexOf(childItem)\n  }\n\n  /**\n   * @deprecated\n   * Returns index position of the specified item.\n   *\n   * @param {object} childItem - The child TreeItem value.\n   * @return {number} - The return value.\n   */\n  indexOfChild(childItem) {\n    console.warn('Deprecated Use #getChildIndex')\n    return this.getChildIndex(childItem)\n  }\n\n  // ////////////////////////////////////////\n  // Path Traversal\n  // Note: Path resolution starts at the root of the\n  // tree the path was generated from (so index=1, because we don't resolve root).\n  // Note: When a path is made relative to an item in its tree, the path\n  // starts with the child elements.\n\n  /**\n   * The resolvePath method traverses the subtree from this item down\n   * matching each name in the path with a child until it reaches the\n   * end of the path.\n   *\n   * @param {array} path - The path value.\n   * @param {number} index - The index value.\n   * @return {BaseItem|Parameter} - The return value.\n   */\n  resolvePath(path, index = 0) {\n    if (typeof path == 'string') path = path.split('/')\n\n    if (index == 0) {\n      if (path[0] == '.' || path[0] == this.__name) index++\n      else if (path[0] == '..') {\n        return this.__ownerItem.resolvePath(path, index + 1)\n      } else {\n        // Note: new paths should be generated starting with the name of the root object.\n        // Re-enable this to debug path issues.\n        // console.warn(\"Paths should start with the name of the root item or '.'\")\n      }\n    }\n\n    if (index == path.length) {\n      return this\n    }\n\n    const childName = path[index]\n    const childItem = this.getChildByName(childName)\n    if (childItem == undefined) {\n      // Maybe the name is a parameter name.\n      const param = this.getParameter(path[index])\n      if (param) {\n        return param\n      }\n\n      // Note: consuming code should catch and display errors if necessary.\n      // Silent failures are extremely difficult to debug.\n      throw new Error(\n        `Unable to resolve path : [${path.toString()}] after: ${this.getName()} \\nNo child or parameter called : \"${\n          path[index]\n        }\"`\n      )\n    }\n    return childItem.resolvePath(path, index + 1)\n  }\n\n  /**\n   * Traverse the tree structure from this point down\n   * and fire the callback for each visited item.\n   * Note: Depth only used by selection sets for now.\n   *\n   * @param {function} callback - The callback value.\n   * @param {boolean} includeThis - Fire the callback for this item.\n   */\n  traverse(callback, includeThis = true) {\n    const __c = (treeItem, depth) => {\n      const children = treeItem.getChildren()\n      for (const childItem of children) {\n        if (childItem) __t(childItem, depth + 1)\n      }\n    }\n\n    const __t = (treeItem, depth) => {\n      if (callback(treeItem, depth) == false) return false\n      if (treeItem instanceof TreeItem) __c(treeItem, depth)\n    }\n\n    if (includeThis) {\n      __t(this, 1)\n    } else {\n      __c(this, 0)\n    }\n  }\n\n  // ///////////////////////\n  // Events\n\n  /**\n   * Causes an event to occur when a user presses a pointer(mouse, touch, pencil, etc.) over an element.\n   *\n   * @param {PointerEvent} event - The event value\n   */\n  onPointerDown(event) {\n    this.emit('pointerDown', event)\n\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onPointerDown(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when a user releases a mouse button over a element.\n   *\n   * @param {PointerEvent} event - The mouse event that occurs.\n   */\n  onPointerUp(event) {\n    this.emit('pointerUp', event)\n\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onPointerUp(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when the pointer is moving while over an element.\n   *\n   * @param {PointerEvent} event - The mouse event that occurs.\n   */\n  onPointerMove(event) {\n    this.emit('pointerMove', event)\n\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onPointerMove(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved onto an element.\n   *\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerEnter(event) {\n    this.emit('pointerEnter', event)\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onPointerEnter(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved out of an element.\n   *\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerLeave(event) {\n    this.emit('pointerLeave', event)\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onPointerLeave(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse wheel is rolled up or down over an element.\n   *\n   * @param {WheelEvent } event - The wheel event that occurs.\n   */\n  onWheel(event) {\n    if (event.propagating && this.__ownerItem) {\n      this.__ownerItem.onWheel(event)\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method serializes this instance as a JSON.\n   * It can be used for persistence, data transfer, etc.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n\n    // Some Items, such as the SliderSceneWidget do not need their children\n    // to be saved.\n    const childItemsJSON = {}\n    for (const childItem of this.__childItems) {\n      if (childItem) {\n        const childJSON = childItem.toJSON(context)\n        if (childJSON) childItemsJSON[childItem.getName()] = childJSON\n      }\n    }\n    if (Object.keys(childItemsJSON).length > 0) {\n      if (j) {\n        j.children = childItemsJSON\n      } else {\n        j = {\n          name: this.__name,\n          children: childItemsJSON,\n        }\n      }\n    }\n\n    return j\n  }\n\n  /**\n   * The fromJSON method takes a JSON and deserializes into an instance of this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n\n    if (context && !Number.isNaN(context.numTreeItems)) context.numTreeItems++\n\n    // if ('bbox' in j){\n    //     let box = new Box3();\n    //     box.fromJSON(j.bbox);\n    //     this.__boundingBoxParam.setValue(box);\n    // }\n\n    if (j.children != null) {\n      const childrenJson = j.children\n      if (Array.isArray(childrenJson)) {\n        for (const childJson of childrenJson) {\n          // Note: During loading of asset trees, we have an\n          // existing tree generated by loading a bin data file.\n          let childItem = this.getChildByName(childJson.name)\n          if (childItem) {\n            childItem.fromJSON(childJson, context)\n          } else {\n            if (childJson.type) {\n              childItem = Registry.constructClass(childJson.type)\n              if (childItem) {\n                // Note: we should load the json first, as it\n                // may contain the unique name of the item.\n                childItem.fromJSON(childJson, context)\n                this.addChild(childItem, false, false)\n              }\n            } else {\n              // Note: no need to log a warning. A child might not exist\n              // if the binary tree has changed, and so the JSON data\n              // can no longer be mapped.\n              // console.warn(\"Child not found:\", childName, \" within \", this.getNumChildren() + \" of:\" + this.getPath())\n            }\n          }\n        }\n      } else {\n        // eslint-disable-next-line guard-for-in\n        for (const childName in childrenJson) {\n          const childJson = childrenJson[childName]\n          // Note: During loading of asset trees, we have an\n          // existing tree generated by loading a bin data file.\n          let childItem = this.getChildByName(childName)\n          if (childItem) {\n            childItem.fromJSON(childJson, context)\n          } else if (childJson.type) {\n            childItem = Registry.constructClass(childJson.type)\n            if (childItem) {\n              // Note: we add the child now before loading.\n              // This is because certain items. (e.g. Groups)\n              // Calculate their global Xfo, and use it to modify\n              // the transform of their members.\n              // Note: Groups bind to items in the scene which are\n              // already added as children, and so have global Xfos.\n              // We prefer to add a child after its loaded, because sometimes\n              // In the tree is asset items, who will only toggled as\n              // unloaded once they are loaded(else they are considered inline assets.)\n              childItem.fromJSON(childJson, context)\n              this.addChild(childItem, false, false)\n            }\n          } else {\n            // Note: When saving a bin tree, we no longer save the 'type' value\n            // so that those nodes can no longer be re-created by loading the JSON\n            // file. We don't want the json tree\n            // to re-instate ghost tree items that have been removed from the bin tree.\n            //  (as has happened in testing.)\n            // console.warn(\"Warning loading JSON. Child not found:\" + childName);\n          }\n        }\n      }\n    }\n\n    // if (j.components) {\n    //   for (const cj of j.components) {\n    //     const component = Registry.constructClass(cj.type ? cj.type : cj.name)\n    //     if (component) {\n    //       component.fromJSON(cj, context)\n    //       this.addComponent(component)\n    //     }\n    //   }\n    // }\n  }\n\n  /**\n   * Sets state of current Item(Including parameters & children) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.readBinary(reader, context)\n\n    context.numTreeItems++\n\n    const itemFlags = reader.loadUInt8()\n\n    const visibilityFlag = 1 << 1\n    this.setVisible(itemFlags & visibilityFlag)\n\n    // Note: to save space, some values are skipped if they are identity values\n    const localXfoFlag = 1 << 2\n    const localXfoIndependentScFlag = 1 << 5\n    if (itemFlags & localXfoFlag) {\n      const xfo = new Xfo()\n      xfo.tr = reader.loadFloat32Vec3()\n      xfo.ori = reader.loadFloat32Quat()\n      if (itemFlags & localXfoIndependentScFlag) {\n        xfo.sc = reader.loadFloat32Vec3()\n      } else {\n        xfo.sc.set(reader.loadFloat32())\n      }\n      this.__localXfoParam.loadValue(xfo)\n    }\n\n    const bboxFlag = 1 << 3\n    if (itemFlags & bboxFlag) {\n      this.__boundingBoxParam.loadValue(new Box3(reader.loadFloat32Vec3(), reader.loadFloat32Vec3()))\n    }\n\n    const numChildren = reader.loadUInt32()\n    if (numChildren > 0) {\n      const toc = reader.loadUInt32Array(numChildren)\n      for (let i = 0; i < numChildren; i++) {\n        try {\n          reader.seek(toc[i]) // Reset the pointer to the start of the item data.\n          const childType = reader.loadStr()\n\n          const childItem = Registry.constructClass(childType)\n          if (!childItem) {\n            const childName = reader.loadStr()\n            console.warn('Unable to construct child:' + childName + ' of type:' + childType)\n            continue\n          }\n          reader.seek(toc[i]) // Reset the pointer to the start of the item data.\n          childItem.readBinary(reader, context)\n\n          this.addChild(childItem, false, true)\n        } catch (e) {\n          console.warn('Error loading tree item: ', e)\n        }\n      }\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new tree item, copies its values\n   * from this item and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {TreeItem} - Returns a new cloned tree item.\n   */\n  clone(context) {\n    const cloned = new TreeItem()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n\n  /**\n   * Copies current TreeItem with all its children.\n   *\n   * @param {TreeItem} src - The tree item to copy from.\n   * @param {object} context - The context value.\n   */\n  copyFrom(src, context) {\n    super.copyFrom(src, context)\n\n    // Share a local Xfo\n    // Note: disabled for now.\n    // When cloning instanced trees, the root item should\n    // have a unique LocalXfoParam, as it must be re-set.\n    // (The root of the tree is a cloned and attached to an Instance node that provides the transform)\n\n    src.getChildren().forEach((srcChildItem) => {\n      if (srcChildItem) this.addChild(srcChildItem.clone(context), false, false)\n    })\n  }\n}\n\nRegistry.register('TreeItem', TreeItem)\n\nexport { TreeItem }\n","/* eslint-disable require-jsdoc */\nimport { SystemDesc } from '../../SystemDesc.js'\nimport ArchiveUnpackerWorker from 'web-worker:./ArchiveUnpackerWorker.js'\n// For synchronous loading, uncomment these lines.\n// import {\n//     ResourceLoaderWorker_onmessage\n// } from './ArchiveUnpackerWorker.js';\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\nconst numCores = SystemDesc.hardwareConcurrency - 1 // always leave one main thread code spare.\n\n/**\n * Archive unpacker plugin.\n */\nclass ArchiveUnpackerPlugin {\n  constructor() {\n    this.__callbacks = {}\n    this.__workers = []\n    this.__nextWorker = 0\n  }\n\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'archive'\n  }\n\n  /**\n   * The __getWorker method.\n   * @return {any} - The return value.\n   * @private\n   */\n  __getWorker() {\n    const __constructWorker = () => {\n      return new Promise((resolve, reject) => {\n        const worker = new ArchiveUnpackerWorker()\n        // const worker = new Worker(this.__resourceLoaderFile.url);\n\n        worker.postMessage({\n          type: 'init',\n        })\n        worker.onmessage = (event) => {\n          if (event.data.type === 'WASM_LOADED') {\n            resolve(worker)\n          } else if (event.data.type === 'FINISHED') {\n            // const data = event.data\n            // const text = [\n            //   '==================== ArchiveUnpackerWorker.js ====================',\n            //   `Filename: ${data.resourceId}`,\n            //   '------------------------------------------------------',\n            // ];\n            // for(const file in data.entries) {\n            //   text.push(`${file}:${data.entries[file].byteLength}`);\n            // }\n            // console.log(text.join('\\n'))\n\n            this.__onFinishedReceiveFileData(event.data)\n          } else if (event.data.type === 'ERROR') {\n            const data = event.data\n            console.warn(`Unable to load Resource: ${data.resourceId}`, event.data)\n            reject(new Error(`Unable to load Resource: ${data.resourceId}`))\n          }\n        }\n      })\n    }\n\n    this.__nextWorker = (this.__nextWorker + 1) % numCores\n    if (this.__workers[this.__nextWorker] == undefined) this.__workers[this.__nextWorker] = __constructWorker()\n    return this.__workers[this.__nextWorker]\n  }\n\n  /**\n   * The __terminateWorkers value.\n   * @private\n   */\n  __terminateWorkers() {\n    for (const worker of this.__workers) worker.terminate()\n    this.__workers = []\n  }\n\n  /**\n   * Loads an archive file, returning a promise that resolves to the JSON data value.\n   * Note: using the resource loader to centralize data loading enables progress to be tracked and displayed\n   * @param {string} url - The url of the data to load.\n   * @return {Promise} - The promise value.\n   */\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1) //  start loading.\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        if (!(url in this.__callbacks)) this.__callbacks[url] = []\n        this.__callbacks[url].push(resolve)\n        fetch(url)\n          .then((response) => {\n            this.resourceLoader.incrementWorkDone(1) // done loading\n            if (checkStatus(response)) return response.arrayBuffer()\n            else {\n              reject(new Error(`loadArchive: ${response.status} - ${response.statusText} : ${url}`))\n            }\n          })\n          .then((buffer) => {\n            const resourceId = url\n            if (!(resourceId in this.__callbacks)) this.__callbacks[resourceId] = []\n            this.__callbacks[resourceId].push(resolve)\n\n            this.__getWorker().then((worker) => {\n              worker.postMessage({\n                type: 'unpack',\n                resourceId,\n                buffer,\n              })\n            })\n          })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n\n  /**\n   * The __onFinishedReceiveFileData method.\n   * @param {object} fileData - The fileData value.\n   * @private\n   */\n  __onFinishedReceiveFileData(fileData) {\n    const resourceId = fileData.resourceId\n    const callbacks = this.__callbacks[resourceId]\n    if (callbacks) {\n      for (const callback of callbacks) {\n        callback(fileData.entries)\n      }\n      delete this.__callbacks[resourceId]\n    }\n  }\n\n  shutDownWorkers() {\n    this.__workers.forEach((workerPromise) => {\n      workerPromise.then((worker) => {\n        worker.terminate()\n      })\n    })\n  }\n}\n\nexport { ArchiveUnpackerPlugin }\n","/* eslint-disable require-jsdoc */\n/* eslint-disable no-unused-vars */\n/* eslint-disable guard-for-in */\nimport { EventEmitter } from '../Utilities/index'\nimport { zeaDebug } from '../helpers/zeaDebug'\nimport { TreeItem } from './TreeItem'\n\nfunction checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * Class for delegating resource loading, enabling an abstraction of a cloud file system to be implemented.\n *\n * The resource loader can be used to load data, where it provides central tracking of loading progress and functionality to load various file types, including compressed archives.\n * The plugins script must be loaded along with the engine\n *\n * ```html\n *  <script crossorigin src=\"libs/zea-engine/dist/plugins.umd.js\"></script>\n * ```\n *\n * To load a 'text' file.\n * ```javascript\n *   resourceLoader.loadFile('text', url).then((txt) =>{\n *      console.log(txt)\n *   })\n * ```\n *\n * To load a 'JSON' file.\n * ```javascript\n *   resourceLoader.loadFile('json', url).then((txt) =>{\n *      console.log(json)\n *   })\n * ```\n *\n * To load a 'binary' file.\n * ```javascript\n *   resourceLoader.loadFile('binary', url).then((arrayBuffer) =>{\n *      console.log(arrayBuffer.length)\n *   })\n * ```\n *\n * To load an 'archive' file that is a compressed archive containing multiple sub-files.\n * ```javascript\n *   resourceLoader.loadFile('archive', url).then((entries) =>{\n *      console.log(entries)\n *   })\n * ```\n *\n * **Events**\n * * **loaded:** emitted when a file has finished loading\n * * **progressIncremented:** emitted when a loading of processing task has been incremented\n * * **allResourcesLoaded:** emitted when all outstanding resources are loaded. This event can be used to signal the completion of load.\n */\nclass ResourceLoader extends EventEmitter {\n  /**\n   * Create a resource loader.\n   */\n  constructor() {\n    super()\n\n    this.__adapter = undefined\n    this.__totalWork = 0\n    this.__doneWork = 0\n\n    this.plugins = {}\n\n    this.systemUrls = {}\n\n    const baseUrl = 'https://storage.googleapis.com/visualive-tmp/zea-engine-resources'\n    this.systemUrls['ZeaEngine/Vive.vla'] = baseUrl + '/Vive.vla'\n    this.systemUrls['ZeaEngine/Oculus.vla'] = baseUrl + '/Oculus.vla'\n\n    // Common resources are used by systems such at the renderer and VR controllers.\n    // Any asset that will probably be used my multiple different independent objects\n    // should be loaded here. (For now, it is being used to load VR Controller assets.)\n    this.__commonResources = {}\n  }\n\n  /**\n   * The setAdapter method.\n   * @param {object} adapter - The adapter object.\n   */\n  setAdapter(adapter) {\n    this.__adapter = adapter\n  }\n\n  /**\n   * The getAdapter method.\n   * @return {object} - The adapter object.\n   */\n  getAdapter() {\n    return this.__adapter\n  }\n\n  // /////////////////////////////////////////////////\n  // Register plugins.\n  registerPlugin(plugin) {\n    zeaDebug('Resource loader plugin registered: %s', plugin.getType())\n\n    plugin.init(this)\n    this.plugins[plugin.getType()] = plugin\n  }\n\n  // /////////////////////////////////////////////////\n  // URLS\n\n  /**\n   * Given some value, which could be an IR or a path, return the unique identifier.\n   * @param {string} value - The file value.\n   * @return {string} - The resolved fileId if an adapter is installed, else the original value.\n   */\n  resolveFileId(value) {\n    if (this.__adapter) return this.__adapter.resolveFileId(value)\n    return value\n  }\n\n  /**\n   * The resolveFilename method.\n   * @deprecated\n   * @param {string} value - The file value.\n   * @return {string} - The resolved URL if an adapter is installed, else the original value.\n   */\n  resolveFilename(value) {\n    if (this.__adapter) return this.__adapter.resolveFilename(value)\n    if (!value.includes('/')) return value\n    return value.split('/')[1]\n  }\n\n  /**\n   * Given a file ID, returns a URL. The adaptor that is assigned is responsible for resolving the URL within the file system.\n   * @param {string} value - The file value.\n   * @return {string} - The resolved URL if an adapter is installed, else the original value.\n   */\n  resolveURL(value) {\n    if (this.__adapter) return this.__adapter.resolveURL(value)\n    if (this.systemUrls[value]) return this.systemUrls[value]\n    return value\n  }\n\n  /**\n   * The loadURL method.\n   * @param {string} resourceId - The resourceId value.\n   * @param {string} url - The url value.\n   * @param {function} callback - The callback value.\n   * @param {boolean} addLoadWork - The addLoadWork value.\n   * @return {any} - The return value.\n   * @deprecated\n   * @private\n   */\n  loadURL(resourceId, url, callback, addLoadWork = true) {\n    console.warn('Deprecated. Use \"#loadUrl\".')\n    return this.loadUrl(resourceId, url, callback, addLoadWork)\n  }\n\n  /**\n   * The loadUrl method.\n   * @param {string} resourceId - The resourceId value.\n   * @param {string} url - The url value.\n   * @param {function} callback - The callback value.\n   * @param {boolean} addLoadWork - The addLoadWork value.\n   */\n  loadUrl(resourceId, url, callback, addLoadWork = true) {\n    console.warn(`deprecated use #loadArchive`)\n    this.loadArchive(url).then((entries) => {\n      callback(entries)\n    })\n  }\n\n  /**\n   * Load an archive file, returning a promise that resolves to the JSON data value.\n   * Note: using the resource loader to centralize data loading enables progress to be tracked and displayed\n   * @param {string} url - The url of the data to load.\n   * @return {Promise} - The promise value.\n   */\n  loadArchive(url) {\n    console.warn(`Deprecated. Use \"#loadFile('archive', url)\".`)\n    return this.loadFile('archive', url)\n  }\n\n  /**\n   * Load a JSON file, returning a promise that resolves to the JSON data value.\n   * Note: using the resource loader to centralize data loading enables progress to be tracked and displayed\n   * @param {string} url - The url of the data to load.\n   * @return {Promise} - The promise value.\n   */\n  loadJSON(url) {\n    console.warn(`Deprecated. Use \"#loadFile('json', url)\".`)\n    return this.loadFile('json', url)\n  }\n\n  /**\n   * Load a text file, returning a promise that resolves to the JSON data value.\n   * Note: using the resource loader to centralize data loading enables progress to be tracked and displayed\n   * @param {string} url - The url of the data to load.\n   * @return {Promise} - The promise value.\n   */\n  loadText(url) {\n    console.warn(`Deprecated. Use \"#loadFile('text', url)\".`)\n    return this.loadFile('text', url)\n  }\n\n  loadFile(type, url) {\n    const plugin = this.plugins[type]\n\n    if (!plugin) {\n      throw new Error(\n        `There's no plugin registered for the type of file \"${type}\". Did you add the plugins script? See: https://docs.zea.live/zea-engine/#/adding-default-plugins`\n      )\n    }\n\n    this.incrementWorkload()\n\n    const promise = plugin.loadFile(url)\n\n    promise.then(\n      () => {\n        this.incrementWorkDone()\n        this.emit('loaded', { url })\n      },\n      () => {\n        // Error\n        this.incrementWorkDone()\n      }\n    )\n\n    return promise\n  }\n\n  /**\n   * Returns a previously stored common resource. Typically this would be a VR asset.\n   *\n   * @param {string} resourceId - The resourceId value.\n   * @return {TreeItem|null} - The common resource if it exists\n   */\n  getCommonResource(resourceId) {\n    return this.__commonResources[resourceId]\n  }\n\n  /**\n   * Saves a common resource for reuse by other tools. Typically this would be a VR asset.\n   *\n   * @param {string} resourceId - The resourceId value.\n   * @param {TreeItem} resource - The common resource to store\n   */\n  setCommonResource(resourceId, resource) {\n    this.__commonResources[resourceId] = resource\n  }\n\n  /**\n   * Load and return a file resource using the specified path.\n   * @deprecated\n   * @param {string} resourceId - The resourceId value.\n   * @return {VLAAsset} - The return value.\n   */\n  loadCommonAssetResource(resourceId) {\n    return getCommonResource(resourceId)\n  }\n\n  // /////////////////////////////////////////////////\n  // Work\n\n  /**\n   * Add work to the total work pile.. We never know how big the pile will get.\n   *\n   * @deprecated\n   * @param {string} resourceId - The resourceId value.\n   * @param {number} amount - The amount value.\n   */\n  addWork(resourceId, amount) {\n    this.incrementWorkload(amount)\n  }\n\n  /**\n   * Add work to the 'done' pile. The done pile should eventually match the total pile.\n   * @deprecated\n   * @param {string} resourceId - The resourceId value.\n   * @param {number} amount - The amount value.\n   */\n  addWorkDone(resourceId, amount) {\n    this.incrementWorkDone(amount)\n  }\n\n  /**\n   * Increments the amount of work to be done causing a 'progressIncremented' event to be emitted\n   * As the workload is incremented, the progress might retract as a lower proportion of the work\n   * is then considered done. Only once this work is completed, and the 'incrementWorkDone', the\n   * progress will increment.\n   *\n   * @param {number} amount - The amount value.\n   */\n  incrementWorkload(amount = 1) {\n    this.__totalWork += amount\n    const percent = (this.__doneWork / this.__totalWork) * 100\n    this.emit('progressIncremented', { percent })\n  }\n\n  /**\n   * Increments the amount of work done causing a 'progressIncremented' event to be emitted.\n   * If 5 items of work have been added using #incrementWorkload, and subsequently 3 items have\n   * been completed and #incrementWorkDone called. The progress will be at 3/5, or 60%\n   *\n   * @param {number} amount - The amount value.\n   */\n  incrementWorkDone(amount = 1) {\n    this.__doneWork += amount\n\n    const percent = (this.__doneWork / this.__totalWork) * 100\n    this.emit('progressIncremented', { percent })\n    if (this.__doneWork > this.__totalWork) {\n      throw new Error('Mismatch between work loaded and work done.')\n    }\n  }\n}\n\nconst resourceLoader = new ResourceLoader()\n\nimport { ArchiveUnpackerPlugin } from './ResourceLoader/ArchiveUnpackerPlugin.js'\nimport { JsonLoaderPlugin } from './ResourceLoader/JsonLoaderPlugin.js'\nimport { TextLoaderPlugin } from './ResourceLoader/TextLoaderPlugin.js'\nimport { BinaryLoaderPlugin } from './ResourceLoader/BinaryLoaderPlugin.js'\n\nconst archiveUnpackerPlugin = new ArchiveUnpackerPlugin()\nresourceLoader.registerPlugin(archiveUnpackerPlugin)\n\nconst jsonLoaderPlugin = new JsonLoaderPlugin()\nresourceLoader.registerPlugin(jsonLoaderPlugin)\n\nconst textLoaderPlugin = new TextLoaderPlugin()\nresourceLoader.registerPlugin(textLoaderPlugin)\n\nconst binaryLoaderPlugin = new BinaryLoaderPlugin()\nresourceLoader.registerPlugin(binaryLoaderPlugin)\n\nexport { resourceLoader }\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * JSON loader plugin.\n */\nclass JsonLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'json'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.json())\n          else reject(`loadJSON: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { JsonLoaderPlugin }\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * Text loader plugin.\n */\nclass TextLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'text'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.text())\n          else reject(`loadText: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { TextLoaderPlugin }\n","function checkStatus(response) {\n  if (!response.ok) {\n    return false\n  }\n\n  return response\n}\n\n/**\n * Binary loader plugin.\n */\nclass BinaryLoaderPlugin {\n  init(resourceLoader) {\n    this.resourceLoader = resourceLoader\n  }\n\n  /**\n   * The type of file this plugin handles.\n   * @return {string} The type of file.\n   */\n  getType() {\n    return 'binary'\n  }\n\n  loadFile(url) {\n    this.resourceLoader.incrementWorkload(1)\n\n    const promise = new Promise(\n      (resolve, reject) => {\n        fetch(url).then((response) => {\n          this.resourceLoader.incrementWorkDone(1)\n          if (checkStatus(response)) resolve(response.arrayBuffer())\n          else reject(`loadBinary: ${response.status} - ${response.statusText} : ${url}`)\n        })\n      },\n      () => {}\n    )\n\n    return promise\n  }\n}\n\nexport { BinaryLoaderPlugin }\n","/**\n * Class designed to store version data. Widely used in the zea engine for backwards compatibility.\n */\nclass Version {\n  /**\n   * Creates a version.\n   * The version string should have the following structure: <br>\n   * major, minor and patch separated by a dot(`.`) and parts separated by a dash(`-`).\n   *\n   * @param {str} versionStr - The version string value.\n   */\n  constructor(versionStr) {\n    if (versionStr) {\n      const parts = versionStr.split('-')\n      const numbers = parts[0].split('.')\n      this.major = parseInt(numbers[0])\n      this.minor = parseInt(numbers[1])\n      this.patch = parseInt(numbers[2])\n      if (parts.length == 2) this.branch = parts[1]\n    } else {\n      this.major = 0\n      this.minor = 0\n      this.patch = 0\n    }\n  }\n\n  /**\n   * Compare a version object against a version numbers array.\n   *\n   * @param {array} numbers - An array containing 3 version numbers. [Major, Minor, Patch]\n   * @return {number} - return positive: v1 > v2, zero:v1 == v2, negative: v1 < v2\n   */\n  compare(numbers) {\n    // https://stackoverflow.com/questions/6832596/how-to-compare-software-version-number-using-js-only-number\n    // 2nd answer.\n    const v1 = [this.major, this.minor, this.patch]\n    for (let i = 0; i < 3; i++) {\n      if (v1[i] !== numbers[i]) return v1[i] - numbers[i]\n    }\n    return 0\n  }\n\n  /**\n   * Compare a version object against a version numbers array.\n   *\n   * @deprecated\n   * @param {array} numbers - The numbers value.\n   * @return {boolean} - The return value.\n   */\n  equals(numbers) {\n    console.log(`Version#equals method is deprecated, use 'compare' instead `)\n    return !(this.patch == numbers[2] && this.minor == numbers[1] && this.major == numbers[0])\n  }\n\n  /**\n   * Compare a version object against a version numbers array.\n   *\n   * @deprecated\n   * @param {array} numbers - The numbers value.\n   * @return {boolean} - The return value.\n   */\n  lessThan(numbers) {\n    console.log(`Version#lessThan method is deprecated, use 'compare' instead `)\n    return !(this.major >= numbers[0] || this.minor >= numbers[1] || this.patch >= numbers[2])\n    // if (this.major >= numbers[0]) return false\n    // if (this.minor >= numbers[1]) return false\n    // if (this.patch >= numbers[2]) return false\n    // return true\n    // return (\n    //   this.major < numbers[0] ||\n    //   this.minor < numbers[1] ||\n    //   this.patch < numbers[2]\n    // )\n  }\n\n  /**\n   * Compare a version object against a version numbers array.\n   *\n   * @deprecated\n   * @param {array} numbers - The numbers value.\n   * @return {boolean} - The return value.\n   */\n  greaterThan(numbers) {\n    console.log(`Version#greaterThan method is deprecated, use 'compare' instead `)\n    return this.major > numbers[0] || this.minor > numbers[1] || this.patch > numbers[2]\n  }\n\n  /**\n   * Compare a version object against a version numbers array.\n   *\n   * @param {array} numbers - The numbers value.\n   * @return {boolean} - The return value.\n   */\n  greaterOrEqualThan(numbers) {\n    console.log(`Version#greaterOrEqualThan method is deprecated, use 'compare' instead `)\n    if (this.major < numbers[0]) return false\n    if (this.major > numbers[0]) return true\n\n    if (this.minor < numbers[1]) return false\n    if (this.minor > numbers[1]) return true\n\n    if (this.patch < numbers[2]) return false\n    return true\n    // return (\n    //   this.major >= numbers[0] &&\n    //   this.minor >= numbers[1] &&\n    //   this.patch >= numbers[2]\n    // )\n  }\n}\n\nexport { Version }\n","/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\nimport { Vec2, Vec3, Quat, Color, Box2, Box3 } from '../Math/index'\nimport { MathFunctions } from '../Utilities/MathFunctions'\n\n/**\n * Writes `TypedArray` types in binary using a specific encoding.\n */\nclass BinWriter {\n  /**\n   * Create a bin writer.\n   * @param {number} dataSize - The dataSize value.\n   */\n  constructor(dataSize = 0) {\n    this.__data = new ArrayBuffer(dataSize)\n    this.__byteOffset = 0\n    this.__reserved = dataSize\n    this.__dataView = new DataView(this.__data)\n  }\n\n  /**\n   * Returns the byte offset position.\n   *\n   * @return {number} - The return value.\n   */\n  pos() {\n    return this.__byteOffset\n  }\n\n  /**\n   * Sets byte offset value.\n   *\n   * @param {number} byteOffset - The byteOffset value.\n   */\n  seek(byteOffset) {\n    this.__byteOffset = byteOffset\n  }\n\n  /**\n   * The seekEnd method.\n   */\n  seekEnd() {\n    this.__byteOffset = this.__reserved\n  }\n\n  /**\n   * Returns written buffer data to current point.\n   *\n   * @return {ArrayBuffer} - Returns an array buffer.\n   */\n  getBuffer() {\n    if (this.__data.byteLength == this.__byteOffset) {\n      return this.__data\n    } else {\n      const unit8Array = new Uint8Array(this.__data)\n      return unit8Array.slice(0, this.__byteOffset).buffer\n    }\n  }\n\n  /**\n   * The __grow method.\n   * @private\n   */\n  __grow() {\n    const newSize = (this.__reserved > 0 ? this.__reserved : 1) * 2\n    const data = new ArrayBuffer(newSize)\n    const unit8Array = new Uint8Array(data)\n    const old_unit8Array = new Uint8Array(this.__data)\n    unit8Array.set(old_unit8Array)\n    this.__data = data\n    this.__dataView = new DataView(this.__data)\n    this.__reserved = newSize\n  }\n\n  /**\n   * The __reserve method.\n   * @param {number} offset - The offset value.\n   * @private\n   */\n  __reserve(offset) {\n    if (this.__byteOffset + offset > this.__reserved) {\n      this.__grow()\n    }\n  }\n\n  /**\n   * The __offset method.\n   * @param {number} byteCount - The byteCount value.\n   * @private\n   */\n  __offset(byteCount) {\n    this.__byteOffset += byteCount\n    if (this.__byteOffset > this.__reserved) {\n      this.__grow()\n    }\n  }\n\n  /**\n   * Writes an unsigned Int8 value in current byte offset.\n   *\n   * @param {number} value - The value param.\n   */\n  writeUInt8(value) {\n    this.__reserve(1)\n    this.__dataView.setUint8(this.__byteOffset, value)\n    this.__offset(1)\n  }\n\n  /**\n   * Writes an unsigned Int16 value in current byte offset.\n   * @param {number} value - The value param.\n   */\n  writeUInt16(value) {\n    this.__reserve(2)\n    this.__dataView.setUint16(this.__byteOffset, value, true)\n    this.__offset(2)\n  }\n\n  /**\n   * Writes an unsigned Int32 value in current byte offset.\n   * @param {number} value - The value param.\n   */\n  writeUInt32(value) {\n    this.__reserve(4)\n    this.__dataView.setUint32(this.__byteOffset, value, true)\n    this.__offset(4)\n  }\n\n  /**\n   * Writes a signed Int32 value in current byte offset.\n   * @param {number} value - The value param.\n   */\n  writeSInt32(value) {\n    this.__reserve(4)\n    this.__dataView.setInt32(this.__byteOffset, value, true)\n    this.__offset(4)\n  }\n\n  /**\n   * Writes a Float16 value in current byte offset.\n   *\n   * @param {number} value - The value param.\n   */\n  writeFloat16(value) {\n    const uint16 = MathFunctions.encode16BitFloat(value)\n    this.writeUInt16(uint16)\n  }\n\n  /**\n   * Writes a Float32 value in current byte offset.\n   *\n   * @param {number} value - The value param.\n   */\n  writeFloat32(value) {\n    this.__reserve(4)\n    this.__dataView.setFloat32(this.__byteOffset, value, true)\n    this.__offset(4)\n  }\n\n  /**\n   * Writes an unsigned Int8 array value from current byte offset.\n   *\n   * @param {Uint8Array} value - The value param.\n   * @param {boolean} writeSize - The writeSize value.\n   */\n  writeUInt8Array(value, writeSize = true) {\n    const count = value.size ? value.size : value.length\n    this.__reserve(count + (writeSize ? 4 : 0))\n    if (writeSize) this.writeUInt32(count)\n    for (let i = 0; i < count; i++) {\n      this.writeUInt8(value[i])\n    }\n  }\n\n  /**\n   * Writes an unsigned Int16 array value from current byte offset.\n   *\n   * @param {array} value - The value param.\n   * @param {boolean} writeSize - The writeSize value.\n   */\n  writeUInt16Array(value, writeSize = true) {\n    const count = value.size ? value.size : value.length\n    this.__reserve(count * 2 + (writeSize ? 4 : 0))\n    if (writeSize) this.writeUInt32(count)\n    for (let i = 0; i < count; i++) {\n      this.writeUInt16(value[i])\n    }\n  }\n\n  /**\n   * Writes an unsigned Int32 array value from current byte offset.\n   *\n   * @param {Uint32Array} value - The value param.\n   * @param {boolean} writeSize - The writeSize value.\n   */\n  writeUInt32Array(value, writeSize = true) {\n    const count = value.size ? value.size : value.length\n    this.__reserve(count * 4 + (writeSize ? 4 : 0))\n    if (writeSize) this.writeUInt32(count)\n    for (let i = 0; i < count; i++) {\n      this.writeUInt32(value[i])\n    }\n  }\n\n  /**\n   * Writes a Float32 array value from current byte offset.\n   *\n   * @param {Float32Array} value - The value param.\n   * @param {boolean} writeSize - The writeSize value.\n   */\n  writeFloat32Array(value, writeSize = true) {\n    const count = value.size ? value.size : value.length\n    this.__reserve(count * 4 + (writeSize ? 4 : 0))\n    if (writeSize) this.writeUInt32(count)\n    for (let i = 0; i < count; i++) {\n      this.writeFloat32(value[i])\n    }\n  }\n\n  /**\n   * Writes string value in current position, first writing an unsigned Int32 describing its length, then adding the string in Float32 values.\n   *\n   * @param {string} str - The str value.\n   * @param {boolean} writeSize - The writeSize value.\n   */\n  writeStr(str, writeSize = true) {\n    const count = str.length\n    this.__reserve(count * 4 + (writeSize ? 4 : 0))\n    if (writeSize) this.writeUInt32(count)\n    for (let i = 0; i < count; i++) {\n      this.writeFloat32(str.charCodeAt(i))\n    }\n  }\n\n  /**\n   * Writes a `Vec2` in the buffer using signed Int32 values(In `x,y` order).\n   * @param {Vec2} value - The Vec2 to write.\n   */\n  writeSInt32Vec2(value) {\n    this.writeSInt32(value.x)\n    this.writeSInt32(value.y)\n  }\n\n  /**\n   * Writes a `Vec2` in the buffer using unsigned Int32 values(In `x,y` order).\n   *\n   * @param {Vec2} value - The Vec2 to write.\n   */\n  writeUInt32Vec2(value) {\n    this.writeUInt32(value.x)\n    this.writeUInt32(value.y)\n  }\n\n  /**\n   * Writes a `Vec2` in the buffer using Float16 values(In `x,y` order).\n   * @param {Vec2} value - The Vec2 to write.\n   */\n  writeFloat16Vec2(value) {\n    this.writeFloat16(value.x)\n    this.writeFloat16(value.y)\n  }\n\n  /**\n   * Writes a `Vec2` in the buffer using Float32 values(In `x,y` order).\n   *\n   * @param {Vec2} value - The Vec2 to write.\n   */\n  writeFloat32Vec2(value) {\n    this.writeFloat32(value.x)\n    this.writeFloat32(value.y)\n  }\n\n  /**\n   * Writes a `Vec3` in the buffer using Float16 values(In `x,y,z` order).\n   *\n   * @param {Vec3} value - The Vec3 to write.\n   */\n  writeFloat16Vec3(value) {\n    this.writeFloat16(value.x)\n    this.writeFloat16(value.y)\n    this.writeFloat16(value.z)\n  }\n\n  /**\n   * Writes a `Vec3` in the buffer using Float32 values(In `x,y,z` order).\n   * @param {Vec3} value - The Vec3 to write.\n   */\n  writeFloat32Vec3(value) {\n    this.writeFloat32(value.x)\n    this.writeFloat32(value.y)\n    this.writeFloat32(value.z)\n  }\n\n  /**\n   * Writes a `Quat` in the buffer using Float16 values(In `x,y,z,w` order).\n   *\n   * @param {Quat} value - The Quat to write.\n   */\n  writeFloat16Quat(value) {\n    this.writeFloat16(value.x)\n    this.writeFloat16(value.y)\n    this.writeFloat16(value.z)\n    this.writeFloat16(value.w)\n  }\n\n  /**\n   * Writes a `Quat` in the buffer using Float32 values(In `x,y,z,w` order).\n   *\n   * @param {Quat} value - The Quat to write.\n   */\n  writeFloat32Quat(value) {\n    this.writeFloat32(value.x)\n    this.writeFloat32(value.y)\n    this.writeFloat32(value.z)\n    this.writeFloat32(value.w)\n  }\n\n  /**\n   * Writes a RGB `Color` in the buffer using Float32 values(In `r,g,b` order).\n   *\n   * @param {Color} value - The Color to write.\n   */\n  writeRGBFloat32Color(value) {\n    this.writeFloat32(value.r)\n    this.writeFloat32(value.g)\n    this.writeFloat32(value.b)\n  }\n\n  /**\n   * Writes a RGBA `Color` in the buffer using Float32 values(In `r,g,b,a` order).\n   *\n   * @param {Color} value - The Color to write.\n   */\n  writeRGBAFloat32Color(value) {\n    this.writeFloat32(value.r)\n    this.writeFloat32(value.g)\n    this.writeFloat32(value.b)\n    this.writeFloat32(value.a)\n  }\n\n  /**\n   * Writes a RGB `Color` in the buffer using unsigned Int8 values(In `r,g,b` order).\n   *\n   * @param {Color} value - The Color to write.\n   */\n  writeRGBUInt8Color(value) {\n    this.writeUInt8(value.r)\n    this.writeUInt8(value.g)\n    this.writeUInt8(value.b)\n  }\n\n  /**\n   * Writes a RGBA `Color` in the buffer using unsigned Int8 values(In `r,g,b,a` order).\n   *\n   * @param {Color} value - The Color to write.\n   */\n  writeRGBAUInt8Color(value) {\n    this.writeUInt8(value.r)\n    this.writeUInt8(value.g)\n    this.writeUInt8(value.b)\n    this.writeUInt8(value.a)\n  }\n\n  /**\n   * Writes a `Box2` in the buffer using Floar32 values(In `p0,p1` order).\n   *\n   * @param {Box2} value - The Box2 to write.\n   */\n  writeBox2(value) {\n    this.writeFloat32Vec2(value.p0)\n    this.writeFloat32Vec2(value.p1)\n  }\n\n  /**\n   * Writes a `Box3` in the buffer using Floar32 values(In `p0,p1` order).\n   *\n   * @param {Box3} value - The Box3 to write.\n   */\n  writeBox3(value) {\n    this.writeFloat32Vec3(value.p0)\n    this.writeFloat32Vec3(value.p1)\n  }\n\n  /**\n   * The writePadd method.\n   * @param {number} size - The size value.\n   */\n  writePadd(size) {\n    const bytes = size - this.__byteOffset\n    this.__reserve(bytes)\n    this.__offset(bytes)\n  }\n\n  /**\n   * The writeAlignment method.\n   * @param {number} numBytes - The numBytes value.\n   */\n  writeAlignment(numBytes) {\n    const bytes = this.__byteOffset % numBytes\n    if (bytes != 0) {\n      this.__reserve(numBytes - bytes)\n      this.__offset(numBytes - bytes)\n    }\n  }\n}\n\nexport { BinWriter }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\nimport { resourceLoader } from '../resourceLoader.js'\n\n/**\n * Represents a specific type of parameter, that only stores file data values.\n *\n * **Events**\n * * **valueChanged:** Triggered when setting file's URL.\n * * **fileUpdated:** Triggered when parameter's value is updated.\n *\n * @extends Parameter\n */\nclass FilePathParameter extends Parameter {\n  /**\n   * Create a file path parameter.\n   *\n   * @param {string} name - The name of the file path parameter.\n   * @param {string} exts - The exts value.\n   */\n  constructor(name) {\n    super(name, '', 'FilePath')\n  }\n\n  /**\n   * Returns complete file path.\n   *\n   * @return {string} - The return value.\n   */\n  getFilepath() {\n    if (this.__value) {\n      return resourceLoader.getFilepath(this.__value)\n    }\n\n    return ''\n  }\n\n  /**\n   * Resolves resourceId using the specified path and sets its value to the parameter.\n   *\n   * @param {string} filePath - The filePath value.\n   */\n  setFilepath(filePath) {\n    this.setValue(resourceLoader.resolveFileId(filePath))\n  }\n\n  /**\n   * Returns parameter's file name\n   *\n   * @return {string} - The return value.\n   */\n  getFilename() {\n    return resourceLoader.resolveFilename(this.__value)\n  }\n\n  /**\n   * Returns parameter's file extension\n   *\n   * @return {string} - The return value.\n   */\n  getExt() {\n    const filename = this.getFilename()\n    const suffixSt = filename.lastIndexOf('.')\n    if (suffixSt != -1) return filename.substring(suffixSt).toLowerCase()\n  }\n\n  /**\n   * Returns parameter's file name without extension\n   *\n   * @return {string} - The return value.\n   */\n  getStem() {\n    const filename = this.getFilename()\n    if (filename) {\n      const parts = filename.split('.')\n      if (parts.length == 2) return parts[0]\n      else return filename\n    }\n  }\n\n  /**\n   * Returns file object, which contains the url, resourceId and the name.\n   *\n   * @return {object} - The return value.\n   */\n  getFileDesc() {\n    return this.getFile()\n  }\n\n  /**\n   * Returns file object, which contains the url, resourceId and the name.\n   *\n   * @return {object} - The return value.\n   */\n  getFile() {\n    return { id: this.__value, url: this.getUrl(), name: this.getFilename() }\n  }\n\n  /**\n   * Sets file data.\n   *\n   * @param {string} url - the url value of the\n   * @param {string} name - (optional) the name of the file that the Url points to.\n   */\n  setUrl(url, name) {\n    this.setValue(resourceLoader.resolveFileId(url))\n  }\n\n  /**\n   * Returns the file url string.\n   *\n   * @return {string} - The return value.\n   */\n  getUrl() {\n    return resourceLoader.resolveURL(this.__value)\n  }\n\n  /**\n   * Sets file parameter value\n   *\n   * @param {string} value - The value param.\n   */\n  setValue(value) {\n    if (!value) {\n      throw new Error('Invalid value for setValue.')\n    }\n\n    // Important here because file changes cause reloads.\n    // Note: equality tests only work on simple types.\n    if (value == this.__value) {\n      return\n    }\n\n    this.__value = value\n\n    this.emit('valueChanged', {})\n  }\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    return { value: this.__value }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.value) {\n      this.__value = j.value\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new file path parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {FilePathParameter} - Returns a new cloned file path parameter.\n   */\n  clone() {\n    const clone = new FilePathParameter(this.__name)\n    clone.setValue(this.getValue())\n    return clone\n  }\n}\n\nRegistry.register('FilePathParameter', FilePathParameter)\n\nexport { FilePathParameter }\n","import { BaseItem } from './BaseItem.js'\n\nimport { BooleanParameter } from './Parameters/index'\n\n/**\n * Represents a 2D image item, containing width and height.\n *\n * **Parameters**\n * * **AlphaFromLuminance(`BooleanParameter`):** Sets alpha chanel to the luminance of the image and all color channels to `0`.\n * * **Invert(`BooleanParameter`):** Horizontally flips the image(Basically inverting X pixels).\n * * **FlipY(`BooleanParameter`):** Vertically flips the image, meaning that it would be upside down if enabled.\n *\n * **Events**\n * * **updated:** Triggered when the value of any of the parameters listed above changes.\n *\n * @extends BaseItem\n */\nclass BaseImage extends BaseItem {\n  /**\n   * Creates an instance of BaseImage.\n   * @param {string} name - name of the item\n   */\n  constructor(name) {\n    super(name)\n    this.width = 0\n    this.height = 0\n    this.format = 'RGB'\n    this.type = 'UNSIGNED_BYTE'\n    this.wrapS = 'REPEAT'\n    this.wrapT = 'REPEAT'\n    this.minFilter = 'LINEAR'\n    this.magFilter = 'LINEAR'\n    this.mipMapped = true\n\n    this.on('parameterValueChanged', (event) => {\n      this.emit('updated')\n    })\n\n    // Note: Many parts of the code assume a 'loaded' signal.\n    // We should probably deprecate and use only 'updated'.\n    // Instead we should start using a loaded Promise.\n    this.loaded = false\n  }\n\n  /**\n   * Returns true if loaded.\n   * @private\n   * @return {boolean} - Returns a boolean.\n   */\n  isLoaded() {\n    return true\n  }\n\n  /**\n   * Returns all parameters and class state values.\n   *\n   * @return {object} - The return value.\n   */\n  getParams() {\n    return {\n      type: this.type,\n      format: this.format,\n      width: this.width,\n      height: this.height,\n      wrapS: this.wrapS,\n      wrapT: this.wrapT,\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      mipMapped: this.mipMapped,\n    }\n  }\n}\n\nexport { BaseImage }\n","import { Registry } from '../../Registry'\nimport { NumberParameter } from './NumberParameter.js'\nimport { BaseImage } from '../BaseImage.js'\n\n/**\n * Represents a specific type of parameter, that stores `number` and `BaseImage` texture values.\n *\n * i.e.:\n * ```javascript\n * const image = new LDRImage();\n * image.getParameter('FilePath').setUrl(\"https://storage.googleapis.com/zea-playground-assets/zea-engine/texture.png\")\n *\n * const numberParam = new MaterialFloatParam('MyMaterialFloat', 15.5)\n * numberParam.setImage(image)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(numberParam)\n * ```\n *\n * * **Events**\n * * **valueChanged:** Triggered every time the Image value changes\n * * **textureDisconnected:** Triggered when Image value is cleaned/removed.\n * * **textureConnected:** Triggered when the Image value is set.\n *\n * @extends NumberParameter\n */\nclass MaterialFloatParam extends NumberParameter {\n  /**\n   * Create a material float parameter.\n   * @param {string} name - The name of the material color parameter.\n   * @param {number} value - The value of the parameter.\n   * @param {array} range - An array with two numbers. If defined, the parameter value will be clamped.\n   * @param {number} step - The increment value that the parameter can be changed by.\n   */\n  constructor(name, value, range, step) {\n    super(name, value, range, step)\n  }\n\n  /**\n   * Returns `BaseImage` texture of the Material.\n   *\n   * @return {BaseImage} - The return value.\n   */\n  getImage() {\n    return this.__image\n  }\n\n  /**\n   * Sets `BaseImage` texture value in parameter.\n   *\n   * @param {BaseImage} value - The value value.\n   */\n  setImage(value) {\n    const disconnectImage = () => {\n      this.emit('textureDisconnected', {})\n    }\n    if (value) {\n      if (this.__image != undefined && this.__image !== value) {\n        disconnectImage()\n      }\n      this.__image = value\n      this.emit('textureConnected', {})\n      this.emit('valueChanged', { mode: 0 })\n    } else {\n      if (this.__image != undefined) {\n        disconnectImage()\n        this.__image = undefined\n        this.emit('textureDisconnected', {})\n      }\n    }\n  }\n\n  /**\n   * Sets `number` or the `BaseImage` texture value in parameter.\n   *\n   * @param {number} value - The value param.\n   */\n  setValue(value) {\n    if (value instanceof BaseImage) {\n      this.setImage(value)\n    } else {\n      super.setValue(value)\n    }\n  }\n\n  /**\n   * Extracts `number` and `Image` values from a buffer, updating current parameter state.\n   *\n   * @param {object} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.readBinary(reader, context)\n\n    const textureName = reader.loadStr()\n    if (textureName != '') {\n      console.log('Load Texture')\n      this.setImage(context.materialLibrary.getImage(textureName))\n    }\n  }\n\n  /**\n   * The clone method constructs a new material float parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {MaterialFloatParam} - Returns a new cloned material float parameter.\n   */\n  clone() {\n    const clonedParam = new MaterialFloatParam(this.__name, this.__value, this.__range, this.__step)\n    return clonedParam\n  }\n}\n\nRegistry.register('MaterialFloatParam', MaterialFloatParam)\n\nexport { MaterialFloatParam }\n","import { Registry } from '../../Registry'\nimport { ColorParameter } from './ColorParameter.js'\nimport { BaseImage } from '../BaseImage.js'\n\n/**\n * Represents a specific type of parameter, that stores `Color` and `BaseImage` texture values.\n *\n * i.e.:\n * ```javascript\n * const image = new LDRImage();\n * image.getParameter('FilePath').setUrl(\"https://storage.googleapis.com/zea-playground-assets/zea-engine/texture.png\")\n *\n * const matColorParam = new MaterialColorParam('MyMaterialColor', new Color(0, 254, 2))\n * matColorParam.setImage(image)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(matColorParam)\n * ```\n *\n * **Events**\n * * **valueChanged:** Triggered every time the Image value changes\n * * **textureDisconnected:** Triggered when Image value is cleaned/removed.\n * * **textureConnected:** Triggered when the Image value is set.\n *\n * @extends ColorParameter\n */\nclass MaterialColorParam extends ColorParameter {\n  /**\n   * Create a material color parameter.\n   * @param {string} name - The name of the material color parameter.\n   * @param {Color} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, value)\n    this.listenerIDs = {}\n  }\n\n  /**\n   * Returns `BaseImage` texture of the Material.\n   *\n   * @return {BaseImage} - The return value.\n   */\n  getImage() {\n    return this.__image\n  }\n\n  /**\n   * The __imageUpdated method.\n   * @private\n   */\n  __imageUpdated() {\n    this.emit('valueChanged', {})\n  }\n\n  /**\n   * Sets `BaseImage` texture value in parameter.\n   *\n   * @param {BaseImage} value - The value param.\n   */\n  setImage(value) {\n    const disconnectImage = () => {\n      this.__image.removeListenerById('updated', this.listenerIDs['updated'])\n      this.__image = null\n      this.emit('textureDisconnected', {})\n    }\n    if (value) {\n      if (this.__image != undefined && this.__image !== value) {\n        disconnectImage()\n      }\n      this.__image = value\n      this.listenerIDs['updated'] = this.__image.on('updated', (event) => {\n        this.__imageUpdated(event)\n      })\n      this.emit('textureConnected', {})\n      this.emit('valueChanged')\n    } else {\n      if (this.__image != undefined) {\n        disconnectImage()\n        this.__image = undefined\n        this.emit('textureDisconnected')\n      }\n    }\n  }\n\n  /**\n   * Sets `Color` or the `BaseImage` texture value in parameter.\n   *\n   * @param {BaseImage|Color} value - The value param.\n   */\n  setValue(value) {\n    // Note: instead of supporting images or colors, we should replace the ColorParameter with an ImageParameter when assigning textures\n    // console.warn('@todo-review: Should we accept different type of values?')\n    if (value instanceof BaseImage) {\n      this.setImage(value)\n    } else {\n      super.setValue(value)\n    }\n  }\n  /**\n   * Extracts `Color` and `Image` values from a buffer, updating current parameter state.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.readBinary(reader, context)\n\n    const textureName = reader.loadStr()\n    if (textureName != '') {\n      this.setImage(context.materialLibrary.getImage(textureName))\n    }\n  }\n\n  /**\n   * The clone method constructs a new material color parameter,\n   * copies its values from this parameter and returns it.\n   *\n   * @return {MaterialColorParam} - Returns a new cloned material color parameter.\n   */\n  clone() {\n    const clonedParam = new MaterialColorParam(this.__name, this.__value.clone())\n    return clonedParam\n  }\n}\n\nRegistry.register('MaterialColorParam', MaterialColorParam)\n\nexport { MaterialColorParam }\n","/* eslint-disable require-jsdoc */\n/* eslint-disable guard-for-in */\nimport { Vec2, Vec3, Color } from '../Math/index'\nimport { BaseItem } from './BaseItem.js'\nimport { Registry } from '../Registry'\nimport { Parameter, NumberParameter, Vec2Parameter, Vec3Parameter, ColorParameter } from './Parameters/index'\nimport { MathFunctions } from '../Utilities/MathFunctions'\n\n// Explicit export of parameters that are not included in the\n// module defined by the index file in the folder. (see Parameters/index.js)\n// These parameters depend on classes that ar ParameterOwners.\n// TODO: Move to this folder.\nimport { MaterialFloatParam } from './Parameters/MaterialFloatParam'\nimport { MaterialColorParam } from './Parameters/MaterialColorParam'\n\nconst generateParameterInstance = (paramName, defaultValue, range, texturable) => {\n  if (typeof defaultValue == 'boolean' || defaultValue === false || defaultValue === true) {\n    return new Parameter(paramName, defaultValue, 'Boolean')\n  } else if (typeof defaultValue == 'string') {\n    return new Parameter(paramName, defaultValue, 'String')\n  } else if (MathFunctions.isNumeric(defaultValue)) {\n    if (texturable) return new MaterialFloatParam(paramName, defaultValue, range)\n    else return new NumberParameter(paramName, defaultValue, range)\n  } else if (defaultValue instanceof Vec2) {\n    return new Vec2Parameter(paramName, defaultValue)\n  } else if (defaultValue instanceof Vec3) {\n    return new Vec3Parameter(paramName, defaultValue)\n  } else if (defaultValue instanceof Color) {\n    if (texturable) return new MaterialColorParam(paramName, defaultValue)\n    else return new ColorParameter(paramName, defaultValue)\n  } else {\n    return new Parameter(paramName, defaultValue)\n  }\n}\n\n/**\n * Represents a type of `BaseItem` class that holds material configuration.\n * Use this to apply materials to your assets or item parts.\n *\n * **Events**\n * * **shaderNameChanged:** Triggered when the shader's name is set through `setShaderName` method.\n *\n * @extends BaseItem\n */\nclass Material extends BaseItem {\n  /**\n   * Create a material\n   * @param {string} name - The name of the material.\n   * @param {string} shaderName - Shader's class name.\n   */\n  constructor(name, shaderName) {\n    super(name)\n    this.__isTransparent = false\n    this.__isTextured = false\n\n    if (shaderName) this.setShaderName(shaderName)\n  }\n\n  /**\n   * Getter for the shader name.\n   * @return {string} - Returns the shader name.\n   */\n  getShaderName() {\n    return this.__shaderName\n  }\n\n  /**\n   * Sets shader by using the name of the class with the script.\n   * It is important that the shader is registered in `Registry`, otherwise it will error.\n   * See all classes that extend from `GLShader`.\n   *\n   * @param {string} shaderName - The shader name.\n   */\n  setShaderName(shaderName) {\n    if (this.__shaderName == shaderName) return\n\n    const shaderClass = Registry.getBlueprint(shaderName)\n    if (!shaderClass) throw new Error('Error setting Shader. Shader not found:' + shaderName)\n\n    const paramDescs = shaderClass.getParamDeclarations()\n    const paramMap = {}\n    for (const desc of paramDescs) {\n      // Note: some shaders specify default images. Like the speckle texture\n      // on the car paint shader.\n      // let image;\n      // let defaultValue = desc.defaultValue;\n      // if (desc.defaultValue instanceof BaseImage) {\n      //     image = desc.defaultValue;\n      //     defaultValue = new Color();\n      // }\n      let param = this.getParameter(desc.name)\n      // if(param && param.getType() != desc.defaultValue)\n      // removeParameter\n      if (!param)\n        param = this.addParameter(\n          generateParameterInstance(desc.name, desc.defaultValue, desc.range, desc.texturable != false)\n        )\n      // if(desc.texturable != false) {// By default, parameters are texturable. texturable must be set to false to disable texturing.\n      //     if(!param.getImage)\n      //         this.__makeParameterTexturable(param);\n      //     // if(image)\n      //     //     param.setImage(image)\n      // }\n\n      paramMap[desc.name] = true\n    }\n\n    // Remove redundant Params.\n    for (const param of this.__params) {\n      if (!paramMap[param.getName()]) {\n        this.removeParameter(param.getName())\n      }\n    }\n\n    this.__shaderName = shaderName\n    this.__checkTransparency({})\n    this.emit('shaderNameChanged', { shaderName })\n  }\n\n  /**\n   * Remove all textures from Material's parameters.\n   */\n  removeAllTextures() {\n    for (const param of this.__params) {\n      if (param.getImage && param.getImage()) {\n        // emit a notification so the GLMaterial knows to\n        // Remove refs to GLTexture objects.\n        param.setImage(undefined)\n      }\n    }\n  }\n\n  // /////////////////////////////\n  // Parameters\n\n  /**\n   * Returns all texture parameters in current Material.\n   *\n   * @return {object} - The return value.\n   */\n  getParamTextures() {\n    const textures = {}\n    for (const param of this.__params) {\n      if (param.getImage && param.getImage()) textures[param.getName()] = param.getImage()\n    }\n    return textures\n  }\n\n  /**\n   * Checks if the material is transparent by checking the `Opacity` parameter.\n   *\n   * @return {boolean} - Returns true if the material is transparent.\n   */\n  isTransparent() {\n    return this.__isTransparent\n  }\n\n  __checkTransparency(event) {\n    let isTransparent = false\n    try {\n      const shaderClass = Registry.getBlueprint(this.__shaderName)\n      if (shaderClass.isTransparent()) {\n        isTransparent = true\n      }\n    } catch (e) {}\n\n    if (!isTransparent) {\n      const opacity = this.getParameter('Opacity')\n      if (opacity && (opacity.getValue() < 0.99 || (opacity.getImage && opacity.getImage()))) {\n        isTransparent = true\n      } else {\n        const baseColor = this.getParameter('BaseColor')\n        if (baseColor) {\n          if (baseColor.getImage && baseColor.getImage() && baseColor.getImage().format == 'RGBA') {\n            isTransparent = true\n          } else if (baseColor.getValue().a < 1) {\n            isTransparent = true\n          }\n        }\n      }\n    }\n\n    if (isTransparent != this.__isTransparent) {\n      this.__isTransparent = isTransparent\n      this.emit('transparencyChanged', { isTransparent })\n    }\n  }\n\n  /**\n   * Checks if the material has a texture applied. The renderer can use this to optimize rendering of non-textured objects\n   *\n   * @return {boolean} - Returns true if the material is textured.\n   */\n  isTextured() {\n    return this.__isTextured\n  }\n\n  __checkTextures(event) {\n    // console.log('__checkTextures')\n    const { param } = event ? event : {}\n\n    let isTextured = false\n    for (const param of this.__params) {\n      if (param.getImage && param.getImage()) {\n        isTextured = true\n        break\n      }\n    }\n    if (isTextured != this.__isTextured) {\n      this.__isTextured = isTextured\n      this.emit('texturedChanged', { isTextured, param })\n    }\n  }\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   * @param {object} event - The event object emitted by the parameter.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    this.__checkTransparency(event)\n    this.__checkTextures(event)\n    super.__parameterValueChanged(event)\n  }\n\n  /**\n   * Returns shaders class of current material, if set. Otherwise it returns `undefined`\n   *\n   * @return {string|undefined} - The return value.\n   */\n  getShaderClass() {\n    return Registry.getBlueprint(this.getShaderName())\n  }\n\n  /**\n   * Let you modify or set the shader and all the parameters of current material.\n   *\n   * @param {object} paramValues - The paramValues.\n   * @param {string} shaderName - The shader name.\n   */\n  modifyParams(paramValues, shaderName) {\n    if (shaderName) this.setShaderName(shaderName)\n    for (const paramName in paramValues) {\n      const param = this.getParameter(paramName)\n      if (param) {\n        if (paramValues[paramName] instanceof Parameter) {\n          this.replaceParameter(paramValues[paramName])\n        } else {\n          param.setValue(paramValues[paramName])\n        }\n      } else {\n        // Material Param not found....\n        // this.addParameter(paramName, paramValues[paramName]);\n      }\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes the current object as a json object.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    j.shader = this.__shaderName\n\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context = {}) {\n    if (!j.shader) {\n      console.warn('Invalid Material JSON')\n      return\n    }\n    this.setShaderName(j.shader)\n    super.fromJSON(j, context)\n    // let props = this.__params;\n    // for (let key in j) {\n    //     let value;\n    //     if (j[key] instanceof Object) {\n    //         value = new Color();\n    //         value.fromJSON(j[key]);\n    //     } else {\n    //         value = j[key];\n    //     }\n    //     this.addParameter(paramName, value);\n    // }\n  }\n\n  /**\n   * Sets state of current Item(Including Shaders and Materials) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    let shaderName = reader.loadStr()\n\n    if (shaderName == 'StandardMaterial') {\n      shaderName = 'StandardSurfaceShader'\n    }\n    if (shaderName == 'TransparentMaterial') {\n      shaderName = 'TransparentSurfaceShader'\n    }\n    this.setShaderName(shaderName)\n\n    // if (context.version < 3) {\n    if (context.versions['zea-engine'].compare([0, 0, 3]) < 0) {\n      this.setName(reader.loadStr())\n\n      function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1)\n      }\n\n      const numParams = reader.loadUInt32()\n      for (let i = 0; i < numParams; i++) {\n        const paramName = capitalizeFirstLetter(reader.loadStr())\n        const paramType = reader.loadStr()\n        let value\n        if (paramType == 'MaterialColorParam') {\n          value = reader.loadRGBAFloat32Color()\n          // If the value is in linear space, then we should convert it to gamma space.\n          // Note: !! this should always be done in preprocessing...\n          value.applyGamma(2.2)\n        } else {\n          value = reader.loadFloat32()\n        }\n        const textureName = reader.loadStr()\n\n        // console.log(paramName +\":\" + value);\n        let param = this.getParameter(paramName)\n        if (param) param.setValue(value)\n        else param = this.addParameter(generateParameterInstance(paramName, value))\n        if (textureName != '' && param.setImage) {\n          if (context.materialLibrary.hasImage(textureName)) {\n            // console.log(paramName +\":\" + textureName + \":\" + context.materialLibrary[textureName].resourcePath);\n            param.setImage(context.materialLibrary.getImage(textureName))\n          } else {\n            console.warn('Missing Texture:' + textureName)\n          }\n        }\n      }\n    } else {\n      super.readBinary(reader, context)\n    }\n    this.__checkTransparency()\n    this.__checkTextures()\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new material, copies its values\n   * from this material and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {Material} - Returns a new cloned material.\n   */\n  clone(context) {\n    const cloned = new Material()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n\n  /**\n   * When a Material is copied, first runs `BaseItem` copyFrom method, then sets shader.\n   *\n   * @param {Material} src - The material to copy from.\n   * @param {object} context - The context value.\n   */\n  copyFrom(src, context) {\n    this.setShaderName(src.getShaderName())\n    super.copyFrom(src, context)\n  }\n}\nRegistry.register('Material', Material)\n\nexport { Material }\n","import { Registry } from '../../Registry'\nimport { Parameter } from './Parameter.js'\nimport { Material } from '../Material.js'\n\n/**\n * Represents a specific type of parameter, that only stores `Material` values.\n *\n * i.e.:\n * ```javascript\n * const material = new Material('itemMaterial', 'SimpleSurfaceShader')\n * material.getParameter('BaseColor').setValue(new Color(89 / 255, 182 / 255, 92 / 255))\n *\n * const materialParam = new MaterialParameter('MyMaterial', material)\n * //'myParameterOwnerItem' is an instance of a 'ParameterOwner' class.\n * // Remember that only 'ParameterOwner' and classes that extend from it can host 'Parameter' objects.\n * myParameterOwnerItem.addParameter(materialParam)\n * ```\n * **Events**\n * * **valueParameterValueChanged:** Triggered when parameter's value changes.\n * * **valueChanged:** Triggered when parameter's value changes, except on cleaning processes.\n *\n * @extends Parameter\n */\nclass MaterialParameter extends Parameter {\n  /**\n   * Create a material parameter.\n   * @param {string} name - The name of the material parameter.\n   * @param {Material} value - The value of the parameter.\n   */\n  constructor(name, value) {\n    super(name, undefined, 'Material')\n\n    this.listenerIDs = {}\n    this.setValue(value)\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  __valueParameterValueChanged(event) {\n    this.emit('valueParameterValueChanged', event)\n  }\n\n  /**\n   * Sets `Material` value of the parameter.\n   *\n   * @param {Material} material - The material param.\n   */\n  setValue(material) {\n    if (this.__value == material) return\n\n    // 0 == normal set. 1 = changed via cleaner fn, 2 = change by loading/cloning code.\n    if (this.__value !== material) {\n      if (this.__value) {\n        this.__value.removeListenerById('parameterValueChanged', this.listenerIDs['parameterValueChanged'])\n      }\n      this.__value = material\n      if (this.__value) {\n        this.listenerIDs['parameterValueChanged'] = this.__value.on('parameterValueChanged', (event) => {\n          this.__valueParameterValueChanged(event)\n        })\n      }\n\n      // During the cleaning process, we don't want notifications.\n      this.emit('valueChanged', {})\n    }\n  }\n\n  /**\n   * The loadValue is used to change the value of a parameter, without triggering a\n   * valueChanges, or setting the USER_EDITED state.\n   *\n   * @param {any} value - The context value.\n   */\n  loadValue(value) {\n    this.__value = value\n    if (this.__value) {\n      this.listenerIDs['parameterValueChanged'] = this.__value.on('parameterValueChanged', (event) => {\n        this.__valueParameterValueChanged(event)\n      })\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The loadValue is used to change the value of a parameter, without triggering a\n   * valueChanges, or setting the USER_EDITED state.\n   *\n   * @param {any} value - The context value.\n   */\n  loadValue(value) {\n    if (this.__value) {\n      this.__value.removeListenerById('parameterValueChanged', this.listenerIDs['parameterValueChanged'])\n    }\n    this.__value = value\n    if (this.__value) {\n      this.listenerIDs['parameterValueChanged'] = this.__value.on('parameterValueChanged', (event) => {\n        this.__valueParameterValueChanged(event)\n      })\n    }\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    let j\n    if (this.__value) {\n      j = {\n        value: !context || !context.onlyPath ? this.__value.toJSON(context) : this.__value.getPath(),\n      }\n    }\n\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    if (j.value == undefined) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n\n    if (j.value instanceof Array || j.value instanceof String) {\n      if (context && context.assetItem) {\n        const materialLibrary = context.assetItem.getMaterialLibrary()\n        const material = materialLibrary.getMaterial(j.value instanceof array ? j.value[1] : j.value)\n        if (material) {\n          this.loadValue(material)\n        }\n      }\n    } else {\n      const material = new Material()\n      material.fromJSON(j.value, context)\n      this.loadValue(material)\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new material parameter, copies its values\n   * from this parameter and returns it.\n   *\n   * @return {MaterialParameter} - Returns a new material parameter.\n   */\n  clone() {\n    const clonedParam = new MaterialParameter(this.__name, this.__value)\n    return clonedParam\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    // Note: Some parameters hold refs to geoms/materials,\n    // which need to be explicitly cleaned up.\n    // E.g. freeing GPU Memory.\n\n    if (this.__value) {\n      this.__value.removeListenerById('parameterValueChanged', this.listenerIDs['parameterValueChanged'])\n    }\n  }\n}\n\nRegistry.register('MaterialParameter', MaterialParameter)\n\nexport { MaterialParameter }\n","/* eslint-disable require-jsdoc */\nimport { Float32, UInt32, SInt32, MathFunctions } from '../../Utilities/MathFunctions'\nimport { Registry } from '../../Registry'\n\nfunction isTypedArray(obj) {\n  return !!obj && obj.byteLength !== undefined\n}\n\n/**\n * Class representing an attribute.\n */\nclass Attribute {\n  /**\n   * Create an attribute.\n   * @param {AttrValue|number} dataType - The dataType value.\n   * @param {number|TypedArray} expectedSize - The expectedSize value.\n   * @param {number} defaultValue - The defaultValue value.\n   */\n  constructor(dataType, expectedSize, defaultValue = undefined) {\n    this.__dataType = dataType\n    this.normalized = false\n    if (dataType.numElements != undefined) {\n      this.__dimension = this.__dataType.numElements()\n    } else {\n      switch (dataType) {\n        case Float32:\n        case UInt32:\n        case SInt32:\n          this.__dimension = 1\n          break\n        default:\n          throw new Error('Invalid data type for attribute:' + dataType)\n      }\n    }\n    this.__defaultElementValue = defaultValue != undefined ? defaultValue : Number.MAX_VALUE\n    if (isTypedArray(expectedSize)) {\n      this.__data = expectedSize\n    } else {\n      this.__data = new Float32Array(expectedSize * this.__dimension)\n      this.initRange(0)\n    }\n  }\n\n  /**\n   * Resizes current data array to to a new size.\n   * In case the new size is bigger than current size, the new values are filled up with default ones.\n   *\n   * @param {number} size - The size value.\n   */\n  resize(size) {\n    const prevLength = this.__data.length\n    const newLength = size * this.__dimension\n\n    if (newLength > prevLength) {\n      const data = new Float32Array(newLength)\n      data.set(this.__data)\n      this.__data = data\n      this.initRange(prevLength)\n    } else if (newLength < prevLength) {\n      this.__data = this.__data.slice(0, newLength)\n    } else {\n      // No change in size. (this can happen when an attribute was already loaded with data.)\n    }\n  }\n\n  /**\n   * Fills up data values with default ones starting from the specified index.\n   *\n   * @param {number} start - The start value.\n   */\n  initRange(start) {\n    // Initialize the values to invalid values.\n    for (let i = start; i < this.__data.length; i++) {\n      this.__data[i] = this.__defaultElementValue\n    }\n  }\n\n  /**\n   * Returns the count of attribute values in the data.\n   *\n   * @return {number} - The return value.\n   */\n  getCount() {\n    return this.__data.length / this.__dimension\n  }\n\n  /**\n   * Returns the count of attribute values in the data.\n   *\n   * @return {number} - The return value.\n   */\n  get length() {\n    return this.__data.length / this.__dimension\n  }\n\n  /**\n   * Returns the type of attribute value.\n   *\n   * @return {AttrValue|number} - The return value.\n   */\n  get dataType() {\n    return this.__dataType\n  }\n\n  /**\n   * Returns current data array.\n   *\n   * @return {TypedArray} - The return value.\n   */\n  get data() {\n    return this.__data\n  }\n\n  /**\n   * Sets data value.\n   *\n   * @param {TypedArray} data - The data value.\n   */\n  set data(data) {\n    this.__data = data\n  }\n\n  /**\n   * Returns the number of elements stored in each `AttrValue`.\n   *\n   * @return {number} - The return value.\n   */\n  get numElements() {\n    return this.__dimension\n  }\n\n  /**\n   * Returns data value of the specified index.\n   *\n   * @param {number} index - The index value.\n   * @return {number} - The return value.\n   */\n  getFloat32Value(index) {\n    return this.__data[index]\n  }\n\n  /**\n   * Sets data value in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @param {number} value - The value param.\n   */\n  setFloat32Value(index, value) {\n    this.__data[index] = value\n  }\n\n  /**\n   * Returns the `AttrValue` object placed in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @return {AttrValue} - The return value.\n   */\n  getValueRef(index) {\n    const numElems = this.__dimension\n    if (index >= this.__data.length / numElems)\n      throw new Error('Invalid vertex index:' + index + '. Num Vertices:' + this.__data.length / 3)\n    return this.__dataType.createFromBuffer(this.__data.buffer, index * numElems * 4)\n  }\n\n  /**\n   * Sets `AttrValue` object in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @param {AttrValue} value - The value param.\n   */\n  setValue(index, value) {\n    const numElems = this.__dimension\n    if (index >= this.__data.length / numElems)\n      throw new Error('Invalid vertex index:' + index + '. Num Vertices:' + this.__data.length / 3)\n    this.__dataType.createFromBuffer(this.__data.buffer, index * numElems * 4).setFromOther(value)\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    return {\n      data: Array.from(this.__data),\n      dataType: Registry.getBlueprintName(this.__dataType),\n      defaultValue: this.__defaultElementValue,\n      length: this.__data.length / this.__dimension,\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   */\n  fromJSON(j) {\n    const data = j.data.map((dataElement) =>\n      MathFunctions.isNumeric(dataElement) ? dataElement : Number.POSITIVE_INFINITY\n    )\n    this.__data = Float32Array.from(data)\n  }\n\n  /**\n   * Returns the string representation of the object's state.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n}\n\nexport { Attribute }\n","/* eslint-disable camelcase */\n/* eslint-disable guard-for-in */\nimport { Attribute } from './Attribute.js'\nimport { Float32 } from '../../Utilities/MathFunctions'\n\n/**\n * Class representing vertex attributes.\n *\n * ```\n * const vertexAttribute = new VertexAttribute(this, Float32, 0)\n * ```\n *\n * @extends Attribute\n */\nclass VertexAttribute extends Attribute {\n  /**\n   * Create vertex attributes\n   * @param {Mesh} geom - The geom value.\n   * @param {AttrValue|number} dataType - The dataType value.\n   * @param {number|TypedArray} expectedSize - The expectedSize value.\n   * @param {number} defaultScalarValue - The default scalar value.\n   */\n  constructor(geom, dataType, expectedSize, defaultScalarValue) {\n    super(dataType, expectedSize, defaultScalarValue)\n    this.__geom = geom // TODO: WeakRef??\n\n    this.__splits = {}\n    this.__splitValues = []\n  }\n\n  /**\n   * Resizes current data array to to a new size.\n   * In case the new size is bigger than current size, the new values are filled up with default ones.\n   *\n   * @param {number} size - The size value.\n   */\n  resize(size) {\n    super.resize(size)\n    this.__splits = {}\n    this.__splitValues = []\n  }\n\n  /**\n   * The getFaceVertexValueRef method.\n   * @param {number} face - The face value.\n   * @param {number} faceVertex - The face vertex value.\n   * @return {AttrValue} - The return value.\n   */\n  getFaceVertexValueRef(face, faceVertex) {\n    const vertex = this.__geom.getFaceVertexIndex(face, faceVertex)\n    if (vertex in this.__splits && face in this.__splits[vertex]) {\n      return this.__splitValues[this.__splits[vertex][face]]\n    }\n    return this.getValueRef(vertex)\n  }\n\n  /**\n   * The setFaceVertexValue method.\n   * @param {number} face - The face value.\n   * @param {number} faceVertex - The faceVertex value.\n   * @param {AttrValue} value - The value value.\n   */\n  setFaceVertexValue(face, faceVertex, value) {\n    const vertex = this.__geom.getFaceVertexIndex(face, faceVertex)\n    this.setFaceVertexValue_ByVertexIndex(face, vertex, value)\n  }\n\n  /**\n   * The setFaceVertexValue_ByVertexIndex method.\n   * @param {number} face - The face value.\n   * @param {number} vertex - The vertex value.\n   * @param {AttrValue} value - The value value.\n   */\n  setFaceVertexValue_ByVertexIndex(face, vertex, value) {\n    const valueRef = this.getValueRef(vertex)\n    if (!valueRef.isValid()) {\n      // the value is uninitialized. Initialize it.\n      valueRef.setFromOther(value)\n    } else if (valueRef.approxEqual(value)) {\n      // Reusing vertex value. Do nothing\n    } else {\n      // The new value is different from the existing value\n\n      if (vertex in this.__splits) {\n        // Now check if any existing splits for this vertex match the value being set.\n        // i.e. for faces around a vertex, there will often be a seam along 2 edges\n        // where the values differ. On each side of the seam, all faces can use the same\n        // value. We should see then only one split value for the vertex.\n        const vertexSplitIds = this.__splits[vertex]\n        for (const fid in vertexSplitIds) {\n          const splitId = vertexSplitIds[fid]\n          if (this.__splitValues[splitId].approxEqual(value)) {\n            // re-use this split value\n            vertexSplitIds[face] = splitId\n            return\n          }\n        }\n\n        // If a split already exists for this face, re-use it.\n        if (face in this.__splits[vertex]) {\n          const valueRef = this.__splitValues[this.__splits[vertex][face]]\n          valueRef.setFromOther(value)\n          return\n        }\n      } else {\n        this.__splits[vertex] = {}\n      }\n      this.__splits[vertex][face] = this.__splitValues.length\n      this.__splitValues.push(value)\n    }\n  }\n\n  /**\n   * The setSplitVertexValue method.\n   * @param {number} vertex - The vertex value.\n   * @param {number} face - The face value.\n   * @param {AttrValue} value - The value value.\n   */\n  setSplitVertexValue(vertex, face, value) {\n    if (!(vertex in this.__splits)) this.__splits[vertex] = {}\n    if (face in this.__splits[vertex]) {\n      const currValue = this.__splitValues[this.__splits[vertex][face]]\n      if (currValue.approxEqual(value)) return\n      console.warn('Face Vertex Already Split with different value')\n    }\n    this.__splits[vertex][face] = this.__splitValues.length\n    this.__splitValues.push(value)\n  }\n\n  /**\n   * The setSplitVertexValues method.\n   * @param {number} vertex - The vertex value.\n   * @param {array} faceGroup - The faceGroup value.\n   * @param {AttrValue} value - The value value.\n   */\n  setSplitVertexValues(vertex, faceGroup, value) {\n    if (!(vertex in this.__splits)) this.__splits[vertex] = {}\n    const splitIndex = this.__splitValues.length\n    this.__splitValues.push(value)\n    for (const face of faceGroup) {\n      // if (face in this.__splits[vertex]) {\n      //     let currValue = this.__splitValues[this.__splits[vertex][face]];\n      //     if (currValue.approxEqual(value))\n      //         return;\n      //     console.warn(\"Face Vertex Already Split with different value\");\n      // }\n      this.__splits[vertex][face] = splitIndex\n    }\n  }\n\n  /**\n   * The getSplits method.\n   * @return {array} - The return value.\n   */\n  getSplits() {\n    return this.__splits\n  }\n\n  /**\n   * The getSplitCount method.\n   * @return {number} - The return value.\n   */\n  getSplitCount() {\n    let splitCount = 0\n    for (const vertex in this.__splits) splitCount += Object.keys(this.__splits[vertex]).length\n    return splitCount\n  }\n\n  /**\n   * The generateSplitValues method.\n   * @param {array} splitIndices - The splitIndices value.\n   * @param {number} splitCount - The splitCount value.\n   * @return {Float32Array} - The return value.\n   */\n  generateSplitValues(splitIndices, splitCount) {\n    if (splitCount == 0) return this.__data\n\n    const numUnSplitValues = this.length\n    const count = this.length + splitCount\n    const numElems = this.__dataType.numElements ? this.__dataType.numElements() : 1\n    const data = new Float32Array(count * numElems)\n    for (let i = 0; i < this.__data.length; i++) data[i] = this.__data[i]\n\n    // Now duplicate the split values to generate an attributes array\n    // usig the shared splits accross all attributes.\n    // eslint-disable-next-line guard-for-in\n    for (const vertex in splitIndices) {\n      const faces = splitIndices[vertex]\n      // eslint-disable-next-line guard-for-in\n      for (const face in faces) {\n        const tgt = numUnSplitValues + faces[face]\n        if (vertex in this.__splits && face in this.__splits[vertex]) {\n          // this attribue has a split value in its array.\n          // we must use that value...\n          const src = this.__splits[vertex][face]\n          if (this.__dataType == Float32) data[tgt * numElems] = this.__splitValues[src]\n          else this.__dataType.createFromBuffer(data.buffer, tgt * numElems * 4).setFromOther(this.__splitValues[src])\n        } else {\n          // Copy each scalar value to the new place in the array.\n          const src = parseInt(vertex)\n          for (let e = 0; e < numElems; e++) {\n            if (src * numElems + e > this.__data.length) {\n              console.log('Error remapping src:' + src * numElems + e)\n            }\n            if (tgt * numElems + e > data.length) {\n              console.log('Error remapping tgt:' + tgt * numElems + e)\n            }\n            data[tgt * numElems + e] = this.__data[src * numElems + e]\n          }\n        }\n      }\n    }\n    return data\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const json = super.toJSON(context)\n    json.splits = this.__splits\n    json.splitValues = this.__splitValues\n    return json\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context) {\n    super.fromJSON(json, context)\n    this.__splits = json.splits || {}\n    this.__splitValues = []\n    if (json.splitValues) {\n      for (const jsonVal of json.splitValues) {\n        const dateTypeInstance = new this.__dataType()\n        dateTypeInstance.fromJSON(jsonVal)\n        this.__splitValues.push(dateTypeInstance)\n      }\n    }\n  }\n\n  /**\n   * The loadSplitValues method.\n   * @param {BinReader} reader - The reader value.\n   */\n  loadSplitValues(reader) {\n    const splitIndices = reader.loadUInt32Array()\n    if (splitIndices.length == 0) return\n    let offset = 0\n    let numSplitValues = 0\n    while (true) {\n      const vertexId = splitIndices[offset++]\n      const numSplits = splitIndices[offset++]\n\n      const splits = {}\n      for (let i = 0; i < numSplits; i++) {\n        const faceId = splitIndices[offset++]\n        const splitId = splitIndices[offset++]\n        splits[faceId] = splitId\n        if (splitId >= numSplitValues) numSplitValues = splitId + 1\n      }\n      this.__splits[vertexId] = splits\n      if (offset >= splitIndices.length) break\n    }\n    const dim = this.__numFloat32Elements\n    const splitValues = reader.loadFloat32Array(numSplitValues * dim)\n    this.__splitValues = []\n    for (let i = 0; i < numSplitValues; i++) {\n      const val = this.__dataType.createFromFloat32Array(splitValues.slice(i * dim, i * dim + dim))\n      this.__splitValues.push(val)\n    }\n  }\n}\n\nexport { VertexAttribute }\n","/* eslint-disable require-jsdoc */\n/* eslint-disable guard-for-in */\nimport { Vec2, Vec3, Box2, Box3 } from '../../Math/index'\nimport { ParameterOwner } from '../ParameterOwner.js'\nimport { Attribute } from './Attribute.js'\nimport { Registry } from '../../Registry'\nimport { VertexAttribute } from './VertexAttribute'\n\n// Defines used to explicity specify types for WebGL.\nfunction isTypedArray(obj) {\n  return !!obj && obj.byteLength !== undefined\n}\n\n/**\n * Represents a base class for 3D geometry items.\n *\n * **Events**\n * * **boundingBoxChanged:** Triggered when the bounding box changes.\n * * **geomDataChanged:** Emitted when the geometry attributes have changed. The topology did not change. The Renderer will upload the new attributes to the GPU.\n * * **geomDataTopologyChanged:** Emitted when the geometry attributes and topology have changed.  The Renderer will upload the new attributes and topology to the GPU.\n *\n * @extends ParameterOwner\n */\nclass BaseGeom extends ParameterOwner {\n  /**\n   * Create a base geom.\n   */\n  constructor() {\n    super()\n    this.__numVertices = 0\n    this.__boundingBox = new Box3()\n    this.__boundingBoxDirty = true\n    this.__vertexAttributes = new Map()\n    this.__metaData = new Map()\n    this.addVertexAttribute('positions', Vec3, 0.0)\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.setNumVertices(0)\n  }\n\n  /**\n   * Establishes a name for the geometry.\n   *\n   * @param {string} name - The debug name value.\n   */\n  setDebugName(name) {\n    this.__name = name\n  }\n\n  /**\n   * Adds a new vertex attribute to the geometry.\n   *\n   * @param {string} name - The name of the vertex attribute.\n   * @param {AttrValue|number} dataType - The dataType value.\n   * @param {number} defaultScalarValue - The default scalar value.\n   * @return {Attribute} - Returns an attribute.\n   */\n  addVertexAttribute(name, dataType, defaultScalarValue = undefined) {\n    const positions = this.getVertexAttribute('positions')\n    let attr\n    if (isTypedArray(defaultScalarValue)) {\n      attr = new Attribute(dataType, defaultScalarValue)\n    } else {\n      attr = new Attribute(dataType, positions != undefined ? positions.length : 0, defaultScalarValue)\n    }\n    this.__vertexAttributes.set(name, attr)\n    return attr\n  }\n\n  /**\n   * Checks if the the geometry has an attribute with the specified name.\n   *\n   * @param {string} name - The name of the vertex attribute.\n   * @return {boolean} - The return value.\n   */\n  hasVertexAttribute(name) {\n    return this.__vertexAttributes.has(name)\n  }\n\n  /**\n   * Returns vertex attribute with the specified name.\n   *\n   * @param {string} name - The name of the vertex attribute.\n   * @return {Attribute} - The return value.\n   */\n  getVertexAttribute(name) {\n    return this.__vertexAttributes.get(name)\n  }\n\n  /**\n   * Returns all vertex attributes in an object with their names.\n   *\n   * @return {object} - The return value.\n   */\n  getVertexAttributes() {\n    const vertexAttributes = {}\n    for (const [key, attr] of this.__vertexAttributes.entries()) vertexAttributes[key] = attr\n    return vertexAttributes\n  }\n\n  /**\n   * Returns 'positions' vertex attribute.\n   * @deprecated\n   */\n  get vertices() {\n    console.warn(\"deprecated use #getVertexAttribute('positions')\")\n    return this.__vertexAttributes.get('positions')\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  numVertices() {\n    return this.__numVertices\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  getNumVertices() {\n    return this.__numVertices\n  }\n\n  /**\n   * Sets the number of vertices the geometry has.\n   *\n   * @param {number} count - The count value.\n   */\n  setNumVertices(count) {\n    this.__numVertices = count\n    // Resizes each of the vertex attributes to match the new count.\n    this.__vertexAttributes.forEach((attr) => attr.resize(this.__numVertices))\n    this.setBoundingBoxDirty()\n  }\n\n  /**\n   * Returns the position attribute value of the given vertex\n   * @deprecated\n   * @param {number} index - The index value.\n   * @return {Vec3} - Returns a Vec3.\n   */\n  getVertex(index) {\n    console.warn(`deprecated use #getVertexAttribute('positions').getValueRef()`)\n    return Vec3.createFromBuffer(this.vertices.data.buffer, index * 3 * 4)\n  }\n\n  /**\n   * Sets the position attribute value of the given vertex\n   * @deprecated\n   * @param {index} index - The index value.\n   * @param {Vec3} value - The value value.\n   * @return {Vec3} - Returns a Vec3.\n   */\n  setVertex(index, value) {\n    console.warn(`deprecated use #getVertexAttribute('positions').getValueRef().setFromOther(value)`)\n    return Vec3.createFromBuffer(this.vertices.data.buffer, index * 3 * 4).setFromOther(value)\n  }\n\n  /**\n   * Applies an offset to each of the vertices in the geometry.\n   * @deprecated\n   * @param {Vec3} delta - The delta value.\n   */\n  moveVertices(delta) {\n    console.warn(`deprecated use #getVertexAttribute('positions').getValueRef()`)\n    const vertices = this.vertices\n    for (let i = 0; i < vertices.length; i++) vertices.getValueRef(i).addInPlace(delta)\n    this.setBoundingBoxDirty()\n  }\n\n  /**\n   * The transformVertices method.\n   * @deprecated\n   * @param {Xfo} xfo - The xfo transform.\n   */\n  transformVertices(xfo) {\n    console.warn(`deprecated, please transform the vertices manually`)\n    const vertices = this.__vertexAttributes.get('positions')\n    for (let i = 0; i < vertices.length; i++) {\n      const v = vertices.getValueRef(i)\n      const v2 = xfo.transformVec3(v)\n      v.set(v2.x, v2.y, v2.z)\n    }\n    this.setBoundingBoxDirty()\n  }\n\n  // ////////////////////////////////////////\n  // BoundingBox\n\n  /**\n   * Returns the bounding box for geometry.\n   * @deprecated\n   * @return {Vec3} - The return value.\n   */\n  get boundingBox() {\n    console.warn(`deprecated, please use #getBoundingBox()`)\n    if (this.__boundingBoxDirty) this.updateBoundingBox()\n    return this.__boundingBox\n  }\n\n  /**\n   * Returns the bounding box for geometry.\n   * @return {Vec3} - The return value.\n   */\n  getBoundingBox() {\n    if (this.__boundingBoxDirty) this.updateBoundingBox()\n    return this.__boundingBox\n  }\n\n  /**\n   * The setBoundingBoxDirty method.\n   */\n  setBoundingBoxDirty() {\n    if (!this.__boundingBoxDirty) {\n      this.__boundingBoxDirty = true\n      this.emit('boundingBoxChanged', {})\n    }\n  }\n\n  /**\n   * The updateBoundingBox method.\n   */\n  updateBoundingBox() {\n    const positions = this.getVertexAttribute('positions')\n    const bbox = new Box3()\n    const numVerts = positions.length\n    for (let i = 0; i < numVerts; i++) bbox.addPoint(positions.getValueRef(i))\n    this.__boundingBox = bbox\n    this.__boundingBoxDirty = false\n  }\n\n  // ////////////////////////////////////////\n  // Metadata\n\n  /**\n   * Returns metadata value of the specified name.\n   *\n   * @param {string} key - The key value.\n   * @return {object} - The return value.\n   */\n  getMetadata(key) {\n    return this.__metaData.get(key)\n  }\n\n  /**\n   * Verifies if geometry's metadata contains a value with the specified key.\n   *\n   * @param {string} key - The key value.\n   * @return {boolean} - The return value.\n   */\n  hasMetadata(key) {\n    return this.__metaData.has(key)\n  }\n\n  /**\n   * Sets metadata value to the geometry.\n   *\n   * @param {string} key - The key value.\n   * @param {object} metaData - The metaData value.\n   */\n  setMetadata(key, metaData) {\n    this.__metaData.set(key, metaData)\n  }\n\n  /**\n   * Removes metadata value from the geometry with the specified key.\n   *\n   * @param {string} key - The key value.\n   */\n  deleteMetadata(key) {\n    this.__metaData.delete(key)\n  }\n\n  // ////////////////////////////////////////\n  // Memory\n\n  /**\n   * Returns vertex attributes buffers and its count.\n   *\n   * @param {object} opts - The opts value.\n   * @return {object} - The return value.\n   */\n  genBuffers(opts) {\n    const attrBuffers = {}\n    for (const [attrName, attr] of this.__vertexAttributes) {\n      attrBuffers[attrName] = {\n        values: attr.data,\n        count: attr.length,\n        dataType: attr.dataType,\n        normalized: attr.normalized,\n      }\n    }\n    return {\n      numVertices: this.numVertices(),\n      attrBuffers,\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n  /**\n   * Sets state of current Geometry(Including Vertices and Bounding Box) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  loadBaseGeomBinary(reader) {\n    this.name = reader.loadStr()\n    const flags = reader.loadUInt8()\n    this.debugColor = reader.loadRGBFloat32Color()\n    const numVerts = reader.loadUInt32()\n    this.__boundingBox.set(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n\n    this.setNumVertices(numVerts)\n    const positionsAttr = this.getVertexAttribute('positions')\n\n    let normalsAttr\n    let texCoordsAttr\n    if (flags & (1 << 1)) {\n      normalsAttr = this.getVertexAttribute('normals')\n      if (!normalsAttr) normalsAttr = this.addVertexAttribute('normals', Vec3, 0.0)\n    }\n    if (flags & (1 << 2)) {\n      texCoordsAttr = this.getVertexAttribute('texCoords')\n      if (!texCoordsAttr) texCoordsAttr = this.addVertexAttribute('texCoords', Vec2, 0.0)\n    }\n\n    const parse8BitPositionsArray = (range, offset, sclVec, positions8bit) => {\n      for (let i = range[0]; i < range[1]; i++) {\n        const pos = new Vec3(\n          positions8bit[i * 3 + 0] / 255.0,\n          positions8bit[i * 3 + 1] / 255.0,\n          positions8bit[i * 3 + 2] / 255.0\n        )\n        pos.multiplyInPlace(sclVec)\n        pos.addInPlace(offset)\n        positionsAttr.setValue(i, pos)\n      }\n    }\n\n    const parse8BitNormalsArray = (range, offset, sclVec, normals8bit) => {\n      if (sclVec.isNull()) sclVec.set(1, 1, 1)\n      for (let i = range[0]; i < range[1]; i++) {\n        const normal = new Vec3(\n          normals8bit[i * 3 + 0] / 255.0,\n          normals8bit[i * 3 + 1] / 255.0,\n          normals8bit[i * 3 + 2] / 255.0\n        )\n        normal.multiplyInPlace(sclVec)\n        normal.addInPlace(offset)\n        normal.normalizeInPlace()\n        normalsAttr.setValue(i, normal)\n      }\n    }\n    const parse8BitTextureCoordsArray = (range, offset, sclVec, texCoords8bit) => {\n      // if (sclVec.isNull())\n      //     sclVec.set(1, 1, 1);\n      for (let i = range[0]; i < range[1]; i++) {\n        const textureCoord = new Vec2(texCoords8bit[i * 2 + 0] / 255.0, texCoords8bit[i * 2 + 1] / 255.0)\n        textureCoord.multiplyInPlace(sclVec)\n        textureCoord.addInPlace(offset)\n        texCoordsAttr.setValue(i, textureCoord)\n      }\n    }\n\n    const numClusters = reader.loadUInt32()\n    if (numClusters == 1) {\n      {\n        const box3 = this.__boundingBox\n        const positions8bit = reader.loadUInt8Array(numVerts * 3)\n        parse8BitPositionsArray([0, numVerts], box3.p0, box3.diagonal(), positions8bit)\n      }\n\n      if (normalsAttr) {\n        const box3 = new Box3(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n        const normals8bit = reader.loadUInt8Array(numVerts * 3)\n        parse8BitNormalsArray([0, numVerts], box3.p0, box3.diagonal(), normals8bit)\n\n        normalsAttr.loadSplitValues(reader)\n      }\n      if (texCoordsAttr) {\n        const box2 = new Box2(reader.loadFloat32Vec2(), reader.loadFloat32Vec2())\n        const texCoords8bit = reader.loadUInt8Array(numVerts * 2)\n        parse8BitTextureCoordsArray([0, numVerts], box2.p0, box2.diagonal(), texCoords8bit)\n\n        texCoordsAttr.loadSplitValues(reader)\n      }\n    } else {\n      const clusters = []\n      let offset = 0\n      for (let i = 0; i < numClusters; i++) {\n        const count = reader.loadUInt32()\n        const box3 = new Box3(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n        const clusterData = {\n          range: [offset, offset + count],\n          bbox: box3,\n        }\n        if (normalsAttr) {\n          clusterData.normalsRange = new Box3(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n        }\n        if (texCoordsAttr) {\n          clusterData.texCoordsRange = new Box2(reader.loadFloat32Vec2(), reader.loadFloat32Vec2())\n        }\n\n        clusters.push(clusterData)\n        offset += count\n      }\n      const positions8bit = reader.loadUInt8Array(numVerts * 3)\n      let normals8bit\n      let texCoords8bit\n      if (normalsAttr) {\n        normals8bit = reader.loadUInt8Array(numVerts * 3)\n      }\n      if (texCoordsAttr) {\n        texCoords8bit = reader.loadUInt8Array(numVerts * 2)\n      }\n\n      for (let i = 0; i < numClusters; i++) {\n        {\n          const box3 = clusters[i].bbox\n          parse8BitPositionsArray(clusters[i].range, box3.p0, box3.diagonal(), positions8bit)\n        }\n\n        if (normalsAttr) {\n          const box3 = clusters[i].normalsRange\n          parse8BitNormalsArray(clusters[i].range, box3.p0, box3.diagonal(), normals8bit)\n        }\n        if (texCoordsAttr) {\n          const box2 = clusters[i].texCoordsRange\n          parse8BitTextureCoordsArray(clusters[i].range, box2.p0, box2.diagonal(), texCoords8bit)\n        }\n      }\n      if (normalsAttr) {\n        normalsAttr.loadSplitValues(reader)\n      }\n      if (texCoordsAttr) {\n        texCoordsAttr.loadSplitValues(reader)\n      }\n    }\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    let json = super.toJSON(context)\n    if (!json) json = {}\n    json.type = Registry.getBlueprintName(this)\n    if (!context || !context.skipTopology) {\n      json.numVertices = this.__numVertices || 0\n    }\n\n    const vertexAttributes = {}\n    for (const [key, attr] of this.__vertexAttributes.entries()) {\n      if (!context || !('skipAttributes' in context) || !context.skipAttributes.includes(key))\n        vertexAttributes[key] = attr.toJSON(context)\n    }\n    json.vertexAttributes = vertexAttributes\n\n    return json\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context) {\n    this.clear()\n    super.fromJSON(json, context)\n    if (json.numVertices) this.setNumVertices(json.numVertices)\n    if (json.vertexAttributes) {\n      for (const name in json.vertexAttributes) {\n        let attr = this.__vertexAttributes.get(name)\n        const attrJSON = json.vertexAttributes[name]\n        if (!attr) {\n          const dataType = Registry.getBlueprint(attrJSON.dataType)\n          attr = new VertexAttribute(this, dataType, 0, attrJSON.defaultScalarValue)\n          this.__vertexAttributes.set(name, attr)\n        }\n        attr.fromJSON(attrJSON)\n      }\n    }\n    this.emit('geomDataTopologyChanged')\n  }\n\n  /**\n   * Returns geometry data value in json format.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n}\nexport { BaseGeom }\n","import { BaseGeom } from './BaseGeom.js'\nimport { Registry } from '../../Registry'\n\n/**\n * Class representing a point primitive drawing type, every vertex specified is a point.\n *\n * ```\n * const points = new Points()\n * ```\n *\n * * **Events**\n * * **boundingBoxChanged:** Triggered when the bounding box changes.\n *\n * @extends BaseGeom\n */\nclass Points extends BaseGeom {\n  /**\n   * Create points.\n   */\n  constructor() {\n    super()\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.setNumVertices(0)\n    this.emit('geomDataTopologyChanged')\n  }\n\n  /**\n   * Loads and populates `Points` object from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   */\n  loadBin(reader) {\n    this.name = reader.loadStr()\n    const numVerts = reader.loadUInt32()\n    this.__boundingBox.set(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n    this.setNumVertices(numVerts)\n    const positions = this.getVertexAttribute('positions')\n\n    if (numVerts < 256) {\n      const bboxMat = this.__boundingBox.toMat4()\n      const posAttr8bit = reader.loadUInt8Array(numVerts * 3)\n      for (let i = 0; i < numVerts; i++) {\n        const pos = new Vec3(\n          posAttr8bit[i * 3 + 0] / 255.0,\n          posAttr8bit[i * 3 + 1] / 255.0,\n          posAttr8bit[i * 3 + 2] / 255.0\n        )\n        positions.setValue(i, bboxMat.transformVec3(pos))\n      }\n    } else {\n      const numClusters = reader.loadUInt32()\n      const clusters = []\n      for (let i = 0; i < numClusters; i++) {\n        const range = reader.loadUInt32Vec2()\n        const p0 = reader.loadFloat32Vec3()\n        const p1 = reader.loadFloat32Vec3()\n        clusters.push({\n          range: range,\n          bbox: new Box3(p0, p1),\n        })\n      }\n      const posAttr8bit = reader.loadUInt8Array(numVerts * 3)\n\n      for (let i = 0; i < numClusters; i++) {\n        const bboxMat = clusters[i]['bbox'].toMat4()\n        for (let j = clusters[i]['range'].x; j < clusters[i]['range'].y; j++) {\n          const pos = new Vec3(\n            posAttr8bit[j * 3 + 0] / 255.0,\n            posAttr8bit[j * 3 + 1] / 255.0,\n            posAttr8bit[j * 3 + 2] / 255.0\n          )\n          positions.setValue(j, bboxMat.transformVec3(pos))\n        }\n      }\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Sets state of current geometry(Including line segments) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.loadBaseGeomBinary(reader)\n\n    // this.computeVertexNormals();\n    this.emit('geomDataChanged', {})\n  }\n}\n\nRegistry.register('Points', Points)\n\nexport { Points }\n","import { BaseGeom } from './BaseGeom.js'\nimport { Registry } from '../../Registry'\n\n/**\n *\n * Class representing lines primitive drawing type, connecting vertices using the specified indices.\n * i.e. We have 4 points(vertices) but we don't know how they connect to each other,\n * and that's why we need indices(Numbers indicating which vertex connects to which).\n * In this case if we say that `indices` is `[0,1,2,3]`, it would connect the first vertex to the second,\n * and the third to the fourth.\n *\n * ```\n * const lines = new Lines()\n * ```\n *\n * **Events**\n * * **geomDataChanged:** Triggered when the data value of the geometry is set(This includes reading binary)\n *\n * @extends BaseGeom\n */\nclass Lines extends BaseGeom {\n  /**\n   * Create lines.\n   */\n  constructor() {\n    super()\n    this.__indices = new Uint32Array()\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    super.clear()\n    this.setNumSegments(0)\n    this.emit('geomDataTopologyChanged')\n  }\n\n  /**\n   * Returns the specified indices(Vertex connectors)\n   *\n   * @return {Uint32Array} - The indices index array.\n   */\n  getIndices() {\n    return this.__indices\n  }\n\n  /**\n   * Returns the number of line segments.\n   *\n   * @return {number} - Returns the number of segments.\n   */\n  getNumSegments() {\n    return this.__indices.length / 2\n  }\n\n  /**\n   * Sets the number of line segments in the geometry.<br>\n   * **Important:** It resets indices values.\n   *\n   * @param {number} numOfSegments - The count value.\n   */\n  setNumSegments(numOfSegments) {\n    if (numOfSegments > this.getNumSegments()) {\n      const indices = new Uint32Array(numOfSegments * 2)\n      indices.set(this.__indices)\n      this.__indices = indices\n    } else {\n      this.__indices = this.__indices.slice(0, numOfSegments * 2)\n    }\n  }\n\n  /**\n   * Sets segment values in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @param {number} p0 - The p0 value.\n   * @param {number} p1 - The p1 value.\n   */\n  setSegmentVertexIndices(index, p0, p1) {\n    if (index >= this.__indices.length / 2)\n      throw new Error('Invalid line index: ' + index + '. Num Segments: ' + this.__indices.length / 2)\n    this.__indices[index * 2 + 0] = p0\n    this.__indices[index * 2 + 1] = p1\n  }\n\n  /**\n   * Sets segment values in the specified index.\n   *\n   * @param {number} index - The index value.\n   * @param {number} p0 - The p0 value.\n   * @param {number} p1 - The p1 value.\n   */\n  setSegment(index, p0, p1) {\n    console.warn(`deprecated use #setSegmentVertexIndices`)\n    this.setSegmentVertexIndices(index, p0, p1)\n  }\n\n  /**\n   * The getSegmentVertexIndex method.\n   *\n   * @param {number} line - The line value.\n   * @param {number} lineVertex - The lineVertex value.\n   * @return {number} - The return value.\n   * @private\n   */\n  getSegmentVertexIndex(line, lineVertex) {\n    const numSegments = this.getNumSegments()\n    if (line < numSegments) return this.__indices[line * 2 + lineVertex]\n  }\n\n  // ////////////////////////////////////////\n  // Memory\n\n  /**\n   * Returns vertex attributes buffers and its count.\n   *\n   * @return {object} - The return value.\n   */\n  genBuffers() {\n    const buffers = super.genBuffers()\n\n    let indices\n    if (buffers.numVertices < Math.pow(2, 8)) {\n      indices = new Uint8Array(this.__indices)\n    } else if (buffers.numVertices < Math.pow(2, 16)) {\n      indices = new Uint16Array(this.__indices)\n    } else {\n      indices = this.__indices\n    }\n    buffers.indices = indices\n    return buffers\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Sets state of current geometry(Including line segments) using a binary reader object.\n   *\n   * @param {object} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.loadBaseGeomBinary(reader)\n\n    this.setNumSegments(reader.loadUInt32())\n\n    const bytes = reader.loadUInt8()\n    if (bytes == 1) this.__indices = reader.loadUInt8Array()\n    else if (bytes == 2) this.__indices = reader.loadUInt16Array()\n    else if (bytes == 4) this.__indices = reader.loadUInt32Array()\n\n    this.emit('geomDataChanged', {})\n  }\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    if (!context || !context.skipTopology) j.indices = Array.from(this.__indices)\n\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n    if (j.indices) this.__indices = Uint32Array.from(j.indices)\n  }\n}\n\nRegistry.register('Lines', Lines)\n\nexport { Lines }\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable guard-for-in */\n/* eslint-disable no-unused-vars */\nimport { Vec3 } from '../../Math/Vec3'\nimport { BaseGeom } from './BaseGeom.js'\nimport { Attribute } from './Attribute.js'\n\nimport { VertexAttribute } from './VertexAttribute.js'\nimport { Registry } from '../../Registry'\n\n/**\n * The Mesh class provides a flexible and fast polygon mesh representation. It supports polygons of arbitrary complexity,\n * from basic triangles and quads to pentagons more.\n * It supports storing per face attributes, and per edge attributes.\n * The Mesh class handles converting its internal representation of polygons into a simpler triangles representation for rendering.\n *\n * ```\n * const mesh = new Mesh()\n * ```\n *\n * **Events**\n * * **geomDataTopologyChanged:** Triggered when the topology of the mesh has been changed.\n * * **geomDataChanged:** Triggered when the vertices of the mesh have changed, but not necessarily the topology.\n *\n * @extends BaseGeom\n */\nclass Mesh extends BaseGeom {\n  /**\n   * Creates an instance of Mesh.\n   */\n  constructor() {\n    super()\n\n    this.__faceCounts = []\n    this.__faceVertexIndices = new Uint32Array()\n\n    this.__faceAttributes = new Map()\n    this.__edgeAttributes = new Map()\n\n    this.__logTopologyWarnings = false\n\n    this.edgeVerts = undefined\n    this.vertexEdges = undefined\n    this.numEdges = 0\n    this.edgeAngles = new Float32Array()\n\n    this.edgeVecs = []\n  }\n\n  /**\n   * The init method.\n   * @private\n   */\n  init() {}\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    super.clear()\n\n    // clear edge and face normals.\n    this.edgeVerts = undefined\n    this.vertexEdges = undefined\n    this.numEdges = 0\n    this.edgeAngles = new Float32Array()\n    this.emit('geomDataTopologyChanged')\n  }\n\n  /**\n   * The getFaceCounts method.\n   * @return {array} - The return value.\n   */\n  getFaceCounts() {\n    return this.__faceCounts\n  }\n\n  /**\n   * The getNumFaces method.\n   * @return {number} - The return value.\n   */\n  getNumFaces() {\n    return this.__faceCounts.length == 0 ? 0 : this.__faceCounts.reduce((numFaces, fc) => (numFaces += fc))\n  }\n\n  /**\n   * Sets the number of faces on the mesh using an array specifying the counts per polygon size.\n   * The first item in the array specifies the number of triangles, the second, the number of quads, the 3rd, the number of 5 sided polygons etc..\n   * e.g. to specify 2 triangles, and 7 quads, we would pass [2, 7]\n   * @param {array} faceCounts - The faceCounts value.\n   */\n  setFaceCounts(faceCounts) {\n    let numFaces = 0\n    let numFacesVertices = 0\n    let numVertsPerFace = 3\n    for (const fc of faceCounts) {\n      numFaces += fc\n      numFacesVertices += fc * numVertsPerFace\n      numVertsPerFace++\n    }\n\n    const prevNumFaces = this.getNumFaces()\n    if (prevNumFaces == 0) {\n      this.__faceVertexIndices = new Uint32Array(numFacesVertices)\n    } else {\n      const faceVertexIndices = new Uint32Array(numFacesVertices)\n\n      // Now we preserve the existing indices if they fit within the new faceVertexIndices array.\n      let startSrc = 0\n      let startTgt = 0\n      numFacesVertices = 0\n      numVertsPerFace = 3\n      faceCounts.forEach((fc, index) => {\n        const endSrc = startSrc + Math.min(fc, this.__faceCounts[index]) * numVertsPerFace\n        faceVertexIndices.set(this.__faceVertexIndices.slice(startSrc, endSrc), startTgt)\n        startSrc += this.__faceCounts[index] * numVertsPerFace\n        startTgt += fc * numVertsPerFace\n        numVertsPerFace++\n      })\n      this.__faceVertexIndices = faceVertexIndices\n    }\n    this.__faceCounts = faceCounts\n\n    this.__faceAttributes.forEach((attr) => {\n      attr.resize(numFaces)\n    })\n  }\n\n  /**\n   * Returns the number of vertices indexed by this face\n   * @param {number} faceIndex - The faceIndex value.\n   * @return {number} - The return value.\n   */\n  getFaceVertexCount(faceIndex) {\n    let idx = 0\n    let count = 0\n    this.__faceCounts.some((fc, index) => {\n      idx += fc\n      if (idx > faceIndex) {\n        count = index + 3\n        return true\n      }\n    })\n    return count\n  }\n\n  /**\n   * Returns the offset of the face indices within the entire index array.\n   * @param {number} faceIndex - The faceIndex value.\n   * @return {number} - The return value.\n   */\n  getFaceVertexOffset(faceIndex) {\n    let idx = 0\n    let offset = 0\n    this.__faceCounts.some((fc, index) => {\n      if (idx + fc > faceIndex) {\n        offset += (faceIndex - idx) * (index + 3)\n        return true\n      }\n      idx += fc\n      offset += fc * (index + 3)\n    })\n    return offset\n  }\n\n  /**\n   * The setFaceVertexIndices method.\n   * @param {number} faceIndex - The faceIndex value.\n   * @param {array} vertexIndices - The array of vertex indices for this face value.\n   */\n  setFaceVertexIndices(faceIndex, vertexIndices) {\n    if (arguments.length != 2) {\n      console.warn(`deprecated interface. Please pass vertexIndices as an array`)\n      vertexIndices = Array.prototype.slice.call(arguments, 1)\n    }\n    const faceVertexCount = this.getFaceVertexCount(faceIndex)\n    if (vertexIndices.length != faceVertexCount) {\n      throw new Error(\n        `Invalid indices for face:${faceIndex} vertexIndices:${vertexIndices}. Expected ${faceVertexCount} indices`\n      )\n    }\n    const offset = this.getFaceVertexOffset(faceIndex)\n    this.__faceVertexIndices.set(vertexIndices, offset)\n  }\n\n  /**\n   * Adds a new face to the mesh\n   * @param {array} vertexIndices - The vertex indices of the face.\n   * @return {number} - The index of the face in the mesh.\n   */\n  addFace(vertexIndices) {\n    const faceCounts = [...this.__faceCounts]\n    if (faceCounts.length <= vertexIndices.length - 3) {\n      for (let i = faceCounts.length; i < vertexIndices.length - 3; i++) faceCounts[i] = 0\n      faceCounts[vertexIndices.length - 3] = 1\n    } else {\n      faceCounts[vertexIndices.length - 3]++\n    }\n    this.setFaceCounts(faceCounts)\n\n    // Calculate the offset in the faceVertexIndices of this new face.\n    let faceIndex = 0\n    let offset = 0\n    this.__faceCounts.some((fc, index) => {\n      if (index + 3 == vertexIndices.length) {\n        faceIndex += fc - 1\n        offset += (fc - 1) * (index + 3)\n        return true\n      }\n      faceIndex += fc\n      offset += fc * (index + 3)\n    })\n    this.__faceVertexIndices.set(vertexIndices, offset)\n    return faceIndex\n  }\n\n  /**\n   * Returns the vertex indices of the specified face.\n   * @param {number} faceIndex - The index of the specified face\n   * @return {array} - An array of indices into the vertex attributes\n   */\n  getFaceVertexIndices(faceIndex) {\n    const vertexIndices = []\n    const offset = this.getFaceVertexOffset(faceIndex)\n    const count = this.getFaceVertexCount(faceIndex)\n    for (let i = 0; i < count; i++) {\n      vertexIndices.push(this.__faceVertexIndices[offset + i])\n    }\n    return vertexIndices\n  }\n\n  /**\n   * Returns a single vertex index for a given face and faceVertex.\n   * @param {number} faceIndex - The faceIndex value.\n   * @param {number} faceVertex - The face vertex is the index within the face. So the first vertex index is 0.\n   * @return {number} - The vertex index\n   */\n  getFaceVertexIndex(faceIndex, faceVertex) {\n    const offset = this.getFaceVertexOffset(faceIndex)\n    return this.__faceVertexIndices[offset + faceVertex]\n  }\n\n  // ///////////////////////////\n  // Vertex Attributes\n\n  /**\n   * Adds a `VertexAttribute` to the geometry.\n   *\n   * @param {string} name - The name of the vertex attribute to add.\n   * @param {AttrValue|number} dataType - The dataType value.\n   * @param {number} defaultScalarValue - The default scalar value.\n   * @return {VertexAttribute} - Returns a vertex attribute.\n   */\n  addVertexAttribute(name, dataType, defaultScalarValue = undefined) {\n    const positions = this.getVertexAttribute('positions')\n    const attr = new VertexAttribute(this, dataType, positions != undefined ? positions.length : 0, defaultScalarValue)\n    this.__vertexAttributes.set(name, attr)\n    return attr\n  }\n\n  // ///////////////////////////\n  // Face Attributes\n\n  /**\n   * The addFaceAttribute method.\n   * @param {string} name - The name of the face attribute to add.\n   * @param {AttrValue|number} dataType - The data type.\n   * @param {number|TypedArray} count - The count value.\n   * @return {Attribute} - Returns a face attribute.\n   */\n  addFaceAttribute(name, dataType, count = undefined) {\n    const attr = new Attribute(dataType, count != undefined ? count : this.getNumFaces())\n    this.__faceAttributes.set(name, attr)\n    return attr\n  }\n\n  /**\n   * The hasFaceAttribute method.\n   * @param {string} name - The name of the face attribute.\n   * @return {boolean} - The return value.\n   */\n  hasFaceAttribute(name) {\n    return this.__faceAttributes.has(name)\n  }\n\n  /**\n   * The getFaceAttribute method.\n   * @param {string} name - The name of the face attribute.\n   * @return {boolean} - The return value.\n   */\n  getFaceAttribute(name) {\n    return this.__faceAttributes.get(name)\n  }\n\n  // /////////////////////////\n  // Edge Attributes\n\n  /**\n   * The addEdgeAttribute method.\n   * @param {string} name - The name of the edge attribute to add.\n   * @param {AttrValue|number} dataType - The data type.\n   * @param {number} count - The default scalar value.\n   * @return {Attribute} - Returns an edge attribute.\n   */\n  addEdgeAttribute(name, dataType, count = undefined) {\n    const attr = new Attribute(dataType, count != undefined ? count : this.getNumEdges())\n    this.__edgeAttributes.set(name, attr)\n    return attr\n  }\n\n  /**\n   * The hasEdgeAttribute method.\n   * @param {string} name - The name of the edge attribute.\n   * @return {boolean} - The return value.\n   */\n  hasEdgeAttribute(name) {\n    return this.__edgeAttributes.has(name)\n  }\n\n  /**\n   * The getEdgeAttribute method.\n   * @param {string} name - The name of the edge attribute.\n   * @return {Attribute} - The return value.\n   */\n  getEdgeAttribute(name) {\n    return this.__edgeAttributes.get(name)\n  }\n\n  // ///////////////////////////\n\n  /**\n   * The genTopologyInfo method.\n   */\n  genTopologyInfo() {\n    const connectedVertices = {} // acceleration structure.\n    this.vertexEdges = [] // 2d array of vertex to edges.\n    // this.vertexFaces = []; // 2d array of vertex to faces.\n    this.edgeFaces = [] // flat array of 2 face indices per edge\n    this.edgeVerts = [] // flat array of 2 vert indices per edge\n    this.faceEdges = [] // the edges bordering each face.\n    this.numEdges = 0\n\n    const positions = this.getVertexAttribute('positions')\n    const getEdgeIndex = (v0, v1) => {\n      let tmp0 = v0\n      let tmp1 = v1\n      if (tmp1 < tmp0) {\n        const tmp = tmp0\n        tmp0 = tmp1\n        tmp1 = tmp\n      }\n      const key = tmp0 + '>' + tmp1\n      if (key in connectedVertices) {\n        // console.log(key + ':' + connectedVertices[key] + \" face:\" + ( v0 < v1 ? 0 : 1) );\n        return connectedVertices[key]\n      }\n\n      const p0 = positions.getValueRef(tmp0)\n      const p1 = positions.getValueRef(tmp1)\n      const edgeVec = p1.subtract(p0)\n\n      const edgeIndex = this.edgeFaces.length / 2\n      const edgeData = {\n        edgeIndex: edgeIndex,\n        edgeVec: edgeVec,\n      }\n      connectedVertices[key] = edgeData\n\n      this.edgeFaces.push(-1)\n      this.edgeFaces.push(-1)\n      this.edgeVerts.push(tmp0)\n      this.edgeVerts.push(tmp1)\n      // console.log(key + ':' + connectedVertices[key] + \" face:\" + ( v0 < v1 ? 0 : 1));\n\n      this.numEdges++\n      return edgeData\n    }\n\n    const addEdge = (v0, v1, faceIndex) => {\n      // console.log('addEdge:' + v0 + \" :\" + v1 + \" faceIndex:\" + faceIndex );\n      const edgeData = getEdgeIndex(v0, v1)\n      const edgeIndex = edgeData.edgeIndex\n      if (v1 < v0) {\n        const edgeFaceIndex = edgeIndex * 2 + 0\n        if (this.__logTopologyWarnings && this.edgeFaces[edgeFaceIndex] != -1)\n          console.warn('Edge poly 0 already set. Mesh is non-manifold.')\n        this.edgeFaces[edgeFaceIndex] = faceIndex\n      } else {\n        const edgeFaceIndex = edgeIndex * 2 + 1\n        if (this.__logTopologyWarnings && this.edgeFaces[edgeFaceIndex] != -1)\n          console.warn('Edge poly 1 already set. Mesh is non-manifold.')\n        this.edgeFaces[edgeFaceIndex] = faceIndex\n      }\n\n      if (!(faceIndex in this.faceEdges)) this.faceEdges[faceIndex] = []\n      this.faceEdges[faceIndex].push(edgeIndex)\n\n      // Push the edge index onto both vertex edge lists.\n      // We use Sets to avoid adding the same edge 2x to the same vertex.\n      if (this.vertexEdges[v0] == undefined) {\n        this.vertexEdges[v0] = new Set()\n      }\n      if (this.vertexEdges[v1] == undefined) {\n        this.vertexEdges[v1] = new Set()\n      }\n      this.vertexEdges[v0].add(edgeIndex)\n      this.vertexEdges[v1].add(edgeIndex)\n\n      // if (this.vertexFaces[v0] == undefined) {\n      //     this.vertexFaces[v0] = [];\n      // }\n      // this.vertexFaces[v0].push(faceIndex);\n    }\n\n    const numFaces = this.getNumFaces()\n    for (let faceIndex = 0; faceIndex < numFaces; faceIndex++) {\n      const faceVerts = this.getFaceVertexIndices(faceIndex)\n      for (let j = 0; j < faceVerts.length; j++) {\n        const v0 = faceVerts[j]\n        const v1 = faceVerts[(j + 1) % faceVerts.length]\n        addEdge(v0, v1, faceIndex)\n      }\n    }\n  }\n\n  /**\n   * Computes a normal value per face by averaging the triangle normals of the face.\n   */\n  computeFaceNormals() {\n    const positions = this.getVertexAttribute('positions')\n    const faceNormals = this.addFaceAttribute('normals', Vec3)\n    const numFaces = this.getNumFaces()\n    for (let faceIndex = 0; faceIndex < numFaces; faceIndex++) {\n      const faceVerts = this.getFaceVertexIndices(faceIndex)\n      const p0 = positions.getValueRef(faceVerts[0])\n      const p1 = positions.getValueRef(faceVerts[1])\n      let prev = p1\n      const faceNormal = new Vec3()\n      for (let j = 2; j < faceVerts.length; j++) {\n        const pn = positions.getValueRef(faceVerts[j])\n        const v0 = prev.subtract(p0)\n        const v1 = pn.subtract(p0)\n        faceNormal.addInPlace(v1.cross(v0).normalize())\n        prev = pn\n      }\n      if (faceNormal.lengthSquared() < Number.EPSILON) {\n        // Note: we are getting many faces with no surface area.\n        // This is simply an authoring issue.\n        // console.warn(\"Invalid Mesh topology\");\n      } else {\n        faceNormals.setValue(faceIndex, faceNormal.normalize())\n      }\n    }\n  }\n\n  /**\n   * Calculates the angles at each edge between the adjoining faces\n   */\n  calculateEdgeAngles() {\n    if (this.vertexEdges == undefined) this.genTopologyInfo()\n\n    this.computeFaceNormals()\n\n    const positions = this.getVertexAttribute('positions')\n    const faceNormals = this.getFaceAttribute('normals')\n    this.edgeVecs = []\n    this.edgeAngles = new Float32Array(this.numEdges)\n    for (let i = 0; i < this.edgeFaces.length; i += 2) {\n      const v0 = this.edgeVerts[i]\n      const v1 = this.edgeVerts[i + 1]\n      const edgeVec = positions.getValueRef(v1).subtract(positions.getValueRef(v0))\n      edgeVec.normalizeInPlace()\n      this.edgeVecs.push(edgeVec)\n\n      const p0 = this.edgeFaces[i]\n      const p1 = this.edgeFaces[i + 1]\n      if (p0 == -1 || p1 == -1) {\n        // Flag the edge as a border edge....\n        this.edgeAngles[i / 2] = Math.PI * 2.0\n        continue\n      }\n\n      const n0 = faceNormals.getValueRef(p0)\n      const n1 = faceNormals.getValueRef(p1)\n      this.edgeAngles[i / 2] = n0.angleTo(n1)\n    }\n  }\n\n  /**\n   * Compute vertex normals.\n   * @param {number} hardAngle - The hardAngle value in radians.\n   * @return {VertexAttribute} - The return value.\n   */\n  computeVertexNormals(hardAngle = 1.0 /* radians */) {\n    this.calculateEdgeAngles()\n\n    const faceNormals = this.getFaceAttribute('normals')\n    const normalsAttr = this.addVertexAttribute('normals', Vec3)\n\n    // these methods are faster versions than using the methods\n    // provided on the attributes. We cache values and use hard coded constants.\n    const faceNormalsBuffer = faceNormals.data.buffer\n    const getFaceNormal = (index) => {\n      return Vec3.createFromBuffer(faceNormalsBuffer, index * 3 * 4) // 3 components at 4 bytes each.\n    }\n    const vertexNormalsArray = normalsAttr.data\n    const setVertexNormal = (index, value) => {\n      vertexNormalsArray[index * 3 + 0] = value.x\n      vertexNormalsArray[index * 3 + 1] = value.y\n      vertexNormalsArray[index * 3 + 2] = value.z\n    }\n    const getConnectedEdgeVecs = (faceIndex, vertexIndex) => {\n      let e0\n      let e1\n      const faceEdges = this.faceEdges[faceIndex]\n      for (const e of faceEdges) {\n        if (this.edgeVerts[e * 2] == vertexIndex) {\n          if (!e0) e0 = this.edgeVecs[e]\n          else e1 = this.edgeVecs[e]\n        } else if (this.edgeVerts[e * 2 + 1] == vertexIndex) {\n          if (!e0) e0 = this.edgeVecs[e]\n          else e1 = this.edgeVecs[e]\n        }\n      }\n      return [e0, e1]\n    }\n\n    for (let i = 0; i < this.vertexEdges.length; i++) {\n      // If this face indexing doesn't start at 0, then the vertexEdges don't either.\n      if (this.vertexEdges[i] == undefined) continue\n\n      const edges = this.vertexEdges[i]\n\n      // Groups of faces having a smooth normal at the current vertex.\n      const faceGroups = []\n      const addFaceToGroup = (face) => {\n        let inGroup = false\n        for (const faceGroup of faceGroups) {\n          inGroup = faceGroup.includes(face)\n          if (inGroup) break\n        }\n        if (!inGroup) faceGroups.push([face])\n      }\n      for (const e of edges) {\n        const f0 = this.edgeFaces[e * 2]\n        const f1 = this.edgeFaces[e * 2 + 1]\n        if (f0 != -1 && f1 != -1 && this.edgeAngles[e] < hardAngle) {\n          let f0groupIndex = -1\n          let f1groupIndex = -1\n          for (let groupIndex = 0; groupIndex < faceGroups.length; groupIndex++) {\n            if (f0groupIndex == -1 && faceGroups[groupIndex].includes(f0)) f0groupIndex = groupIndex\n            if (f1groupIndex == -1 && faceGroups[groupIndex].includes(f1)) f1groupIndex = groupIndex\n          }\n          if (f0groupIndex == -1 && f1groupIndex == -1) {\n            faceGroups.push([f0, f1])\n          } else if (f0groupIndex != -1 && f1groupIndex != -1) {\n            if (f0groupIndex != f1groupIndex) {\n              // Merge the 2 groups that the smooth edge joins.\n              faceGroups[f0groupIndex] = faceGroups[f0groupIndex].concat(faceGroups[f1groupIndex])\n              faceGroups.splice(f1groupIndex, 1)\n            }\n          } else {\n            if (f0groupIndex == -1) {\n              faceGroups[f1groupIndex].push(f0)\n            }\n            if (f1groupIndex == -1) {\n              faceGroups[f0groupIndex].push(f1)\n            }\n          }\n          continue\n        }\n        // This is a hard edge or a border edge... Add faces separately group.\n        if (f0 != -1) addFaceToGroup(f0)\n        if (f1 != -1) addFaceToGroup(f1)\n      }\n\n      // Sort the groups to have the biggest group first.\n      faceGroups.sort((a, b) => (a.length < b.length ? 1 : a.length > b.length ? -1 : 0))\n\n      let firstVertex = true\n      for (const faceGroup of faceGroups) {\n        const normal = new Vec3()\n        for (const faceIndex of faceGroup) {\n          const faceEdges = getConnectedEdgeVecs(faceIndex, i)\n          const weight = faceEdges[0].angleTo(faceEdges[1])\n          // if (i == 1)\n          //     console.log(\"FaceNormal:\" + faceIndex + \":\" + getFaceNormal(faceIndex).toString());\n          normal.addInPlace(getFaceNormal(faceIndex).scale(weight))\n        }\n        normal.normalizeInPlace()\n        if (firstVertex) {\n          setVertexNormal(i, normal)\n          firstVertex = false\n        } else {\n          normalsAttr.setSplitVertexValues(i, faceGroup, normal)\n        }\n      }\n    }\n\n    return normalsAttr\n  }\n\n  /**\n   * The computeHardEdgesIndices method.\n   * @param {number} hardAngle - The hardAngle value in radians.\n   * @return {array} - The return value.\n   */\n  computeHardEdgesIndices(hardAngle = 1.0) {\n    if (!this.edgeVerts) this.calculateEdgeAngles()\n\n    const hardEdges = []\n    const addEdge = (index) => {\n      hardEdges.push(this.edgeVerts[index])\n      hardEdges.push(this.edgeVerts[index + 1])\n    }\n    for (let i = 0; i < this.edgeAngles.length; i++) {\n      if (this.edgeAngles[i] > hardAngle) {\n        addEdge(i * 2)\n      }\n    }\n    return Uint32Array.from(hardEdges)\n  }\n\n  /**\n   * The getWireframeIndices method.\n   * @return {any} - The return value.\n   * @private\n   */\n  getWireframeIndices() {\n    console.warn('@todo-review - This returns nothing')\n    return indices\n  }\n\n  // ////////////////////////////////////////\n  // Rendering\n\n  /**\n   * The genBuffers method.\n   * @param {object} opts - The opts value.\n   * @return {object} - The return value.\n   */\n  genBuffers(opts) {\n    // Compute the normals on demand.\n    // if (!('normals' in this.__vertexAttributes)) {\n    //     // this.__geom.computeVertexNormals();\n    //     this.addVertexAttribute(\"normals\", Vec3, 0.0);\n    // }\n\n    const splitIndices = {}\n    let splitCount = 0\n    for (const [, attr] of this.__vertexAttributes) {\n      const attrSplits = attr.getSplits()\n      for (const polygon in attrSplits) {\n        if (!(polygon in splitIndices)) splitIndices[polygon] = {}\n        const vertices = attrSplits[polygon]\n        for (const v in vertices) {\n          const vertex = parseInt(v)\n          if (!(vertex in splitIndices[polygon])) {\n            splitIndices[polygon][vertex] = splitCount\n            splitCount++\n          }\n        }\n      }\n    }\n\n    const positions = this.getVertexAttribute('positions')\n    const numUnSplitVertices = positions.length\n    const totalNumVertices = numUnSplitVertices + splitCount\n\n    let indices\n    if (!opts || opts.includeIndices != false) {\n      indices = this.generateTriangulatedIndices(totalNumVertices, numUnSplitVertices, splitIndices)\n    }\n\n    // let maxIndex;\n    // if (debugAttrValues)\n    //     maxIndex = Math.max(...indices);\n    const attrBuffers = {}\n    for (const [attrName, attr] of this.__vertexAttributes) {\n      let values\n      if (splitCount == 0) values = attr.data\n      else values = attr.generateSplitValues(splitIndices, splitCount)\n\n      const dimension = attr.numElements\n      const count = values.length / dimension\n\n      // if (debugAttrValues) {\n      //     if (count <= maxIndex)\n      //         console.warn(\"Invalid indexing. Attr value is insufficient for indexing:\" + attrName + \". Max Index:\" + maxIndex + \" Attr Size:\" + count);\n      // }\n\n      attrBuffers[attrName] = {\n        values: values,\n        count: count,\n        dimension: dimension,\n        normalized: attrName == 'normals',\n        dataType: attr.dataType,\n      }\n    }\n\n    const result = {\n      numVertices: this.numVertices(),\n      numRenderVerts: totalNumVertices,\n      indices,\n      attrBuffers,\n    }\n\n    if (opts && opts.includeVertexNeighbors) {\n      if (this.vertexEdges == undefined) this.genTopologyInfo()\n\n      let count = 0\n      for (let i = 0; i < this.vertexEdges.length; i++) {\n        // If this face indexing doesn't start at 0, then the vertexEdges don't either.\n        if (this.vertexEdges[i]) count += this.vertexEdges[i].size\n      }\n      // The array will be structured as a start+offset for each vertex, followed\n      // by a 2d array of neighbor indices.\n      const vertexNeighbors = new Uint32Array(this.vertexEdges.length * 2 + count)\n\n      const sortFanEdges = (fanEdges) => {\n        for (let i = 0; i < fanEdges.length; i++) {\n          const feA = fanEdges[i]\n          for (let j = 0; j < i; j++) {\n            const feB = fanEdges[j]\n            if (feA[0] != -1 && feA[0] == feB[1]) {\n              //  move feA after feB;\n              if (i != j + 1) {\n                fanEdges.splice(i, 1)\n                fanEdges.splice(j + 1, 0, feA)\n              }\n              break\n            }\n            if (feA[1] != -1 && feA[1] == feB[0]) {\n              //  move feA before feB;\n              fanEdges.splice(i, 1)\n              fanEdges.splice(j, 0, feA)\n              break\n            }\n          }\n        }\n      }\n\n      const checkFanEdges = (fanEdges) => {\n        // now check that the faces all build a fan. Maybe starting and ending with -1\n        if (fanEdges[0][0] == -1 || fanEdges[fanEdges.length - 1][1] == -1) {\n          if (fanEdges[0][0] != -1 || fanEdges[fanEdges.length - 1][1] != -1) {\n            throw new Error('If fan starts with -1, it must also end with -1')\n          }\n        }\n        for (let i = 0; i < fanEdges.length; i++) {\n          const fe = fanEdges[i]\n          if (fe[0] == -1 || fe[1] == -1) {\n            if (i != 0 && i != fanEdges.length - 1) {\n              throw new Error('-1 only allowed at the beginning and end of a fan.')\n            }\n          }\n          if (fe[0] != -1) {\n            let prev = i - 1\n            if (prev < 0) prev += fanEdges.length\n            if (fe[0] != fanEdges[prev][1]) {\n              throw new Error('Faces are not sequential')\n            }\n          }\n          if (fe[1] != -1) {\n            const next = (i + 1) % fanEdges.length\n            if (fe[1] != fanEdges[next][0]) {\n              throw new Error('Faces are not sequential')\n            }\n          }\n        }\n      }\n\n      // Populate the start and offset values.\n      let offset = this.vertexEdges.length * 2\n      for (let i = 0; i < this.vertexEdges.length; i++) {\n        if (this.vertexEdges[i] == undefined) continue\n        const edges = this.vertexEdges[i]\n\n        // Build a sorted list of faces based on a fan around\n        // the vertex.\n        const fanEdges = []\n        for (const e of edges) {\n          const v0 = this.edgeVerts[e * 2]\n          const v1 = this.edgeVerts[e * 2 + 1]\n          let f0 = this.edgeFaces[e * 2]\n          let f1 = this.edgeFaces[e * 2 + 1]\n          let neigVert\n          if (v0 == i) {\n            neigVert = v1\n          } else if (v1 == i) {\n            neigVert = v0\n            // swap the faces\n            const tmp = f0\n            f0 = f1\n            f1 = tmp\n          } else {\n            throw new Error('Invalid topology')\n          }\n          fanEdges.push([f0, f1, neigVert])\n        }\n        sortFanEdges(fanEdges)\n        checkFanEdges(fanEdges)\n        const closed = fanEdges[0][0] != -1 || fanEdges[fanEdges.length - 1][1] != -1\n        let flags = 0\n        if (closed) flags += 1\n        vertexNeighbors[i * 2] = offset\n        vertexNeighbors[i * 2 + 1] = edges.size + (flags << 8)\n        for (const fe of fanEdges) {\n          vertexNeighbors[offset] = fe[2]\n          offset++\n        }\n      }\n\n      result.vertexNeighbors = vertexNeighbors\n    }\n\n    return result\n  }\n\n  /**\n   * Compute the number of triangles. For higher degree polygons, they are divided into multiple triangles for rendering.\n   * @return {number} - Returns the number of triangles.\n   */\n  computeNumTriangles() {\n    let numVertsPerFace = 3\n    let trisCount = 0\n    for (const fc of this.__faceCounts) {\n      trisCount += fc * (numVertsPerFace - 2)\n      numVertsPerFace++\n    }\n    return trisCount\n  }\n\n  /**\n   * To prepare data for rendering, the indices for the polygons is used to compute a new index buffer based on\n   * only triangles. This is used during rendering and the resulting indices uploaded ot the GPU  by GLMesh class.\n   *\n   * @param {number} totalNumVertices - The total number of vertices.\n   * @param {number} numUnSplitVertices - The total number of un-split vertices.\n   * @param {array} splitIndices - The splitIndices value.\n   * @return {TypedArray} - Returns a typed array containing the triangulated indices.\n   */\n  generateTriangulatedIndices(totalNumVertices, numUnSplitVertices, splitIndices) {\n    const trisCount = this.computeNumTriangles()\n\n    let triangulatedIndices\n    if (totalNumVertices < Math.pow(2, 8)) triangulatedIndices = new Uint8Array(trisCount * 3)\n    else if (totalNumVertices < Math.pow(2, 16)) triangulatedIndices = new Uint16Array(trisCount * 3)\n    else triangulatedIndices = new Uint32Array(trisCount * 3)\n\n    let triangleVertex = 0\n    const addTriangleVertexIndex = function (vertex, faceIndex) {\n      if (vertex in splitIndices && faceIndex in splitIndices[vertex])\n        vertex = numUnSplitVertices + splitIndices[vertex][faceIndex]\n      triangulatedIndices[triangleVertex] = vertex\n      triangleVertex++\n    }\n    const numFaces = this.getNumFaces()\n    for (let faceIndex = 0; faceIndex < numFaces; faceIndex++) {\n      const faceVerts = this.getFaceVertexIndices(faceIndex)\n      for (let j = 0; j < faceVerts.length; j++) {\n        if (j >= 3) {\n          // For each additional triangle, we have to add 2 indices.\n          addTriangleVertexIndex(faceVerts[0], faceIndex)\n          addTriangleVertexIndex(faceVerts[j - 1], faceIndex)\n        }\n        addTriangleVertexIndex(faceVerts[j], faceIndex)\n      }\n    }\n    return triangulatedIndices\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Restores mesh properties from a binary reader.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.loadBaseGeomBinary(reader)\n    this.setFaceCounts(reader.loadUInt32Array())\n    const numFaces = this.getNumFaces()\n\n    // Note: we can remove this. We can infer this from the above faceCounts array.\n    const faceVertexCounts = reader.loadUInt8Array(numFaces)\n    const offsetRange = reader.loadSInt32Vec2()\n    const bytes = reader.loadUInt8()\n    let faceVertexIndexDeltas\n    if (bytes == 1) faceVertexIndexDeltas = reader.loadUInt8Array()\n    else if (bytes == 2) faceVertexIndexDeltas = reader.loadUInt16Array()\n    else if (bytes == 4) faceVertexIndexDeltas = reader.loadUInt32Array()\n\n    // ///////////////////////////////////////////////////\n    // Note: The Mesh compression system needs a thorough review.\n    // The C++ classes are not storing face indices in a sorted manner.\n    // So quads precede triangles in the indexing, which isn't supposed to happen.\n    // We should force the C++ code to store quads and triangles in order.\n    // e.g. implement the 'addFace' method in C++ so it automatically does this.\n\n    let numFaceVerts = 3\n    let offset = 0\n    const faceOffsetsByCount = this.__faceCounts.map((fc, index) => {\n      const result = offset\n      offset += fc * numFaceVerts\n      numFaceVerts++\n      return result\n    })\n\n    let srcOffset = 0\n    let prevCount = 0\n    const faceOffsets = []\n    for (let faceIndex = 0; faceIndex < numFaces; faceIndex++) {\n      const fc = faceVertexCounts[faceIndex]\n      const offset = faceOffsetsByCount[fc]\n      const count = fc + 3\n      faceOffsets[faceIndex] = offset\n      for (let j = 0; j < count; j++) {\n        const srcFaceVertex = srcOffset + j\n        const faceVertex = offset + j\n        const delta = faceVertexIndexDeltas[srcFaceVertex] + offsetRange.x\n        if (faceIndex == 0) this.__faceVertexIndices[faceVertex] = delta\n        else {\n          let prevFaceVertex = faceOffsets[faceIndex - 1]\n          prevFaceVertex += j < prevCount ? j : prevCount - 1\n          this.__faceVertexIndices[faceVertex] = this.__faceVertexIndices[prevFaceVertex] + delta\n        }\n      }\n      srcOffset += count\n      faceOffsetsByCount[fc] += count\n      prevCount = count\n    }\n\n    if (!this.hasVertexAttribute('normals')) {\n      this.computeVertexNormals()\n    }\n\n    // this.computeVertexNormals();\n    this.emit('geomDataChanged', {})\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    if (!context || !context.skipTopology) {\n      j.faceCounts = Array.from(this.__faceCounts)\n      j.faceVertexIndices = Array.from(this.__faceVertexIndices)\n    }\n\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * e.g. to load data into the mesh class, provide a json structure similar to the following.\n   * Note: faceCounts is an array of count values, starting with the number of triangles, then the number of quads. See #setFaceCounts\n   * The faceVertexIndices array should also be sorted to contain all the triangles first, followed by the quads, and then the pentagons etc..\n   * ```json\n   * // This code will define a mesh made up of 2 triangles and then a quad.\n   * const mesh = new Mesh()\n   * mesh.fromJSON({\n   *   faceCounts:[2, 1],\n   *   faceVertexIndices: [0, 1, 2, 0, 2, 3, 3, 2, 4, 5],\n   *   numVertices: 6,\n   *   vertexAttributes: {\n   *     positions: {\n   *       dataType: 'Vec3'\n   *       defaultScalarValue: 0.0,\n   *       data: [0,0,0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0, 2, 0, 0]\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n    if (j.faceCounts) this.__faceCounts = j.faceCounts\n    if (j.faceVertexIndices) this.__faceVertexIndices = Uint32Array.from(j.faceVertexIndices)\n  }\n}\n\nRegistry.register('Mesh', Mesh)\n\nexport { Mesh }\n","import { Box3 } from '../../Math/index'\nimport { EventEmitter } from '../../Utilities/EventEmitter.js'\nimport { Registry } from '../../Registry'\n\n/** ProxyGeometries are pupulated from data unpacked using a webworker while loading zcad files.\n * These geometries represent readonly geometries with very basic topologies.\n * @extends EventEmitter\n * @private\n */\nclass BaseProxy extends EventEmitter {\n  /**\n   * Create a base proxy.\n   * @param {any} data - The data value.\n   */\n  constructor(data) {\n    super()\n    this.name = data.name\n    this.__buffers = data.geomBuffers\n    if (this.__buffers.attrBuffers) {\n      // eslint-disable-next-line guard-for-in\n      for (const attrName in this.__buffers.attrBuffers) {\n        const attrData = this.__buffers.attrBuffers[attrName]\n        const dataType = Registry.getBlueprint(attrData.dataType)\n        attrData.dataType = dataType\n      }\n    }\n\n    this.boundingBox = new Box3()\n    this.boundingBox.p0.__data = data.bbox.p0.__data\n    this.boundingBox.p1.__data = data.bbox.p1.__data\n\n    this.__metaData = new Map()\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  getNumVertices() {\n    return this.__buffers.numVertices\n  }\n\n  /**\n   * Returns the bounding box for geometry.\n   * @return {Vec3} - The return value.\n   */\n  getBoundingBox() {\n    return this.boundingBox\n  }\n\n  /**\n   * The genBuffers method.\n   * @return {any} - The return value.\n   */\n  genBuffers() {\n    return this.__buffers\n  }\n\n  // ////////////////////////////////////////\n  // Metadata\n\n  /**\n   * The getMetadata method.\n   * @param {string} key - The key value.\n   * @return {any} - The return value.\n   */\n  getMetadata(key) {\n    return this.__metaData.get(key)\n  }\n\n  /**\n   * The hasMetadata method.\n   * @param {string} key - The key value.\n   * @return {any} - The return value.\n   */\n  hasMetadata(key) {\n    return this.__metaData.has(key)\n  }\n\n  /**\n   * The setMetadata method.\n   * @param {string} key - The key value.\n   * @param {any} metaData - The metaData value.\n   */\n  setMetadata(key, metaData) {\n    this.__metaData.set(key, metaData)\n  }\n\n  /**\n   * Removes metadata for a given key.\n   *\n   * @param {string} key - The key value.\n   */\n  deleteMetadata(key) {\n    this.__metaData.delete(key)\n  }\n}\n\n/** Class representing a points proxy.\n * @extends BaseProxy\n * @private\n */\nclass PointsProxy extends BaseProxy {\n  /**\n   * Create a points proxy.\n   * @param {any} data - The data value.\n   */\n  constructor(data) {\n    super(data)\n  }\n}\n\n/** Class representing a lines proxy.\n * @extends BaseProxy\n * @private\n */\nclass LinesProxy extends BaseProxy {\n  /**\n   * Create a lines proxy.\n   * @param {any} data - The data value.\n   */\n  constructor(data) {\n    super(data)\n  }\n\n  /**\n   * Returns the number line segments in this lines proxy geometry\n   *\n   * @return {number} - The return value.\n   */\n  getNumLineSegments() {\n    return this.__buffers.indices.length / 2\n  }\n}\n\n/** Class representing a mesh proxy.\n * @extends BaseProxy\n * @private\n */\nclass MeshProxy extends BaseProxy {\n  /**\n   * Create a mesh proxy.\n   * @param {any} data - The data value.\n   */\n  constructor(data) {\n    super(data)\n  }\n\n  /**\n   * Returns the number of triangles in this mesh proxy geometry.\n   *\n   * @return {number} - The return value.\n   */\n  getNumTriangles() {\n    return this.__buffers.indices.length / 3\n  }\n}\n\nexport { BaseProxy, PointsProxy, LinesProxy, MeshProxy }\n","import { Points } from '../Points'\n\n/**\n * Base Class for procedural points generated by mathematical functions.\n *\n * @extends {Points}\n */\nclass ProceduralPoints extends Points {\n  /**\n   * Creates an instance of ProceduralPoints.\n   */\n  constructor() {\n    super()\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n\n    // Parameters that specify topology settings.\n    // Add parameters to this list to ensure the topology is recomputed.\n    // All other param changes will only trigger a resize\n    this.topologyParams = []\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n    super.clear()\n  }\n\n  /**\n   * If the topology of the geometry has changed. For example, there are more or less vertices,\n   * then the rebuild method must be called to re-generated the topology\n   */\n  rebuild() {}\n\n  /**\n   * If the dimensions of the geometry has changed. For example, a size parameter has changed,\n   * then the resize method must be called to re-generated the vertex attributes\n   */\n  resize() {}\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   * @param {object} event - The event object emitted by the parameter.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    this.setBoundingBoxDirty()\n    if (this.topologyParams.includes(event.param.getName())) {\n      this.dirtyTopology = true\n      this.emit('geomDataTopologyChanged')\n    } else {\n      this.dirtyVertices = true\n      this.setBoundingBoxDirty()\n      // Let the renderer know that the geometry has changed and must be re-uploaded to the GPU.\n      this.emit('geomDataChanged')\n    }\n\n    super.__parameterValueChanged(event)\n  }\n\n  /**\n   * If the Procedural geometry is out of date, for example if a parameter has been changed,\n   * this method explicitly forces the geometry to be recomputed.\n   */\n  update() {\n    if (this.dirtyTopology) {\n      this.dirtyTopology = false\n      this.dirtyVertices = false\n      this.rebuild()\n    } else if (this.dirtyVertices) {\n      this.dirtyVertices = false\n      this.resize()\n    }\n  }\n\n  /**\n   * Returns the bounding box for geometry.\n   * @return {Vec3} - The return value.\n   */\n  getBoundingBox() {\n    this.update()\n    return super.getBoundingBox()\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  getNumVertices() {\n    this.update()\n    return super.getNumVertices()\n  }\n\n  // ////////////////////////////////////////\n  // Rendering\n\n  /**\n   * The genBuffers method.\n   * @param {object} opts - The opts value.\n   * @return {object} - The return value.\n   */\n  genBuffers(opts) {\n    this.update()\n    return super.genBuffers(opts)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    if (!context) context = {}\n    context.skipTopology = true\n    context.skipAttributes = ['positions', 'normals', 'texCoords']\n\n    const j = super.toJSON(context)\n\n    context.skipTopology = false\n    context.skipAttributes = []\n    return j\n  }\n}\n\nexport { ProceduralPoints }\n","import { Lines } from '../Lines'\n\n/**\n * Base Class for procedural lines generated by mathematical functions.\n *\n * @extends {Lines}\n */\nclass ProceduralLines extends Lines {\n  /**\n   * Creates an instance of ProceduralLines.\n   */\n  constructor() {\n    super()\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n\n    // Parameters that specify topology settings.\n    // Add parameters to this list to ensure the topology is recomputed.\n    // All other param changes will only trigger a resize\n    this.topologyParams = []\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n    super.clear()\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {}\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {}\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   * @param {object} event - The event object emitted by the parameter.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    this.setBoundingBoxDirty()\n    if (this.topologyParams.includes(event.param.getName())) {\n      this.dirtyTopology = true\n      this.emit('geomDataTopologyChanged')\n    } else {\n      this.dirtyVertices = true\n      this.setBoundingBoxDirty()\n      // Let the renderer know that the geometry has changed and must be re-uploaded to the GPU.\n      this.emit('geomDataChanged')\n    }\n    super.__parameterValueChanged(event)\n  }\n\n  /**\n   * If the Procedural geometry is out of date, for example if a parameter has been changed,\n   * this method explicitly forces the geometry to be recomputed.\n   */\n  update() {\n    if (this.dirtyTopology) {\n      this.dirtyTopology = false\n      this.dirtyVertices = false\n      this.rebuild()\n    } else if (this.dirtyVertices) {\n      this.dirtyVertices = false\n      this.resize()\n    }\n  }\n\n  /**\n   * Returns the bounding box for geometry.\n   * @return {Vec3} - The return value.\n   */\n  getBoundingBox() {\n    this.update()\n    return super.getBoundingBox()\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  getNumVertices() {\n    this.update()\n    return super.getNumVertices()\n  }\n\n  // ////////////////////////////////////////\n  // Rendering\n\n  /**\n   * The genBuffers method.\n   * @param {object} opts - The opts value.\n   * @return {object} - The return value.\n   */\n  genBuffers(opts) {\n    this.update()\n    return super.genBuffers(opts)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    if (!context) context = {}\n    context.skipTopology = true\n    context.skipAttributes = ['positions', 'normals', 'texCoords']\n\n    const j = super.toJSON(context)\n\n    context.skipTopology = false\n    context.skipAttributes = []\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n  }\n}\n\nexport { ProceduralLines }\n","import { Mesh } from '../Mesh'\n\n/**\n * Base Class for procedural meshes generated by mathematical functions.\n *\n * @extends {Mesh}\n */\nclass ProceduralMesh extends Mesh {\n  /**\n   * Creates an instance of ProceduralMesh.\n   */\n  constructor() {\n    super()\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n\n    // Parameters that specify topology settings.\n    // Add parameters to this list to ensure the topology is recomputed.\n    // All other param changes will only trigger a resize\n    this.topologyParams = []\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.dirtyTopology = true\n    this.dirtyVertices = true\n    super.clear()\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {}\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {}\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   * @param {object} event - The event object emitted by the parameter.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    this.setBoundingBoxDirty()\n    if (this.topologyParams.includes(event.param.getName())) {\n      this.dirtyTopology = true\n      this.emit('geomDataTopologyChanged')\n    } else {\n      this.dirtyVertices = true\n      this.setBoundingBoxDirty()\n      // Let the renderer know that the geometry has changed and must be re-uploaded to the GPU.\n      this.emit('geomDataChanged')\n    }\n    super.__parameterValueChanged(event)\n  }\n\n  /**\n   * If the Procedural geometry is out of date, for example if a parameter has been changed,\n   * this method explicitly forces the geometry to be recomputed.\n   */\n  update() {\n    if (this.dirtyTopology) {\n      // Clear the topology so that vertex normals can be recomputed.\n      this.vertexEdges = undefined\n      this.dirtyTopology = false\n      this.dirtyVertices = false\n      this.rebuild()\n    } else if (this.dirtyVertices) {\n      this.dirtyVertices = false\n      this.resize()\n    }\n  }\n\n  /**\n   * Returns the bounding box for geometry.\n   * @return {Vec3} - The return value.\n   */\n  getBoundingBox() {\n    this.update()\n    return super.getBoundingBox()\n  }\n\n  /**\n   * Returns the number of vertex attributes.\n   *\n   * @return {number} - The return value.\n   */\n  getNumVertices() {\n    this.update()\n    return super.getNumVertices()\n  }\n\n  /**\n   * Compute vertex normals.\n   * @param {number} hardAngle - The hardAngle value in radians.\n   * @return {VertexAttribute} - The return value.\n   */\n  computeVertexNormals(hardAngle = 1.0 /* radians */) {\n    this.update()\n    return super.computeVertexNormals(hardAngle)\n  }\n\n  /**\n   * The computeHardEdgesIndices method.\n   * @param {number} hardAngle - The hardAngle value in radians.\n   * @return {array} - The return value.\n   */\n  computeHardEdgesIndices(hardAngle = 1.0) {\n    this.update()\n    return super.computeHardEdgesIndices(hardAngle)\n  }\n  // ////////////////////////////////////////\n  // Rendering\n\n  /**\n   * The genBuffers method.\n   * @param {object} opts - The opts value.\n   * @return {object} - The return value.\n   */\n  genBuffers(opts) {\n    this.update()\n    return super.genBuffers(opts)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    if (!context) context = {}\n    context.skipTopology = true\n    context.skipAttributes = ['positions', 'normals', 'texCoords']\n\n    const j = super.toJSON(context)\n\n    context.skipTopology = false\n    context.skipAttributes = []\n    return j\n  }\n}\n\nexport { ProceduralMesh }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { ProceduralPoints } from './ProceduralPoints'\nimport { NumberParameter } from '../../Parameters/NumberParameter'\nimport { Registry } from '../../../Registry'\n\n/**\n * Represents an ordered grid of points along `X` and `Y` axes.\n *\n * ```\n * const pointGrid = new PointGrid(2.2, 1.5, 12, 12)\n * ```\n *\n * **Parameters**\n * * **X(`NumberParameter`):** Length of the grid along the `X` axis.\n * * **Y(`NumberParameter`):** Length of the grid along the `Y` axis.\n * * **XDivisions(`NumberParameter`):** Number of divisions along `X` axis\n * * **YDivisions(`NumberParameter`):** Number of divisions along `Y` axis\n * @extends {ProceduralPoints}\n */\nclass PointGrid extends ProceduralPoints {\n  /**\n   * Creates an instance of PointGrid.\n   *\n   * @param {number} [x=1.0] - The length of the point grid along the X axis.\n   * @param {number} [y=1.0] - The length of the point grid along the Y axis.\n   * @param {number} [xDivisions=1] - The number of divisions along the X axis.\n   * @param {number} [yDivisions=1] - The number of divisions along the Y axis.\n   * @param {boolean} [addTextureCoords=false] - The addTextureCoords value.\n   */\n  constructor(x = 1.0, y = 1.0, xDivisions = 1, yDivisions = 1, addTextureCoords = false) {\n    super()\n\n    if (isNaN(x) || isNaN(y) || isNaN(xDivisions) || isNaN(yDivisions)) throw new Error('Invalid geom args')\n    this.__x = this.addParameter(new NumberParameter('X', x))\n    this.__y = this.addParameter(new NumberParameter('Y', y))\n    this.__xDivisions = this.addParameter(new NumberParameter('XDivisions', xDivisions))\n    this.__yDivisions = this.addParameter(new NumberParameter('YDivisions', yDivisions))\n\n    if (addTextureCoords) this.addVertexAttribute('texCoords', Vec2)\n\n    this.topologyParams.push('XDivisions')\n    this.topologyParams.push('YDivisions')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const xCount = this.__xDivisions.getValue()\n    const yCount = this.__yDivisions.getValue()\n    this.setNumVertices(xCount * yCount)\n\n    const texCoords = this.getVertexAttribute('texCoords')\n    if (texCoords) {\n      for (let i = 0; i < yCount; i++) {\n        const y = i / (yCount - 1)\n        for (let j = 0; j < xCount; j++) {\n          const x = j / (xCount - 1)\n          texCoords.getValueRef(i * xCount + j).set(x, y)\n        }\n      }\n    }\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const xSize = this.__x.getValue()\n    const ySize = this.__y.getValue()\n    const xCount = this.__xDivisions.getValue()\n    const yCount = this.__yDivisions.getValue()\n    const positions = this.getVertexAttribute('positions')\n    for (let i = 0; i < yCount; i++) {\n      const y = (i / (yCount - 1) - 0.5) * ySize\n      for (let j = 0; j < xCount; j++) {\n        const x = (j / (xCount - 1) - 0.5) * xSize\n        positions.getValueRef(i * xCount + j).set(x, y, 0.0)\n      }\n    }\n  }\n}\n\nRegistry.register('PointGrid', PointGrid)\nexport { PointGrid }\n","import { ProceduralLines } from './ProceduralLines'\nimport { NumberParameter } from '../../Parameters/NumberParameter.js'\nimport { Registry } from '../../../Registry'\n\n/**\n * A class for generating a rectangle shape.\n *\n * ```\n * const rect = new Rect(1.5, 2.0)\n * ```\n *\n * **Parameters**\n * * **X(`NumberParameter`):** Length of the rectangle along the `X` axis.\n * * **Y(`NumberParameter`):** Length of the rectangle along the `Y` axis.\n *\n *\n * @extends {ProceduralLines}\n */\nclass Rect extends ProceduralLines {\n  /**\n   * Create a rect.\n   * @param {number} x - The length of the rect along the `X` axis.\n   * @param {number} y - The length of the rect along the `Y` axis.\n   */\n  constructor(x = 1.0, y = 1.0) {\n    super()\n\n    if (isNaN(x) || isNaN(y)) throw new Error('Invalid geom args')\n\n    this.__x = this.addParameter(new NumberParameter('X', x))\n    this.__y = this.addParameter(new NumberParameter('Y', y))\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    this.setNumVertices(4)\n    this.setNumSegments(4)\n    this.setSegmentVertexIndices(0, 0, 1)\n    this.setSegmentVertexIndices(1, 1, 2)\n    this.setSegmentVertexIndices(2, 2, 3)\n    this.setSegmentVertexIndices(3, 3, 0)\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const x = this.__x.getValue()\n    const y = this.__y.getValue()\n\n    const positions = this.getVertexAttribute('positions')\n    positions.getValueRef(0).set(-0.5 * x, -0.5 * y, 0.0)\n    positions.getValueRef(1).set(0.5 * x, -0.5 * y, 0.0)\n    positions.getValueRef(2).set(0.5 * x, 0.5 * y, 0.0)\n    positions.getValueRef(3).set(-0.5 * x, 0.5 * y, 0.0)\n  }\n}\n\nRegistry.register('Rect', Rect)\n\nexport { Rect }\n","import { NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralLines } from './ProceduralLines'\n\n/**\n * A class for generating a circle shape using line segments.\n *\n * ```\n * const circle = new Circle(2.2, 12)\n * ```\n *\n * **Parameters**\n * * **Radius(`NumberParameter`):** Radius of the circle.\n * * **Angle(`NumberParameter`):** Number of segments used to build the circle.\n * * **Sides(`NumberParameter`):** Segments angle in radiants.\n *\n * @extends {ProceduralLines}\n */\nclass Circle extends ProceduralLines {\n  /**\n   * Creates an instance of Circle.\n   * @param {number} radius - The radius of the circle.\n   * @param {number} sides - The number of segments.\n   * @param {number} angle - Arc segments angle(radians)\n   */\n  constructor(radius = 1.0, sides = 32, angle = Math.PI * 2) {\n    super()\n\n    if (isNaN(radius) || isNaN(sides)) throw new Error('Invalid geom args')\n\n    this.__radius = this.addParameter(new NumberParameter('Radius', radius))\n    this.__angle = this.addParameter(new NumberParameter('Angle', angle))\n    this.__sides = this.addParameter(new NumberParameter('Sides', sides >= 3 ? sides : 3, [3, 200], 1))\n    this.topologyParams.push('Sides')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const segs = this.__sides.getValue()\n    this.setNumVertices(segs)\n    const arc = this.__angle.getValue() < Math.PI * 2\n    if (arc) this.setNumSegments(segs - 1)\n    else this.setNumSegments(segs)\n    for (let i = 0; i < (arc ? segs - 1 : segs); i++) this.setSegmentVertexIndices(i, i, (i + 1) % segs)\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const radius = this.__radius.getValue()\n    const segs = this.__sides.getValue()\n    const step = this.__angle.getValue() / segs\n    const positions = this.getVertexAttribute('positions')\n    for (let i = 0; i < segs; i++) {\n      positions.getValueRef(i).set(Math.cos(step * i) * radius, Math.sin(step * i) * radius, 0.0)\n    }\n  }\n}\n\nRegistry.register('Circle', Circle)\nexport { Circle }\n","import { ProceduralLines } from './ProceduralLines'\nimport { NumberParameter } from '../../Parameters/NumberParameter.js'\nimport { Registry } from '../../../Registry'\n\n/**\n * A class for generating a cross shape, drawing a line on the `X,Y,Z` axes.\n * The axis line length is the `size` you specify, but the middle of the line is positioned in the coordinate `(0, 0, 0)` .\n * Meaning that half of the line goes negative and half goes positive.\n *\n * ```\n * const cross = new Cross(1.5)\n * ```\n *\n * **Parameters**\n * * **Size(`NumberParameter`):** Specifies the size of the cross.\n *\n * @extends {ProceduralLines}\n */\nclass Cross extends ProceduralLines {\n  /**\n   * Create a cross.\n   * @param {number} size - The size of the cross.\n   */\n  constructor(size = 1.0) {\n    super()\n\n    if (isNaN(size)) throw new Error('Invalid geom args')\n\n    this.__sizeParam = this.addParameter(new NumberParameter('Size', size))\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    this.setNumVertices(6)\n    this.setNumSegments(3)\n    this.setSegmentVertexIndices(0, 0, 1)\n    this.setSegmentVertexIndices(1, 2, 3)\n    this.setSegmentVertexIndices(2, 4, 5)\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const size = this.__sizeParam.getValue()\n    const positions = this.getVertexAttribute('positions')\n    positions.getValueRef(0).set(-0.5 * size, 0, 0)\n    positions.getValueRef(1).set(0.5 * size, 0, 0)\n    positions.getValueRef(2).set(0, 0.5 * size, 0)\n    positions.getValueRef(3).set(0, -0.5 * size, 0)\n    positions.getValueRef(4).set(0, 0, 0.5 * size)\n    positions.getValueRef(5).set(0, 0, -0.5 * size)\n  }\n}\n\nRegistry.register('Cross', Cross)\n\nexport { Cross }\n","import { NumberParameter } from '../../Parameters/NumberParameter.js'\nimport { Registry } from '../../../Registry'\nimport { ProceduralLines } from './ProceduralLines'\n\n/**\n * A class for generating a lines cuboid shape(Without faces).\n *\n * **Parameters**\n * * **X(`NumberParameter`):** Length of the line cuboid along the `X` axis\n * * **Y(`NumberParameter`):** Length of the line cuboid along the `Y` axis\n * * **Z(`NumberParameter`):** Length of the line cuboid along the `Z` axis\n * * **BaseZAtZero(`NumberParameter`):** Property to start or not `Z` axis from position `0.\n *\n * @extends {ProceduralLines}\n */\nclass LinesCuboid extends ProceduralLines {\n  /**\n   * Create a lines cuboid.\n   * @param {number} x - The length of the line cuboid along the X axis.\n   * @param {number} y - The length of the line cuboid along the Y axis.\n   * @param {number} z - The length of the line cuboid along the Z axis.\n   * @param {boolean} baseZAtZero - The baseZAtZero value.\n   */\n  constructor(x = 1.0, y = 1.0, z = 1.0, baseZAtZero = false) {\n    super()\n\n    this.__x = this.addParameter(new NumberParameter('X', x))\n    this.__y = this.addParameter(new NumberParameter('Y', y))\n    this.__z = this.addParameter(new NumberParameter('Z', z))\n\n    this.__baseZAtZero = this.addParameter(new NumberParameter('BaseZAtZero', baseZAtZero))\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    this.setNumVertices(8)\n    this.setNumSegments(12)\n    this.setSegmentVertexIndices(0, 0, 1)\n    this.setSegmentVertexIndices(1, 1, 2)\n    this.setSegmentVertexIndices(2, 2, 3)\n    this.setSegmentVertexIndices(3, 3, 0)\n\n    this.setSegmentVertexIndices(4, 4, 5)\n    this.setSegmentVertexIndices(5, 5, 6)\n    this.setSegmentVertexIndices(6, 6, 7)\n    this.setSegmentVertexIndices(7, 7, 4)\n\n    this.setSegmentVertexIndices(8, 0, 4)\n    this.setSegmentVertexIndices(9, 1, 5)\n    this.setSegmentVertexIndices(10, 2, 6)\n    this.setSegmentVertexIndices(11, 3, 7)\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   *\n   * @private\n   */\n  resize() {\n    const x = this.__x.getValue()\n    const y = this.__y.getValue()\n    const z = this.__z.getValue()\n    const baseZAtZero = this.__baseZAtZero.getValue()\n\n    const positions = this.getVertexAttribute('positions')\n    let zOff = 0.5\n    if (baseZAtZero) zOff = 1.0\n    positions.getValueRef(0).set(0.5 * x, -0.5 * y, zOff * z)\n    positions.getValueRef(1).set(0.5 * x, 0.5 * y, zOff * z)\n    positions.getValueRef(2).set(-0.5 * x, 0.5 * y, zOff * z)\n    positions.getValueRef(3).set(-0.5 * x, -0.5 * y, zOff * z)\n\n    zOff = -0.5\n    if (baseZAtZero) zOff = 0.0\n    positions.getValueRef(4).set(0.5 * x, -0.5 * y, zOff * z)\n    positions.getValueRef(5).set(0.5 * x, 0.5 * y, zOff * z)\n    positions.getValueRef(6).set(-0.5 * x, 0.5 * y, zOff * z)\n    positions.getValueRef(7).set(-0.5 * x, -0.5 * y, zOff * z)\n  }\n}\n\nRegistry.register('LinesCuboid', LinesCuboid)\nexport { LinesCuboid }\n","import { BooleanParameter, NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralLines } from './ProceduralLines'\n\n/**\n * Represents a network of lines that cross each other to form a series of squares or rectangles.\n *\n * ```\n * const grid = new Grid(5, 5, 50, 50, true)\n * ```\n *\n * **Parameters**\n * * **X(`NumberParameter`):** Length of the grid along the `X` axis.\n * * **Y(`NumberParameter`):** Length of the grid along the `Y` axis.\n * * **XDivisions(`NumberParameter`):** Number of divisions along `X` axis\n * * **YDivisions(`NumberParameter`):** Number of divisions along `Y` axis\n * * **SkipCenterLines(`BooleanParameter`):** Property that indicates whether to display the center grid lines or not\n *\n * @extends {ProceduralLines}\n */\nclass Grid extends ProceduralLines {\n  /**\n   * Create a grid.\n   * @param {number} x - The length of the grid along the `X` axis.\n   * @param {number} y - The length of the grid along the `Y` axis.\n   * @param {number} xDivisions - The number of divisions along `X` axis.\n   * @param {number} yDivisions - The number of divisions along `Y` axis.\n   * @param {boolean} skipCenterLines - A boolean indicating whether to display the center grid lines or not.\n   */\n  constructor(x = 1.0, y = 1.0, xDivisions = 10, yDivisions = 10, skipCenterLines = false) {\n    super()\n\n    if (isNaN(x) || isNaN(y) || isNaN(xDivisions) || isNaN(yDivisions)) throw new Error('Invalid geom args')\n\n    this.__xParam = this.addParameter(new NumberParameter('X', x))\n    this.__yParam = this.addParameter(new NumberParameter('Y', y))\n    this.__xDivisionsParam = this.addParameter(new NumberParameter('XDivisions', xDivisions))\n    this.__yDivisionsParam = this.addParameter(new NumberParameter('YDivisions', yDivisions))\n    this.__skipCenterLinesParam = this.addParameter(new BooleanParameter('SkipCenterLines', skipCenterLines))\n\n    this.topologyParams.push('XDivisions')\n    this.topologyParams.push('YDivisions')\n    this.topologyParams.push('SkipCenterLines')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const xDivisions = this.__xDivisionsParam.getValue()\n    const yDivisions = this.__yDivisionsParam.getValue()\n\n    const skipCenterLines = this.__skipCenterLinesParam.getValue() && xDivisions % 2 == 0 && yDivisions % 2 == 0\n    this.setNumVertices((xDivisions + yDivisions + 2 - (skipCenterLines ? 1 : 0)) * 2)\n    this.setNumSegments(xDivisions + yDivisions + 2 - (skipCenterLines ? 1 : 0))\n    let idx = 0\n    for (let i = 0; i <= xDivisions; i++) {\n      if (skipCenterLines && i == xDivisions / 2) continue\n      const v0 = idx * 2\n      const v1 = idx * 2 + 1\n      this.setSegmentVertexIndices(idx, v0, v1)\n      idx++\n    }\n    for (let i = 0; i <= yDivisions; i++) {\n      if (skipCenterLines && i == xDivisions / 2) continue\n      const v0 = idx * 2\n      const v1 = idx * 2 + 1\n      this.setSegmentVertexIndices(idx, v0, v1)\n      idx++\n    }\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const positions = this.getVertexAttribute('positions')\n    const xDivisions = this.__xDivisionsParam.getValue()\n    const yDivisions = this.__yDivisionsParam.getValue()\n    const xSize = this.__xParam.getValue()\n    const ySize = this.__yParam.getValue()\n\n    const skipCenterLines = this.__skipCenterLinesParam.getValue() && xDivisions % 2 == 0 && yDivisions % 2 == 0\n    let idx = 0\n    for (let i = 0; i <= xDivisions; i++) {\n      if (skipCenterLines && i == xDivisions / 2) continue\n      const v0 = idx * 2\n      const v1 = idx * 2 + 1\n      const x = (i / xDivisions - 0.5) * xSize\n      positions.getValueRef(v0).set(x, -0.5 * ySize, 0.0)\n      positions.getValueRef(v1).set(x, 0.5 * ySize, 0.0)\n      idx++\n    }\n    for (let i = 0; i <= yDivisions; i++) {\n      if (skipCenterLines && i == xDivisions / 2) continue\n      const v0 = idx * 2\n      const v1 = idx * 2 + 1\n      const y = (i / yDivisions - 0.5) * ySize\n      positions.getValueRef(v0).set(-0.5 * xSize, y, 0.0)\n      positions.getValueRef(v1).set(0.5 * xSize, y, 0.0)\n      idx++\n    }\n  }\n}\n\nRegistry.register('Grid', Grid)\n\nexport { Grid }\n","/* eslint-disable no-unused-vars */\nimport { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { BooleanParameter, NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * Represents a cone geometry.\n *\n * ```\n * const cone = new Cone(1.2, 4.0)\n * ```\n *\n * **Parameters**\n * * **Radius(`NumberParameter`):** Specifies the radius of the base of the cone.\n * * **Height(`NumberParameter`):** Specifies the height of the cone.\n * * **Detail(`NumberParameter`):** Specifies the number of subdivisions around the `Z` axis.\n * * **Cap(`BooleanParameter`):** Specifies whether the base of the cone is capped or open.\n *\n * @extends {ProceduralMesh}\n */\nclass Cone extends ProceduralMesh {\n  /**\n   * Create a cone.\n   * @param {number} radius - The radius of the base of the cone.\n   * @param {number} height - The height of the cone.\n   * @param {number} detail - The detail of the cone.\n   * @param {boolean} [cap=true] -  A boolean indicating whether the base of the cone is capped or open.\n   * @param {boolean} [addNormals=true] - Compute vertex normals for the geometry\n   * @param {boolean} [addTextureCoords=true] - Compute texture coordinates for the geometry\n   */\n  constructor(radius = 0.5, height = 1.0, detail = 32, cap = true, addNormals = true, addTextureCoords = true) {\n    super()\n\n    if (isNaN(radius) || isNaN(height) || isNaN(detail)) throw new Error('Invalid geom args')\n\n    this.__radiusParam = this.addParameter(new NumberParameter('Radius', radius))\n    this.__heightParam = this.addParameter(new NumberParameter('Height', height))\n    this.__detailParam = this.addParameter(new NumberParameter('Detail', detail >= 3 ? detail : 3, [3, 200], 1))\n    this.__capParam = this.addParameter(new BooleanParameter('Cap', cap))\n\n    if (addNormals) this.addVertexAttribute('normals', Vec3)\n    if (addTextureCoords) this.addVertexAttribute('texCoords', Vec2)\n\n    this.topologyParams.push('Detail')\n    this.topologyParams.push('Cap')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const nbSides = this.__detailParam.getValue()\n    const radius = this.__radiusParam.getValue()\n    const height = this.__heightParam.getValue()\n    const cap = this.__capParam.getValue()\n    let numVertices = nbSides + 1\n    if (cap) {\n      numVertices += 1\n    }\n    this.setNumVertices(numVertices)\n    const tipPoint = nbSides\n    const basePoint = nbSides + 1\n\n    // ////////////////////////////\n    // Set Vertex Positions\n    const positions = this.getVertexAttribute('positions')\n\n    positions.getValueRef(tipPoint).set(0.0, 0.0, height)\n    for (let i = 0; i < nbSides; i++) {\n      const theta = -((i / nbSides) * 2.0 * Math.PI)\n      positions.getValueRef(i).set(radius * Math.cos(theta), radius * Math.sin(theta), 0.0)\n    }\n    if (cap) {\n      positions.getValueRef(basePoint).set(0.0, 0.0, 0.0)\n    }\n\n    // ////////////////////////////\n    // Build the topology\n    this.setFaceCounts([nbSides + (cap ? nbSides : 0)])\n    for (let i = 0; i < nbSides; i++) {\n      const j = (i + 1) % nbSides\n      this.setFaceVertexIndices(i, [j, i, tipPoint])\n    }\n    if (cap) {\n      for (let i = 0; i < nbSides; i++) {\n        const j = (i + 1) % nbSides\n        this.setFaceVertexIndices(nbSides + i, [i, j, basePoint])\n      }\n    }\n\n    // ////////////////////////////\n    // setUVs\n    const texCoords = this.getVertexAttribute('texCoords')\n    if (texCoords) {\n      // Now set the attribute values\n      let tri = 0\n      for (let i = 0; i < nbSides; i++) {\n        texCoords.setFaceVertexValue(tri, 0, new Vec2((i + 1) / nbSides, 0.0))\n        texCoords.setFaceVertexValue(tri, 1, new Vec2(i / nbSides, 0.0))\n        texCoords.setFaceVertexValue(tri, 2, new Vec2((i + 0.5) / nbSides, 1.0))\n      }\n      if (cap) {\n        for (let i = 0; i < nbSides; i++) {\n          texCoords.setFaceVertexValue(tri, 0, new Vec2(i / nbSides, 0.0))\n          texCoords.setFaceVertexValue(tri, 1, new Vec2((i + 1) / nbSides, 0.0))\n          texCoords.setFaceVertexValue(tri, 2, new Vec2((i + 0.5) / nbSides, 1.0))\n          tri++\n        }\n      }\n    }\n\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const nbSides = this.__detailParam.getValue()\n    const radius = this.__radiusParam.getValue()\n    const height = this.__heightParam.getValue()\n    const cap = this.__capParam.getValue()\n\n    const tipPoint = nbSides\n    const basePoint = nbSides + 1\n\n    const positions = this.getVertexAttribute('positions')\n    positions.getValueRef(tipPoint).set(0.0, 0.0, height)\n    for (let i = 0; i < nbSides; i++) {\n      const theta = -((i / nbSides) * 2.0 * Math.PI)\n      positions.getValueRef(i).set(radius * Math.cos(theta), radius * Math.sin(theta), 0.0)\n    }\n    if (this.__cap) {\n      positions.getValueRef(basePoint).set(0.0, 0.0, 0.0)\n    }\n    const normals = this.getVertexAttribute('normals')\n    if (normals) {\n      this.computeVertexNormals()\n    }\n  }\n}\n\nRegistry.register('Cone', Cone)\nexport { Cone }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { BooleanParameter, NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * A class for generating a cuboid geometry.\n *\n * **Parameters**\n * * **x(`NumberParameter`):** Length of the line cuboid along the `X` axis\n * * **y(`NumberParameter`):** Length of the line cuboid along the `Y` axis\n * * **z(`NumberParameter`):** Length of the line cuboid along the `Z` axis\n * * **BaseZAtZero(`NumberParameter`):** Property to start or not `Z` axis from position `0.\n *\n * @extends {ProceduralMesh}\n */\nclass Cuboid extends ProceduralMesh {\n  /**\n   * Create a cuboid.\n   * @param {number} x - The length of the cuboid along the X axis.\n   * @param {number} y - The length of the cuboid along the Y axis.\n   * @param {number} z - The length of the cuboid along the Z axis.\n   * @param {boolean} baseZAtZero - The baseZAtZero value.\n   */\n  constructor(x = 1.0, y = 1.0, z = 1.0, baseZAtZero = false, texCoords = true, normals = true) {\n    super()\n\n    if (isNaN(x) || isNaN(y) || isNaN(z)) throw new Error('Invalid geom args')\n\n    this.__xParam = this.addParameter(new NumberParameter('X', x))\n    this.__yParam = this.addParameter(new NumberParameter('Y', y))\n    this.__zParam = this.addParameter(new NumberParameter('Z', z))\n    this.__baseZAtZeroParam = this.addParameter(new BooleanParameter('BaseZAtZero', baseZAtZero))\n\n    this.setFaceCounts([0, 6])\n    this.setFaceVertexIndices(0, [0, 1, 2, 3])\n    this.setFaceVertexIndices(1, [7, 6, 5, 4])\n\n    this.setFaceVertexIndices(2, [1, 0, 4, 5])\n    this.setFaceVertexIndices(3, [3, 2, 6, 7])\n\n    this.setFaceVertexIndices(4, [0, 3, 7, 4])\n    this.setFaceVertexIndices(5, [2, 1, 5, 6])\n    this.setNumVertices(8)\n    if (texCoords) this.addVertexAttribute('texCoords', Vec2)\n    if (normals) this.addVertexAttribute('normals', Vec3)\n  }\n\n  /**\n   * Setter for the size of the cuboid.\n   *\n   * @param {number} x - The length of the edges along the X axis.\n   * @param {number} y - The length of the edges along the Y axis.\n   * @param {number} z - The length of the edges along the Z axis.\n   */\n  setSize(x, y, z) {\n    this.__xParam.setValue(x)\n    this.__yParam.setValue(y)\n    this.__zParam.setValue(z)\n  }\n\n  /**\n   * Setter for the base size of the cuboid.\n   *\n   * @param {number} x - The length of the edges along the X axis.\n   * @param {number} y - The length of the edges along the Y axis.\n   */\n  setBaseSize(x, y) {\n    this.__xParam.setValue(x)\n    this.__yParam.setValue(y)\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const normals = this.getVertexAttribute('normals')\n    if (normals) {\n      for (let i = 0; i < 6; i++) {\n        let normal\n        switch (i) {\n          case 0:\n            normal = new Vec3(0, 0, 1)\n            break\n          case 1:\n            normal = new Vec3(0, 0, -1)\n            break\n          case 2:\n            normal = new Vec3(1, 0, 0)\n            break\n          case 3:\n            normal = new Vec3(-1, 0, 0)\n            break\n          case 4:\n            normal = new Vec3(0, -1, 0)\n            break\n          case 5:\n            normal = new Vec3(0, 1, 0)\n            break\n        }\n        normals.setFaceVertexValue(i, 0, normal)\n        normals.setFaceVertexValue(i, 1, normal)\n        normals.setFaceVertexValue(i, 2, normal)\n        normals.setFaceVertexValue(i, 3, normal)\n      }\n    }\n    const texCoords = this.getVertexAttribute('texCoords')\n    if (texCoords) {\n      for (let i = 0; i < 6; i++) {\n        texCoords.setFaceVertexValue(i, 0, new Vec2(0, 0))\n        texCoords.setFaceVertexValue(i, 1, new Vec2(1, 0))\n        texCoords.setFaceVertexValue(i, 2, new Vec2(1, 1))\n        texCoords.setFaceVertexValue(i, 3, new Vec2(0, 1))\n      }\n    }\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const x = this.__xParam.getValue()\n    const y = this.__yParam.getValue()\n    const z = this.__zParam.getValue()\n    const baseZAtZero = this.__baseZAtZeroParam.getValue()\n    let zoff = 0.5\n    const positions = this.getVertexAttribute('positions')\n    if (baseZAtZero) zoff = 1.0\n    positions.getValueRef(0).set(0.5 * x, -0.5 * y, zoff * z)\n    positions.getValueRef(1).set(0.5 * x, 0.5 * y, zoff * z)\n    positions.getValueRef(2).set(-0.5 * x, 0.5 * y, zoff * z)\n    positions.getValueRef(3).set(-0.5 * x, -0.5 * y, zoff * z)\n\n    zoff = -0.5\n    if (baseZAtZero) zoff = 0.0\n    positions.getValueRef(4).set(0.5 * x, -0.5 * y, zoff * z)\n    positions.getValueRef(5).set(0.5 * x, 0.5 * y, zoff * z)\n    positions.getValueRef(6).set(-0.5 * x, 0.5 * y, zoff * z)\n    positions.getValueRef(7).set(-0.5 * x, -0.5 * y, zoff * z)\n  }\n}\n\nRegistry.register('Cuboid', Cuboid)\n\nexport { Cuboid }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { BooleanParameter, NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * A class for generating a cylinder geometry. It is very much like a cuboid but with `N` number of sides.\n *\n * ```\n * const cylinder = new Cylinder(1.5, 2.0, 6)\n * ```\n *\n * **Parameters**\n * * **Radius(`NumberParameter`):** Specifies the radius of the cylinder.\n * * **Height(`NumberParameter`):** Specifies the height of the cone.\n * * **Sides(`NumberParameter`):** Specifies the number of subdivisions around the `Z` axis.\n * * **Loops(`NumberParameter`):** Specifies the number of subdivisions(stacks) on the `Z` axis.\n * * **Caps(`BooleanParameter`):** Specifies whether the ends of the cylinder are capped or open.\n * * **BaseZAtZero(`BooleanParameter`):** Property to start or not `Z` axis from position `0.\n *\n * @extends {ProceduralMesh}\n */\nclass Cylinder extends ProceduralMesh {\n  /**\n   * Create a cylinder.\n   * @param {number} radius - The radius of the cylinder.\n   * @param {number} height - The height of the cylinder.\n   * @param {number} sides - The number of sides.\n   * @param {number} loops - The number of loops.\n   * @param {boolean} caps - A boolean indicating whether the ends of the cylinder are capped or open.\n   * @param {boolean} baseZAtZero - The baseZAtZero value.\n   */\n  constructor(radius = 0.5, height = 1.0, sides = 32, loops = 2, caps = true, baseZAtZero = false) {\n    super()\n\n    if (isNaN(radius) || isNaN(height) || isNaN(sides) || isNaN(loops)) throw new Error('Invalid geom args')\n\n    this.__radiusParam = this.addParameter(new NumberParameter('Radius', radius))\n    this.__heightParam = this.addParameter(new NumberParameter('Height', height))\n    this.__sidesParam = this.addParameter(new NumberParameter('Sides', sides >= 3 ? sides : 3, [3, 200], 1))\n    this.__loopsParam = this.addParameter(new NumberParameter('Loops', loops >= 2 ? loops : 2, [1, 200], 1))\n    this.__capsParam = this.addParameter(new BooleanParameter('Caps', caps))\n    this.__baseZAtZeroParam = this.addParameter(new BooleanParameter('BaseZAtZero', baseZAtZero))\n\n    this.addVertexAttribute('texCoords', Vec2)\n    this.addVertexAttribute('normals', Vec3)\n\n    this.topologyParams.push('Sides')\n    this.topologyParams.push('Loops')\n    this.topologyParams.push('Caps')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const nbSides = this.__sidesParam.getValue()\n    const nbLoops = this.__loopsParam.getValue()\n    const caps = this.__capsParam.getValue()\n\n    let numVertices = nbSides * nbLoops\n    if (caps) {\n      numVertices += 2\n    }\n    this.setNumVertices(numVertices)\n    if (caps) this.setFaceCounts([nbSides * 2, nbSides])\n    else this.setFaceCounts([0, nbSides])\n\n    // ////////////////////////////\n    // Build the topology\n    let faceIndex = 0\n\n    if (caps) {\n      // Bottom caps topology\n      for (let j = 0; j < nbSides; j++) {\n        const v0 = numVertices - 1\n        const v1 = j\n        const v2 = (j + 1) % nbSides\n        this.setFaceVertexIndices(faceIndex++, [v0, v1, v2])\n      }\n      // Top caps topology\n      for (let j = 0; j < nbSides; j++) {\n        const v0 = nbSides * (nbLoops - 1) + j\n        const v1 = numVertices - 2\n        const v2 = nbSides * (nbLoops - 1) + ((j + 1) % nbSides)\n        this.setFaceVertexIndices(faceIndex++, [v0, v1, v2])\n      }\n    }\n\n    // build the topology for the body of the cylinder\n    for (let i = 0; i < nbLoops - 1; i++) {\n      for (let j = 0; j < nbSides; j++) {\n        const v0 = nbSides * i + ((j + 1) % nbSides)\n        const v1 = nbSides * i + j\n        const v2 = nbSides * (i + 1) + j\n        const v3 = nbSides * (i + 1) + ((j + 1) % nbSides)\n        this.setFaceVertexIndices(faceIndex++, [v0, v1, v2, v3])\n      }\n    }\n\n    // ////////////////////////////\n    // setNormals\n    const normals = this.getVertexAttribute('normals')\n\n    // Now set the attribute values\n    faceIndex = 0\n    if (caps) {\n      const normal = new Vec3(0.0, 0.0, -1.0)\n      for (let i = 0; i < nbSides; i++) {\n        normals.setFaceVertexValue(faceIndex, 0, normal)\n        normals.setFaceVertexValue(faceIndex, 1, normal)\n        normals.setFaceVertexValue(faceIndex, 2, normal)\n        faceIndex++\n      }\n      normal.set(0.0, 0.0, 1.0)\n      for (let i = 0; i < nbSides; i++) {\n        normals.setFaceVertexValue(faceIndex, 0, normal)\n        normals.setFaceVertexValue(faceIndex, 1, normal)\n        normals.setFaceVertexValue(faceIndex, 2, normal)\n        faceIndex++\n      }\n    }\n    for (let i = 0; i < nbLoops - 1; i++) {\n      for (let j = 0; j < nbSides; j++) {\n        let phi = (j / nbSides) * 2.0 * Math.PI\n        const normal1 = new Vec3(Math.sin(phi), Math.cos(phi), 0.0)\n        normals.setFaceVertexValue(faceIndex, 0, normal1)\n        normals.setFaceVertexValue(faceIndex, 1, normal1)\n\n        phi = ((j + 1) / nbSides) * 2.0 * Math.PI\n        const normal2 = new Vec3(Math.sin(phi), Math.cos(phi), 0.0)\n        normals.setFaceVertexValue(faceIndex, 2, normal2)\n        normals.setFaceVertexValue(faceIndex, 3, normal2)\n        faceIndex++\n      }\n    }\n\n    // ////////////////////////////\n    // setUVs\n    const texCoords = this.getVertexAttribute('texCoords')\n\n    // Now set the attribute values\n    faceIndex = 0\n    if (caps) {\n      for (let i = 0; i < nbSides; i++) {\n        texCoords.setFaceVertexValue(faceIndex, 0, new Vec2(i / nbSides, 0.0))\n        texCoords.setFaceVertexValue(faceIndex, 1, new Vec2((i + 1) / nbSides, 0.0))\n        texCoords.setFaceVertexValue(faceIndex, 2, new Vec2((i + 0.5) / nbSides, 1.0))\n        faceIndex++\n      }\n      for (let i = 0; i < nbSides; i++) {\n        texCoords.setFaceVertexValue(faceIndex, 0, new Vec2(i / nbSides, 0.0))\n        texCoords.setFaceVertexValue(faceIndex, 1, new Vec2((i + 1) / nbSides, 0.0))\n        texCoords.setFaceVertexValue(faceIndex, 2, new Vec2((i + 0.5) / nbSides, 1.0))\n        faceIndex++\n      }\n    }\n\n    for (let i = 0; i < nbSides; i++) {\n      texCoords.setFaceVertexValue(faceIndex, 0, new Vec2((i + 1) / nbSides, 0.0))\n      texCoords.setFaceVertexValue(faceIndex, 2, new Vec2((i + 1) / nbSides, 1.0))\n      texCoords.setFaceVertexValue(faceIndex, 1, new Vec2(i / nbSides, 0.0))\n      texCoords.setFaceVertexValue(faceIndex, 3, new Vec2(i / nbSides, 1.0))\n      faceIndex++\n    }\n\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const nbSides = this.__sidesParam.getValue()\n    const nbLoops = this.__loopsParam.getValue()\n    const radius = this.__radiusParam.getValue()\n    const height = this.__heightParam.getValue()\n    const caps = this.__capsParam.getValue()\n    const baseZAtZero = this.__baseZAtZeroParam.getValue()\n\n    let numVertices = nbSides * nbLoops\n    if (caps) {\n      numVertices += 2\n    }\n    let vertex = 0\n    let zOff = 0.5\n    if (baseZAtZero) zOff = 0.0\n\n    const positions = this.getVertexAttribute('positions')\n    for (let i = 0; i < nbLoops; i++) {\n      const z = (i / (nbLoops - 1)) * height - height * zOff\n      for (let j = 0; j < nbSides; j++) {\n        const phi = (j / nbSides) * 2.0 * Math.PI\n        positions.getValueRef(vertex).set(Math.sin(phi) * radius, Math.cos(phi) * radius, z)\n        vertex++\n      }\n    }\n    if (caps) {\n      positions.getValueRef(numVertices - 1).set(0.0, 0.0, height * (baseZAtZero ? 0.0 : -0.5))\n      positions.getValueRef(numVertices - 2).set(0.0, 0.0, height * (baseZAtZero ? 1.0 : 0.5))\n    }\n\n    this.computeVertexNormals()\n  }\n}\n\nRegistry.register('Cylinder', Cylinder)\n\nexport { Cylinder }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * A class for generating a disc geometry.\n *\n * ```\n * const disc = new Disc(2.0, 22)\n * ```\n *\n * **Parameters**\n * * **Radius(`NumberParameter`):** Specifies the radius of the disc.\n * * **Sides(`NumberParameter`):** Specifies the resolution, or the disc subdivisions around `Z` axis.\n *\n * @extends {ProceduralMesh}\n */\nclass Disc extends ProceduralMesh {\n  /**\n   * Creates an instance of Disc.\n   *\n   * @param {number} [radius=0.5] - The radius of the disc.\n   * @param {number} [sides=32] - The number of sides.\n   */\n  constructor(radius = 0.5, sides = 32) {\n    super()\n\n    if (isNaN(radius) || isNaN(sides)) throw new Error('Invalid geom args')\n\n    this.__radiusParam = this.addParameter(new NumberParameter('Radius', radius))\n    this.__sidesParam = this.addParameter(new NumberParameter('Sides', sides >= 3 ? sides : 3, [3, 200], 1))\n\n    this.addVertexAttribute('texCoords', Vec2)\n    this.addVertexAttribute('normals', Vec3)\n\n    this.topologyParams.push('Sides')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const nbSides = this.__sidesParam.getValue()\n\n    this.setNumVertices(nbSides + 1)\n    this.setFaceCounts([nbSides])\n\n    // ////////////////////////////\n    // Set Vertex Positions\n    const positions = this.getVertexAttribute('positions')\n    positions.getValueRef(0).set(0.0, 0.0, 0.0)\n\n    // ////////////////////////////\n    // Build the topology\n    for (let j = 0; j < nbSides; j++) {\n      const v1 = (j % nbSides) + 1\n      const v2 = ((j + 1) % nbSides) + 1\n      this.setFaceVertexIndices(j, [0, v1, v2])\n    }\n\n    // ////////////////////////////\n    // setNormals\n    const normals = this.getVertexAttribute('normals')\n    // Now set the attribute values\n    const normal = new Vec3(0, 0, 1)\n    normals.setValue(0, normal)\n    for (let i = 0; i < nbSides; i++) {\n      normals.setValue(i + 1, normal)\n    }\n\n    // ////////////////////////////\n    // setUVs\n    const texCoords = this.getVertexAttribute('texCoords')\n    texCoords.getValueRef(0).set(0.5, 0.5)\n    for (let i = 0; i < nbSides; i++) {\n      const phi = (i / nbSides) * -2.0 * Math.PI\n      texCoords.getValueRef(i + 1).set(Math.sin(phi) * 0.5 + 0.5, Math.cos(phi) * 0.5 + 0.5)\n    }\n\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const nbSides = this.__sidesParam.getValue()\n    const radius = this.__radiusParam.getValue()\n    const positions = this.getVertexAttribute('positions')\n    for (let i = 0; i < nbSides; i++) {\n      const phi = (i / nbSides) * -2.0 * Math.PI\n      positions.getValueRef(i + 1).set(Math.sin(phi) * radius, Math.cos(phi) * radius, 0.0)\n    }\n  }\n}\n\nRegistry.register('Disc', Disc)\n\nexport { Disc }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { NumberParameter } from '../../Parameters/index'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * A class for generating a plane geometry.\n *\n * ```\n * const plane = new Plane(2.0, 1.5, 10, 10)\n * ```\n *\n * **Parameters**\n * * **SizeX(`NumberParameter`):** Length of the plane along `X` axis.\n * * **SizeY(`NumberParameter`):** Length of the plane along `Y` axis.\n * * **DetailX(`NumberParameter`):** Number of divisions along `X`axis.\n * * **DetailY(`NumberParameter`):** Number of divisions along `Y`axis.\n *\n * @extends {ProceduralMesh}\n */\nclass Plane extends ProceduralMesh {\n  /**\n   * Create a plane.\n   * @param {number} [SizeX=1.0] - The length of the plane along the X axis.\n   * @param {number} [SizeY=1.0] - The length of the plane along the Y axis.\n   * @param {number} [DetailX=1] - The number of divisions along the X axis.\n   * @param {number} [DetailY=1] - The number of divisions along the Y axis.\n   * @param {boolean} [addNormals=true] - Compute vertex normals for the geometry\n   * @param {boolean} [addTextureCoords=true] - Compute texture coordinates for the geometry\n   */\n  constructor(SizeX = 1.0, SizeY = 1.0, DetailX = 1, DetailY = 1, addNormals = true, addTextureCoords = true) {\n    super()\n\n    if (isNaN(SizeX) || isNaN(SizeY) || isNaN(DetailX) || isNaN(DetailY)) throw new Error('Invalid geom args')\n\n    this.__sizeXParam = this.addParameter(new NumberParameter('SizeX', SizeX))\n    this.__sizeYParam = this.addParameter(new NumberParameter('SizeY', SizeY))\n    this.__detailXParam = this.addParameter(new NumberParameter('DetailX', DetailX))\n    this.__detailYParam = this.addParameter(new NumberParameter('DetailY', DetailY))\n\n    if (addNormals) this.addVertexAttribute('normals', Vec3)\n    if (addTextureCoords) this.addVertexAttribute('texCoords', Vec2)\n\n    this.topologyParams.push('DetailX')\n    this.topologyParams.push('DetailY')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const detailX = this.__detailXParam.getValue()\n    const detailY = this.__detailYParam.getValue()\n    this.setNumVertices((detailX + 1) * (detailY + 1))\n    this.setFaceCounts([0, detailX * detailY])\n\n    let quadId = 0\n    for (let i = 0; i < detailY; i++) {\n      for (let j = 0; j < detailX; j++) {\n        const v0 = (detailX + 1) * (i + 1) + (j + 1)\n        const v1 = (detailX + 1) * (i + 1) + j\n        const v2 = (detailX + 1) * i + j\n        const v3 = (detailX + 1) * i + (j + 1)\n        this.setFaceVertexIndices(quadId, [v0, v1, v2, v3])\n        quadId = quadId + 1\n      }\n    }\n\n    let vOff = 0\n    const normals = this.getVertexAttribute('normals')\n    if (normals) {\n      for (let i = 0; i <= detailY; i++) {\n        for (let j = 0; j <= detailX; j++) {\n          normals.getValueRef(vOff).set(0, 0, 1)\n          vOff++\n        }\n      }\n    }\n\n    vOff = 0\n    const texCoords = this.getVertexAttribute('texCoords')\n    if (texCoords) {\n      for (let i = 0; i <= detailY; i++) {\n        const y = i / detailY\n        for (let j = 0; j <= detailX; j++) {\n          const x = j / detailX\n          texCoords.getValueRef(vOff).set(x, y)\n          vOff++\n        }\n      }\n    }\n\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   *\n   * @private\n   */\n  resize() {\n    const sizeX = this.__sizeXParam.getValue()\n    const sizeY = this.__sizeYParam.getValue()\n    const detailX = this.__detailXParam.getValue()\n    const detailY = this.__detailYParam.getValue()\n    const positions = this.getVertexAttribute('positions')\n    let vOff = 0\n    for (let i = 0; i <= detailY; i++) {\n      const y = (i / detailY - 0.5) * sizeY\n      for (let j = 0; j <= detailX; j++) {\n        const x = (j / detailX - 0.5) * sizeX\n        positions.getValueRef(vOff).set(x, y, 0.0)\n        vOff++\n      }\n    }\n  }\n}\n\nRegistry.register('Plane', Plane)\nexport { Plane }\n","import { Vec2, Vec3 } from '../../../Math/index'\nimport { NumberParameter } from '../../Parameters/NumberParameter'\nimport { Registry } from '../../../Registry'\nimport { ProceduralMesh } from './ProceduralMesh'\n\n/**\n * A class for generating a sphere geometry.\n *\n * ```\n * const sphere = new Sphere(1.4, 13)\n * ```\n *\n * **Parameters**\n * * **Radius(`NumberParameter`):** Radius of the sphere.\n * * **Sides(`NumberParameter`):** Specifies the number of subdivisions around the `Z` axis.\n * * **Loops(`NumberParameter`):** Specifies the number of subdivisions(stacks) along the `Z` axis.\n *\n * @extends {ProceduralMesh}\n */\nclass Sphere extends ProceduralMesh {\n  /**\n   * Creates an instance of Sphere.\n   * @param {number} [radius=1.0] - The radius of the sphere.\n   * @param {number} [sides=12] - The number of sides.\n   * @param {number} [loops=12] - The number of loops.\n   * @param {boolean} [addNormals=true] - Compute vertex normals for the geometry\n   * @param {boolean} [addTextureCoords=true] - Compute texture coordinates for the geometry\n   */\n  constructor(radius = 1.0, sides = 12, loops = 12, addNormals = true, addTextureCoords = true) {\n    super()\n\n    if (isNaN(radius) || isNaN(sides) || isNaN(loops)) throw new Error('Invalid geom args')\n\n    this.__radiusParam = this.addParameter(new NumberParameter('Radius', radius))\n    this.__sidesParam = this.addParameter(new NumberParameter('Sides', sides >= 3 ? sides : 3, [3, 200], 1))\n    this.__loopsParam = this.addParameter(new NumberParameter('Loops', loops >= 3 ? loops : 3, [3, 200], 1))\n\n    if (addNormals) this.addVertexAttribute('normals', Vec3)\n    if (addTextureCoords) this.addVertexAttribute('texCoords', Vec2)\n\n    this.topologyParams.push('Sides')\n    this.topologyParams.push('Loops')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const radius = this.__radiusParam.getValue()\n    const nbSides = this.__sidesParam.getValue()\n    const nbLoops = this.__loopsParam.getValue()\n\n    const numVertices = 2 + nbSides * nbLoops\n    const numTris = nbSides * 2\n    const numQuads = nbSides * nbLoops\n    this.setNumVertices(numVertices)\n    this.setFaceCounts([numTris, numQuads])\n\n    // ////////////////////////////\n    // Set Vertex Positions\n\n    const positions = this.getVertexAttribute('positions')\n    const normals = this.getVertexAttribute('normals')\n    const normal = new Vec3(0.0, 0.0, 1.0)\n    let vertex = 0\n    positions.getValueRef(vertex).set(0.0, 0.0, radius)\n    if (normals) normals.getValueRef(vertex).set(0.0, 0.0, 1.0)\n    vertex++\n\n    for (let i = 0; i < nbLoops; i++) {\n      const theta = ((i + 1) / (nbLoops + 1)) * Math.PI\n      for (let j = 0; j < nbSides; j++) {\n        const phi = -((j / nbSides) * 2.0 * Math.PI)\n        normal.set(Math.sin(theta) * Math.cos(phi), Math.sin(theta) * Math.sin(phi), Math.cos(theta))\n\n        // Set positions and normals at the same time.\n        positions.getValueRef(vertex).setFromOther(normal.scale(radius))\n        if (normals) normals.getValueRef(vertex).setFromOther(normal)\n        vertex++\n      }\n    }\n\n    positions.getValueRef(vertex).set(0.0, 0.0, -radius)\n    if (normals) normals.getValueRef(vertex).set(0.0, 0.0, -1.0)\n    vertex++\n\n    // ////////////////////////////\n    // Build the topology\n    const texCoords = this.getVertexAttribute('texCoords')\n    // build the fan at the first pole.\n    let faceIndex = 0\n    for (let j = 0; j < nbSides; j++) {\n      const v0 = 0\n      const v1 = ((j + 1) % nbSides) + 1\n      const v2 = j + 1\n      this.setFaceVertexIndices(faceIndex, [v0, v1, v2])\n\n      if (texCoords) {\n        const uv0 = new Vec2(0.5, 0.0)\n        const uv1 = new Vec2((j + 1) / (nbSides - 1), 1 / (nbLoops + 1))\n        const uv2 = new Vec2(j / (nbSides - 1), 1 / (nbLoops + 1))\n        texCoords.setFaceVertexValue(faceIndex, 0, uv0)\n        texCoords.setFaceVertexValue(faceIndex, 1, uv1)\n        texCoords.setFaceVertexValue(faceIndex, 2, uv2)\n      }\n\n      faceIndex++\n    }\n    // Build the fan at the second pole.\n    for (let j = 0; j < nbSides; j++) {\n      const v0 = numVertices - 1\n      const v2 = nbSides * (nbLoops - 1) + ((j + 1) % nbSides) + 1\n      const v1 = nbSides * (nbLoops - 1) + j + 1\n      this.setFaceVertexIndices(faceIndex, [v0, v1, v2])\n\n      if (texCoords) {\n        const uv0 = new Vec2(0.5, 1.0)\n        const uv1 = new Vec2((j + 1) / (nbSides - 1), 1 - 1 / (nbLoops + 1))\n        const uv2 = new Vec2(j / (nbSides - 1), 1 - 1 / (nbLoops + 1))\n        texCoords.setFaceVertexValue(faceIndex, 0, uv0)\n        texCoords.setFaceVertexValue(faceIndex, 1, uv1)\n        texCoords.setFaceVertexValue(faceIndex, 2, uv2)\n      }\n\n      faceIndex++\n    }\n\n    for (let i = 0; i < nbLoops - 1; i++) {\n      for (let j = 0; j < nbSides; j++) {\n        const v0 = nbSides * i + j + 1\n        const v1 = nbSides * i + ((j + 1) % nbSides) + 1\n        const v2 = nbSides * (i + 1) + ((j + 1) % nbSides) + 1\n        const v3 = nbSides * (i + 1) + j + 1\n        this.setFaceVertexIndices(faceIndex, [v0, v1, v2, v3])\n\n        if (texCoords) {\n          texCoords.setFaceVertexValue(faceIndex, 0, new Vec2(j / nbSides, (i + 1) / nbLoops))\n          texCoords.setFaceVertexValue(faceIndex, 1, new Vec2((j + 1) / nbSides, (i + 1) / nbLoops))\n          texCoords.setFaceVertexValue(faceIndex, 2, new Vec2((j + 1) / nbSides, (i + 2) / nbLoops))\n          texCoords.setFaceVertexValue(faceIndex, 3, new Vec2(j / nbSides, (i + 2) / nbLoops))\n        }\n        faceIndex++\n      }\n    }\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const radius = this.__radiusParam.getValue()\n    const nbSides = this.__sidesParam.getValue()\n    const nbLoops = this.__loopsParam.getValue()\n\n    // ////////////////////////////\n    // Set Vertex Positions\n    const positions = this.getVertexAttribute('positions')\n    const normals = this.getVertexAttribute('normals')\n    let vertex = 0\n    const normal = new Vec3(0.0, 0.0, 1.0)\n    positions.getValueRef(vertex).set(0.0, 0.0, radius)\n    if (normals) normals.getValueRef(vertex).set(0.0, 0.0, 1.0)\n    vertex++\n\n    for (let i = 0; i < nbLoops; i++) {\n      const theta = ((i + 1) / (nbLoops + 1)) * Math.PI\n      for (let j = 0; j < nbSides; j++) {\n        const phi = -((j / nbSides) * 2.0 * Math.PI)\n        normal.set(Math.sin(theta) * Math.cos(phi), Math.sin(theta) * Math.sin(phi), Math.cos(theta))\n\n        // Set positions and normals at the same time.\n        positions.getValueRef(vertex).setFromOther(normal.scale(radius))\n        if (normals) normals.getValueRef(vertex).setFromOther(normal)\n        vertex++\n      }\n    }\n    positions.getValueRef(vertex).set(0.0, 0.0, -radius)\n    if (normals) normals.getValueRef(vertex).set(0.0, 0.0, -1.0)\n    vertex++\n  }\n}\n\nRegistry.register('Sphere', Sphere)\n\nexport { Sphere }\n","import { Vec2 } from '../../../Math/Vec2'\nimport { Vec3 } from '../../../Math/Vec3'\nimport { ProceduralMesh } from './ProceduralMesh'\nimport { Registry } from '../../../Registry'\nimport { NumberParameter } from '../../Parameters/NumberParameter'\n\n/**\n * A class for generating a torus geometry.\n *\n * ```\n * const torus = new Torus(0.4, 1.3)\n * ```\n *\n * @extends ProceduralMesh\n */\nclass Torus extends ProceduralMesh {\n  /**\n   * Creates an instance of Torus.\n   *\n   * @param {number} [innerRadius=0.5] - The inner radius of the torus.\n   * @param {number} [outerRadius=3] - The outer radius of the torus.\n   * @param {number} [detail=32] - The detail of the cone.\n   * @param {number} [arcAngle=Math.PI * 2.0] - The angle of the arc.\n   */\n  constructor(innerRadius = 0.5, outerRadius = 3, detail = 32, arcAngle = Math.PI * 2.0) {\n    super()\n\n    if (isNaN(innerRadius) || isNaN(outerRadius) || isNaN(detail)) throw new Error('Invalid geom args')\n\n    this.__innerRadiusParam = this.addParameter(new NumberParameter('InnerRadius', innerRadius))\n    this.__outerRadiusParam = this.addParameter(new NumberParameter('OuterRadius', outerRadius))\n    this.__detailParam = this.addParameter(new NumberParameter('Detail', detail >= 3 ? detail : 3, [3, 200], 1))\n    this.__arcAngleParam = this.addParameter(new NumberParameter('ArcAngle', arcAngle))\n\n    this.addVertexAttribute('texCoords', Vec2)\n    this.addVertexAttribute('normals', Vec3)\n\n    this.topologyParams.push('Detail')\n    this.topologyParams.push('ArcAngle')\n  }\n\n  /**\n   * The rebuild method.\n   * @private\n   */\n  rebuild() {\n    const arcAngle = this.__arcAngleParam.getValue()\n    const open = arcAngle < 2.0 * Math.PI\n    const detail = this.__detailParam.getValue()\n    const nbSlices = detail\n    const nbLoops = detail * 2 + (open ? 1 : 0)\n    const numVertices = nbSlices * nbLoops\n\n    this.setNumVertices(numVertices)\n    this.setFaceCounts([0, nbSlices * nbLoops])\n\n    // ////////////////////////////\n    // Build the topology and texCoords\n    const texCoords = this.getVertexAttribute('texCoords')\n    let faceIndex = 0\n    for (let i = 0; i < (open ? nbLoops - 1 : nbLoops); i++) {\n      for (let j = 0; j < nbSlices; j++) {\n        const ip = (i + 1) % nbLoops\n        const jp = (j + 1) % nbSlices\n        const v0 = nbSlices * i + j\n        const v1 = nbSlices * i + jp\n        const v2 = nbSlices * ip + jp\n        const v3 = nbSlices * ip + j\n        this.setFaceVertexIndices(faceIndex, [v0, v1, v2, v3])\n\n        texCoords.setFaceVertexValue(faceIndex, 0, new Vec2(i / nbLoops, j / nbLoops))\n        texCoords.setFaceVertexValue(faceIndex, 1, new Vec2(i / nbLoops, (j + 1) / nbLoops))\n        texCoords.setFaceVertexValue(faceIndex, 2, new Vec2((i + 1) / nbLoops, (j + 1) / nbLoops))\n        texCoords.setFaceVertexValue(faceIndex, 3, new Vec2((i + 1) / nbLoops, j / nbLoops))\n        faceIndex++\n      }\n    }\n\n    this.resize()\n  }\n\n  /**\n   * The resize method.\n   * @private\n   */\n  resize() {\n    const innerRadius = this.__innerRadiusParam.getValue()\n    const outerRadius = this.__outerRadiusParam.getValue()\n    const arcAngle = this.__arcAngleParam.getValue()\n    const detail = this.__detailParam.getValue()\n    const open = arcAngle < 2.0 * Math.PI\n    const nbSlices = detail\n    const nbLoops = detail * 2 + (open ? 1 : 0)\n\n    const positions = this.getVertexAttribute('positions')\n    const normals = this.getVertexAttribute('normals')\n    let vertex = 0\n    for (let i = 0; i < nbLoops; i++) {\n      // const theta = (i / nbLoops) * arcAngle\n      const theta = -((i / (open ? nbLoops - 1 : nbLoops)) * arcAngle)\n      const ctheta = Math.cos(theta)\n      const stheta = Math.sin(theta)\n\n      for (let j = 0; j < nbSlices; j++) {\n        const phi = (j / nbSlices) * 2.0 * Math.PI\n\n        const sphi = Math.sin(phi)\n        const cphi = Math.cos(phi)\n        const d = outerRadius + cphi * innerRadius\n\n        // Set positions and normals at the same time.\n        positions.getValueRef(vertex).set(ctheta * d, stheta * d, innerRadius * sphi)\n        normals.getValueRef(vertex).set(ctheta * cphi, stheta * cphi, sphi)\n        vertex++\n      }\n    }\n  }\n}\n\nRegistry.register('Torus', Torus)\n\nexport { Torus }\n","import { Registry } from '../../Registry'\nimport { BaseImage } from '../BaseImage.js'\n\n// let ResourceLoaderWorker = require(\"worker-loader?inline!./ResourceLoaderWorker.js\");\n\n/**\n * Represents a BaseImage with the ability to load data.\n *\n * **Events**\n * * **loaded:** Triggered when the data is loaded.\n * * **updated:** Triggered when the data is updated.\n * @extends BaseImage\n */\nclass DataImage extends BaseImage {\n  /**\n   * Create a data image.\n   * @param {string} name - The name value.\n   */\n  constructor(name) {\n    super()\n\n    if (name == undefined) name = this.constructor.name\n    this.__name = name\n    this.format = 'RGBA'\n    this.type = 'UNSIGNED_BYTE'\n    this.__loaded = false\n\n    // this.__data = new Uint8Array(4);\n    this.width = 1\n    this.height = 1\n  }\n\n  /**\n   * Returns an indicator of current item's loaded state.\n   * @return {boolean} - `true` if bytes data is fully loaded, `false` otherwise.\n   */\n  isLoaded() {\n    return this.__loaded\n  }\n\n  /**\n   * Returns the item's name.\n   *\n   * @return {string} - The return value.\n   */\n  getName() {\n    return this.__name\n  }\n\n  /**\n   * Images are static content, so the value for this method is always going to be `false`\n   *\n   * @return {boolean} - The return value.\n   */\n  isStream() {\n    return false\n  }\n\n  /**\n   * Sets Image's data by recieving an bytes array.\n   *\n   * @param {number} width - The width value.\n   * @param {number} height - The height value.\n   * @param {Uint8Array} data - The data value.\n   */\n  setData(width, height, data) {\n    if (this.__data == data) return\n    this.width = width\n    this.height = height\n    this.__data = data\n    if (!this.__loaded) {\n      this.__loaded = true\n      this.emit('loaded', {})\n    } else this.emit('updated', {})\n  }\n\n  /**\n   * Returns all parameters and class state values(Including data).\n   *\n   * @return {object} - The return value.\n   */\n  getParams() {\n    const params = super.getParams()\n    params['data'] = this.__data\n    return params\n  }\n}\n\nRegistry.register('DataImage2D', DataImage)\nRegistry.register('DataImage', DataImage)\n\nexport { DataImage }\n","import { Registry } from '../../Registry'\nimport { BaseImage } from '../BaseImage.js'\n\nimport { resourceLoader } from '../resourceLoader.js'\n\nimport { FilePathParameter } from '../Parameters/FilePathParameter'\n\nconst imageDataLibrary = {}\n\n/** Class representing a file image.\n * @extends BaseImage\n */\nclass FileImage extends BaseImage {\n  /**\n   * Create a file image.\n   * @param {string} name - The name value.\n   * @param {string} filePath - The filePath value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, filePath = '', params = {}) {\n    if (filePath.constructor == Object) {\n      params = filePath\n    }\n    if (name != undefined && name.includes('.')) {\n      console.warn('Deprecated signature. Please provide a name and filepath to the image constructor')\n      name = name.substring(name.lastIndexOf('/') + 1, name.lastIndexOf('.'))\n    }\n\n    super(name, params)\n\n    this.type = 'UNSIGNED_BYTE'\n    this.__crossOrigin = 'anonymous'\n    this.__loaded = false\n\n    const fileParam = this.addParameter(new FilePathParameter('FilePath'))\n    fileParam.on('valueChanged', () => {\n      this.loaded = false\n      if (this.getName() == '') {\n        // Generate a name from the file path.\n        const stem = fileParam.getStem()\n        const decorator = stem.substring(stem.length - 1)\n        if (!isNaN(decorator)) {\n          // Note: ALL image names have an LOD specifier at the end.\n          // remove that off when retrieving the name.\n          this.setName(stem.substring(0, stem.length - 1))\n        } else {\n          this.setName(stem)\n        }\n      }\n\n      if (fileParam.getValue()) {\n        const url = fileParam.getUrl()\n        this.load(url)\n      }\n    })\n\n    if (filePath && filePath != '') fileParam.setFilepath(filePath)\n  }\n\n  /**\n   * The __imageDataLibrary method.\n   * @return {any} - The return value.\n   * @private\n   */\n  static __imageDataLibrary() {\n    return imageDataLibrary\n  }\n\n  /**\n   * Defines how to handle cross origin request.\n   *\n   * **Possible values:**\n   * * **anonymous** - CORS requests for this element will have the credentials flag set to 'same-origin'.\n   * * **use-credentials** - CORS requests for this element will have the credentials flag set to 'include'.\n   * * **\"\"** - Setting the attribute name to an empty value, like crossorigin or crossorigin=\"\", is the same as anonymous.\n   *\n   * @default anonymous\n   * @param {string} crossOrigin - The crossOrigin value.\n   */\n  setCrossOrigin(crossOrigin) {\n    this.__crossOrigin = crossOrigin\n  }\n\n  /**\n   * Uses the specify url to load an Image element and adds it to the data library.\n   * Sets the state of the current object.\n   *\n   * @param {string} url - The url value.\n   * @param {string} format - The format value.\n   * @return {Promise} Returns a promise that resolves once the image is loaded.\n   */\n  load(url, format = 'RGB') {\n    return new Promise((resolve, reject) => {\n      if (!format) {\n        const suffixSt = url.lastIndexOf('.')\n        if (suffixSt != -1) {\n          const ext = url.substring(suffixSt).toLowerCase()\n          if (ext == '.png') {\n            // TODO: Check webp for alpha channel..\n            format = 'RGBA'\n          }\n        }\n      }\n      this.format = format\n      this.__loaded = false\n\n      let imageElem\n      const loaded = () => {\n        this.getDOMElement = () => {\n          return imageElem\n        }\n        this.url = url\n        this.width = imageElem.width\n        this.height = imageElem.height\n        this.__data = imageElem\n        this.__loaded = true\n        this.emit('loaded', {})\n        resolve()\n      }\n      const imageDataLibrary = FileImage.__imageDataLibrary()\n      if (url in imageDataLibrary) {\n        imageElem = imageDataLibrary[url]\n        if (imageElem.complete) {\n          loaded()\n        } else {\n          imageElem.addEventListener('load', loaded)\n        }\n      } else {\n        imageElem = new Image()\n        imageElem.crossOrigin = this.__crossOrigin\n        imageElem.src = url\n\n        imageElem.addEventListener('load', loaded)\n        imageDataLibrary[url] = imageElem\n      }\n    })\n  }\n\n  /**\n   * Loads in Image file using the given URL\n   *\n   * @param {string} url - The url value.\n   * @param {string} format - The format value. Can be 'RGB' or 'RGBA' for files that contain an alpha channel. This will cause objects to be drawn using the Transparent pass.\n   */\n  setImageURL(url, format = 'RGB') {\n    this.load(url, format)\n  }\n\n  /**\n   * The isLoaded method.\n   * @return {any} - The return value.\n   */\n  isLoaded() {\n    return this.__loaded\n  }\n\n  /**\n   * The getParams method.\n   * @return {any} - The return value.\n   */\n  getParams() {\n    const params = super.getParams()\n    if (this.__loaded) {\n      params['data'] = this.__data\n    }\n    return params\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @param {object} context - The context value.\n   */\n  toJSON(context) {}\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context) {}\n\n  /**\n   * The readBinary method.\n   * @param {object} reader - The reader param.\n   * @param {object} context - The context param.\n   */\n  readBinary(reader, context) {\n    // super.readBinary(reader, context);\n    this.setName(reader.loadStr())\n\n    const filePath = reader.loadStr()\n    if (typeof filePath === 'string' && filePath != '') {\n      // if (context.lod >= 0) {\n      //   const suffixSt = filePath.lastIndexOf('.')\n      //   if (suffixSt != -1) {\n      //     const lodPath = filePath.substring(0, suffixSt) + context.lod + filePath.substring(suffixSt)\n      //     if (resourceLoader.resolveFilepath(lodPath)) {\n      //       filePath = lodPath\n      //     }\n      //   }\n      // }\n      // this.getParameter('FilePath').setFilepath(filePath)\n      const basePath = context.url.substring(0, context.url.lastIndexOf('/'))\n      this.load(basePath + '/' + filePath)\n    }\n  }\n}\n\n/** Class representing a 2D file image.\n * @extends FileImage\n */\nclass FileImage2D extends FileImage {\n  /**\n   * Create a file image 2D.\n   * @param {any} filePath - The filePath value.\n   * @param {any} params - The params value.\n   */\n  constructor(filePath, params = {}) {\n    console.warn('FileImage2D is becoming deprecated in favor of simple FileImage')\n    super(filePath, params)\n  }\n}\n\nRegistry.register('FileImage2D', FileImage)\nRegistry.register('FileImage', FileImage)\n\nexport { FileImage, FileImage2D }\n","/* eslint-disable require-jsdoc */\nimport { Registry } from '../../Registry'\nimport { FileImage } from './FileImage.js'\n\n/**\n * Class representing a LDR (low dynamic range) image.\n *\n * ```\n * const image = new LDRImage()\n * image.getParameter('FilePath').setUrl(\"https://storage.googleapis.com/zea-playground-assets/zea-engine/texture.png\")\n * ```\n *\n * **Parameters**\n * * **PreferredSize(`NumberParameter`):** _todo_\n *\n * **Events:**\n * * **loaded:** Triggered when image data is loaded.\n *\n * **File Types:** jpg, jpeg, png\n *\n * @extends FileImage\n */\nclass LDRImage extends FileImage {\n  /**\n   * Create a LDR image.\n   * @param {string} name - The name value.\n   * @param {string} filePath - The filePath value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, filePath, params) {\n    super(name, filePath, params)\n  }\n}\nRegistry.register('LDRImage', LDRImage)\n\nexport { LDRImage }\n","import { Registry } from '../../Registry'\nimport { resourceLoader } from '../resourceLoader.js'\n\nimport { BooleanParameter, NumberParameter } from '../Parameters/index'\n\nimport { FileImage } from './FileImage.js'\n\n/**\n * Class representing a LDR (low dynamic range) video.\n *\n * ```\n * const video = new LDRVideo()\n * video.getParameter('FilePath').setUrl(\"https://storage.googleapis.com/zea-playground-assets/zea-engine/video.mp4\")\n * ```\n *\n * **Parameters**\n * * **Mute(`BooleanParameter`):** Mutes video volume.\n * * **Loop(`BooleanParameter`):** Repeats video over and over again.\n * * **Gain(`NumberParameter`):** Sets loudness of the video before going through any processing.\n * * **SpatializeAudio(`BooleanParameter`):** Enables/Disables spatial(Surrounding) audio.\n * * **refDistance(`NumberParameter`):** _todo_\n * * **maxDistance(`NumberParameter`):** _todo_\n * * **rolloffFactor(`NumberParameter`):** _todo_\n * * **coneInnerAngle(`NumberParameter`):** _todo_\n * * **coneOuterAngle(`NumberParameter`):** _todo_\n * * **coneOuterGain(`NumberParameter`):** _todo_\n *\n * **File Types:** mp4, ogg\n *\n * @extends FileImage\n */\nclass LDRVideo extends FileImage {\n  /**\n   * Create a LDR video.\n   * @param {string} name - The name value.\n   * @param {string} filePath - The filePath value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, filePath, params) {\n    super(name, filePath, params)\n    this.format = 'RGB'\n    this.type = 'UNSIGNED_BYTE'\n\n    this.addParameter(new BooleanParameter('Mute', false))\n    this.addParameter(new BooleanParameter('Loop', true))\n    this.addParameter(new NumberParameter('Gain', 2.0)).setRange([0, 5])\n    this.addParameter(new BooleanParameter('SpatializeAudio', true))\n    this.addParameter(new NumberParameter('refDistance', 2))\n    this.addParameter(new NumberParameter('maxDistance', 10000))\n    this.addParameter(new NumberParameter('rolloffFactor', 1))\n    this.addParameter(new NumberParameter('coneInnerAngle', 360))\n    this.addParameter(new NumberParameter('coneOuterAngle', 0))\n    this.addParameter(new NumberParameter('coneOuterGain', 1))\n  }\n\n  /**\n   * Uses the specify url to load an Image element and adds it to the data library.\n   * Sets the state of the current object.\n   *\n   * @param {string} url - The url value.\n   * @param {string} format - The format value.\n   * @return {Promise} Returns a promise that resolves once the image is loaded.\n   */\n  load(url, format = 'RGB') {\n    return new Promise((resolve, reject) => {\n      resourceLoader.incrementWorkload(1)\n\n      const videoElem = document.createElement('video')\n      // TODO - confirm its necessary to add to DOM\n      videoElem.style.display = 'none'\n      videoElem.preload = 'auto'\n      videoElem.crossOrigin = 'anonymous'\n      // videoElem.crossorigin = true;\n\n      this.getAudioSource = () => {\n        return videoElem\n      }\n\n      document.body.appendChild(videoElem)\n      videoElem.addEventListener(\n        'loadedmetadata',\n        () => {\n          // videoElem.play();\n\n          const muteParam = this.getParameter('Mute')\n          videoElem.muted = muteParam.getValue()\n          muteParam.on('valueChanged', () => {\n            videoElem.muted = muteParam.getValue()\n          })\n\n          const loopParam = this.getParameter('Loop')\n          videoElem.loop = loopParam.getValue()\n          loopParam.on('valueChanged', () => {\n            videoElem.loop = loopParam.getValue()\n          })\n\n          this.width = videoElem.videoHeight\n          this.height = videoElem.videoWidth\n          this.__data = videoElem\n          this.__loaded = true\n          resourceLoader.incrementWorkDone(1)\n          this.emit('loaded', {})\n          resolve()\n\n          let prevFrame = 0\n          const frameRate = 29.97\n          const timerCallback = () => {\n            if (videoElem.paused || videoElem.ended) {\n              return\n            }\n            // Check to see if the video has progressed to the next frame.\n            // If so, then we emit and update, which will cause a redraw.\n            const currentFrame = Math.floor(videoElem.currentTime * frameRate)\n            if (prevFrame != currentFrame) {\n              this.emit('updated', {})\n              prevFrame = currentFrame\n            }\n            setTimeout(timerCallback, 20) // Sample at 50fps.\n          }\n          timerCallback()\n        },\n        false\n      )\n      videoElem.src = url\n      // videoElem.load();\n      const promise = videoElem.play()\n      if (promise !== undefined) {\n        promise\n          .then((_) => {\n            console.log('Autoplay started!')\n            // Autoplay started!\n          })\n          .catch(() => {\n            console.log('Autoplay was prevented.')\n            // Autoplay was prevented.\n            // Show a \"Play\" button so that user can start playback.\n          })\n      }\n    })\n  }\n}\n\nRegistry.register('LDRVideo', LDRVideo)\n\nexport { LDRVideo }\n","\n\nvar count;\n// Stream object for reading off bytes from a byte array\n\nfunction ByteStream(data){\n\tthis.data = data;\n\tthis.pos = 0;\n}\n\n// read the next byte off the stream\nByteStream.prototype.readByte = function(){\n\treturn this.data[this.pos++];\n};\n\n// look at the next byte in the stream without updating the stream position\nByteStream.prototype.peekByte = function(){\n\treturn this.data[this.pos];\n};\n\n// read an array of bytes\nByteStream.prototype.readBytes = function(n){\n\tvar bytes = new Array(n);\n\tfor(var i=0; i<n; i++){\n\t\tbytes[i] = this.readByte();\n\t}\n\treturn bytes;\n};\n\n// peek at an array of bytes without updating the stream position\nByteStream.prototype.peekBytes = function(n){\n\tvar bytes = new Array(n);\n\tfor(var i=0; i<n; i++){\n\t\tbytes[i] = this.data[this.pos + i];\n\t}\n\treturn bytes;\n};\n\n// read a string from a byte set\nByteStream.prototype.readString = function(len){\n\tvar str = '';\n\tfor(var i=0; i<len; i++){\n\t\tstr += String.fromCharCode(this.readByte());\n\t}\n\treturn str;\n};\n\n// read a single byte and return an array of bit booleans\nByteStream.prototype.readBitArray = function(){\n\tvar arr = [];\n\tvar bite = this.readByte();\n\tfor (var i = 7; i >= 0; i--) {\n\t\tarr.push(!!(bite & (1 << i)));\n\t}\n\treturn arr;\n};\n\n// read an unsigned int with endian option\nByteStream.prototype.readUnsigned = function(littleEndian){\n\tvar a = this.readBytes(2);\n\tif(littleEndian){\n\t\treturn (a[1] << 8) + a[0];\t\n\t}else{\n\t\treturn (a[0] << 8) + a[1];\n\t}\t\n};\n\n\nfunction DataParser(data){\n\tthis.stream = new ByteStream(data);\n\t// the final parsed object from the data\n\tthis.output = {};\n}\n\nDataParser.prototype.parse = function(schema){\n\t// the top level schema is just the top level parts array\n\tthis.parseParts(this.output, schema);\t\n\treturn this.output;\n};\n\n// parse a set of hierarchy parts providing the parent object, and the subschema\nDataParser.prototype.parseParts = function(obj, schema){\n\tfor(var i=0; i<schema.length; i++){\n\t\tvar part = schema[i];\n\t\tthis.parsePart(obj, part); \n\t}\n};\n\nDataParser.prototype.parsePart = function(obj, part){\n\tvar name = part.label;\n\tvar value;\n\n\t// make sure the part meets any parse requirements\n\tif(part.requires && ! part.requires(this.stream, this.output, obj)){\n\t\treturn;\n\t}\n\t\n\tif(part.loop){\n\t\t// create a parse loop over the parts\n\t\tvar items = [];\n\t\twhile(part.loop(this.stream)){\n\t\t\tvar item = {};\n\t\t\tthis.parseParts(item, part.parts);\n\t\t\titems.push(item);\n\t\t}\n\t\tobj[name] = items;\n\t}else if(part.parts){\n\t\t// process any child parts\n\t\tvalue = {};\n\t\tthis.parseParts(value, part.parts);\n\t\tobj[name] = value;\n\t}else if(part.parser){\n\t\t// parse the value using a parser\n\t\tvalue = part.parser(this.stream, this.output, obj);\n\t\tif(!part.skip){\n\t\t\tobj[name] = value;\n\t\t}\n\t}else if(part.bits){\n\t\t// convert the next byte to a set of bit fields\n\t\tobj[name] = this.parseBits(part.bits);\n\t}\n};\n\n// combine bits to calculate value\nfunction bitsToNum(bitArray){\n\treturn bitArray.reduce(function(s, n) { return s * 2 + n; }, 0);\n}\n\n// parse a byte as a bit set (flags and values)\nDataParser.prototype.parseBits = function(details){\n\tvar out = {};\n\tvar bits = this.stream.readBitArray();\n\tfor(var key in details){\n\t\tvar item = details[key];\n\t\tif(item.length){\n\t\t\t// convert the bit set to value\n\t\t\tout[key] = bitsToNum(bits.slice(item.index, item.index + item.length));\n\t\t}else{\n\t\t\tout[key] = bits[item.index];\n\t\t}\n\t}\n\treturn out;\n};\n\n\n// a set of common parsers used with DataParser\n\nvar Parsers = {\n\t// read a byte\n\treadByte: function(){\n\t\treturn function(stream){\n\t\t\treturn stream.readByte();\n\t\t};\n\t},\n\t// read an array of bytes\n\treadBytes: function(length){\n\t\treturn function(stream){\n\t\t\treturn stream.readBytes(length);\n\t\t};\n\t},\n\t// read a string from bytes\n\treadString: function(length){\n\t\treturn function(stream){\n\t\t\treturn stream.readString(length);\n\t\t};\n\t},\n\t// read an unsigned int (with endian)\n\treadUnsigned: function(littleEndian){\n\t\treturn function(stream){\n\t\t\treturn stream.readUnsigned(littleEndian);\n\t\t};\n\t},\n\t// read an array of byte sets\n\treadArray: function(size, countFunc){\n\t\treturn function(stream, obj, parent){\n\t\t\tvar count = countFunc(stream, obj, parent);\n\t\t\tvar arr = new Array(count);\n\t\t\tfor(var i=0; i<count; i++){\n\t\t\t\tarr[i] = stream.readBytes(size);\n\t\t\t}\n\t\t\treturn arr;\n\t\t};\n\t}\n};\n\n\n// object used to represent array buffer data for a gif file\n\n\n\n// a set of 0x00 terminated subblocks\nvar subBlocks = {\n\tlabel: 'blocks',\n\tparser: function(stream){\n\t\tvar out = [];\n\t\tvar terminator = 0x00;\t\t\n\t\tfor(var size=stream.readByte(); size!==terminator; size=stream.readByte()){\n\t\t\tout = out.concat(stream.readBytes(size));\n\t\t}\n\t\treturn out;\n\t}\n};\n\n// global control extension\nvar gce = {\n\tlabel: 'gce',\n\trequires: function(stream){\n\t\t// just peek at the top two bytes, and if true do this\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xF9;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'byteSize', parser: Parsers.readByte() },\n\t\t{ label: 'extras', bits: {\n\t\t\tfuture: { index: 0, length: 3 },\n\t\t\tdisposal: { index: 3, length: 3 },\n\t\t\tuserInput: { index: 6 },\n\t\t\ttransparentColorGiven: { index: 7 }\n\t\t}},\n\t\t{ label: 'delay', parser: Parsers.readUnsigned(true) },\n\t\t{ label: 'transparentColorIndex', parser: Parsers.readByte() },\n\t\t{ label: 'terminator', parser: Parsers.readByte(), skip: true }\n\t]\n};\n\n// image pipeline block\nvar image = {\n\tlabel: 'image',\n\trequires: function(stream){\n\t\t// peek at the next byte\n\t\tvar code = stream.peekByte();\n\t\treturn code === 0x2C;\n\t},\n\tparts: [\n\t\t{ label: 'code', parser: Parsers.readByte(), skip: true },\n\t\t{\n\t\t\tlabel: 'descriptor', // image descriptor\n\t\t\tparts: [\n\t\t\t\t{ label: 'left', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'top', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'width', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'height', parser: Parsers.readUnsigned(true) },\n\t\t\t\t{ label: 'lct', bits: {\n\t\t\t\t\texists: { index: 0 },\n\t\t\t\t\tinterlaced: { index: 1 },\n\t\t\t\t\tsort: { index: 2 },\n\t\t\t\t\tfuture: { index: 3, length: 2 },\n\t\t\t\t\tsize: { index: 5, length: 3 }\n\t\t\t\t}}\n\t\t\t]\n\t\t},{\n\t\t\tlabel: 'lct', // optional local color table\n\t\t\trequires: function(stream, obj, parent){\n\t\t\t\treturn parent.descriptor.lct.exists;\n\t\t\t},\n\t\t\tparser: Parsers.readArray(3, function(stream, obj, parent){\n\t\t\t\treturn Math.pow(2, parent.descriptor.lct.size + 1);\n\t\t\t})\n\t\t},{\n\t\t\tlabel: 'data', // the image data blocks\n\t\t\tparts: [\n\t\t\t\t{ label: 'minCodeSize', parser: Parsers.readByte() },\n\t\t\t\tsubBlocks\n\t\t\t]\n\t\t}\n\t]\n};\n\n// plain text block\nvar text = {\n\tlabel: 'text',\n\trequires: function(stream){\n\t\t// just peek at the top two bytes, and if true do this\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0x01;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'blockSize', parser: Parsers.readByte() },\n\t\t{ \n\t\t\tlabel: 'preData', \n\t\t\tparser: function(stream, obj, parent){\n\t\t\t\treturn stream.readBytes(parent.text.blockSize);\n\t\t\t}\n\t\t},\n\t\tsubBlocks\n\t]\n};\n\n// application block\nvar application = {\n\tlabel: 'application',\n\trequires: function(stream, obj, parent){\n\t\t// make sure this frame doesn't already have a gce, text, comment, or image\n\t\t// as that means this block should be attached to the next frame\n\t\t//if(parent.gce || parent.text || parent.image || parent.comment){ return false; }\n\n\t\t// peek at the top two bytes\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xFF;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\t{ label: 'blockSize', parser: Parsers.readByte() },\n\t\t{ \n\t\t\tlabel: 'id', \n\t\t\tparser: function(stream, obj, parent){\n\t\t\t\treturn stream.readString(parent.blockSize);\n\t\t\t}\n\t\t},\n\t\tsubBlocks\n\t]\n};\n\n// comment block\nvar comment = {\n\tlabel: 'comment',\n\trequires: function(stream, obj, parent){\n\t\t// make sure this frame doesn't already have a gce, text, comment, or image\n\t\t// as that means this block should be attached to the next frame\n\t\t//if(parent.gce || parent.text || parent.image || parent.comment){ return false; }\n\n\t\t// peek at the top two bytes\n\t\tvar codes = stream.peekBytes(2);\n\t\treturn codes[0] === 0x21 && codes[1] === 0xFE;\n\t},\n\tparts: [\n\t\t{ label: 'codes', parser: Parsers.readBytes(2), skip: true },\n\t\tsubBlocks\n\t]\n};\n\n// frames of ext and image data\nvar frames = {\n\tlabel: 'frames',\n\tparts: [\n\t\tgce,\n\t\tapplication,\n\t\tcomment,\n\t\timage,\n\t\ttext\n\t],\n\tloop: function(stream){\n\t\tvar nextCode = stream.peekByte();\n\t\t// rather than check for a terminator, we should check for the existence\n\t\t// of an ext or image block to avoid infinite loops\n\t\t//var terminator = 0x3B;\n\t\t//return nextCode !== terminator;\n\t\treturn nextCode === 0x21 || nextCode === 0x2C;\n\t}\n};\n\n// main GIF schema\nvar schemaGIF = [\n\t{\n\t\tlabel: 'header', // gif header\n\t\tparts: [\n\t\t\t{ label: 'signature', parser: Parsers.readString(3) },\n\t\t\t{ label: 'version', parser: Parsers.readString(3) }\n\t\t]\n\t},{\n\t\tlabel: 'lsd', // local screen descriptor\n\t\tparts: [\n\t\t\t{ label: 'width', parser: Parsers.readUnsigned(true) },\n\t\t\t{ label: 'height', parser: Parsers.readUnsigned(true) },\n\t\t\t{ label: 'gct', bits: {\n\t\t\t\texists: { index: 0 },\n\t\t\t\tresolution: { index: 1, length: 3 },\n\t\t\t\tsort: { index: 4 },\n\t\t\t\tsize: { index: 5, length: 3 }\n\t\t\t}},\n\t\t\t{ label: 'backgroundColorIndex', parser: Parsers.readByte() },\n\t\t\t{ label: 'pixelAspectRatio', parser: Parsers.readByte() }\n\t\t]\n\t},{\n\t\tlabel: 'gct', // global color table\n\t\trequires: function(stream, obj){\n\t\t\treturn obj.lsd.gct.exists;\n\t\t},\n\t\tparser: Parsers.readArray(3, function(stream, obj){\n\t\t\treturn Math.pow(2, obj.lsd.gct.size + 1);\n\t\t})\n\t},\n\tframes // content frames\n];\n\n\nvar gifSchema = schemaGIF;\n\nfunction GIF(arrayBuffer){\n\t// convert to byte array\n\tvar byteData = new Uint8Array(arrayBuffer);\n\tvar parser = new DataParser(byteData);\n\t// parse the data\n\tthis.raw = parser.parse(gifSchema);\n\n\t// set a flag to make sure the gif contains at least one image\n\tthis.raw.hasImages = false;\n\tfor(var f=0; f<this.raw.frames.length; f++){\n\t\tif(this.raw.frames[f].image){\n\t\t\tthis.raw.hasImages = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// process a single gif image frames data, decompressing it using LZW \n// if buildPatch is true, the returned image will be a clamped 8 bit image patch\n// for use directly with a canvas.\nGIF.prototype.decompressFrame = function(index, buildPatch){\n\n\t// make sure a valid frame is requested\n\tif(index >= this.raw.frames.length){ return null; }\n\n\tvar frame = this.raw.frames[index];\n\tif(frame.image){\n\t\t// get the number of pixels\n\t\tvar totalPixels = frame.image.descriptor.width * frame.image.descriptor.height;\n\n\t\t// do lzw decompression\n\t\tvar pixels = lzw(frame.image.data.minCodeSize, frame.image.data.blocks, totalPixels);\n\n\t\t// deal with interlacing if necessary\n\t\tif(frame.image.descriptor.lct.interlaced){\n\t\t\tpixels = deinterlace(pixels, frame.image.descriptor.width);\n\t\t}\n\n\t\t// setup usable image object\n\t\tvar image = {\n\t\t\tpixels: pixels,\n\t\t\tdims: {\n\t\t\t\ttop: frame.image.descriptor.top,\n\t\t\t\tleft: frame.image.descriptor.left,\n\t\t\t\twidth: frame.image.descriptor.width,\n\t\t\t\theight: frame.image.descriptor.height\n\t\t\t}\n\t\t};\n\n\t\t// color table\n\t\tif(frame.image.descriptor.lct && frame.image.descriptor.lct.exists){\n\t\t\timage.colorTable = frame.image.lct;\n\t\t}else{\n\t\t\timage.colorTable = this.raw.gct;\n\t\t}\n\n\t\t// add per frame relevant gce information\n\t\tif(frame.gce){\n\t\t\timage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\t\t\timage.disposalType = frame.gce.extras.disposal;\n\t\t\t// transparency\n\t\t\tif(frame.gce.extras.transparentColorGiven){\n\t\t\t\timage.transparentIndex = frame.gce.transparentColorIndex;\n\t\t\t}\n\t\t}\n\n\t\t// create canvas usable imagedata if desired\n\t\tif(buildPatch){\n\t\t\timage.patch = generatePatch(image);\n\t\t}\n\n\t\treturn image;\t\t\n\t}\n\n\t// frame does not contains image\n\treturn null;\n\n\n\t/**\n\t * javascript port of java LZW decompression\n\t * Original java author url: https://gist.github.com/devunwired/4479231\n\t */\t\n\tfunction lzw(minCodeSize, data, pixelCount) {\n \t\t\n \t\tvar MAX_STACK_SIZE = 4096;\n\t\tvar nullCode = -1;\n\n\t\tvar npix = pixelCount;\n\t\tvar available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n \n \t\tvar dstPixels = new Array(pixelCount);\n\t\tvar prefix = new Array(MAX_STACK_SIZE);\n\t\tvar suffix = new Array(MAX_STACK_SIZE);\n\t\tvar pixelStack = new Array(MAX_STACK_SIZE + 1);\n \n\t\t// Initialize GIF data stream decoder.\n\t\tdata_size = minCodeSize;\n\t\tclear = 1 << data_size;\n\t\tend_of_information = clear + 1;\n\t\tavailable = clear + 2;\n\t\told_code = nullCode;\n\t\tcode_size = data_size + 1;\n\t\tcode_mask = (1 << code_size) - 1;\n\t\tfor (code = 0; code < clear; code++) {\n\t\t\tprefix[code] = 0;\n\t\t\tsuffix[code] = code;\n\t\t}\n \n\t\t// Decode GIF pixel stream.\n\t\tdatum = bits = count = first = top = pi = bi = 0;\n\t\tfor (i = 0; i < npix; ) {\n\t\t\tif (top === 0) {\n\t\t\t\tif (bits < code_size) {\n\t\t\t\t\t\n\t\t\t\t\t// get the next byte\t\t\t\n\t\t\t\t\tdatum += data[bi] << bits;\n\n\t\t\t\t\tbits += 8;\n\t\t\t\t\tbi++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Get the next code.\n\t\t\t\tcode = datum & code_mask;\n\t\t\t\tdatum >>= code_size;\n\t\t\t\tbits -= code_size;\n\t\t\t\t// Interpret the code\n\t\t\t\tif ((code > available) || (code == end_of_information)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (code == clear) {\n\t\t\t\t\t// Reset decoder.\n\t\t\t\t\tcode_size = data_size + 1;\n\t\t\t\t\tcode_mask = (1 << code_size) - 1;\n\t\t\t\t\tavailable = clear + 2;\n\t\t\t\t\told_code = nullCode;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (old_code == nullCode) {\n\t\t\t\t\tpixelStack[top++] = suffix[code];\n\t\t\t\t\told_code = code;\n\t\t\t\t\tfirst = code;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tin_code = code;\n\t\t\t\tif (code == available) {\n\t\t\t\t\tpixelStack[top++] = first;\n\t\t\t\t\tcode = old_code;\n\t\t\t\t}\n\t\t\t\twhile (code > clear) {\n\t\t\t\t\tpixelStack[top++] = suffix[code];\n\t\t\t\t\tcode = prefix[code];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfirst = suffix[code] & 0xff;\n\t\t\t\tpixelStack[top++] = first;\n\n\t\t\t\t// add a new string to the table, but only if space is available\n\t\t\t\t// if not, just continue with current table until a clear code is found\n\t\t\t\t// (deferred clear code implementation as per GIF spec)\n\t\t\t\tif(available < MAX_STACK_SIZE){\n\t\t\t\t\tprefix[available] = old_code;\n\t\t\t\t\tsuffix[available] = first;\n\t\t\t\t\tavailable++;\n\t\t\t\t\tif (((available & code_mask) === 0) && (available < MAX_STACK_SIZE)) {\n\t\t\t\t\t\tcode_size++;\n\t\t\t\t\t\tcode_mask += available;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\told_code = in_code;\n\t\t\t}\n\t\t\t// Pop a pixel off the pixel stack.\n\t\t\ttop--;\n\t\t\tdstPixels[pi++] = pixelStack[top];\n\t\t\ti++;\n\t\t}\n\n\t\tfor (i = pi; i < npix; i++) {\n\t\t\tdstPixels[i] = 0; // clear missing pixels\n\t\t}\n\n\t\treturn dstPixels;\n\t}\n\n\t// deinterlace function from https://github.com/shachaf/jsgif\n\tfunction deinterlace(pixels, width) {\n\t\t\n\t\tvar newPixels = new Array(pixels.length);\n\t\tvar rows = pixels.length / width;\n\t\tvar cpRow = function(toRow, fromRow) {\n\t\t\tvar fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n\t\t\tnewPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n\t\t};\n\n\t\t// See appendix E.\n\t\tvar offsets = [0,4,2,1];\n\t\tvar steps   = [8,8,4,2];\n\n\t\tvar fromRow = 0;\n\t\tfor (var pass = 0; pass < 4; pass++) {\n\t\t\tfor (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n\t\t\t\tcpRow(toRow, fromRow);\n\t\t\t\tfromRow++;\n\t\t\t}\n\t\t}\n\n\t\treturn newPixels;\n\t}\n\n\t// create a clamped byte array patch for the frame image to be used directly with a canvas\n\t// TODO: could potentially squeeze some performance by doing a direct 32bit write per iteration\n\tfunction generatePatch(image){\n\n\t\tvar totalPixels = image.pixels.length;\n\t\tvar patchData = new Uint8ClampedArray(totalPixels * 4);\n\t\tfor(var i=0; i<totalPixels; i++){\n\t\t\tvar pos = i * 4;\n\t\t\tvar colorIndex = image.pixels[i];\n\t\t\tvar color = image.colorTable[colorIndex];\n\t\t\tpatchData[pos] = color[0];\n\t\t\tpatchData[pos + 1] = color[1];\n\t\t\tpatchData[pos + 2] = color[2];\n\t\t\tpatchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n\t\t}\n\n\t\treturn patchData;\n\t}\n};\n\n// returns all frames decompressed\nGIF.prototype.decompressFrames = function(buildPatch){\n\tvar frames = [];\n\tfor(var i=0; i<this.raw.frames.length; i++){\n\t\tvar frame = this.raw.frames[i];\n\t\tif(frame.image){\n\t\t\tframes.push(this.decompressFrame(i, buildPatch));\n\t\t}\n\t}\n\treturn frames;\n};\n\n\n\n\nexport {\n    GIF\n};\n","/* eslint-disable prefer-promise-reject-errors */\nimport { Vec4 } from '../../Math/index'\nimport { loadBinfile } from '../Utils.js'\nimport { Registry } from '../../Registry'\nimport { FileImage } from './FileImage.js'\n\nimport { GIF } from '../../external/gifuct-js.js'\nimport { resourceLoader } from '../resourceLoader.js'\n\nimport { NumberParameter, Vec4Parameter } from '../Parameters/index'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\n\n/**\n * Class representing a GIF image.\n *\n * ```\n * const image = new GIFImage()\n * image.getParameter('FilePath').setUrl(\"https://storage.googleapis.com/zea-playground-assets/zea-engine/texture.gif\")\n * ```\n *\n * **Parameters**\n * * **StreamAtlasDesc:**\n * * **StreamAtlasIndex:**\n *\n * **Events**\n * * **loaded:** Triggered when the gif data is loaded.\n *\n * **File Types:** gif\n *\n * @extends FileImage\n */\nclass GIFImage extends FileImage {\n  /**\n   * Create a GIF image.\n   * @param {string} name - The name value.\n   * @param {string|object} filePath - The filePath value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, filePath = '', params = {}) {\n    super(name, filePath, params)\n\n    this.format = 'RGBA'\n    this.type = 'UNSIGNED_BYTE'\n    this.__streamAtlas = true\n    // this.getParameter('FilePath').setSupportedExts('gif')\n\n    this.addParameter(new Vec4Parameter('StreamAtlasDesc'))\n    this.addParameter(new NumberParameter('StreamAtlasIndex', 0))\n\n    const frameParam = this.getParameter('StreamAtlasIndex')\n    frameParam.setRange([0, 1])\n\n    let playing\n    let frame = 0\n    const incrementFrame = (numFrames) => {\n      frameParam.setValue(frame)\n      if (playing) setTimeout(() => incrementFrame(numFrames), this.getFrameDelay(frame))\n      frame = (frame + 1) % numFrames\n    }\n    this.play = () => {\n      this.__resourcePromise.then(() => {\n        playing = true\n        const numFrames = frameParam.getRange()[1]\n        incrementFrame(numFrames)\n      })\n    }\n    this.stop = () => {\n      playing = false\n    }\n  }\n\n  /**\n   * The getFrameDelay method.\n   * @param {number} index - The index value.\n   * @return {number} - The return value.\n   */\n  getFrameDelay(index) {\n    // Note: Frame delays are in centisecs (not millisecs which the timers will require.)\n    return this.__unpackedData.frameDelays[index] * 10\n  }\n\n  /**\n   * Uses the specify url to load an Image element and adds it to the data library.\n   * Sets the state of the current object.\n   *\n   * @param {string} url - The url value.\n   * @param {string} format - The format value.\n   * @return {Promise} Returns a promise that resolves once the image is loaded.\n   */\n  load(url, format = 'RGB') {\n    // this.__streamAtlasDesc = new Vec4();\n\n    const imageDataLibrary = FileImage.__imageDataLibrary()\n    if (url in imageDataLibrary) {\n      this.__resourcePromise = imageDataLibrary[url]\n      return this.__resourcePromise\n    } else {\n      this.__resourcePromise = new Promise((resolve, reject) => {\n        resourceLoader.incrementWorkload(1)\n\n        // if (fileDesc.assets && fileDesc.assets.atlas) {\n        //   const imageElem = new Image()\n        //   imageElem.crossOrigin = 'anonymous'\n        //   imageElem.src = fileDesc.assets.atlas.url\n        //   imageElem.addEventListener('load', () => {\n        //     resolve({\n        //       width: fileDesc.assets.atlas.width,\n        //       height: fileDesc.assets.atlas.height,\n        //       atlasSize: fileDesc.assets.atlas.atlasSize,\n        //       frameDelays: fileDesc.assets.atlas.frameDelays,\n        //       frameRange: [0, fileDesc.assets.atlas.frameDelays.length],\n        //       imageData: imageElem,\n        //     })\n        //     resourceLoader.incrementWorkDone(1)\n        //   })\n        //   return\n        // }\n\n        loadBinfile(\n          url,\n          (data) => {\n            console.warn('Unpacking Gif client side:' + url)\n\n            const start = performance.now()\n\n            // Decompressing using: https://github.com/matt-way/gifuct-js\n            const gif = new GIF(data)\n            const frames = gif.decompressFrames(true)\n\n            // do something with the frame data\n            const sideLength = Math.sqrt(frames.length)\n            const atlasSize = [sideLength, sideLength]\n            if (MathFunctions.fract(sideLength) > 0.0) {\n              atlasSize[0] = Math.floor(atlasSize[0] + 1)\n              if (MathFunctions.fract(sideLength) > 0.5) {\n                atlasSize[1] = Math.floor(atlasSize[1] + 1)\n              } else {\n                atlasSize[1] = Math.floor(atlasSize[1])\n              }\n            }\n\n            const width = frames[0].dims.width\n            const height = frames[0].dims.height\n\n            // gif patch canvas\n            const tempCanvas = document.createElement('canvas')\n            const tempCtx = tempCanvas.getContext('2d')\n            // full gif canvas\n            const gifCanvas = document.createElement('canvas')\n            const gifCtx = gifCanvas.getContext('2d')\n\n            gifCanvas.width = width\n            gifCanvas.height = height\n\n            // The atlas for all the frames.\n            const atlasCanvas = document.createElement('canvas')\n            const atlasCtx = atlasCanvas.getContext('2d')\n            atlasCanvas.width = atlasSize[0] * width\n            atlasCanvas.height = atlasSize[1] * height\n\n            let frameImageData\n            const frameDelays = []\n            const renderFrame = (frame, index) => {\n              const dims = frame.dims\n\n              // Note: the server side library returns centisecs (1/100 second) for\n              // frame delays, so normalize here so that client and servers\n              // valueus are in the\n              frameDelays.push(frame.delay / 10)\n\n              if (!frameImageData || dims.width != frameImageData.width || dims.height != frameImageData.height) {\n                tempCanvas.width = dims.width\n                tempCanvas.height = dims.height\n                frameImageData = tempCtx.createImageData(dims.width, dims.height)\n              }\n\n              // set the patch data as an override\n              frameImageData.data.set(frame.patch)\n              tempCtx.putImageData(frameImageData, 0, 0)\n\n              // Note: undocumented disposal method.\n              // See Ids here: https://github.com/theturtle32/Flash-Animated-GIF-Library/blob/master/AS3GifPlayer/src/com/worlize/gif/constants/DisposalType.as\n              // From what I can gather, 2 means we should clear the background first.\n              // this seems to work with Gifs featuring moving transparency.\n              // For fully opaque gifs, we should avoid this.\n              if (frame.disposalType == 2) gifCtx.clearRect(0, 0, gifCanvas.width, gifCanvas.height)\n\n              gifCtx.drawImage(tempCanvas, dims.left, dims.top)\n\n              atlasCtx.drawImage(gifCanvas, (index % atlasSize[0]) * width, Math.floor(index / atlasSize[0]) * height)\n            }\n\n            for (let i = 0; i < frames.length; i++) {\n              // console.log(frame);\n              renderFrame(frames[i], i)\n            }\n            resourceLoader.incrementWorkDone(1)\n\n            const imageData = atlasCtx.getImageData(0, 0, atlasCanvas.width, atlasCanvas.height)\n\n            const ms = performance.now() - start\n            console.log(`Decode GIF '${url}' time:` + ms)\n\n            resolve({\n              width: atlasCanvas.width,\n              height: atlasCanvas.height,\n              atlasSize,\n              frameRange: [0, frames.length],\n              frameDelays,\n              imageData,\n            })\n          },\n          (statusText) => {\n            const msg = 'Unable to Load URL:' + statusText + ':' + url\n            console.warn(msg)\n            reject(msg)\n          }\n        )\n      })\n\n      imageDataLibrary[url] = this.__resourcePromise\n    }\n\n    this.__resourcePromise.then((unpackedData) => {\n      this.width = unpackedData.width\n      this.height = unpackedData.height\n\n      this.getParameter('StreamAtlasDesc').setValue(\n        new Vec4(unpackedData.atlasSize[0], unpackedData.atlasSize[1], 0, 0)\n      )\n      this.getParameter('StreamAtlasIndex').setRange(unpackedData.frameRange)\n\n      this.__unpackedData = unpackedData\n      this.__data = unpackedData.imageData\n\n      // ////////////////////////\n      // Playback\n      this.__loaded = true\n\n      this.emit('loaded', {})\n    })\n    return this.__resourcePromise\n  }\n}\n\nRegistry.register('GIFImage', GIFImage)\n\nexport { GIFImage }\n","import { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { BaseImage } from '../BaseImage.js'\nimport { resourceLoader } from '../resourceLoader.js'\nimport { FilePathParameter } from '../Parameters/FilePathParameter'\n\n/**\n * Class representing a VLH image.\n *\n * **Parameters**\n * * **FilePath(`FilePathParameter`):** Used to specify the path to the file.\n *\n * **Events**\n * * **loaded:** Triggered when image data is loaded.\n * * **updated:** Triggered when image data is updated.\n *\n * @extends BaseImage\n */\nclass VLHImage extends BaseImage {\n  /**\n   * Create a VLH image.\n   * @param {string} name - The name value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, params = {}) {\n    let filepath\n    if (name != undefined && name.includes('.')) {\n      filepath = name\n      name = name.substring(name.lastIndexOf('/') + 1, name.lastIndexOf('.'))\n    }\n    super(name, params)\n\n    this.__loaded = false\n    this.__exposure = 1.0\n    this.__ambientLightFactor = 0.0\n    this.__hdrTint = new Color(1, 1, 1, 1)\n    this.__stream = 'stream' in params ? params['stream'] : false\n    this.type = 'FLOAT'\n\n    const fileParam = this.addParameter(new FilePathParameter('FilePath'))\n    fileParam.on('valueChanged', () => {\n      this.loaded = false\n      const url = fileParam.getUrl()\n      this.load(url)\n    })\n\n    if (filepath) {\n      this.getParameter('FilePath').setFilepath(filepath)\n    }\n  }\n\n  /**\n   * Returns DOM Element.\n   *\n   * @return {HTMLElement} - The return value.\n   */\n  getDOMElement() {\n    return this.__domElement\n  }\n\n  /**\n   * Returns `FilePath` parameter's value.\n   *\n   * @return {string} - The return value.\n   */\n  getResourcePath() {\n    return this.getParameter('FilePath').getValue()\n  }\n\n  /**\n   * The __decodeData method.\n   * @param {object} entries - The entries value.\n   * @private\n   */\n  __decodeData(entries) {\n    return new Promise((resolve, reject) => {\n      const ldr = entries.ldr\n      const cdm = entries.cdm\n  \n      // ///////////////////////////////\n      // Parse the data.\n      const blob = new Blob([ldr.buffer])\n      const ldrPic = new Image()\n      ldrPic.onload = () => {\n        this.width = ldrPic.width\n        this.height = ldrPic.height\n        // console.log(resourcePath + \": [\" + this.width + \", \" + this.height + \"]\");\n        this.__data = {\n          ldr: ldrPic,\n          cdm: cdm,\n        }\n        if (!this.__loaded) {\n          this.__loaded = true\n          this.emit('loaded', {})\n        } else {\n          this.emit('updated', {})\n        }\n        resolve()\n      }\n      ldrPic.src = URL.createObjectURL(blob)\n    })\n  }\n\n  /**\n   * Loads a vlh file given a URL.\n   * @param {string} url - The URL of the vlh file to load\n   * @return {Promise} - Returns a promise that resolves once the initial load is complete\n   */\n  load(url) {\n    return new Promise((resolve, reject) => {\n      const filename = url.lastIndexOf('/') > -1 ? url.substring(url.lastIndexOf('/') + 1) : ''\n      const stem = filename.substring(0, filename.lastIndexOf('.'))\n      if (this.getName() == '') {\n        this.setName(stem)\n      }\n      this.type = 'FLOAT'\n\n      resourceLoader.loadFile('archive', url).then(\n        (entries) => {\n          if (!entries.ldr || !entries.cdm) {\n            for (const name in entries) {\n              if (name.endsWith('.jpg')) {\n                entries.ldr = entries[name]\n                delete entries[name]\n              } else if (name.endsWith('.bin')) {\n                entries.cdm = entries[name]\n                delete entries[name]\n              }\n            }\n          }\n          this.__decodeData(entries).then(() => {\n            resolve()\n          })\n        },\n        (error) => {\n          this.emit('error', error)\n          reject(error)\n        }\n      )\n    })\n  }\n\n  /**\n   * Returns if the data is a stream or not.\n   *\n   * @return {boolean} - The return value.\n   */\n  isStream() {\n    return false\n  }\n\n  /**\n   * Returns the status of the data, whether is loaded or not.\n   *\n   * @return {boolean} - The return value.\n   */\n  isLoaded() {\n    return this.__loaded\n  }\n\n  /**\n   * Returns all parameters and class state values.\n   *\n   * @return {object} - The return value.\n   */\n  getParams() {\n    const params = super.getParams()\n    if (this.__loaded) {\n      params['data'] = this.__data\n      params['exposure'] = this.__exposure\n    }\n    return params\n  }\n\n  /**\n   * The setHDRTint method.\n   * @private\n   * @param {Color} hdrTint - The hdrTint value.\n   */\n  setHDRTint(hdrTint) {\n    this.__hdrTint = hdrTint\n  }\n\n  /**\n   * The getHDRTint method.\n   * @private\n   * @return {Color} - The return value.\n   */\n  getHDRTint() {\n    return this.__hdrTint\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   */\n  toJSON(context) {}\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context) {}\n\n  /**\n   * Sets state of current Image using a binary reader object, and adds it to the resource loader.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    // super.readBinary(reader, context);\n    this.setName(reader.loadStr())\n    const resourcePath = reader.loadStr()\n    if (typeof resourcePath === 'string' && resourcePath != '') {\n      if (context.lod >= 0) {\n        const suffixSt = resourcePath.lastIndexOf('.')\n        if (suffixSt != -1) {\n          const lodPath = resourcePath.substring(0, suffixSt) + context.lod + resourcePath.substring(suffixSt)\n          if (resourceLoader.resourceAvailable(lodPath)) {\n            resourcePath = lodPath\n          }\n        }\n      }\n      this.getParameter('FilePath').setValue(resourcePath)\n    }\n  }\n}\n\nRegistry.register('VLHImage', VLHImage)\n\nexport { VLHImage }\n","import util from 'util'\n\n/* eslint-disable new-cap */\n/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { VLHImage } from './VLHImage.js'\nimport { BooleanParameter } from '../Parameters/BooleanParameter.js'\n\n/**\n * An EnvMap can load High Dynamic Range environment map images, necessary for high quality PBR lighting.\n * <br>\n * <br>\n * **Parameters**\n * * **HeadLightMode(`BooleanParameter`):** Enables Headlight mode so that the environment lighting is aligned with the camera.\n * With Headlight mode on, the top of the env map is aligned with the direction of the camera, so a the view is generally well lit.\n *\n * @extends VLHImage\n */\nclass EnvMap extends VLHImage {\n  /**\n   * Create an env map.\n   * @param {string} name - The name value.\n   * @param {object} params - The params value.\n   */\n  constructor(name, params = {}) {\n    super(name, params)\n\n    this.addParameter(new BooleanParameter('HeadLightMode', false))\n\n    this.utf8decoder = util.TextDecoder ? new util.TextDecoder() : new TextDecoder()\n    this.shCoeffs = []\n  }\n\n  /**\n   * The __decodeData method.\n   * @param {object} entries - The entries value.\n   * @return {promise}\n   * @private\n   */\n  __decodeData(entries) {\n    const samples = entries.samples\n\n    if (samples) {\n      this.luminanceData = JSON.parse(this.utf8decoder.decode(samples))\n\n      if (this.luminanceData.shCoeffs) {\n        for (let i = 0; i < 9; i++) {\n          this.shCoeffs[i] = new Color(\n            this.luminanceData.shCoeffs[i * 3 + 0],\n            this.luminanceData.shCoeffs[i * 3 + 1],\n            this.luminanceData.shCoeffs[i * 3 + 2]\n          )\n        }\n      }\n    }\n    return super.__decodeData(entries)\n  }\n\n  /**\n   * Calculate the luminance of the Environment in the direction.\n   *\n   * @param {Vec3} dir - The dir value.\n   * @return {number} - The return value.\n   */\n  dirToLuminance(dir) {\n    // normal is assumed to have unit length\n    const x = dir.x\n    const y = dir.y\n    const z = dir.z\n\n    // band 0\n    const result = this.shCoeffs[0].scale(0.886227)\n\n    // band 1\n    result.addInPlace(this.shCoeffs[1].scale(2.0 * 0.511664 * y))\n    result.addInPlace(this.shCoeffs[2].scale(2.0 * 0.511664 * z))\n    result.addInPlace(this.shCoeffs[3].scale(2.0 * 0.511664 * x))\n\n    // band 2\n    result.addInPlace(this.shCoeffs[4].scale(2.0 * 0.429043 * x * y))\n    result.addInPlace(this.shCoeffs[5].scale(2.0 * 0.429043 * y * z))\n    result.addInPlace(this.shCoeffs[6].scale(0.743125 * z * z - 0.247708))\n    result.addInPlace(this.shCoeffs[7].scale(2.0 * 0.429043 * x * z))\n    result.addInPlace(this.shCoeffs[8].scale(0.429043 * (x * x - y * y)))\n    return result.luminance()\n  }\n}\n\nRegistry.register('EnvMap', EnvMap)\n\nexport { EnvMap }\n","import { EventEmitter } from '../../Utilities/index'\nimport { loadTextfile, loadBinfile } from '../Utils.js'\n\n// eslint-disable-next-line require-jsdoc\nfunction getLanguage() {\n  if (!globalThis.navigator) return 'en'\n\n  // Check if a language is explicitly selected.\n  const searchParams = new URLSearchParams(window.location.search)\n  if (searchParams.has('lang')) return searchParams.get('lang')\n\n  const nav = globalThis.navigator\n  const browserLanguagePropertyKeys = ['language', 'browserLanguage', 'systemLanguage', 'userLanguage']\n  let i\n  let language\n\n  const clean = (language) => {\n    if (language.startsWith('en')) return 'En'\n    else if (language.startsWith('es')) return 'Es'\n    else if (language.startsWith('fr')) return 'Fr'\n    else if (language.startsWith('gb') || language.startsWith('de')) return 'Gb'\n    return language\n  }\n\n  // support for HTML 5.1 \"navigator.languages\"\n  if (Array.isArray(nav.languages)) {\n    for (i = 0; i < nav.languages.length; i++) {\n      language = nav.languages[i]\n      if (language && language.length) {\n        return clean(language)\n      }\n    }\n  }\n\n  // support for other well known properties in browsers\n  for (i = 0; i < browserLanguagePropertyKeys.length; i++) {\n    language = nav[browserLanguagePropertyKeys[i]]\n    if (language && language.length) {\n      return clean(language)\n    }\n  }\n\n  return null\n}\n\n/** Class representing a label manager.\n * @private\n */\nclass LabelManager extends EventEmitter {\n  /**\n   * Create a label manager.\n   */\n  constructor() {\n    super()\n    this.__labelLibraries = {}\n\n    this.__language = getLanguage()\n    this.__foundLabelLibraries = {}\n  }\n\n  /**\n   * Load a label library into the manager.\n   * @param {string} name - The name of the library.\n   * @param {json} json - The json data of of the library.\n   */\n  loadLibrary(name, url) {\n    const stem = name.substring(0, name.lastIndexOf('.'))\n    this.__foundLabelLibraries[stem] = url\n\n    if (name.endsWith('.labels')) {\n      loadTextfile(url, (text) => {\n        this.__labelLibraries[stem] = JSON.parse(text)\n        this.emit('labelLibraryLoaded', { library: stem })\n      })\n    } else if (name.endsWith('.xlsx') && window.navigator && window.XLSX) {\n      // Note: example taken from here..\n      // https://stackoverflow.com/questions/8238407/how-to-parse-excel-file-in-javascript-html5\n      // and here:\n      // https://github.com/SheetJS/js-xlsx/tree/master/demos/xhr\n      loadBinfile(url, (data) => {\n        const unit8array = new Uint8Array(data)\n        const workbook = XLSX.read(unit8array, {\n          type: 'array',\n        })\n        const json = {}\n        workbook.SheetNames.forEach(function (sheetName) {\n          // Here is your object\n          const rows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName])\n          rows.forEach(function (row) {\n            const identifier = row.Identifier\n            delete row.Identifier\n            json[identifier] = row\n          })\n        })\n\n        this.__labelLibraries[stem] = json\n        this.emit('labelLibraryLoaded', { library: stem })\n      })\n    }\n  }\n\n  /**\n   * Checks if the library is found.\n   * @param {string} name - The name of the library.\n   * @return {boolean} - Returns true if the library is found.\n   */\n  isLibraryFound(name) {\n    return name in this.__foundLabelLibraries\n  }\n\n  /**\n   * Checks if the library is loaded.\n   * @param {string} name - The name of the library.\n   * @return {boolean} - Returns true if the library is loaded.\n   */\n  isLibraryLoaded(name) {\n    return name in this.__labelLibraries\n  }\n\n  /**\n   * The getLabelText method.\n   * @param {string} libraryName - The name of the library.\n   * @param {string} labelName - The name of the label.\n   * @return {string} - The return value.\n   */\n  getLabelText(libraryName, labelName) {\n    const library = this.__labelLibraries[libraryName]\n    if (!library) {\n      throw new Error(\n        \"LabelLibrary: '\" +\n          libraryName +\n          \"' not found in LabelManager. Found: [\" +\n          Object.keys(this.__labelLibraries) +\n          ']'\n      )\n    }\n    const label = library[labelName]\n    if (!label) {\n      throw new Error(\n        \"Label: '\" +\n          labelName +\n          \"' not found in LabelLibrary: '\" +\n          libraryName +\n          \"'. Found: [\" +\n          Object.keys(library) +\n          ']'\n      )\n    }\n    const labelText = label[this.__language]\n    if (!labelText) {\n      if (label['En']) return label['En']\n      throw new Error(\"labelText: '\" + language + \"' not found in Label. Found: [\" + Object.keys(label) + ']')\n    }\n    return labelText\n  }\n\n  /**\n   * The setLabelText method.\n   * @param {string} libraryName - The name of the library.\n   * @param {string} labelName - The name of the label.\n   * @param {string} labelText - The text of the label.\n   */\n  setLabelText(libraryName, labelName, labelText) {\n    let library = this.__labelLibraries[libraryName]\n    if (!library) {\n      library = {}\n      this.__labelLibraries[libraryName] = library\n    }\n    let label = library[labelName]\n    if (!label) {\n      label = {}\n      library[labelName] = label\n    }\n    label[this.__language] = labelText\n    // TODO: Push to server.\n  }\n\n  setLanguage(ln) {\n    this.__language = ln\n  }\n}\n\nconst labelManager = new LabelManager()\nexport { labelManager }\n","/* eslint-disable guard-for-in */\nimport { Color } from '../../Math/index'\nimport { BooleanParameter, NumberParameter, ColorParameter, StringParameter } from '../Parameters/index'\nimport { Registry } from '../../Registry'\nimport { DataImage } from './DataImage.js'\nimport { labelManager } from './LabelManager.js'\n\n// http://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-on-html-canvas\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x - The top left x coordinate\n * @param {Number} y - The top left y coordinate\n * @param {Number} width - The width of the rectangle\n * @param {Number} height - The height of the rectangle\n * @param {Number} [radius = 5] - The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] - Top left\n * @param {Number} [radius.tr = 0] - Top right\n * @param {Number} [radius.br = 0] - Bottom right\n * @param {Number} [radius.bl = 0] - Bottom left\n * @param {Boolean} [fill = false] - Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] - Whether to stroke the rectangle.\n * @param {Number} [strokeWidth] - The strokeWidth param.\n * @private\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke, strokeWidth) {\n  if (typeof stroke == 'undefined') {\n    stroke = true\n  }\n  if (typeof radius === 'undefined') {\n    radius = 5\n  }\n  if (typeof radius === 'number') {\n    radius = {\n      tl: radius,\n      tr: radius,\n      br: radius,\n      bl: radius,\n    }\n  } else {\n    const defaultRadius = {\n      tl: 0,\n      tr: 0,\n      br: 0,\n      bl: 0,\n    }\n    for (const side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side]\n    }\n  }\n  ctx.beginPath()\n  ctx.moveTo(x + radius.tl, y)\n  ctx.lineTo(x + width - radius.tr, y)\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n  ctx.lineTo(x + width, y + height - radius.br)\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n  ctx.lineTo(x + radius.bl, y + height)\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n  ctx.lineTo(x, y + radius.tl)\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n  ctx.closePath()\n  if (fill) {\n    ctx.fill()\n  }\n  if (stroke) {\n    ctx.lineWidth = strokeWidth\n    ctx.stroke()\n  }\n}\n\n/**\n * Represents a 2D label item the scene.\n * Since displaying text in the scene is not an easy task,\n * we've abstracted the complicated logic behind this class, transforming any text into a 2D image(`DataImage`).\n *\n * **Library List**\n * * LabelPack\n *\n * **Parameters**\n * * **Library(`StringParameter`):** Library you wan to use for your label, see **Library List** above.\n * * **Text(`StringParameter`):**\n * * **FontColor(`ColorParameter`):**\n * * **Margin(`NumberParameter`):**\n * * **BorderWidth(`NumberParameter`):**\n * * **BorderRadius(`NumberParameter`):**\n * * **Outline(`BooleanParameter`):**\n * * **OutlineColor(`BooleanParameter`):**\n * * **Background(`BooleanParameter`):**\n * * **ColorParameter(`BackgroundColor`):**\n * * **FillBackground(`BooleanParameter`):**\n * * **StrokeBackgroundOutline(`BooleanParameter`):**\n * * **FontSize(`NumberParameter`):** Represents FontSize of the label\n * * **Font(`StringParameter`):**\n *\n * **Events**\n * * **loaded:** Triggered when label's data is loaded.\n * * **updated:** Triggered when label's data changes.\n * * **labelRendered:** Triggered when the text image is rendered. Contains `width`, `height` and data of the image.\n *\n * @extends DataImage\n */\nclass Label extends DataImage {\n  /**\n   * Creates a label instance. Creating a canvas element that hosts the specified text.\n   *\n   * @param {string} name - The name value.\n   * @param {string} library - The library value.\n   */\n  constructor(name, library) {\n    super(name)\n\n    this.__canvasElem = document.createElement('canvas')\n    const fontSize = 22\n\n    const libraryParam = this.addParameter(new StringParameter('Library'))\n    this.addParameter(new StringParameter('Text', ''))\n    // or load the label when it is loaded.\n\n    // const setLabelTextToLibrary = ()=>{\n    //     const library = libraryParam.getValue();\n    //     const name = this.getName();\n    //     const text = textParam.getValue();\n    //     labelManager.setLabelTextToLibrary(library, name, text);\n    // }\n    // textParam.on('valueChanged', setLabelText);\n\n    this.addParameter(new ColorParameter('FontColor', new Color(0, 0, 0)))\n    // this.addParameter(new StringParameter('TextAlign', 'left'))\n    // this.addParameter(MultiChoiceParameter('TextAlign', 0, ['left', 'right']));\n    // this.addParameter(new BooleanParameter('FillText', true))\n    this.addParameter(new NumberParameter('Margin', fontSize * 0.5))\n    this.addParameter(new NumberParameter('BorderWidth', 2))\n    this.addParameter(new NumberParameter('BorderRadius', fontSize * 0.5))\n    this.addParameter(new BooleanParameter('Outline', false))\n    this.addParameter(new BooleanParameter('OutlineColor', new Color(0, 0, 0)))\n    this.addParameter(new BooleanParameter('Background', true))\n    this.addParameter(new ColorParameter('BackgroundColor', new Color('#FBC02D')))\n    this.addParameter(new BooleanParameter('FillBackground', true))\n    this.addParameter(new BooleanParameter('StrokeBackgroundOutline', true))\n    this.addParameter(new NumberParameter('FontSize', 22))\n    this.addParameter(new StringParameter('Font', 'Helvetica'))\n\n    const reload = () => {\n      this.loadLabelData()\n    }\n    this.on('nameChanged', reload)\n\n    if (library) libraryParam.setValue(library)\n\n    this.__requestedReRender = false\n    this.__needsRender = false\n    this.loadLabelData()\n  }\n\n  /**\n   * This method can be overridden in derived classes\n   * to perform general updates (see GLPass or BaseItem).\n   *\n   * @param {object} event - The event object.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    super.__parameterValueChanged(event)\n    if (!this.__requestedReRender) {\n      this.__requestedReRender = true\n      this.loadLabelData()\n    }\n  }\n\n  /**\n   * Method in charge of basically do everything, set text, load/update it, get the library, load the font, etc.\n   */\n  loadLabelData() {\n    const onLoaded = () => {\n      this.__requestedReRender = false\n      this.__needsRender = true\n      if (!this.__loaded) {\n        this.__loaded = true\n        this.emit('loaded', {})\n      } else {\n        this.emit('updated', {})\n      }\n    }\n\n    const loadText = () => {\n      return new Promise((resolve) => {\n        const library = this.getParameter('Library').getValue()\n        if (library == '') {\n          resolve()\n          return\n        }\n        if (!labelManager.isLibraryFound(library)) {\n          console.warn('Label Library not found:', library)\n          resolve()\n          return\n        }\n        const getLibraryText = () => {\n          try {\n            const name = this.getName()\n            // console.log(\"Text Loaded:\" + name);\n            const text = labelManager.getLabelText(library, name)\n            this.getParameter('Text').setValue(text)\n          } catch (e) {\n            // Note: if the text is not found in the labels pack\n            // an exception is thrown, and we catch it here.\n            console.warn(e)\n          }\n          resolve()\n        }\n        if (!labelManager.isLibraryLoaded(library)) {\n          labelManager.on('labelLibraryLoaded', (event) => {\n            const loadedLibrary = event.library\n            if (loadedLibrary == library) getLibraryText()\n          })\n        } else {\n          getLibraryText()\n        }\n      })\n    }\n    const loadFont = () => {\n      return new Promise((resolve) => {\n        if (document.fonts != undefined) {\n          const font = this.getParameter('Font').getValue()\n          const fontSize = this.getParameter('FontSize').getValue()\n          document.fonts.load(fontSize + 'px \"' + font + '\"').then(() => {\n            // console.log(\"Font Loaded:\" + font);\n            resolve()\n          })\n        } else {\n          resolve()\n        }\n      })\n    }\n    Promise.all([loadText(), loadFont()]).then(onLoaded)\n  }\n\n  /**\n   * Renders the label text to a canvas element ready to display.\n   * Here is where all parameters are applied to the canvas containing the text,\n   * then the image data is extracted from the canvas context.\n   */\n  renderLabelToImage() {\n    // console.log(\"renderLabelToImage\")\n    const ctx2d = this.__canvasElem.getContext('2d', {\n      alpha: true,\n    })\n\n    let text = this.getParameter('Text').getValue()\n    if (text == '') text = this.getName()\n\n    const font = this.getParameter('Font').getValue()\n    const fontColor = this.getParameter('FontColor').getValue()\n    const textAlign = 'left' // this.getParameter('TextAlign').getValue()\n    const fontSize = this.getParameter('FontSize').getValue()\n    const margin = this.getParameter('Margin').getValue()\n    const borderWidth = this.getParameter('BorderWidth').getValue()\n    const borderRadius = this.getParameter('BorderRadius').getValue()\n    const outline = this.getParameter('Outline').getValue()\n    const outlineColor = this.getParameter('OutlineColor').getValue()\n    const background = this.getParameter('Background').getValue()\n    const backgroundColor = this.getParameter('BackgroundColor').getValue()\n    const fillBackground = this.getParameter('FillBackground').getValue()\n    const strokeBackgroundOutline = this.getParameter('StrokeBackgroundOutline').getValue()\n\n    // let ratio = devicePixelRatio / backingStoreRatio;\n    const marginAndBorder = margin + borderWidth\n    const lines = text.split('\\n')\n\n    ctx2d.font = fontSize + 'px \"' + font + '\"'\n    // console.log(\"renderLabelToImage:\" + ctx2d.font);\n    let width = 0\n    lines.forEach((line) => {\n      width = Math.max(ctx2d.measureText(line).width, width)\n    })\n    const fontHeight = fontSize // parseInt(fontSize)\n    this.width = Math.ceil(width + marginAndBorder * 2)\n    this.height = Math.ceil(fontHeight * lines.length + marginAndBorder * 2)\n    ctx2d.canvas.width = this.width\n    ctx2d.canvas.height = this.height\n    this.__canvasElem.width = this.width\n    this.__canvasElem.height = this.height\n\n    // ctx2d.clearRect(0, 0, this.width, this.height);\n    ctx2d.fillStyle = 'rgba(0, 0, 0, 0.0)'\n    ctx2d.fillRect(0, 0, this.width, this.height)\n\n    if (background) {\n      ctx2d.fillStyle = backgroundColor.toHex()\n      ctx2d.strokeStyle = outlineColor.toHex()\n      roundRect(\n        ctx2d,\n        borderWidth,\n        borderWidth,\n        this.width - borderWidth * 2,\n        this.height - borderWidth * 2,\n        borderRadius,\n        fillBackground,\n        strokeBackgroundOutline,\n        borderWidth\n      )\n    }\n\n    ctx2d.font = fontSize + 'px \"' + font + '\"'\n    ctx2d.textAlign = textAlign\n    ctx2d.fillStyle = fontColor.toHex()\n    ctx2d.textBaseline = 'hanging'\n    lines.forEach((line, index) => {\n      ctx2d.fillText(line, marginAndBorder, marginAndBorder + index * fontHeight)\n    })\n\n    if (outline) {\n      ctx2d.strokeStyle = outlineColor.toHex()\n      ctx2d.lineWidth = 1.5\n      ctx2d.strokeText(text, marginAndBorder, marginAndBorder)\n    }\n\n    this.__data = ctx2d.getImageData(0, 0, this.width, this.height)\n    this.__needsRender = false\n    this.emit('labelRendered', {\n      width: this.width,\n      height: this.height,\n      data: this.__data,\n    })\n  }\n\n  /**\n   *  Returns all parameters and class state values(Including data).\n   *\n   * @return {object} - The return value.\n   */\n  getParams() {\n    if (this.__needsRender) this.renderLabelToImage()\n    return super.getParams()\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n    this.__getLabelText()\n  }\n}\n\nRegistry.register('Label', Label)\n\nexport { Label }\n","import { Registry } from '../../Registry'\nimport { BaseImage } from '../BaseImage.js'\n\n/** Class representing a 2D video stream image.\n * @private\n * @extends BaseImage\n */\nclass VideoStreamImage2D extends BaseImage {\n  /**\n   * Create a 2D video stream image.\n   */\n  constructor() {\n    super()\n    this.__loaded = false\n  }\n\n  /**\n   * The connectWebcam method.\n   * @param {number} width - The width of the video.\n   * @param {number} height - The height of the video.\n   * @param {false} rearCamera - Boolean determining if it is a rear camera or not.\n   */\n  connectWebcam(width, height, rearCamera = false) {\n    const video = {\n      width,\n      height,\n      frameRate: {\n        ideal: 60,\n        max: 60,\n      },\n    }\n    if (rearCamera) {\n      video.facingMode = {\n        exact: 'environment',\n      }\n    } else {\n      video.facingMode = {\n        facingMode: 'user',\n      }\n    }\n\n    const domElement = document.createElement('video')\n    // TODO - confirm its necessary to add to DOM\n    domElement.style.display = 'none'\n    domElement.preload = 'auto'\n    domElement.crossOrigin = 'anonymous'\n    // domElement.crossorigin = true;\n    document.body.appendChild(domElement)\n\n    // List cameras and microphones.\n    // navigator.mediaDevices.enumerateDevices()\n    //     .then((devices)=>{\n    //         // devices.forEach((device)=>{\n    //         //     if (device.kind == \"videoinput\") {\n    //         //         console.log(device.kind + \": \" + device.label + \" id = \" + device.deviceId);\n    //         //         videoinputs.push(device);\n    //         //     }\n    //         // });\n\n    //     })\n    //     .catch(function(err) {\n    //         console.log(err.name + \": \" + err.message);\n    //     });\n\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: false,\n        video,\n      })\n      .then((mediaStream) => {\n        domElement.srcObject = mediaStream\n        domElement.onloadedmetadata = (e) => {\n          domElement.play()\n\n          this.width = domElement.videoWidth\n          this.height = domElement.videoHeight\n          console.log('Webcam:[' + this.width + ', ' + this.height + ']')\n          this.__data = domElement\n          this.__loaded = true\n          this.emit('loaded', {})\n\n          let prevFrame = 0\n          const frameRate = 60\n          const timerCallback = () => {\n            if (domElement.paused || domElement.ended) {\n              return\n            }\n            // Check to see if the video has progressed to the next frame.\n            // If so, then we emit and update, which will cause a redraw.\n            const currentFrame = Math.floor(domElement.currentTime * frameRate)\n            if (prevFrame != currentFrame) {\n              this.emit('updated', {})\n              prevFrame = currentFrame\n            }\n            setTimeout(timerCallback, 20) // Sample at 50fps.\n          }\n          timerCallback()\n        }\n      })\n      .catch(function (err) {\n        /* handle the error */\n      })\n  }\n\n  /**\n   * The setVideoStream method.\n   * @param {any} video - The video value.\n   */\n  setVideoStream(video) {\n    this.__loaded = false\n    this.width = video.videoWidth\n    this.height = video.videoHeight\n    this.start()\n    this.__data = video\n    this.__loaded = true\n    this.emit('loaded', {})\n  }\n\n  // getAudioSource() {\n  //     return this.__data;\n  // }\n\n  /**\n   * The stop method.\n   */\n  stop() {\n    clearInterval(this.__intervalId)\n  }\n\n  /**\n   * The start method.\n   */\n  start() {\n    this.__intervalId = setInterval(() => {\n      this.emit('updated', {})\n    }, 20) // Sample at 50fps.\n  }\n\n  /**\n   * The isLoaded method.\n   * @return {boolean} - The return value.\n   */\n  isLoaded() {\n    return this.__loaded\n  }\n\n  /**\n   * The getParams method.\n   * @return {any} - The return value.\n   */\n  getParams() {\n    return {\n      type: this.type,\n      format: this.format,\n      width: this.width,\n      height: this.height,\n      data: this.__data,\n      flipY: this.getParameter('FlipY').getValue(),\n    }\n  }\n}\n\nRegistry.register('VideoStreamImage2D', VideoStreamImage2D)\n\nexport { VideoStreamImage2D }\n","/* eslint-disable no-unused-vars */\n/* eslint-disable valid-jsdoc */\nimport { Xfo } from '../Math/index'\nimport { TreeItem } from './TreeItem.js'\nimport { Registry } from '../Registry'\n\n/**\n * TreeItem type of class designed for making duplications of parts of the tree.\n *\n * @extends {TreeItem}\n */\nclass InstanceItem extends TreeItem {\n  /**\n   * Create an instance item.\n   * @param {string} name - The name of the instance item.\n   */\n  constructor(name) {\n    super(name)\n  }\n\n  /**\n   * Clones passed in `TreeItem` all the way down and adds it as a child of current item.\n   *\n   * @param {TreeItem} treeItem - The treeItem value.\n   */\n  setSrcTree(treeItem, context) {\n    this.__srcTree = treeItem\n    const clonedTree = this.__srcTree.clone(context)\n    clonedTree.getParameter('LocalXfo').setValue(new Xfo())\n    this.addChild(clonedTree, false)\n  }\n\n  /**\n   * Returns the last `TreeItem` cloned.\n   *\n   * @return {TreeItem} - The return value.\n   */\n  getSrcTree() {\n    return this.__srcTree\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Sets state of current Item(Including cloned item) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context = {}) {\n    super.readBinary(reader, context)\n\n    // console.log(\"numTreeItems:\", context.numTreeItems, \" numGeomItems:\", context.numGeomItems)\n    const path = reader.loadStrArray()\n    // console.log(\"InstanceItem of:\", path)\n    try {\n      context.resolvePath(\n        path,\n        (treeItem) => {\n          this.setSrcTree(treeItem, context)\n        },\n        (error) => {\n          console.warn(`Error loading InstanceItem: ${this.getPath()}, unable to resolve: ${path}. ` + error.message)\n        }\n      )\n    } catch (error) {\n      console.warn(`Error loading InstanceItem: ${this.getPath()}: ` + error.message)\n    }\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context = {}) {\n    const j = super.toJSON(context)\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @todo Needs to be implemented.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   * @param {function} onDone - The onDone value.\n   */\n  fromJSON(j, context = {}, onDone) {}\n}\n\nRegistry.register('InstanceItem', InstanceItem)\n\nexport { InstanceItem }\n","import { Color, Vec3 } from '../Math/index.js'\nimport { TreeItem } from './TreeItem'\nimport { Material } from './Material'\n\n/**\n * Base class that represents geometry items with layering, overlaying and cut away features.\n *\n * **Events**\n * * **cutAwayChanged:** Triggered when the cutaway variables change(if enabled or not, the vector and the distance).\n * @extends TreeItem\n */\nclass BaseGeomItem extends TreeItem {\n  /**\n   * Create a base geometry item.\n   * @param {string} name - The name of the base geom item.\n   */\n  constructor(name) {\n    super(name)\n    this.overlay = false\n    this.__cutAway = false\n    this.__cutAwayVector = new Vec3(1, 0, 0)\n    this.__cutAwayDist = 0\n    this.__layers = []\n  }\n\n  /**\n   * Sets overlay value.\n   *\n   * @todo Need to find the layer and add this item to it.\n   * @param {boolean} val - `true` to enable it.\n   */\n  setOverlay(val) {\n    // TODO: need to find the layer and add this item to it.\n    this.overlay = val\n  }\n\n  /**\n   * Returns `true` if overlay is enabled for current item.\n   *\n   * @return {boolean} - The return value.\n   */\n  isOverlay() {\n    return this.overlay\n  }\n\n  /**\n   * Adds a layer to current item.\n   *\n   * @todo Need to find the layer and add this item to it.\n   * @param {string} name - The name of the layer.\n   */\n  addLayer(name) {\n    // TODO: need to find the layer and add this item to it.\n    this.__layers.push(name)\n  }\n\n  /**\n   * Returns all layers in current item.\n   *\n   * @return {array} - The return value.\n   */\n  getLayers() {\n    return this.__layers\n  }\n\n  // ////////////////////////////////////////\n  // Cutaways\n\n  /**\n   * Checks if cutaway is enabled.\n   *\n   * @return {boolean} - Returns `true` if enabled.\n   */\n  isCutawayEnabled() {\n    return this.__cutAway\n  }\n\n  /**\n   * Sets cutaway state.\n   *\n   * @param {boolean} state - `true` to enable it, otherwise `false`.\n   */\n  setCutawayEnabled(state) {\n    this.__cutAway = state\n    this.emit('cutAwayChanged', {})\n  }\n\n  /**\n   * Returns cutaway vector value.\n   *\n   * @return {Vec3|boolean} - `Vec3` when it is set, `false` on default.\n   */\n  getCutVector() {\n    return this.__cutAwayVector\n  }\n\n  /**\n   * Sets cutaway vector value.\n   *\n   * @param {Vec3} cutAwayVector - The cutAwayVector value.\n   */\n  setCutVector(cutAwayVector) {\n    this.__cutAwayVector = cutAwayVector\n    this.emit('cutAwayChanged', {})\n  }\n\n  /**\n   * Getter for the cutaway distance.\n   *\n   * @return {number} - The return value.\n   */\n  getCutDist() {\n    return this.__cutAwayDist\n  }\n\n  /**\n   * Sets cutaway distance value.\n   *\n   * @param {number} cutAwayDist - The cutAwayDist value.\n   */\n  setCutDist(cutAwayDist) {\n    this.__cutAwayDist = cutAwayDist\n    this.emit('cutAwayChanged', {})\n  }\n\n  // ///////////////////////////\n  // Persistence\n\n  /**\n   * Sets state of current Item(Including layers & material) using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.readBinary(reader, context)\n\n    if (context.versions['zea-engine'].compare([0, 0, 4]) >= 0) {\n      const materialName = reader.loadStr()\n      // const materialName = 'Material' + this.__bodyDescId;\n\n      const materialLibrary = context.assetItem.getMaterialLibrary()\n      let material = materialLibrary.getMaterial(materialName, false)\n      if (!material) {\n        // console.warn(\"BaseGeomItem :'\" + this.name + \"' Material not found:\" + materialName);\n        // material = materialLibrary.getMaterial('DefaultMaterial');\n\n        material = new Material(materialName, 'SimpleSurfaceShader')\n        material.getParameter('BaseColor').loadValue(Color.random(0.25))\n        context.assetItem.getMaterialLibrary().addMaterial(material)\n      }\n      this.getParameter('Material').loadValue(material)\n\n      this.__layers = reader.loadStrArray()\n      if (this.__layers.length > 0) {\n        // console.log(\"Layers:\", this.__layers)\n        for (const layer of this.__layers) context.addGeomToLayer(this, layer)\n      }\n    }\n  }\n}\n\nexport { BaseGeomItem }\n","import { Xfo, Box3, Vec3 } from '../Math/index'\nimport { XfoParameter, Mat4Parameter } from './Parameters/index'\nimport { MaterialParameter } from './Parameters/MaterialParameter'\nimport { GeometryParameter } from './Parameters/GeometryParameter'\nimport { Registry } from '../Registry'\nimport { BaseGeomItem } from './BaseGeomItem.js'\nimport { Operator } from './Operators/Operator.js'\nimport { OperatorInput } from './Operators/OperatorInput.js'\nimport { OperatorOutput } from './Operators/OperatorOutput.js'\nimport { BaseProxy } from './Geometry/GeomProxies.js'\n\nlet calculatePreciseBoundingBoxes = false\n\n/** The operator the calculates the global Xfo of a TreeItem based on its parents GlobalXfo and its own LocalXfo\n * @extends Operator\n * @private\n */\nclass CalcGeomMatOperator extends Operator {\n  /**\n   *Creates an instance of CalcGeomMatOperator.\n   *\n   * @param {*} globalXfoParam\n   * @param {*} geomOffsetXfoParam\n   * @param {*} geomMatParam\n   * @memberof CalcGeomMatOperator\n   */\n  constructor(globalXfoParam, geomOffsetXfoParam, geomMatParam) {\n    super('CalcGeomMatOperator')\n    this.addInput(new OperatorInput('GlobalXfo')).setParam(globalXfoParam)\n    this.addInput(new OperatorInput('GeomOffsetXfo')).setParam(geomOffsetXfoParam)\n    this.addOutput(new OperatorOutput('GeomMat')).setParam(geomMatParam)\n  }\n\n  /**\n   * The evaluate method.\n   */\n  evaluate() {\n    const globalXfo = this.getInput('GlobalXfo').getValue()\n    const geomOffsetXfo = this.getInput('GeomOffsetXfo').getValue()\n    const geomMatOutput = this.getOutput('GeomMat')\n\n    const globalMat4 = globalXfo.toMat4()\n    const geomOffsetMat4 = geomOffsetXfo.toMat4()\n    geomMatOutput.setClean(globalMat4.multiply(geomOffsetMat4))\n  }\n}\n\n/**\n * Class representing a geometry item in a scene tree.\n *\n * **Parameters**\n * * **Geometry(`GeometryParameter`):** The geometry to be rendered for this GeomItem\n * * **Material(`MaterialParameter`):** The Material to use when rendering this GeomItem\n * * **GeomOffsetXfo(`XfoParameter`):** Provides an offset transformation that is applied only to the geometry and not inherited by child items.\n * * **GeomMat(`Mat4Parameter`):** Calculated from the GlobalXfo and the GeomOffsetXfo, this matrix is provided to the renderer for rendering.\n *\n * @extends BaseGeomItem\n */\nclass GeomItem extends BaseGeomItem {\n  /**\n   * Creates a geometry item.\n   * @param {string} name - The name of the geom item.\n   * @param {BaseGeom} geometry - The geometry value.\n   * @param {Material} material - The material value.\n   * @param {Xfo} xfo - The initial Xfo of the new GeomItem.\n   */\n  constructor(name, geometry = undefined, material = undefined, xfo = undefined) {\n    super(name)\n\n    this.__geomParam = this.addParameter(new GeometryParameter('Geometry'))\n\n    this.listenerIDs = {}\n    this.listenerIDs['valueChanged'] = this.__geomParam.on('valueChanged', event => {\n      this._setBoundingBoxDirty(event)\n    })\n    this.listenerIDs['boundingBoxChanged'] = this.__geomParam.on('boundingBoxChanged', event => {\n      this._setBoundingBoxDirty(event)\n    })\n\n    this.__materialParam = this.addParameter(new MaterialParameter('Material'))\n    this.addParameterDeprecationMapping('material', 'Material')\n\n    this.__geomOffsetXfoParam = this.addParameter(new XfoParameter('GeomOffsetXfo'))\n    this.__geomMatParam = this.addParameter(new Mat4Parameter('GeomMat'))\n\n    this.geomIndex = -1\n    this.assetItem = null\n\n    this.calcGeomMatOperator = new CalcGeomMatOperator(\n      this.__globalXfoParam,\n      this.__geomOffsetXfoParam,\n      this.__geomMatParam\n    )\n\n    if (geometry) this.getParameter('Geometry').loadValue(geometry)\n    if (material) this.getParameter('Material').loadValue(material)\n    if (xfo) this.getParameter('LocalXfo').setValue(xfo)\n  }\n\n  // ////////////////////////////////////////\n  // Geometry\n\n  /**\n   * Returns `Geometry` parameter value.\n   *\n   * @return {BaseGeom} - The return value.\n   */\n  getGeometry() {\n    console.warn(`deprecated. please use 'getParameter('Geometry').getValue`)\n    return this.__geomParam.getValue()\n  }\n\n  /**\n   * Sets geometry object to `Geometry` parameter.\n   *\n   * @param {BaseGeom} geom - The geom value.\n   */\n  setGeometry(geom) {\n    console.warn(`deprecated. please use 'getParameter('Geometry').setValue`)\n    this.__geomParam.setValue(geom)\n  }\n\n  /**\n   * Getter for geometry (getGeom is deprecated. Please use getGeometry).\n   *\n   * @deprecated\n   * @return {BaseGeom} - The return value.\n   */\n  getGeom() {\n    console.warn(`deprecated. please use 'getParameter('Geometry').getValue`)\n    return this.__geomParam.getValue()\n  }\n\n  /**\n   * Setter for geometry. (setGeom is deprecated. Please use setGeometry).\n   *\n   * @deprecated\n   * @param {BaseGeom} geom - The geom value.\n   * @return {number} - The return value.\n   */\n  setGeom(geom) {\n    console.warn(\"setGeom is deprecated. Please use 'getParameter('Geometry').setValue'\")\n    return this.__geomParam.setValue(geom)\n  }\n\n  /**\n   * Returns the specified value of `Material`parameter.\n   *\n   * @return {Material} - The return value.\n   */\n  getMaterial() {\n    console.warn(`deprecated. please use 'getParameter('Material').getValue`)\n    return this.__materialParam.getValue()\n  }\n\n  /**\n   * Sets material object to `Material` parameter.\n   *\n   * @param {Material} material - The material value.\n   */\n  setMaterial(material) {\n    console.warn(`deprecated. please use 'getParameter('Material').setValue`)\n    this.__materialParam.setValue(material)\n  }\n\n  /**\n   * The _cleanBoundingBox method.\n   * @param {Box3} bbox - The bounding box value.\n   * @return {Box3} - The return value.\n   * @private\n   */\n  _cleanBoundingBox(bbox) {\n    if (this.disableBoundingBox) return bbox\n    bbox = super._cleanBoundingBox(bbox)\n    if (this.geomBBox) {\n      // Note: this bbox is the global bounding box of the geomItem\n      // transformed into the space of the geometry. We reapply\n      // the geom matrix to get back the points in global space.\n      const mat4 = this.getGeomMat4()\n      bbox.addPoint(mat4.transformVec3(this.geomBBox.p0))\n      bbox.addPoint(mat4.transformVec3(this.geomBBox.p1))\n    } else {\n      const geom = this.__geomParam.getValue()\n      if (geom) {\n        if (calculatePreciseBoundingBoxes) {\n          // Note: compting the precise bounding box is much slower and\n          // can make loading big scenes take a bit longer.\n          const mat4 = this.getGeomMat4()\n          if (geom instanceof BaseProxy) {\n            const positions = geom.__buffers.attrBuffers['positions'].values\n            const getVertex = index => {\n              const start = index * 3\n              return new Vec3(positions.subarray(start, start + 3))\n            }\n            for (let i = 0; i < geom.getNumVertices(); i++) {\n              bbox.addPoint(mat4.transformVec3(getVertex(i)))\n            }\n          } else {\n            const positions = geom.getVertexAttribute('positions')\n            for (let i = 0; i < geom.getNumVertices(); i++) {\n              bbox.addPoint(mat4.transformVec3(positions.getValueRef(i)))\n            }\n          }\n        } else {\n          bbox.addBox3(geom.getBoundingBox(), this.getGeomMat4())\n        }\n      }\n    }\n    return bbox\n  }\n\n  // ////////////////////////////////////////\n  // Xfos\n\n  /**\n   * Returns the offset `Xfo` object specified in `GeomOffsetXfo` parameter.\n   *\n   * @return {Xfo} - Returns the geom offset Xfo.\n   */\n  getGeomOffsetXfo() {\n    return this.__geomOffsetXfoParam.getValue()\n  }\n\n  /**\n   * Sets `Xfo` object to `GeomOffsetXfo` parameter.\n   *\n   * @param {Xfo} xfo - The Xfo value.\n   */\n  setGeomOffsetXfo(xfo) {\n    this.__geomOffsetXfoParam.setValue(xfo)\n  }\n\n  /**\n   * Returns `Mat4` object value of `GeomMat` parameter.\n   *\n   * @return {Mat4} - Returns the geom Xfo.\n   */\n  getGeomMat4() {\n    return this.__geomMatParam.getValue()\n  }\n\n  // ///////////////////////////\n  // Debugging\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const json = super.toJSON(context)\n    return json\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context) {\n    super.fromJSON(json, context)\n    context.numGeomItems++\n  }\n\n  /**\n   * Loads state of the Item from a binary object.\n   *\n   * @param {object} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context) {\n    super.readBinary(reader, context)\n\n    context.numGeomItems++\n\n    const itemFlags = reader.loadUInt8()\n    const geomIndex = reader.loadUInt32()\n    const geomLibrary = context.assetItem.getGeometryLibrary()\n\n    this.geomIndex = geomIndex\n    this.assetItem = context.assetItem\n\n    const geom = geomLibrary.getGeom(geomIndex)\n    if (geom) {\n      this.getParameter('Geometry').loadValue(geom)\n    } else {\n      const onGeomLoaded = event => {\n        const { range } = event\n        if (geomIndex >= range[0] && geomIndex < range[1]) {\n          const geom = geomLibrary.getGeom(geomIndex)\n          if (geom) this.getParameter('Geometry').setValue(geom)\n          else console.warn('Geom not loaded:', this.getName())\n          geomLibrary.removeListenerById('rangeLoaded', onGeomLoadedListenerID)\n        }\n      }\n      const onGeomLoadedListenerID = geomLibrary.on('rangeLoaded', onGeomLoaded)\n    }\n\n    // this.setVisibility(j.visibility);\n    // Note: to save space, some values are skipped if they are identity values\n    const geomOffsetXfoFlag = 1 << 2\n    if (itemFlags & geomOffsetXfoFlag) {\n      this.__geomOffsetXfoParam.setValue(\n        new Xfo(reader.loadFloat32Vec3(), reader.loadFloat32Quat(), reader.loadFloat32Vec3())\n      )\n    }\n\n    // BaseGeomItem now handles loading materials.\n    // if (context.version < 4) {\n    if (context.versions['zea-engine'].compare([0, 0, 4]) < 0) {\n      const materialFlag = 1 << 3\n      if (itemFlags & materialFlag) {\n        const materialLibrary = context.assetItem.getMaterialLibrary()\n        const materialName = reader.loadStr()\n        let material = materialLibrary.getMaterial(materialName)\n        if (!material) {\n          console.warn(\"Geom :'\" + this.name + \"' Material not found:\" + materialName)\n          material = materialLibrary.getMaterial('Default')\n        }\n        this.getParameter('Material').loadValue(material)\n      } else {\n        // Force nodes to have a material so we can see them.\n        this.getParameter('Material').loadValue(context.assetItem.getMaterialLibrary().getMaterial('Default'))\n      }\n    }\n\n    // Note: deprecated value. Not sure if we need to load this here.\n    // I think not, but need to test first.\n    if (context.versions['zea-engine'].compare([3, 0, 0]) < 0) {\n      // Load the 'lightmapCoordOffset' value which we no longer use.\n      // Note: we need to load it to increment the file pointer.\n      reader.loadFloat32Vec2()\n    } else {\n      this.geomBBox = new Box3(reader.loadFloat32Vec3(), reader.loadFloat32Vec3())\n    }\n  }\n\n  /**\n   * Returns string representation of current object's state.\n   *\n   * @return {string} - The return value.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new geom item, copies its values\n   * from this item and returns it.\n   *\n   * @param {number} context - The context value.\n   * @return {GeomItem} - Returns a new cloned geom item.\n   */\n  clone(context) {\n    const cloned = new GeomItem()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n\n  /**\n   * Copies current GeomItem with all its children.\n   *\n   * @param {GeomItem} src - The geom item to copy from.\n   * @param {number} context - The context value.\n   */\n  copyFrom(src, context) {\n    super.copyFrom(src, context)\n\n    if (!src.getParameter('Geometry').getValue() && src.geomIndex != -1) {\n      const geomLibrary = src.assetItem.getGeometryLibrary()\n      this.assetItem = src.assetItem\n      this.geomIndex = src.geomIndex\n      this.geomBBox = src.geomBBox\n      const onGeomLoaded = event => {\n        const { range } = event\n        if (this.geomIndex >= range[0] && this.geomIndex < range[1]) {\n          const geom = geomLibrary.getGeom(this.geomIndex)\n          // Note: we need the 'valueChanged' event to be received by the\n          // renderer to then load the geometry into the GPU.\n          if (geom) this.getParameter('Geometry').setValue(geom)\n          else console.warn('Geom not loaded:', this.getName())\n          geomLibrary.removeListenerById('rangeLoaded', this.listenerIDs['rangeLoaded'])\n        }\n      }\n      this.listenerIDs['rangeLoaded'] = geomLibrary.on('rangeLoaded', onGeomLoaded)\n    }\n\n    // Geom Xfo should be dirty after cloning.\n    // Note: this might not be necessary. It should\n    // always be dirty after cloning.\n    this.__geomMatParam.setDirty(this.__cleanGeomMat)\n  }\n\n  /**\n   * Sets the global boolean that controls if GeomItems calculate precise bounding boxes\n   * or use the approximate bounding boxes that are much faster to generate.\n   * Note: computing the precise bounding box is much slower and can make loading\n   * big scenes take a bit longer. This setting is only relevant to geometries loaded\n   * from zcad files.\n   * @param {boolean} value - true for precise bounding boxes, else false for faster approximate bounding boxes.\n   */\n  static setCalculatePreciseBoundingBoxes(value) {\n    calculatePreciseBoundingBoxes = value\n  }\n}\n\nRegistry.register('GeomItem', GeomItem)\n\nexport { GeomItem }\n","import { EventEmitter } from '../Utilities/EventEmitter.js'\n\n/**\n * Provides a context for loading assets. This context can provide the units of the loading scene.\n * E.g. you can specify the scene units as 'millimeters' in the context object.\n * To load external references, you can also provide a dictionary that maps filenames to URLs that are used\n * to resolve the URL of an external reference that a given asset is expecting to find.\n */\nexport class AssetLoadContext extends EventEmitter {\n  /**\n   * Create a AssetLoadContext\n   * @param {AssetLoadContext} context The source context to base this context on.\n   */\n  constructor(context) {\n    super()\n    this.units = context ? context.units : 'meters'\n    this.assets = context ? context.assets : {}\n    this.resources = context ? context.resources : {}\n    this.versions = {}\n    this.url = ''\n    this.folder = ''\n    this.sdk = ''\n    this.assetItem = null\n    this.numTreeItems = 0\n    this.numGeomItems = 0\n\n    this.postLoadCallbacks = [] // Post load callbacks.\n    this.asyncCount = 0\n  }\n\n  /**\n   * During loading, asynchronous processes may be launched, and subsequently completed.\n   * These method helps the Asset track how many asynchronous loading operations may be\n   * occurring with the tree during load.\n   * As each external reference starts to load, it increments this counter, letting the owning\n   * Asset know to wait till the children are loaded before emitting its own 'loaded' event.\n   */\n  incrementAsync() {\n    this.asyncCount++\n  }\n\n  /**\n   * As each external reference completes loading, it decrements this counter allowing the owning\n   * asset to know that the subtrees are loaded.\n   */\n  decrementAsync() {\n    this.asyncCount--\n\n    // Wait for all nested XRefs to load before considering this asset loaded.\n    if (this.asyncCount == 0) {\n      this.emit('done')\n    }\n  }\n  /**\n   * Resolves a path within the loading asset. This is used to connect\n   * items within the tree to other items. e.g. a Group can find its members.\n   * or an instance can find its source tree.\n   * @param {array} path the path within the tree relative to the loading asset\n   * @param {function} onSucceed called with the successful result of the path resolution.\n   * @param {function} onFail called when the path resolution fails.\n   */\n  resolvePath(path, onSucceed, onFail) {\n    if (!path) throw new Error('Path not specified')\n\n    // Note: Why not return a Promise here?\n    // Promise evaluation is always async, so\n    // all promises will be resolved after the current call stack\n    // has terminated. In our case, we want all paths\n    // to be resolved before the end of the function, which\n    // we can handle easily with callback functions.\n    try {\n      const item = this.assetItem.resolvePath(path)\n      onSucceed(item)\n    } catch (e) {\n      // Some paths resolve to items generated during load,\n      // so push a callback to re-try after the load is complete.\n      this.postLoadCallbacks.push(() => {\n        try {\n          const param = this.assetItem.resolvePath(path)\n          onSucceed(param)\n        } catch (e) {\n          if (onFail) {\n            onFail()\n          } else {\n            throw new Error(e.message)\n          }\n        }\n      })\n    }\n  }\n\n  /**\n   * Adds a function to be called back once the main load call stack exists.\n   * This is used to connect parts of the tree together after loading.\n   * e.g. an instance will\n   * @param {function} postLoadCallback\n   */\n  addPLCB(postLoadCallback) {\n    this.postLoadCallbacks.push(postLoadCallback)\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport { Registry } from '../../Registry'\nimport { ItemSetParameter } from '../Parameters/index'\nimport { TreeItem } from '../TreeItem'\n\n/**\n * BaseGroup are a special type of `TreeItem` that allows you to gather/classify/organize/modify\n * multiple items contained within the group. Items can be added to the group directly, or using\n * its path.\n * All parameters set to the group are also set to the children; in other words, it's a faster way\n * to apply common things to multiple items.\n *\n * **Parameters**\n * * **Items(`ItemSetParameter`):** _todo_\n *\n * @extends TreeItem\n */\nclass BaseGroup extends TreeItem {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n    this.searchRoot = null\n    this.__itemsParam = this.addParameter(new ItemSetParameter('Items', (item) => item instanceof TreeItem))\n    this.__itemsParam.on('itemAdded', (event) => {\n      this.__bindItem(event.item, event.index)\n    })\n    this.__itemsParam.on('itemRemoved', (event) => {\n      this.__unbindItem(event.item, event.index)\n    })\n\n    this.__itemsEventHandlers = []\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   *  sets the root item to be used as the search root.\n   * @param {TreeItem} treeItem\n   */\n  setSearchRoot(treeItem) {\n    this.searchRoot = treeItem\n  }\n\n  /**\n   * The setOwner method assigns a new owner to the item. The owner of a group becomes its search root unless another search root is already set.\n   *\n   * @param {object} ownerItem - The new owner item.\n   */\n  setOwner(ownerItem) {\n    if (!this.searchRoot || this.searchRoot == this.getOwner()) this.searchRoot = ownerItem\n    super.setOwner(ownerItem)\n  }\n\n  /**\n   * This method is mostly used in our demos,\n   * and should be removed from the interface.\n   *\n   * @deprecated\n   * @param {array} paths - The paths value.\n   * @private\n   */\n  setPaths(paths) {\n    this.clearItems(false)\n\n    const searchRoot = this.getOwner()\n    if (this.searchRoot == undefined) {\n      console.warn('BaseGroup does not have an owner and so cannot resolve paths:', this.getName())\n      return\n    }\n    const items = []\n    paths.forEach((path) => {\n      const treeItem = this.searchRoot.resolvePath(path)\n      if (treeItem) items.push(treeItem)\n      else {\n        console.warn('Path does not resolve to an Item:', path, ' group:', this.getName())\n      }\n    })\n    this.setItems(items)\n  }\n\n  /**\n   * Uses the specified list of paths to look and get each `BaseItem` object and add it to BaseGroup's `Items` parameter.\n   *\n   * @param {array} paths - The paths value.\n   */\n  resolveItems(paths) {\n    this.setPaths(paths)\n  }\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    if (!(item instanceof TreeItem)) return\n\n    const listenerIDs = {}\n    listenerIDs['pointerDown'] = item.on('pointerDown', (event) => {\n      this.onPointerDown(event)\n    })\n    listenerIDs['pointerUp'] = item.on('pointerUp', (event) => {\n      this.onPointerUp(event)\n    })\n    listenerIDs['pointerMove'] = item.on('pointerMove', (event) => {\n      this.onPointerMove(event)\n    })\n    listenerIDs['pointerEnter'] = item.on('pointerEnter', (event) => {\n      this.onPointerEnter(event)\n    })\n    listenerIDs['pointerLeave'] = item.on('pointerLeave', (event) => {\n      this.onPointerLeave(event)\n    })\n\n    this.__itemsEventHandlers.splice(index, 0, listenerIDs)\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    if (!(item instanceof TreeItem)) return\n\n    const listenerIDs = this.__itemsEventHandlers[index]\n    // eslint-disable-next-line guard-for-in\n    for (key in listenerIDs) {\n      const parts = key.split('.')\n      if (parts.length > 1) {\n        childItem.getParameter(parts[0]).removeListenerById(parts[1], listenerIDs[key])\n      } else {\n        childItem.removeListenerById(key, listenerIDs[key])\n      }\n    }\n    this.__itemsEventHandlers.splice(index, 1)\n  }\n\n  /**\n   * Adds an item to the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  addItem(item, emit = true) {\n    if (!item) {\n      console.warn('Error adding item to group. Item is null')\n      return\n    }\n    this.__itemsParam.addItem(item, emit)\n  }\n\n  /**\n   * Removes an item from the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  removeItem(item, emit = true) {\n    this.__itemsParam.removeItem(item, emit)\n  }\n\n  /**\n   * Removes all items from the group.\n   *\n   * @param {boolean} emit - `true` triggers `valueChanged` event.\n   */\n  clearItems(emit = true) {\n    // Note: Unbind reversed so that indices\n    // do not get changed during the unbind.\n    const items = Array.from(this.__itemsParam.getValue())\n    for (let i = items.length - 1; i >= 0; i--) {\n      this.__unbindItem(items[i], i)\n    }\n    this.__itemsParam.clearItems(emit)\n  }\n\n  /**\n   * Returns the list of `BaseItem` objects owned by the group.\n   *\n   * @return {array} - The return value.\n   */\n  getItems() {\n    return this.__itemsParam.getValue()\n  }\n\n  /**\n   * Sets an entire new array of items to the BaseGroup replacing any previous items.\n   *\n   * @param {array} items - List of `BaseItem` you want to add to the group\n   */\n  setItems(items) {\n    this.clearItems(false)\n    this.__itemsParam.setItems(items)\n  }\n\n  // ///////////////////////\n  // Events\n\n  /**\n   * Occurs when a user presses a mouse button over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   *\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerDown(event) {\n    super.onPointerDown(event)\n  }\n\n  /**\n   * Occurs when a user releases a mouse button over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   *\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerUp(event) {\n    super.onPointerUp(event)\n  }\n\n  /**\n   * Occur when the mouse pointer is moving  while over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerMove(event) {\n    super.onPointerMove(event)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context) {\n    const j = super.toJSON(context)\n    const items = Array.from(this.__itemsParam.getValue())\n    const treeItems = []\n    items.forEach((p) => {\n      const path = p.getPath()\n      treeItems.push(context ? context.makeRelative(path) : path)\n    })\n    j.treeItems = treeItems\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context) {\n    super.fromJSON(j, context)\n    if (!j.treeItems) {\n      console.warn('Invalid Parameter JSON')\n      return\n    }\n    if (!context) {\n      throw new Error('Unable to load JSON on a BaseGroup without a load context')\n    }\n    let count = j.treeItems.length\n\n    const addItem = (path) => {\n      context.resolvePath(\n        path,\n        (treeItem) => {\n          this.addItem(treeItem)\n          count--\n          if (count == 0) {\n            this.__loadDone()\n          }\n        },\n        (reason) => {\n          console.warn(\"BaseGroup: '\" + this.getName() + \"'. Unable to load item:\" + path)\n        }\n      )\n    }\n    for (const path of j.treeItems) {\n      addItem(path)\n    }\n  }\n\n  /**\n   * called once loading is done.\n   * @private\n   */\n  __loadDone() {}\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * Copies current BaseGroup with all owned items.\n   *\n   * @param {BaseGroup} src - The group to copy from.\n   * @param {object} context - The group to copy from.\n   */\n  copyFrom(src, context) {\n    super.copyFrom(src, context)\n  }\n}\n\nexport { BaseGroup }\n","/* eslint-disable no-unused-vars */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { BooleanParameter, NumberParameter, ColorParameter } from '../Parameters/index'\nimport { BaseGroup } from './BaseGroup'\nimport { TreeItem } from '../TreeItem'\nimport { BaseGeomItem } from '../BaseGeomItem'\n\n/**\n *\n * **Parameters**\n * * **Highlighted(`BooleanParameter`):** _todo_\n * * **HighlightColor(`ColorParameter`):** _todo_\n * * **HighlightFill(`NumberParameter`):** _todo_\n *\n * @extends BaseGroup\n */\nclass SelectionSet extends BaseGroup {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n\n    this.listenerIDs = {}\n\n    this.__highlightedParam = this.addParameter(new BooleanParameter('Highlighted', false))\n    this.__highlightedParam.on('valueChanged', () => {\n      this.__updateHighlight()\n    })\n\n    const highlightColorParam = this.addParameter(new ColorParameter('HighlightColor', new Color(0.5, 0.5, 1)))\n    this.listenerIDs['valueChanged'] = highlightColorParam.on('valueChanged', (event) => {\n      this.__updateHighlight()\n    })\n\n    const highlightFillParam = this.addParameter(new NumberParameter('HighlightFill', 0.0, [0, 1]))\n    highlightFillParam.on('valueChanged', () => {\n      this.__updateHighlight()\n    })\n  }\n\n  /**\n   * The __updateVisibility method.\n   * @return {boolean} - The return value.\n   * @private\n   */\n  __updateVisibility() {\n    if (super.__updateVisibility()) {\n      const value = this.isVisible()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) item.propagateVisibility(value ? 1 : -1)\n      })\n      return true\n    }\n    return false\n  }\n\n  // /////////////////////////////\n\n  /**\n   * The __updateHighlight method.\n   * @private\n   */\n  __updateHighlight() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      let highlighted = false\n      let color\n      if (this.getParameter('Highlighted').getValue() || this.isSelected()) {\n        highlighted = true\n        color = this.getParameter('HighlightColor').getValue()\n        color.a = this.getParameter('HighlightFill').getValue()\n      }\n\n      const key = 'groupItemHighlight' + this.getId()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) {\n          if (highlighted) item.addHighlight(key, color, true)\n          else item.removeHighlight(key, true)\n        }\n      })\n      resolve()\n    })\n  }\n\n  /**\n   * Changes selection's state of the group with all items it owns.\n   *\n   * @param {boolean} sel - Boolean indicating the new selection state.\n   */\n  setSelected(sel) {\n    super.setSelected(sel)\n    this.__updateHighlight()\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    super.__bindItem(item, index)\n    const listenerIDs = this.__itemsEventHandlers[index]\n    if (!(item instanceof TreeItem)) return\n\n    // ///////////////////////////////\n    // Update the highlight\n    if (item instanceof TreeItem && this.getParameter('Highlighted').getValue()) {\n      const color = this.getParameter('HighlightColor').getValue()\n      color.a = this.getParameter('HighlightFill').getValue()\n      item.addHighlight('groupItemHighlight' + this.getId(), color, true)\n    }\n\n    if (!this.isVisible()) {\n      // Decrement the visibility counter which might cause\n      // this item to become invisible. (or it might already be invisible.)\n      item.propagateVisibility(-1)\n    }\n\n    if (item instanceof TreeItem) {\n      listenerIDs['BoundingBox.valueChanged'] = item.getParameter('BoundingBox').on('valueChanged', (event) => {\n        this._setBoundingBoxDirty(event)\n      })\n    }\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    super.__unbindItem(item, index)\n    if (!(item instanceof TreeItem)) return\n\n    if (this.getParameter('Highlighted').getValue()) {\n      item.removeHighlight('groupItemHighlight' + this.getId(), true)\n    }\n\n    if (!this.isVisible()) {\n      // Increment the Visibility counter which might cause\n      // this item to become visible.\n      // It will stay invisible if its parent is invisible, or if\n      // multiple groups connect to it and say it is invisible.\n      item.propagateVisibility(1)\n    }\n\n    // ///////////////////////////////\n    // Update the item cutaway\n    item.traverse((treeItem) => {\n      if (treeItem instanceof BaseGeomItem) {\n        treeItem.setCutawayEnabled(false)\n      }\n    }, true)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new group,\n   * copies its values and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {SelectionSet} - Returns a new cloned group.\n   */\n  clone(context) {\n    const cloned = new SelectionSet()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n}\n\nRegistry.register('SelectionSet', SelectionSet)\n\nexport { SelectionSet }\n","/* eslint-disable require-jsdoc */\nimport { SystemDesc } from '../SystemDesc.js'\nimport { BinReader } from './BinReader.js'\nimport { PointsProxy, LinesProxy, MeshProxy } from './Geometry/GeomProxies.js'\nimport { EventEmitter } from '../Utilities/index'\nimport { resourceLoader } from './resourceLoader.js'\n\n// The GeomLibrary parses geometry data using workers.\n// This can be difficult to debug, so you can disable this\n// by setting the following boolean to false, and uncommenting\n// the import of parseGeomsBinary\nconst multiThreadParsing = true\n\nimport GeomParserWorker from 'web-worker:./Geometry/GeomParserWorker.js'\n\nconst numCores = SystemDesc.hardwareConcurrency - 1 // always leave one main thread code spare.\n\nlet workerId = 0\nconst workers = []\nconst listeners = []\n\nconst getWorker = (geomLibraryId, fn) => {\n  const __workerId = workerId\n  if (!workers[__workerId]) {\n    listeners[__workerId] = {}\n    const worker = new GeomParserWorker()\n    worker.onmessage = (event) => {\n      const data = event.data\n      listeners[__workerId][data.geomLibraryId](data)\n    }\n    workers[__workerId] = worker\n  }\n  listeners[__workerId][geomLibraryId] = (data) => {\n    // The callback should return true when the last data for this\n    // geom library is loaded.\n    const res = fn(data)\n    if (res) {\n      // If this geom library has finished loading, then we can check\n      // if we still need the worker. EAch worker keeps an array of listeners.\n      // One for each GeometryLibrary awaiting geoms to be processed.\n      // As we remove a GeometryLibrary callback from the list, once the list\n      // reaches zero, we can then terminate the worker and null the reference.\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i][geomLibraryId]) {\n          // remove the reference to the callback registered for this geom library.\n          delete listeners[i][geomLibraryId]\n          if (Object.keys(listeners[i]).length == 0) {\n            // no more files are loading, we can kill this worker.\n            // Note: this fixed a serious memory leak in our application caused\n            // by workers maintaining references to callbacks that then held refereces\n            // to the GeomLibrary.\n            workers[i].terminate()\n            workers[i] = null\n          }\n        }\n      }\n    }\n  }\n\n  const worker = workers[__workerId]\n  workerId = (__workerId + 1) % numCores\n  return worker\n}\n\n// import {\n//     parseGeomsBinary\n// } from './Geometry/parseGeomsBinary.js';\n\n/** Class representing a geometry library.\n */\nclass GeomLibrary extends EventEmitter {\n  /**\n   * Create a geom library.\n   */\n  constructor() {\n    super()\n    this.listenerIDs = {}\n\n    this.__streamInfos = {}\n    this.__genBuffersOpts = {}\n\n    this.loadCount = 0\n    this.queue = []\n\n    this.on('streamFileParsed', (event) => {\n      this.loadCount--\n      if (this.loadCount < numCores && this.queue.length) {\n        const { geomFileID, geomsData } = this.queue.pop()\n        this.readBinaryBuffer(geomFileID, geomsData.buffer, this.loadContext)\n      }\n    })\n\n    // if (multiThreadParsing) {\n    //   for (let i = 0; i < numCores; i++) {\n    //     if (!workers[i]) {\n\n    //   // this.__receiveGeomDatas(event.data.key, event.data.geomDatas, event.data.geomIndexOffset, event.data.geomsRange)\n    //       this.__constructWorker()\n    //     }\n    //   }\n    // }\n\n    this.clear()\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.__loadedCount = 0\n    this.__numGeoms = -1\n    this.geoms = []\n  }\n\n  /**\n   * The returns true if all the geometries have been loaded and the loaded event has already been emitted.\n   * @return {Boolean} - True if all geometries are already loaded, else false.\n   */\n  isLoaded() {\n    return this.__loadedCount == this.__numGeoms\n  }\n\n  /**\n   * Loads a single geometry file for this GeomLibrary.\n   *\n   * @private\n   *\n   * @param {number} geomFileID - The index of the file to load\n   * @param {boolean} incrementProgress - If true, the progress bar is incremented and decremented.\n   * @return {Promise} the promise resolves once the file is loaded, but not parsed.\n   */\n  loadGeomFile(geomFileID, incrementProgress = false) {\n    if (incrementProgress) resourceLoader.incrementWorkload(1)\n    return new Promise((resolve) => {\n      const geomFileUrl = this.basePath + geomFileID + '.zgeoms'\n\n      resourceLoader.loadFile('archive', geomFileUrl).then((entries) => {\n        const geomsData = entries[Object.keys(entries)[0]]\n\n        const streamFileParsedListenerID = this.on('streamFileParsed', (event) => {\n          if (event.geomFileID == geomFileID) {\n            resourceLoader.incrementWorkDone(1)\n            this.removeListenerById('streamFileParsed', streamFileParsedListenerID)\n            resolve()\n          }\n        })\n\n        if (this.loadCount < numCores) {\n          this.loadCount++\n          this.readBinaryBuffer(geomFileID, geomsData.buffer, this.loadContext)\n        } else {\n          this.queue.splice(0, 0, {\n            geomFileID,\n            geomsData,\n          })\n        }\n      })\n    })\n  }\n\n  /**\n   * Loads the geometry files for this GeomLibrary.\n   * @param {number} geomLibraryJSON - The json data describing the data needed to be loaded by the geom library\n   * @param {string} basePath - The base path of the file. (this is theURL of the zcad file without its extension.)\n   * @param {object} context - The value param.\n   */\n  loadGeomFilesStream(geomLibraryJSON, basePath, context) {\n    const numGeomFiles = geomLibraryJSON.numGeomsPerFile.length\n    resourceLoader.incrementWorkload(numGeomFiles)\n\n    this.__numGeoms = geomLibraryJSON.numGeoms\n    this.basePath = basePath\n    this.loadContext = context\n\n    for (let geomFileID = 0; geomFileID < numGeomFiles; geomFileID++) {\n      this.loadGeomFile(geomFileID, false)\n    }\n  }\n\n  /**\n   * The setGenBufferOption method.\n   * @param {string} key - The key value.\n   * @param {any} value - The value param.\n   */\n  setGenBufferOption(key, value) {\n    this.__genBuffersOpts[key] = value\n  }\n\n  /**\n   * The setNumGeoms method.\n   * @param {any} expectedNumGeoms - The expectedNumGeoms value.\n   */\n  setNumGeoms(expectedNumGeoms) {\n    this.__numGeoms = expectedNumGeoms\n  }\n\n  /**\n   * Returns the number of geometries the GeomLibrary has, or will have at the end of loading.\n   * @return {number} - The number of geometries.\n   */\n  getNumGeoms() {\n    return this.__numGeoms\n  }\n\n  /**\n   * The getGeom method.\n   * @param {number} index - The index value.\n   * @return {BaseGeom} - The stored geometry\n   */\n  getGeom(index) {\n    if (index >= this.geoms.length) {\n      // console.warn(\"Geom index invalid:\" + index);\n      return null\n    }\n    return this.geoms[index]\n  }\n\n  /**\n   * The loadArchive method.\n   * @param {any} fileUrl - The fileUrl value.\n   */\n  loadArchive(fileUrl) {\n    resourceLoader.loadArchive(fileUrl).then((entries) => {\n      this.loadBin(entries)\n    })\n  }\n\n  /**\n   * The readBinaryBuffer method.\n   * @param {number} geomFileID - The key value.\n   * @param {ArrayBuffer} buffer - The buffer value.\n   * @param {object} context - The context value.\n   * @return {any} - The return value.\n   */\n  readBinaryBuffer(geomFileID, buffer, context) {\n    const reader = new BinReader(buffer, 0, SystemDesc.isMobileDevice)\n    const numGeoms = reader.loadUInt32()\n\n    // Geoms within a given file are offset into the array of geometries of the library.\n    // Note: One day, the geom library should already know all the offsets for each file before loading.\n    const geomIndexOffset = reader.loadUInt32()\n    this.__streamInfos[geomFileID] = {\n      total: numGeoms,\n      done: 0,\n    }\n\n    if (numGeoms == 0) {\n      this.emit('streamFileParsed', { geomFileID, geomCount: 0 })\n      return numGeoms\n    }\n    if (this.__numGeoms == -1) {\n      // Note: for loading geom streams, we need to know the total number\n      // ahead of time to be able to generate accurate progress reports.\n      this.__numGeoms = numGeoms\n      // throw(\"Loading cannot start will we know how many geoms.\");\n    }\n\n    const toc = reader.loadUInt32Array(numGeoms)\n\n    if (multiThreadParsing) {\n      const numGeomsPerWorkload = Math.max(1, Math.floor(numGeoms / numCores + 1))\n\n      // TODO: Use SharedArrayBuffer once available.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\n\n      let offset = 0\n      while (offset < numGeoms) {\n        const bufferSliceStart = toc[offset]\n        let bufferSliceEnd\n        let geomsRange\n        if (offset + numGeomsPerWorkload >= numGeoms) {\n          geomsRange = [offset, numGeoms]\n          bufferSliceEnd = buffer.byteLength\n        } else {\n          geomsRange = [offset, offset + numGeomsPerWorkload]\n          bufferSliceEnd = toc[geomsRange[1]]\n        }\n        const bufferSlice = buffer.slice(bufferSliceStart, bufferSliceEnd)\n        offset += numGeomsPerWorkload\n\n        // ////////////////////////////////////////////\n        // Multi Threaded Parsing\n        getWorker(this.getId(), (data) => {\n          return this.__receiveGeomDatas(data)\n        }).postMessage(\n          {\n            geomLibraryId: this.getId(),\n            geomFileID,\n            toc,\n            geomIndexOffset,\n            geomsRange,\n            isMobileDevice: reader.isMobileDevice,\n            bufferSlice,\n            genBuffersOpts: this.__genBuffersOpts,\n            context: {\n              versions: context.versions,\n            },\n          },\n          [bufferSlice]\n        )\n      }\n\n      // ////////////////////////////////////////////\n      // Multi Threaded Parsing\n      // const bufferSlice = buffer.slice(toc[0], buffer.byteLength)\n      // this.__workers[this.__nextWorker].postMessage(\n      //   {\n      //     key,\n      //     toc,\n      //     geomIndexOffset,\n      //     geomsRange: [0, numGeoms],\n      //     isMobileDevice: reader.isMobileDevice,\n      //     bufferSlice,\n      //     genBuffersOpts: this.__genBuffersOpts,\n      //     context: {\n      //       versions: context.versions,\n      //     },\n      //   },\n      //   [bufferSlice]\n      // )\n      // this.__nextWorker = (this.__nextWorker + 1) % this.__workers.length\n    } else {\n      // ////////////////////////////////////////////\n      // Main Threaded Parsing\n      const bufferSlice = buffer.slice(toc[0], buffer.byteLength)\n      const geomsRange = [0, numGeoms]\n      // const geomsRange = [3, 4]\n      // const bufferSlice = buffer.slice(toc[3], toc[4])\n      parseGeomsBinary(\n        {\n          geomFileID,\n          toc,\n          geomIndexOffset,\n          geomsRange,\n          isMobileDevice: reader.isMobileDevice,\n          bufferSlice,\n          genBuffersOpts: this.__genBuffersOpts,\n          context,\n        },\n        (data) => {\n          this.__receiveGeomDatas(data)\n        }\n      )\n    }\n  }\n\n  /**\n   * The __receiveGeomDatas method.\n   * @private\n   * @param {any} data - The data received back from the web worker\n   * @return {boolean} - returns true once all data for this geom library has been loaded.\n   */\n  __receiveGeomDatas(data) {\n    const { geomLibraryId, geomFileID, geomDatas, geomIndexOffset, geomsRange } = data\n    if (geomLibraryId != this.getId()) throw new Error('Receiving workload for a different GeomLibrary')\n    // We are storing a subset of the geoms from a binary file\n    // which is a subset of the geoms in an asset.\n    // geomIndexOffset: the offset of the file geoms in the asset.\n    // geomsRange: the range of geoms in the bin file.\n    const offset = geomIndexOffset + geomsRange[0]\n    const storedRange = [offset, geomIndexOffset + geomsRange[1]]\n\n    for (let i = 0; i < geomDatas.length; i++) {\n      const geomData = geomDatas[i]\n      if (!geomData.type) continue\n      let proxy\n      switch (geomData.type) {\n        case 'Points':\n          proxy = new PointsProxy(geomData)\n          break\n        case 'Lines':\n          proxy = new LinesProxy(geomData)\n          break\n        case 'Mesh':\n        case 'Plane': // TODO: Support procedural shape params\n        case 'Sphere':\n        case 'Cone':\n          proxy = new MeshProxy(geomData)\n          break\n        default:\n          throw new Error('Unsupported Geom type:' + className)\n      }\n      this.geoms[offset + i] = proxy\n    }\n    this.emit('rangeLoaded', { range: storedRange })\n\n    const loaded = storedRange[1] - storedRange[0]\n    // console.log(\"GeomLibrary Loaded:\" + loaded);\n\n    // Each file in the stream has its own counter for the number of\n    // geoms, and once each stream file finishes parsing, we fire a signal.\n    const streamInfo = this.__streamInfos[geomFileID]\n    streamInfo.done += loaded\n    // console.log('__receiveGeomDatas:', geomFileID + ' Loaded:' + streamInfo.done + ' of :' + streamInfo.total)\n    if (streamInfo.done == streamInfo.total) {\n      this.emit('streamFileParsed', { geomFileID, geomCount: streamInfo.done })\n    }\n\n    // Once all the geoms from all the files are loaded and parsed\n    // fire the loaded signal.\n    this.__loadedCount += loaded\n    // console.log(\"this.__loadedCount:\" + this.__loadedCount +\" this.__numGeoms:\" + this.__numGeoms);\n    if (this.__loadedCount == this.__numGeoms) {\n      // console.log(\"GeomLibrary Loaded:\" + this.__name + \" count:\" + geomDatas.length + \" loaded:\" + this.__loadedCount);\n      this.emit('loaded')\n    }\n\n    // Return true if we are done loading geoms\n    // This allows the worker to be shut down and free up memory.\n    return this.__loadedCount == this.__numGeoms\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   * @return {object} - Returns the json object.\n   */\n  toJSON() {\n    return {\n      numGeoms: this.geoms.length(),\n    }\n  }\n\n  /**\n   * The toString method.\n   * @return {any} - The return value.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n\n  static shutDownWorkers() {\n    workers.forEach((worker, index) => {\n      worker.terminate()\n    })\n  }\n}\n\nexport { GeomLibrary }\n","import { SystemDesc } from '../SystemDesc.js'\nimport { EventEmitter } from '../Utilities/index'\nimport { Registry } from '../Registry'\nimport { Material } from './Material.js'\nimport { FileImage } from './Images/index'\n\n/** Class representing a material library in a scene tree.\n * @private\n */\nclass MaterialLibrary extends EventEmitter {\n  /**\n   * Create a material library.\n   * @param {string} name - The name of the material library.\n   */\n  constructor(name = 'MaterialLibrary') {\n    super()\n    this.__name = name\n\n    this.lod = 0\n    if (SystemDesc.isMobileDevice) this.lod = 1\n    this.clear()\n  }\n\n  /**\n   * The clear method.\n   */\n  clear() {\n    this.__images = {}\n    this.__materials = {\n      Default: new Material('Default', 'SimpleSurfaceShader'),\n    }\n  }\n\n  /**\n   * The getPath method.\n   * @return {any} - The return value.\n   */\n  getPath() {\n    return [this.__name]\n  }\n\n  /**\n   * The getNumMaterials method.\n   * @return {any} - The return value.\n   */\n  getNumMaterials() {\n    return Object.keys(this.__materials).length\n  }\n\n  /**\n   * The getMaterials method.\n   * @return {any} - The return value.\n   */\n  getMaterials() {\n    return Object.values(this.__materials)\n  }\n\n  /**\n   * The getMaterialNames method.\n   * @return {any} - The return value.\n   */\n  getMaterialNames() {\n    const names = []\n    // eslint-disable-next-line guard-for-in\n    for (const name in this.__materials) {\n      names.push(name)\n    }\n    return names\n  }\n\n  /**\n   * The hasMaterial method.\n   * @param {string} name - The name value.\n   * @return {any} - The return value.\n   */\n  hasMaterial(name) {\n    return name in this.__materials\n  }\n\n  /**\n   * Add a material.\n   * @param {Material} material - The material value.\n   */\n  addMaterial(material) {\n    material.setOwner(this)\n    this.__materials[material.getName()] = material\n  }\n\n  /**\n   * The getMaterial method.\n   * @param {string} name - The material name.\n   * @param {Boolean} assert - The assert value.\n   * @return {any} - The return value.\n   */\n  getMaterial(name, assert = true) {\n    const res = this.__materials[name]\n    if (!res && assert) {\n      throw new Error('Material:' + name + ' not found in library:' + this.getMaterialNames())\n    }\n    return res\n  }\n\n  /**\n   * The hasImage method.\n   * @param {string} name - The material name.\n   * @return {any} - The return value.\n   */\n  hasImage(name) {\n    return name in this.__images\n  }\n\n  /**\n   * The addImage method.\n   * @param {any} image - The image value.\n   */\n  addImage(image) {\n    image.setOwner(this)\n    this.__images[image.getName()] = image\n  }\n\n  /**\n   * The getImage method.\n   * @param {string} name - The material name.\n   * @param {boolean} assert - The assert value.\n   * @return {any} - The return value.\n   */\n  getImage(name, assert = true) {\n    const res = this.__images[name]\n    if (!res && assert) {\n      throw new Error('Image:' + name + ' not found in library:' + this.getImageNames())\n    }\n    return res\n  }\n\n  /**\n   * The getImageNames method.\n   * @return {any} - The return value.\n   */\n  getImageNames() {\n    const names = []\n    // eslint-disable-next-line guard-for-in\n    for (const name in this.__images) {\n      names.push(name)\n    }\n    return names\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The load method.\n   * @param {any} filePath - The file path.\n   */\n  load(filePath) {\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', filePath, true)\n    xhr.ontimeout = () => {\n      throw new Error('The request for ' + filePath + ' timed out.')\n    }\n    xhr.onload = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          this.fromJSON(JSON.parse(xhr.responseText))\n        } else {\n          console.warn(xhr.statusText)\n        }\n      }\n    }\n    xhr.send(null)\n  }\n\n  /**\n   * The toJSON method encodes the current object as a json object.\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context = {}) {\n    return {\n      numMaterials: this.getNumMaterials(),\n    }\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(j, context = {}) {\n    context.lod = this.lod\n    // eslint-disable-next-line guard-for-in\n    for (const name in j.textures) {\n      const image = new FileImage(name)\n      image.fromJSON(j.textures[name])\n      this.__images[name] = texture\n    }\n    // eslint-disable-next-line guard-for-in\n    for (const name in j.materials) {\n      const material = new Material(name)\n      material.fromJSON(j.materials[name])\n      this.addMaterial(material)\n    }\n  }\n\n  /**\n   * The readBinary method.\n   * @param {object} reader - The reader value.\n   * @param {object} context - The context value.\n   */\n  readBinary(reader, context = {}) {\n    // if (context.version == undefined) context.version = 0\n\n    this.name = reader.loadStr()\n\n    // Specify the Lod to load the images in this library.\n    context.lod = this.lod\n    context.materialLibrary = this\n\n    const numTextures = reader.loadUInt32()\n    for (let i = 0; i < numTextures; i++) {\n      const type = reader.loadStr()\n      const texture = Registry.constructClass(type, undefined)\n      texture.readBinary(reader, context)\n      this.__images[texture.getName()] = texture\n    }\n    const numMaterials = reader.loadUInt32()\n    if (numMaterials > 0) {\n      const toc = reader.loadUInt32Array(numMaterials)\n      for (let i = 0; i < numMaterials; i++) {\n        const material = new Material('')\n        reader.seek(toc[i]) // Reset the pointer to the start of the item data.\n        material.readBinary(reader, context, this.__images)\n        this.addMaterial(material)\n      }\n    }\n\n    this.emit('loaded', {})\n  }\n\n  /**\n   * The toString method.\n   * @return {any} - The return value.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON(), null, 2)\n  }\n}\nexport { MaterialLibrary }\n","import { Version } from './Version.js'\nimport { TreeItem } from './TreeItem.js'\nimport { SelectionSet } from './Groups/SelectionSet.js'\nimport { GeomLibrary } from './GeomLibrary.js'\nimport { MaterialLibrary } from './MaterialLibrary.js'\nimport { AssetLoadContext } from './AssetLoadContext.js'\nimport { Registry } from '../Registry'\n\n/**\n * Given a units string, load returns a factor relative to meters\n * e.g. for Millimeters, returns 0.001, for Meters, returns 1.0\n * Given 2 different units, the factors are combined together to calculate the conversion between the 2 units.\n * @param {string} units the name of the units value for the load context.\n * Supports: ['millimeters', 'centimeters', 'decimeters', 'meters', 'kilometers', 'inches', 'feet', 'miles']\n * @return {number} Returns the factor relative to meters.\n */\nconst getUnitsFactor = (units) => {\n  switch (units.toLowerCase()) {\n    case 'millimeters':\n      return 0.001\n    case 'centimeters':\n      return 0.01\n    case 'decimeters':\n      return 0.1\n    case 'meters':\n      return 1.0\n    case 'kilometers':\n      return 1000.0\n    case 'inches':\n      return 0.0254\n    case 'feet':\n      return 0.3048\n    case 'miles':\n      return 1609.34\n  }\n  return 1.0\n}\n/**\n * Represents a TreeItem with rendering and material capabilities.\n *\n * @extends TreeItem\n */\nclass AssetItem extends TreeItem {\n  /**\n   * Create an asset item.\n   * @param {string} name - The name of the asset item.\n   */\n  constructor(name) {\n    super(name)\n\n    this.__geomLibrary = new GeomLibrary()\n    this.__materials = new MaterialLibrary()\n    this.loaded = false\n  }\n\n  /**\n   * Loads all the geometries and metadata from the asset file.\n   * @param {string} url - The URL of the asset to load\n   * @return {Promise} - Returns a promise that resolves once the initial load is complete\n   */\n  load(url) {\n    return Promise.reject(`This method is not implemented for this Asset Item: ${url}`)\n  }\n\n  /**\n   * Returns the loaded status of current item.\n   *\n   * @return {boolean} - Returns true if the asset has already loaded its data.\n   */\n  isLoaded() {\n    return this.loaded\n  }\n\n  /**\n   * Returns the zea engine version as an array with major, minor, patch order.\n   *\n   * @return {array} - The return value.\n   */\n  getEngineDataVersion() {\n    return this.__engineDataVersion\n  }\n\n  /**\n   * Returns asset `GeomLibrary` that is in charge of rendering geometry data using workers.\n   *\n   * @return {GeomLibrary} - The return value.\n   */\n  getGeometryLibrary() {\n    return this.__geomLibrary\n  }\n\n  /**\n   * Returns `MaterialLibrary` that is in charge of storing all materials of current Item.\n   *\n   * @return {MaterialLibrary} - The return value.\n   */\n  getMaterialLibrary() {\n    return this.__materials\n  }\n\n  /**\n   * Returns the scale factor of current item.\n   * @return {number} - The return value.\n   */\n  getUnitsConversion() {\n    return this.__unitsScale\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * The readBinary method.\n   * @param {object} reader - The reader value.\n   * @param {AssetLoadContext} context - The context value.\n   */\n  readBinary(reader, context) {\n    context.assetItem = this\n    context.numTreeItems = 0\n\n    if (!context.units) context.units = 'meters'\n    context.numGeomItems = 0\n\n    if (!context.versions['zea-engine']) {\n      context.versions['zea-engine'] = new Version(reader.loadStr())\n    }\n    this.__engineDataVersion = context.versions['zea-engine']\n\n    const loadUnits = () => {\n      this.__units = reader.loadStr()\n      // Calculate a scale factor to convert\n      // the asset units to meters(the scene units)\n      const unitsFactor = getUnitsFactor(this.__units)\n      const contextUnitsFactor = getUnitsFactor(context.units)\n      this.__unitsScale = unitsFactor / contextUnitsFactor\n\n      // The context propagates the new units to children assets.\n      // This means that a child asset applies a unitsScale relative to this asset.\n      context.units = this.__units\n\n      // Apply units change to existing Xfo (avoid changing tr).\n      const localXfoParam = this.getParameter('LocalXfo')\n      const xfo = localXfoParam.getValue()\n      xfo.sc.scaleInPlace(this.__unitsScale)\n      localXfoParam.setValue(xfo)\n    }\n\n    if (context.versions['zea-engine'].compare([0, 0, 6]) > 0) {\n      // Loading units modifies our Xfo, which then propagates up\n      // the tree forcing a re-computation. Better just do it at\n      // the start.\n      loadUnits()\n    }\n\n    let layerRoot\n    const layers = {}\n    context.addGeomToLayer = (geomItem, layer) => {\n      if (!layers[layer]) {\n        if (!layerRoot) {\n          layerRoot = new TreeItem('Layers')\n          this.addChild(layerRoot, false)\n        }\n        const group = new SelectionSet(layer)\n        layerRoot.addChild(group, false)\n        layers[layer] = group\n      }\n      layers[layer].addItem(geomItem)\n    }\n\n    const postLoadCallbacks = [] // Post load callbacks.\n    context.resolvePath = (path, onSucceed, onFail) => {\n      if (!path) throw new Error('Path not specified')\n\n      // Note: Why not return a Promise here?\n      // Promise evaluation is always async, so\n      // all promises will be resolved after the current call stack\n      // has terminated. In our case, we want all paths\n      // to be resolved before the end of the function, which\n      // we can handle easily with callback functions.\n      try {\n        const item = this.resolvePath(path)\n        onSucceed(item)\n      } catch (e) {\n        // Some paths resolve to items generated during load,\n        // so push a callback to re-try after the load is complete.\n        postLoadCallbacks.push(() => {\n          try {\n            const param = this.resolvePath(path)\n            onSucceed(param)\n          } catch (e) {\n            if (onFail) {\n              onFail(e)\n            } else {\n              throw new Error(e.message)\n            }\n          }\n        })\n      }\n    }\n    context.addPLCB = (postLoadCallback) => postLoadCallbacks.push(postLoadCallback)\n\n    this.__materials.readBinary(reader, context)\n\n    super.readBinary(reader, context)\n\n    if (\n      context.versions['zea-engine'].compare([0, 0, 5]) >= 0 &&\n      context.versions['zea-engine'].compare([0, 0, 7]) < 0\n    ) {\n      loadUnits()\n    }\n\n    // Invoke all the post-load callbacks to resolve any\n    // remaining references.\n    for (const cb of postLoadCallbacks) cb()\n\n    this.loaded = true\n    // console.log(\"numTreeItems:\", context.numTreeItems, \" numGeomItems:\", context.numGeomItems)\n  }\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context = {}) {\n    context.makeRelative = (path) => {\n      const assetPath = this.getPath()\n      const start = path.slice(0, assetPath.length)\n      for (let i = 0; i < start.length - 1; i++) {\n        if (start[i] != assetPath[i]) {\n          console.warn('Param Path is not relative to the asset. May not be able to be resolved at load time:' + path)\n          return path\n        }\n      }\n      // Relative paths start with a symbol for the root element.\n      const relativePath = path.slice(assetPath.length - 1)\n      relativePath[0] = '.'\n      return relativePath\n    }\n    context.assetItem = this\n    const j = super.toJSON(context)\n    return j\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {object} context - The context value.\n   * @param {function} onDone - Callback function executed when everything is done.\n   */\n  fromJSON(j, context = {}, onDone) {\n    if (!context) context = {}\n\n    context.assetItem = this\n    context.numTreeItems = 0\n    context.numGeomItems = 0\n    if (context.version == undefined) context.version = 0\n\n    context.assetItem = this\n\n    const postLoadCallbacks = [] // Post load callbacks.\n    context.resolvePath = (path, cb) => {\n      // Note: Why not return a Promise here?\n      // Promise evaluation is always async, so\n      // all promises will be resolved after the current call stack\n      // has terminated. In our case, we want all paths\n      // to be resolved before the end of the function, which\n      // we can handle easily with callback functions.\n      if (!path) throw new Error('Path not specified')\n      const item = this.resolvePath(path)\n      if (item) {\n        cb(item)\n      } else {\n        // Some paths resolve to items generated during load,\n        // so push a callback to re-try after the load is complete.\n        postLoadCallbacks.push(() => {\n          const param = this.resolvePath(path)\n          if (param) cb(param)\n          else {\n            console.warn('Path unable to be resolved:' + path)\n          }\n        })\n      }\n    }\n    context.addPLCB = (postLoadCallback) => postLoadCallbacks.push(postLoadCallback)\n\n    // Avoid loading the FilePath as we are already loading json data.\n    // if (j.params && j.params.FilePath) {\n    //   delete j.params.FilePath\n    // }\n\n    super.fromJSON(j, context)\n\n    // Invoke all the post-load callbacks to resolve any\n    // remaining references.\n    for (const cb of postLoadCallbacks) cb()\n\n    if (onDone) onDone()\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new tree item, copies its values\n   * from this item and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {TreeItem} - Returns a new cloned tree item.\n   */\n  clone(context) {\n    const cloned = new AssetItem()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n\n  /**\n   * Copies current TreeItem with all its children.\n   *\n   * @param {TreeItem} src - The tree item to copy from.\n   * @param {object} context - The context value.\n   */\n  copyFrom(src, context) {\n    this.__geomLibrary = src.__geomLibrary\n    this.__materials = src.__materials\n    this.loaded = src.loaded\n\n    if (!src.loaded) {\n      src.once('loaded', (event) => {\n        const srcLocalXfo = src.getParameter('LocalXfo').getValue()\n        const localXfo = this.getParameter('LocalXfo').getValue()\n        localXfo.sc = srcLocalXfo.sc.clone()\n        this.getParameter('LocalXfo').setValue(localXfo)\n\n        src.getChildren().forEach((srcChildItem) => {\n          if (srcChildItem && srcChildItem != AssetItem) {\n            this.addChild(srcChildItem.clone(context), false, false)\n          }\n        })\n        this.loaded = true\n        this.emit('loaded', event)\n      })\n    }\n\n    super.copyFrom(src, context)\n  }\n}\n\nRegistry.register('AssetItem', AssetItem)\n\nexport { AssetItem }\n","import { Color, Vec2 } from '../Math/index'\nimport { BooleanParameter, NumberParameter, ColorParameter, ImageParameter, Vec2Parameter } from './Parameters/index'\nimport { TreeItem } from './TreeItem.js'\nimport { Registry } from '../Registry'\n\n/**\n * A special type of TreeItem(Item with hierarchical abilities) class that represents a banner in a 2D dimension.\n * Can own any type of `BaseImage`.\n * <br>\n * <br>\n * **Parameters**\n * * **Image(`ImageParameter`):** Is the BaseImage you want to display on the board.\n * * **PixelsPerMeter(`NumberParameter`):** Quality and Size of the board. The bigger the number, the smaller the board.\n * * **Alpha(`NumberParameter`):** Transparency of the board, from 0 to 1.\n * * **AlignedToCamera(`BooleanParameter`):** Faces or not the board to the camera at all time(Moves with camera movement).\n * * **DrawOnTop(`BooleanParameter`):** The billboards are rendered overlaid on the scene.\n * * **FixedSizeOnscreen(`BooleanParameter`):** The billboards are rendered at a fixed size on screen, regardless of the distance to the billboard.\n *\n * @extends TreeItem\n */\nclass BillboardItem extends TreeItem {\n  /**\n   * Creates a billboard item.\n   *\n   * @param {string} name - The name of the billboard item.\n   * @param {BaseImage} image - The image value.\n   */\n  constructor(name, image) {\n    super(name)\n    const imageParam = this.addParameter(new ImageParameter('Image'))\n    if (image) imageParam.setValue(image) // Note: this dirties the param and will ensure it is saved to JSON\n    this.addParameter(new NumberParameter('PixelsPerMeter', 1000.0))\n    this.addParameter(new NumberParameter('Alpha', 1.0))\n    this.addParameter(new ColorParameter('Color', new Color(1.0, 1.0, 1.0)))\n    this.addParameter(new BooleanParameter('AlignedToCamera', false))\n    this.addParameter(new BooleanParameter('DrawOnTop', false))\n    this.addParameter(new BooleanParameter('FixedSizeOnscreen', false))\n    this.addParameter(new Vec2Parameter('Pivot', new Vec2(0.5, 0.0)))\n  }\n}\n\nRegistry.register('BillboardItem', BillboardItem)\n\nexport { BillboardItem }\n","/* eslint-disable no-unused-vars */\nimport { Vec3, Box3, Xfo, Mat4, Vec2, Color } from '../Math/index'\nimport { Lines } from '../SceneTree/Geometry/Lines'\nimport { Material } from './Material.js'\nimport { GeomItem } from './GeomItem.js'\nimport { TreeItem } from './TreeItem.js'\nimport { NumberParameter } from './Parameters/index'\nimport { MathFunctions, SInt16 } from '../Utilities/MathFunctions'\nimport { Registry } from '../Registry'\nimport { Points } from './Geometry'\n\n/**\n * The Camera class is used to provide a point of view of the scene. The viewport is assigned\n * a camera, which is uses during drawing. The camera controls the view and projection used to\n * render the scene.\n *\n * Cameras can provide a perspective projection, or an orthographic projection, and anything in between.\n * To configure whether th projection provided by the camera is Orthographic or Perspective, set\n * the value of the 'isOrthographic' Parameter to a value between 0 and 1. 0.0 being fully perspective\n * and 1.0 being fully Orthographic.\n * Alternatively, you can call camera.setIsOrthographic and pass the value, and a time in milliseconds to\n * take to transition between the current value and your new value.\n * ```javascript\n *   camera.setIsOrthographic(1, 400);\n * ```\n *\n * By default, the Camera automatically adjusts the near and far planes as the focal distance is modified. This\n * behavior can be disabled, by setting the adjustNearAndFarPlanesToFocalDist property to false.\n * Alternatively, you can also adjust the factors that are used to modify the near and far plane based on the\n * focal distance.\n * ```javascript\n *   camera.adjustNearAndFarPlanesToFocalDist = true\n *   camera.nearDistFactor = 0.01\n *   camera.farDistFactor = 5\n * ```\n *\n * **Parameters**\n * * **isOrthographic(`NumberParameter`):** Controls the projection matrix generated by the camera. A value of 0.0, means a perspective projection, while 1 an orthographic projection. Any value in between generates a blended perspective -> orthographic projection.\n * * **fov(`NumberParameter`):** The vertical angle of the view frustum when generating a perspective projection. In orthographic mode, this value is used to calculate the size of the view at the target distance.\n * * **near(`NumberParameter`):** The near clipping distance of the camera.\n * * **far(`NumberParameter`):** The far clipping distance of the camera.\n * * **focalDistance(`NumberParameter`):** The distance at which the camera is focussed. Note: the CameraManipulator sets the focal distance when zooming in on a target.\n *\n * **Events**\n * * **projectionParamChanged:** When on of the parameters above change, the camera emits this event. Note: the Viewport listens to this event and triggers re-rendering.\n * * **movementFinished:** Triggered at the conclusion of some action. E.g. when a zoom action is finished, or when the mouse is released after an orbit action. The viewport listens to this event and triggers a re-rendering of the selection buffers.\n * @extends TreeItem\n */\nclass Camera extends TreeItem {\n  /**\n   * Instantiates a camera object, setting default configuration like zoom, target and positioning.\n   *\n   * @param {string} name - The name of the camera.\n   */\n  constructor(name = undefined) {\n    if (name == undefined) name = 'Camera'\n    super(name)\n\n    this.__isOrthographicParam = this.addParameter(new NumberParameter('isOrthographic', 0.0))\n    this.__fovParam = this.addParameter(new NumberParameter('fov', 1.0))\n    this.__nearParam = this.addParameter(new NumberParameter('near', 0.1))\n    this.__farParam = this.addParameter(new NumberParameter('far', 1000.0))\n    this.__focalDistanceParam = this.addParameter(new NumberParameter('focalDistance', 5.0))\n\n    const emitProjChanged = (event) => {\n      this.emit('projectionParamChanged', event)\n    }\n    this.__isOrthographicParam.on('valueChanged', emitProjChanged)\n    this.__fovParam.on('valueChanged', emitProjChanged)\n    this.__nearParam.on('valueChanged', emitProjChanged)\n    this.__farParam.on('valueChanged', emitProjChanged)\n\n    // Initial viewing coords of a person standing 3 meters away from the\n    // center of the stage looking at something 1 meter off the ground.\n    this.setPositionAndTarget(new Vec3(3, 3, 1.75), new Vec3(0, 0, 1))\n    this.setLensFocalLength('28mm')\n\n    // Controls whether the camera automatically adjusts the near and far planes\n    // as the focal distance changes. Set to false to explicitly control the near\n    // and far planes.\n    this.adjustNearAndFarPlanesToFocalDist = true\n    // The factor by which the near plane is adjusted based on the focal distance.\n    this.nearDistFactor = 0.2\n    // The factor by which the far plane is adjusted based on the focal distance.\n    this.farDistFactor = 5\n    this.frameOnBoundingSphere = false\n  }\n\n  // ////////////////////////////////////////////\n  // Getters/setters.\n\n  /**\n   * Returns `near` parameter value.\n   *\n   * @return {number} - Returns the near value.\n   */\n  getNear() {\n    return this.__nearParam.getValue()\n  }\n\n  /**\n   * Sets `near` parameter value\n   *\n   * @param {number} value - The near value.\n   */\n  setNear(value) {\n    this.__nearParam.setValue(value)\n  }\n\n  /**\n   * Returns `far` parameter value.\n   *\n   * @return {number} - Returns the far value.\n   */\n  getFar() {\n    return this.__farParam.getValue()\n  }\n\n  /**\n   * Sets `far` parameter value\n   *\n   * @param {number} value - The far value.\n   */\n  setFar(value) {\n    this.__farParam.setValue(value)\n  }\n\n  /**\n   * Getter for the camera field of view (FOV).\n   * The FOV defines the vertical angle of the view frustum\n   * The horizontal angle is calculated from the FOV and the Viewport aspect ratio.\n   *\n   * @return {number} - Returns the FOV value.\n   */\n  getFov() {\n    return this.__fovParam.getValue()\n  }\n\n  /**\n   * Setter for the camera field of view (FOV).\n   * The FOV defines the vertical angle of the view frustum\n   * The horizontal angle is calculated from the FOV and the Viewport aspect ratio.\n   * > Note: The Fov can also be set by calling #setLensFocalLength\n   *\n   * @param {number} value - The new FOV value.\n   */\n  setFov(value) {\n    this.__fovParam.setValue(value)\n  }\n\n  /**\n   * Getter for the camera frustum height value.\n   * The frustum hight value is used to compute the orthographic projection of the scene.\n   *\n   * @return {number} - Returns the Frustum Height value.\n   */\n  getFrustumHeight() {\n    return this.viewHeight\n  }\n\n  /**\n   * Setter for the camera frustum height in orthographic mode.\n   * > Note: in perspective mode, the frustum height is calculated based on the FOV value and focal distance.\n   *\n   * @param {number} value - The new Frustum Height value.\n   */\n  setFrustumHeight(value) {\n    this.viewHeight = value\n    this.emit('projectionParamChanged', event)\n  }\n\n  /**\n   * Setter for the camera lens focal length. This method calculates a new vertical Field of View value\n   * from the provided camera lense focal length.\n   * > Note: conversion from Lense Focal length to Fov is based on the table found here: https://www.nikonians.org/reviews/fov-tables\n   *\n   * **Focal Length accepted values as string values:** 10mm, 11mm, 12mm, 14mm, 15mm, 17mm, 18mm,\n   * 19mm, 20mm, 24mm, 28mm, 30mm, 35mm, 45mm, 50mm, 55mm, 60mm, 70mm, 75mm, 80mm,\n   * 85mm, 90mm, 100mm, 105mm, 120mm, 125mm, 135mm, 150mm, 170mm, 180mm, 210mm, 300mm,\n   * 400mm, 500mm, 600mm, 800mm\n   *\n   * @param {string} value - The lens focal length value.\n   */\n  setLensFocalLength(value) {\n    // https://www.nikonians.org/reviews/fov-tables\n    const mapping = {\n      '10mm': 100.4,\n      '11mm': 95.0,\n      '12mm': 90.0,\n      '14mm': 81.2,\n      '15mm': 77.3,\n      '17mm': 70.4,\n      '18mm': 67.4,\n      '19mm': 64.6,\n      '20mm': 61.9,\n      '24mm': 53.1,\n      '28mm': 46.4,\n      '30mm': 43.6,\n      '35mm': 37.8,\n      '45mm': 29.9,\n      '50mm': 27.0,\n      '55mm': 24.6,\n      '60mm': 22.6,\n      '70mm': 19.5,\n      '75mm': 18.2,\n      '80mm': 17.1,\n      '85mm': 16.1,\n      '90mm': 15.2,\n      '100mm': 13.7,\n      '105mm': 13.0,\n      '120mm': 11.4,\n      '125mm': 11.0,\n      '135mm': 10.2,\n      '150mm': 9.1,\n      '170mm': 8.1,\n      '180mm': 7.6,\n      '210mm': 6.5,\n      '300mm': 4.6,\n      '400mm': 3.4,\n      '500mm': 2.7,\n      '600mm': 2.3,\n      '800mm': 1.7,\n    }\n    if (!value in mapping) {\n      console.warn('Camera lense focal length not supported:' + value)\n      return\n    }\n    this.__fovParam.setValue(MathFunctions.degToRad(mapping[value]))\n  }\n\n  /**\n   * Returns `focalDistance` parameter value.\n   *\n   * @return {number} - Returns the lens focal length value..\n   */\n  getFocalDistance() {\n    return this.__focalDistanceParam.getValue()\n  }\n\n  /**\n   * Sets `focalDistance` parameter value.\n   *\n   * @errors on dist value lower or less than zero.\n   * @param {number} dist - The focal distance value.\n   */\n  setFocalDistance(dist) {\n    if (dist < 0.0001) console.error('Never set focal distance to zero')\n    this.__focalDistanceParam.setValue(dist)\n    if (this.adjustNearAndFarPlanesToFocalDist) {\n      const near = dist * this.nearDistFactor\n      if (near < this.__nearParam.getValue()) {\n        this.__nearParam.setValue(near)\n      }\n      const far = dist * this.farDistFactor\n      if (far > this.__farParam.getValue()) {\n        this.__farParam.setValue(far)\n      }\n    }\n  }\n\n  /**\n   * Returns true if the camera is providing an orthographic projection.\n   * @return {boolean} - true if orthographic else false\n   */\n  isOrthographic() {\n    return this.__isOrthographicParam.getValue() == 1.0\n  }\n\n  /**\n   * Sets the camera to be orthographic. The value can be between 0, and 1.\n   * A value of 0 means fully perspective. A value of 1 means fully orthographic.\n   * Any value in between produces a linear interpolation of perspective and orthographic.\n   *\n   * @param {boolean} value - The value param.\n   * @param {Number} duration - The duration in milliseconds to change the projection.\n   */\n  setIsOrthographic(value, duration = 0) {\n    if (this.__orthoIntervalId) clearInterval(this.__orthoIntervalId)\n    if (value > 0.5) {\n      const fov = this.__fovParam.getValue()\n      const focalDistance = this.__focalDistanceParam.getValue()\n      this.viewHeight = Math.sin(fov * 0.5) * focalDistance * 2\n    }\n    if (duration == 0) {\n      this.__isOrthographicParam.setValue(value)\n    } else {\n      const count = Math.round(duration / 20) // each step is 20ms\n      let i = 0\n      const prevValue = this.__isOrthographicParam.getValue()\n      const applyMovement = () => {\n        const lerpValue = MathFunctions.lerp(prevValue, value, i / count)\n        this.__isOrthographicParam.setValue(lerpValue)\n        i++\n        if (i <= count) {\n          this.__focusIntervalId = setTimeout(applyMovement, 20)\n        } else {\n          this.__focusIntervalId = undefined\n          this.emit('movementFinished')\n        }\n      }\n      applyMovement()\n    }\n  }\n\n  /**\n   * Setter for the camera position and target.\n   * As described at the start of the class, this is a `TreeItem`,\n   * which means we can move it around using translation modifiers.\n   * You can do it this way or using the changing `TreeItem` parameters,\n   * although we recommend this one because it also changes focal distance.\n   *\n   * @param {Vec3} position - The position of the camera.\n   * @param {Vec3} target - The target of the camera.\n   */\n  setPositionAndTarget(position, target) {\n    this.setFocalDistance(position.distanceTo(target))\n    const xfo = new Xfo()\n    xfo.setLookAt(position, target, new Vec3(0.0, 0.0, 1.0))\n    this.getParameter('GlobalXfo').setValue(xfo)\n    this.emit('movementFinished')\n  }\n\n  /**\n   * Getter for the target position.\n   * @return {Vec3} - Returns the target position.\n   */\n  getTargetPosition() {\n    const focalDistance = this.__focalDistanceParam.getValue()\n    const xfo = this.getParameter('GlobalXfo').getValue()\n    const target = xfo.ori.getZaxis()\n    target.scaleInPlace(-focalDistance)\n    target.addInPlace(xfo.tr)\n    return target\n  }\n\n  // ///////////////////////////\n\n  /**\n   * Calculates a new camera position that frames all the items passed in `treeItems` array, moving\n   * the camera to a point where we can see all of them.\n   *\n   * @param {GLBaseViewport} viewport - The viewport value.\n   * @param {array} treeItems - The treeItems value.\n   */\n  frameView(viewport, treeItems) {\n    const focalDistance = this.__focalDistanceParam.getValue()\n    const fovY = this.__fovParam.getValue()\n\n    const globalXfo = this.getParameter('GlobalXfo').getValue().clone()\n    const aspectRatio = viewport.getWidth() / viewport.getHeight()\n    const fovX = Math.atan(Math.tan(fovY * 0.5) * aspectRatio) * 2.0\n\n    let newFocalDistance = focalDistance\n\n    if (this.frameOnBoundingSphere) {\n      const box3 = new Box3()\n      for (const treeItem of treeItems) {\n        box3.addBox3(treeItem.getParameter('BoundingBox').getValue())\n      }\n\n      if (!box3.isValid()) {\n        console.warn('Bounding box not valid.')\n        return\n      }\n      const cameraViewVec = globalXfo.ori.getZaxis()\n      const targetOffset = cameraViewVec.scale(-focalDistance)\n      const currTarget = globalXfo.tr.add(targetOffset)\n      const newTarget = box3.center()\n\n      const pan = newTarget.subtract(currTarget)\n      globalXfo.tr.addInPlace(pan)\n\n      // Compute the distance the camera should be to fit the entire bounding sphere\n      newFocalDistance = box3.size() / Math.tan(fovY)\n\n      // const dollyDist = newFocalDistance - focalDistance\n      // globalXfo.tr.addInPlace(cameraViewVec.scale(dollyDist))\n    } else {\n      // Based on the solution described here:\n      // https://stackoverflow.com/a/66113254/5546902\n\n      const boundaryPoints = []\n      if (false) {\n        const box3 = new Box3()\n        for (const treeItem of treeItems) {\n          box3.addBox3(treeItem.getParameter('BoundingBox').getValue())\n        }\n\n        if (!box3.isValid()) {\n          console.warn('Bounding box not valid.')\n          return\n        }\n        boundaryPoints.push(box3.p0)\n        boundaryPoints.push(new Vec3(box3.p0.x, box3.p0.y, box3.p1.z))\n        boundaryPoints.push(new Vec3(box3.p0.x, box3.p1.y, box3.p0.z))\n        boundaryPoints.push(new Vec3(box3.p1.x, box3.p0.y, box3.p0.z))\n        boundaryPoints.push(new Vec3(box3.p0.x, box3.p1.y, box3.p1.z))\n        boundaryPoints.push(new Vec3(box3.p1.x, box3.p0.y, box3.p1.z))\n        boundaryPoints.push(new Vec3(box3.p1.x, box3.p1.y, box3.p0.z))\n        boundaryPoints.push(box3.p1)\n      } else {\n        treeItems.forEach((treeItem) => {\n          treeItem.traverse((childItem) => {\n            if (!(childItem instanceof TreeItem)) return false\n            if (childItem.disableBoundingBox) return false\n            if (childItem instanceof GeomItem) {\n              const geom = childItem.getParameter('Geometry').getValue()\n              if (geom) {\n                const box3 = geom.getBoundingBox()\n                if (box3.isValid()) {\n                  const mat4 = childItem.getGeomMat4()\n                  boundaryPoints.push(mat4.transformVec3(box3.p0))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p0.x, box3.p0.y, box3.p1.z)))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p0.x, box3.p1.y, box3.p0.z)))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p1.x, box3.p0.y, box3.p0.z)))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p0.x, box3.p1.y, box3.p1.z)))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p1.x, box3.p0.y, box3.p1.z)))\n                  boundaryPoints.push(mat4.transformVec3(new Vec3(box3.p1.x, box3.p1.y, box3.p0.z)))\n                  boundaryPoints.push(mat4.transformVec3(box3.p1))\n                  return false\n                }\n              }\n            }\n            if (childItem.getNumChildren() == 0) {\n              const box3 = childItem.getParameter('BoundingBox').getValue()\n              if (box3.isValid()) {\n                // Note: passing box3.p0 into boundaryPoints caused corruption later on.\n                // I could not figure out how/why, but by constructing a new vector here,\n                // we avoid the problem.\n                boundaryPoints.push(new Vec3(box3.p0.x, box3.p0.y, box3.p0.z))\n                boundaryPoints.push(new Vec3(box3.p0.x, box3.p0.y, box3.p1.z))\n                boundaryPoints.push(new Vec3(box3.p0.x, box3.p1.y, box3.p0.z))\n                boundaryPoints.push(new Vec3(box3.p1.x, box3.p0.y, box3.p0.z))\n                boundaryPoints.push(new Vec3(box3.p0.x, box3.p1.y, box3.p1.z))\n                boundaryPoints.push(new Vec3(box3.p1.x, box3.p0.y, box3.p1.z))\n                boundaryPoints.push(new Vec3(box3.p1.x, box3.p1.y, box3.p0.z))\n                boundaryPoints.push(new Vec3(box3.p1.x, box3.p1.y, box3.p1.z))\n                return false\n              }\n            }\n          })\n        })\n      }\n      if (boundaryPoints.length == 0) return\n\n      const angleX = this.isOrthographic() ? 0 : fovX / 2\n      const angleY = this.isOrthographic() ? 0 : fovY / 2\n      const frustumPlaneNormals = {}\n      frustumPlaneNormals.XPos = new Vec3(Math.cos(angleX), 0, Math.sin(angleX))\n      frustumPlaneNormals.XNeg = new Vec3(-Math.cos(angleX), 0, Math.sin(angleX))\n      frustumPlaneNormals.YPos = new Vec3(0, Math.cos(angleY), Math.sin(angleY))\n      frustumPlaneNormals.YNeg = new Vec3(0, -Math.cos(angleY), Math.sin(angleY))\n      frustumPlaneNormals.ZPos = new Vec3(0, 0, 1)\n      frustumPlaneNormals.ZNeg = new Vec3(0, 0, -1)\n      const frustumPlaneNormalsWs = {}\n      const frustumPlaneOffsets = {}\n      // eslint-disable-next-line guard-for-in\n      for (const key in frustumPlaneNormals) {\n        frustumPlaneNormalsWs[key] = globalXfo.ori.rotateVec3(frustumPlaneNormals[key])\n        frustumPlaneOffsets[key] = Number.NEGATIVE_INFINITY\n      }\n      const centroid = new Vec3()\n      boundaryPoints.forEach((point, index) => {\n        // Previously we had corrupt values coming through there. That is fixed,\n        // but just in case, we filter them out again here.\n        if (!Number.isFinite(point.x) || !Number.isFinite(point.y) || !Number.isFinite(point.z)) {\n          return\n        }\n        const delta = point.subtract(globalXfo.tr)\n        // eslint-disable-next-line guard-for-in\n        for (const key in frustumPlaneNormals) {\n          const planeOffset = delta.dot(frustumPlaneNormalsWs[key])\n          if (planeOffset > frustumPlaneOffsets[key] && planeOffset != Number.POSITIVE_INFINITY) {\n            frustumPlaneOffsets[key] = planeOffset\n          }\n        }\n        centroid.addInPlace(point)\n      })\n\n      // eslint-disable-next-line guard-for-in\n      // Check for invalid planes.\n      for (const key in frustumPlaneOffsets) {\n        if (frustumPlaneOffsets[key] == Number.POSITIVE_INFINITY) return\n      }\n      centroid.scaleInPlace(1 / boundaryPoints.length)\n\n      let dolly = 0\n      if (this.isOrthographic()) {\n        const pan = new Vec3(\n          (-frustumPlaneOffsets.XNeg + frustumPlaneOffsets.XPos) * 0.5,\n          (-frustumPlaneOffsets.YNeg + frustumPlaneOffsets.YPos) * 0.5,\n          (-frustumPlaneOffsets.ZNeg + frustumPlaneOffsets.ZPos) * 0.5\n        )\n        // Move the camera back by 2x the depth range of the scene.\n        const zrange = frustumPlaneOffsets.ZNeg + frustumPlaneOffsets.ZPos\n        dolly = zrange * 2\n        pan.z = -frustumPlaneOffsets.ZNeg + dolly\n        globalXfo.tr.addInPlace(globalXfo.ori.rotateVec3(pan))\n        newFocalDistance = zrange * 2\n\n        const viewWidth = frustumPlaneOffsets.XPos + frustumPlaneOffsets.XNeg\n        const viewHeight = frustumPlaneOffsets.YPos + frustumPlaneOffsets.YNeg\n        this.viewHeight = Math.max(viewHeight, viewWidth / aspectRatio)\n        const frameBorder = 0.1\n        this.viewHeight += this.viewHeight * frameBorder\n      } else {\n        const angleX = fovX / 2\n        const angleY = fovY / 2\n        // Now we solve the problem in 2D. For each camera plane (XZ and YZ), we calculate the lines in 2d that\n        // represent the frustum planes for the top and bottom, adjusted so they touch the boundary points. We\n        // then find the intersection of these 2 2d lines to calculate the adjustment in that axis for the camera.\n        // We need to dolly back to fix the plane which needs the most adjustment.\n        // Calculate a 2d point on the line for each plane, and a direction.\n        const xP0 = new Vec2(Math.cos(angleX) * frustumPlaneOffsets.XPos, Math.sin(angleX) * frustumPlaneOffsets.XPos)\n        const xP1 = xP0.add(new Vec2(Math.sin(angleX), -Math.cos(angleX)))\n        const xP2 = new Vec2(-Math.cos(angleX) * frustumPlaneOffsets.XNeg, Math.sin(angleX) * frustumPlaneOffsets.XNeg)\n        const xP3 = xP2.add(new Vec2(-Math.sin(angleX), -Math.cos(angleX)))\n        const xP = Vec2.intersectionOfLines(xP0, xP1, xP2, xP3)\n\n        const yP0 = new Vec2(Math.cos(angleY) * frustumPlaneOffsets.YPos, Math.sin(angleY) * frustumPlaneOffsets.YPos)\n        const yP1 = yP0.add(new Vec2(Math.sin(angleY), -Math.cos(angleY)))\n        const yP2 = new Vec2(-Math.cos(angleY) * frustumPlaneOffsets.YNeg, Math.sin(angleY) * frustumPlaneOffsets.YNeg)\n        const yP3 = yP2.add(new Vec2(-Math.sin(angleY), -Math.cos(angleY)))\n        const yP = Vec2.intersectionOfLines(yP0, yP1, yP2, yP3)\n\n        dolly = Math.max(xP.y, yP.y)\n        const pan = new Vec3(xP.x, yP.x, dolly)\n        globalXfo.tr.addInPlace(globalXfo.ori.rotateVec3(pan))\n\n        newFocalDistance = centroid.distanceTo(globalXfo.tr)\n\n        const frameBorder = 0.1\n        const frameBorderAdjustment = newFocalDistance * frameBorder\n        globalXfo.tr.addInPlace(globalXfo.ori.rotateVec3(new Vec3(0, 0, frameBorderAdjustment)))\n\n        dolly += frameBorderAdjustment\n      }\n\n      if (this.adjustNearAndFarPlanesToFocalDist) {\n        frustumPlaneOffsets.ZPos -= dolly\n        frustumPlaneOffsets.ZNeg += dolly\n        const near = frustumPlaneOffsets.ZNeg * this.nearDistFactor\n        const far = -frustumPlaneOffsets.ZPos * this.farDistFactor\n        this.__nearParam.setValue(near)\n        this.__farParam.setValue(far)\n      }\n    }\n\n    this.setFocalDistance(newFocalDistance)\n    this.getParameter('GlobalXfo').setValue(globalXfo)\n    this.emit('movementFinished')\n  }\n\n  /**\n   * Sets camera perspective from a Mat4 object.\n   *\n   * @param {Mat4} mat - The mat value.\n   * @param {number} aspect - The aspect value.\n   */\n  updateProjectionMatrix(mat, aspect) {\n    const isOrthographic = this.__isOrthographicParam.getValue()\n    const fov = this.__fovParam.getValue()\n    const near = this.__nearParam.getValue()\n    const far = this.__farParam.getValue()\n\n    const orthoMat = new Mat4()\n    if (isOrthographic > 0.0) {\n      const halfHeight = this.viewHeight * 0.5\n      const bottom = -halfHeight\n      const top = halfHeight\n      const left = halfHeight * -aspect\n      const right = halfHeight * aspect\n      orthoMat.setOrthographicMatrix(left, right, bottom, top, near, far)\n    }\n    if (isOrthographic < 1.0) {\n      mat.setPerspectiveMatrix(fov, aspect, near, far)\n    }\n\n    if (isOrthographic == 1.0) {\n      mat.setFromMat4(orthoMat)\n    } else if (isOrthographic > 0.0) {\n      mat.set(\n        MathFunctions.lerp(mat.m00, orthoMat.m00, isOrthographic),\n        MathFunctions.lerp(mat.m01, orthoMat.m01, isOrthographic),\n        MathFunctions.lerp(mat.m02, orthoMat.m02, isOrthographic),\n        MathFunctions.lerp(mat.m03, orthoMat.m03, isOrthographic),\n        MathFunctions.lerp(mat.m10, orthoMat.m10, isOrthographic),\n        MathFunctions.lerp(mat.m11, orthoMat.m11, isOrthographic),\n        MathFunctions.lerp(mat.m12, orthoMat.m12, isOrthographic),\n        MathFunctions.lerp(mat.m13, orthoMat.m13, isOrthographic),\n        MathFunctions.lerp(mat.m20, orthoMat.m20, isOrthographic),\n        MathFunctions.lerp(mat.m21, orthoMat.m21, isOrthographic),\n        MathFunctions.lerp(mat.m22, orthoMat.m22, isOrthographic),\n        MathFunctions.lerp(mat.m23, orthoMat.m23, isOrthographic),\n        MathFunctions.lerp(mat.m30, orthoMat.m30, isOrthographic),\n        MathFunctions.lerp(mat.m31, orthoMat.m31, isOrthographic),\n        MathFunctions.lerp(mat.m32, orthoMat.m32, isOrthographic),\n        MathFunctions.lerp(mat.m33, orthoMat.m33, isOrthographic)\n      )\n    }\n  }\n}\n\nRegistry.register('Camera', Camera)\n\nexport { Camera }\n","import { Xfo } from '../../Math/Xfo'\nimport { Operator } from './Operator'\nimport { OperatorOutput } from './OperatorOutput'\nimport { OperatorOutputMode } from '../Parameters/Parameter'\nimport { OperatorInput } from './OperatorInput'\n\n/** An operator that calculates the delta transform of the group since items were bound to it.\n * @extends Operator\n *\n */\nclass GroupTransformXfoOperator extends Operator {\n  /**\n   * Create a GroupMemberXfoOperator operator.\n   * @param {Parameter} groupGlobalXfoParam - The GlobalXfo param found on the Group.\n   * @param {Parameter} groupTransformXfoParam - The parameter on the Group which defines the displacement to apply to the members.\n   */\n  constructor(groupGlobalXfoParam, groupTransformXfoParam) {\n    super()\n    this.addInput(new OperatorInput('GroupGlobalXfo')).setParam(groupGlobalXfoParam)\n    this.addOutput(new OperatorOutput('GroupTransformXfo')).setParam(groupTransformXfoParam)\n  }\n\n  /**\n   * Create a GroupMemberXfoOperator operator.\n   * @param {Xfo} bindXfo - The Bind Xfo calculated from the initial Transforms of the Group Members.\n   */\n  setBindXfo(bindXfo) {\n    this.bindXfo = bindXfo\n    this.invBindXfo = bindXfo.inverse()\n    this.setDirty()\n  }\n\n  /**\n   * The evaluate method.\n   */\n  evaluate() {\n    const groupTransformOutput = this.getOutput('GroupTransformXfo')\n    if (this.invBindXfo) {\n      const groupGlobalXfo = this.getInput('GroupGlobalXfo').getValue()\n      groupTransformOutput.setClean(groupGlobalXfo.multiply(this.invBindXfo))\n    } else {\n      groupTransformOutput.setClean(new Xfo())\n    }\n  }\n}\n\n/** An operator for modifying group members by the groups Xfo\n * @private\n * @extends Operator\n *\n */\nclass GroupMemberXfoOperator extends Operator {\n  /**\n   * Create a GroupMemberXfoOperator operator.\n   * @param {Parameter} groupTransformXfoParam - The parameter on the Group which defines the displacement to apply to the members.\n   * @param {Parameter} memberXfoGlobalParam - The GlobalXfo param found on the Member.\n   */\n  constructor(groupTransformXfoParam, memberXfoGlobalParam) {\n    super()\n    this.addInput(new OperatorInput('GroupTransformXfo')).setParam(groupTransformXfoParam)\n    this.addOutput(new OperatorOutput('MemberGlobalXfo', OperatorOutputMode.OP_READ_WRITE)).setParam(\n      memberXfoGlobalParam\n    )\n\n    this._enabled = true\n  }\n\n  /**\n   * used to temporarily disable/enable the operator when the Group bind Xfo is being calculated\n   */\n  disable() {\n    this._enabled = false\n    this.setDirty()\n  }\n\n  /**\n   * used to temporarily disable/enable the operator when the Group bind Xfo is being calculated\n   */\n  enable() {\n    this._enabled = true\n    this.setDirty()\n  }\n\n  /**\n   * The evaluate method.\n   */\n  evaluate() {\n    const memberGlobalXfoOutput = this.getOutput('MemberGlobalXfo')\n    const memberGlobalXfo = memberGlobalXfoOutput.getValue()\n    if (this._enabled) {\n      const groupTransformXfo = this.getInput('GroupTransformXfo').getParam().getValue()\n      memberGlobalXfoOutput.setClean(groupTransformXfo.multiply(memberGlobalXfo))\n    } else {\n      memberGlobalXfoOutput.setClean(memberGlobalXfo)\n    }\n  }\n}\n\nexport { GroupTransformXfoOperator, GroupMemberXfoOperator }\n","/* eslint-disable no-unused-vars */\nimport { Vec3, Color, Xfo } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport {\n  BooleanParameter,\n  NumberParameter,\n  Vec3Parameter,\n  ColorParameter,\n  XfoParameter,\n  ItemSetParameter,\n  MultiChoiceParameter,\n} from '../Parameters/index'\nimport { MaterialParameter } from '../Parameters/MaterialParameter.js'\nimport { TreeItem } from '../TreeItem'\nimport { BaseGeomItem } from '../BaseGeomItem'\nimport { GroupTransformXfoOperator, GroupMemberXfoOperator } from '../Operators/GroupMemberXfoOperator.js'\nimport { BaseGroup } from './BaseGroup'\n\nconst GROUP_XFO_MODES = {\n  disabled: 0,\n  manual: 1,\n  first: 2,\n  average: 3,\n  globalOri: 4,\n}\n\n/**\n * Groups are a special type of `TreeItem` that allows you to gather/classify/organize/modify\n * multiple items contained within the group. Items can be added to the group directly, or using\n * its path.\n * All parameters set to the group are also set to the children; in other words, it's a faster way\n * to apply common things to multiple items.\n *\n * **Parameters**\n * * **Items(`ItemSetParameter`):** The items referenced in this group are stored in this parameter.\n * * **Highlighted(`BooleanParameter`):** _todo_\n * * **HighlightColor(`ColorParameter`):** _todo_\n * * **HighlightFill(`NumberParameter`):** _todo_\n * * **Material(`MaterialParameter`):** _todo_\n * * **CutAwayEnabled(`BooleanParameter`):** _todo_\n * * **CutPlaneNormal(`Vec3Parameter`):** _todo_\n * * **CutPlaneDist(`NumberParameter`):** _todo_\n *\n * @extends TreeItem\n */\nclass Group extends BaseGroup {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n    // Items which can be constructed by a user (not loaded in binary data.)\n    this.groupXfoDirty = false\n    this.calculatingGroupXfo = false\n    this.dirty = false\n    this._bindXfoDirty = false\n    this.memberXfoOps = []\n\n    this.__initialXfoModeParam = this.addParameter(\n      new MultiChoiceParameter('InitialXfoMode', GROUP_XFO_MODES.average, ['manual', 'first', 'average', 'global'])\n    )\n    this.__initialXfoModeParam.on('valueChanged', (event) => {\n      this.calcGroupXfo()\n    })\n\n    this.__highlightedParam = this.addParameter(new BooleanParameter('Highlighted', false))\n    this.__highlightedParam.on('valueChanged', (event) => {\n      this.__updateHighlight()\n    })\n\n    const highlightColorParam = this.addParameter(new ColorParameter('HighlightColor', new Color(0.5, 0.5, 1)))\n    highlightColorParam.on('valueChanged', (event) => {\n      this.__updateHighlight()\n    })\n    const highlightFillParam = this.addParameter(new NumberParameter('HighlightFill', 0.0, [0, 1]))\n    highlightFillParam.on('valueChanged', (event) => {\n      this.__updateHighlight()\n    })\n\n    this.__materialParam = this.addParameter(new MaterialParameter('Material'))\n    this.__materialParam.on('valueChanged', (event) => {\n      this.__updateMaterial()\n    })\n\n    this.addParameter(new BooleanParameter('CutAwayEnabled', false)).on('valueChanged', (event) => {\n      this.__updateCutaway()\n    })\n    this.addParameter(new Vec3Parameter('CutPlaneNormal', new Vec3(1, 0, 0))).on('valueChanged', (event) => {\n      this.__updateCutaway()\n    })\n    this.addParameter(new NumberParameter('CutPlaneDist', 0.0)).on('valueChanged', (event) => {\n      this.__updateCutaway()\n    })\n\n    const groupTransformParam = this.addParameter(new XfoParameter('GroupTransform', new Xfo()))\n    this.groupTransformOp = new GroupTransformXfoOperator(this.getParameter('GlobalXfo'), groupTransformParam)\n  }\n\n  /**\n   * Returns enum of available xfo modes.\n   *\n   * | Name | Default |\n   * | --- | --- |\n   * | manual | <code>0</code> |\n   * | first | <code>1</code> |\n   * | average | <code>2</code> |\n   * | globalOri | <code>3</code> |\n   */\n  static get INITIAL_XFO_MODES() {\n    return GROUP_XFO_MODES\n  }\n\n  /**\n   * The __updateVisibility method.\n   * @return {boolean} - The return value.\n   * @private\n   */\n  __updateVisibility() {\n    if (super.__updateVisibility()) {\n      const value = this.isVisible()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) item.propagateVisibility(value ? 1 : -1)\n      })\n      return true\n    }\n    return false\n  }\n\n  // /////////////////////////////\n\n  /**\n   * The __updateHighlight method.\n   * @private\n   */\n  __updateHighlight() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      let highlighted = false\n      let color\n      if (this.getParameter('Highlighted').getValue() || this.isSelected()) {\n        highlighted = true\n        color = this.getParameter('HighlightColor').getValue()\n        color.a = this.getParameter('HighlightFill').getValue()\n      }\n\n      const key = 'groupItemHighlight' + this.getId()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) {\n          if (highlighted) item.addHighlight(key, color, true)\n          else item.removeHighlight(key, true)\n        }\n      })\n      resolve()\n    })\n  }\n\n  /**\n   * Changes selection's state of the group with all items it owns.\n   *\n   * @param {boolean} sel - Boolean indicating the new selection state.\n   */\n  setSelected(sel) {\n    super.setSelected(sel)\n    this.__updateHighlight()\n  }\n\n  // ////////////////////////////////////////\n  // Global Xfo\n\n  /**\n   * Calculate the group Xfo translate.\n   * @private\n   * @return {Xfo} - Returns a new Xfo.\n   */\n  calcGroupXfo() {\n    const items = Array.from(this.__itemsParam.getValue())\n    if (items.length == 0) return new Xfo()\n    this.calculatingGroupXfo = true\n\n    this.memberXfoOps.forEach((op) => op.disable())\n\n    // TODO: Disable the group operator?\n    const initialXfoMode = this.__initialXfoModeParam.getValue()\n    let xfo\n    if (initialXfoMode == GROUP_XFO_MODES.manual) {\n      // The xfo is manually set by the current global xfo.\n      xfo = this.getParameter('GlobalXfo').getValue()\n    } else if (initialXfoMode == GROUP_XFO_MODES.first) {\n      if (items[0] instanceof TreeItem) {\n        xfo = items[0].getParameter('GlobalXfo').getValue()\n      }\n    } else if (initialXfoMode == GROUP_XFO_MODES.average) {\n      xfo = new Xfo()\n      xfo.ori.set(0, 0, 0, 0)\n      let numTreeItems = 0\n      items.forEach((item, index) => {\n        if (item instanceof TreeItem) {\n          const itemXfo = item.getParameter('GlobalXfo').getValue()\n          xfo.tr.addInPlace(itemXfo.tr)\n          xfo.ori.addInPlace(itemXfo.ori)\n          numTreeItems++\n        }\n      })\n      xfo.tr.scaleInPlace(1 / numTreeItems)\n      xfo.ori.normalizeInPlace()\n      // xfo.sc.scaleInPlace(1/ numTreeItems);\n    } else if (initialXfoMode == GROUP_XFO_MODES.globalOri) {\n      xfo = new Xfo()\n      let numTreeItems = 0\n      items.forEach((item, index) => {\n        if (item instanceof TreeItem) {\n          const itemXfo = item.getParameter('GlobalXfo').getValue()\n          xfo.tr.addInPlace(itemXfo.tr)\n          numTreeItems++\n        }\n      })\n      xfo.tr.scaleInPlace(1 / numTreeItems)\n    } else {\n      throw new Error('Invalid GROUP_XFO_MODES.')\n    }\n\n    // Note: if the Group global param becomes dirty\n    // then it stops propagating dirty to its members.\n    // const newGlobal = this.getParameter('GlobalXfo').getValue() // force a cleaning.\n    // this.invGroupXfo = newGlobal.inverse()\n\n    this.getParameter('GlobalXfo').setValue(xfo)\n    this.groupTransformOp.setBindXfo(xfo)\n\n    this.memberXfoOps.forEach((op) => op.enable())\n    this.calculatingGroupXfo = false\n    this.groupXfoDirty = false\n  }\n\n  // ////////////////////////////////////////\n  // Materials\n\n  /**\n   * The __updateMaterial method.\n   * @private\n   */\n  __updateMaterial() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      const material = this.getParameter('Material').getValue()\n\n      // TODO: Bind an operator\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        item.traverse((treeItem) => {\n          if (treeItem instanceof TreeItem && treeItem.hasParameter('Material')) {\n            const p = treeItem.getParameter('Material')\n            if (material) {\n              const m = p.getValue()\n\n              // TODO: How do we filter material assignments? this is a nasty hack.\n              // but else we end up assigning surface materials to our edges.\n              if (m != material && (!m || m.getShaderName() != 'LinesShader')) {\n                p.__backupMaterial = m\n                p.loadValue(material)\n              }\n            } else if (p.__backupMaterial) {\n              p.loadValue(p.__backupMaterial)\n            }\n          }\n        }, false)\n      })\n      resolve()\n    })\n  }\n\n  // ////////////////////////////////////////\n  // Cutaways\n\n  /**\n   * The __updateCutaway method.\n   * @private\n   */\n  __updateCutaway() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      const cutEnabled = this.getParameter('CutAwayEnabled').getValue()\n      const cutAwayVector = this.getParameter('CutPlaneNormal').getValue()\n      const cutAwayDist = this.getParameter('CutPlaneDist').getValue()\n\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        item.traverse((treeItem) => {\n          if (treeItem instanceof BaseGeomItem) {\n            treeItem.setCutawayEnabled(cutEnabled)\n            treeItem.setCutVector(cutAwayVector)\n            treeItem.setCutDist(cutAwayDist)\n          }\n        }, true)\n      })\n      resolve()\n    })\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   *  sets the root item to be used as the search root.\n   * @param {TreeItem} treeItem\n   */\n\n  setSearchRoot(treeItem) {\n    this.searchRoot = treeItem\n  }\n\n  setOwner(owner) {\n    if (!this.searchRoot || this.searchRoot == this.getOwner()) this.searchRoot = owner\n    super.setOwner(owner)\n  }\n\n  /**\n   * This method is mostly used in our demos,\n   * and should be removed from the interface.\n   *\n   * @deprecated\n   * @param {array} paths - The paths value.\n   * @private\n   */\n  setPaths(paths) {\n    this.clearItems(false)\n\n    const searchRoot = this.getOwner()\n    if (this.searchRoot == undefined) {\n      console.warn('Group does not have an owner and so cannot resolve paths:', this.getName())\n      return\n    }\n    const items = []\n    paths.forEach((path) => {\n      const treeItem = this.searchRoot.resolvePath(path)\n      if (treeItem) items.push(treeItem)\n      else {\n        console.warn('Path does not resolve to an Item:', path, ' group:', this.getName())\n      }\n    })\n    this.setItems(items)\n  }\n\n  /**\n   * Uses the specified list of paths to look and get each `BaseItem` object and add it to Group's `Items` parameter.\n   *\n   * @param {array} paths - The paths value.\n   */\n  resolveItems(paths) {\n    this.setPaths(paths)\n  }\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    super.__bindItem(item, index)\n    if (!(item instanceof TreeItem)) return\n    const listenerIDs = this.__itemsEventHandlers[index]\n    // ///////////////////////////////\n    // Update the Material\n    const material = this.getParameter('Material').getValue()\n    if (material) {\n      // TODO: Bind an operator instead\n      item.traverse((treeItem) => {\n        if (treeItem instanceof TreeItem && treeItem.hasParameter('Material')) {\n          const p = treeItem.getParameter('Material')\n          if (material) {\n            const m = p.getValue()\n            // TODO: How do we filter material assignments? this is a nasty hack.\n            // but else we end up assigning surface materials to our edges.\n            if (m != material && (!m || m.getShaderName() != 'LinesShader')) {\n              p.__backupMaterial = m\n              p.loadValue(material)\n            }\n          }\n        }\n      }, true)\n    }\n\n    // ///////////////////////////////\n    // Update the highlight\n    if (item instanceof TreeItem && this.getParameter('Highlighted').getValue()) {\n      const color = this.getParameter('HighlightColor').getValue()\n      color.a = this.getParameter('HighlightFill').getValue()\n      item.addHighlight('groupItemHighlight' + this.getId(), color, true)\n    }\n\n    // ///////////////////////////////\n    // Update the item cutaway\n    const cutEnabled = this.getParameter('CutAwayEnabled').getValue()\n    if (cutEnabled) {\n      const cutAwayVector = this.getParameter('CutPlaneNormal').getValue()\n      const cutAwayDist = this.getParameter('CutPlaneDist').getValue()\n      item.traverse((treeItem) => {\n        if (treeItem instanceof BaseGeomItem) {\n          // console.log(\"cutEnabled:\", treeItem.getPath(), cutAwayVector.toString(), treeItem.getParameter('Material').getValue().getShaderName())\n          treeItem.setCutawayEnabled(cutEnabled)\n          treeItem.setCutVector(cutAwayVector)\n          treeItem.setCutDist(cutAwayDist)\n        }\n      }, true)\n    }\n\n    if (!this.isVisible()) {\n      // Decrement the visibility counter which might cause\n      // this item to become invisible. (or it might already be invisible.)\n      item.propagateVisibility(-1)\n    }\n\n    if (item instanceof TreeItem) {\n      const memberGlobalXfoParam = item.getParameter('GlobalXfo')\n      const memberXfoOp = new GroupMemberXfoOperator(this.getParameter('GroupTransform'), memberGlobalXfoParam)\n      this.memberXfoOps.splice(index, 0, memberXfoOp)\n\n      listenerIDs['valueChanged'] = item.getParameter('BoundingBox').on('valueChanged', (event) => {\n        this._setBoundingBoxDirty(event)\n      })\n      this._bindXfoDirty = true\n    }\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    super.__unbindItem(item, index)\n    if (!(item instanceof TreeItem)) return\n\n    if (this.getParameter('Highlighted').getValue()) {\n      item.removeHighlight('groupItemHighlight' + this.getId(), true)\n    }\n\n    if (!this.isVisible()) {\n      // Increment the Visibility counter which might cause\n      // this item to become visible.\n      // It will stay invisible if its parent is invisible, or if\n      // multiple groups connect to it and say it is invisible.\n      item.propagateVisibility(1)\n    }\n\n    // ///////////////////////////////\n    // Update the item cutaway\n    item.traverse((treeItem) => {\n      if (treeItem instanceof BaseGeomItem) {\n        treeItem.setCutawayEnabled(false)\n      }\n    }, true)\n\n    if (item instanceof TreeItem) {\n      this.memberXfoOps[index].detach()\n      this.memberXfoOps.splice(index, 1)\n      this._setBoundingBoxDirty()\n      item.getParameter('BoundingBox').removeListenerById('valueChanged', this.listenerIDs['valueChanged'])\n      this._bindXfoDirty = true\n    }\n  }\n\n  /**\n   * Adds an item to the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  addItem(item, emit = true) {\n    if (!item) {\n      console.warn('Error adding item to group. Item is null')\n      return\n    }\n    this.__itemsParam.addItem(item, emit)\n\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  /**\n   * Removes an item from the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  removeItem(item, emit = true) {\n    this.__itemsParam.removeItem(item, emit)\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  /**\n   * Removes all items from the group and kind of returns the object to the default state.\n   *\n   * @param {boolean} emit - `true` triggers `valueChanged` event.\n   */\n  clearItems(emit = true) {\n    // Note: Unbind reversed so that indices\n    // do not get changed during the unbind.\n    const items = Array.from(this.__itemsParam.getValue())\n    for (let i = items.length - 1; i >= 0; i--) {\n      this.__unbindItem(items[i], i)\n    }\n    // this.__eventHandlers = []\n    this.memberXfoOps = []\n    this.__itemsParam.clearItems(emit)\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  /**\n   * Returns the list of `BaseItem` objects owned by the group.\n   *\n   * @return {array} - The return value.\n   */\n  getItems() {\n    return this.__itemsParam.getValue()\n  }\n\n  /**\n   * Removes old items in current group and adds new ones.\n   *\n   * @param {array} items - List of `BaseItem` you want to add to the group\n   */\n  setItems(items) {\n    this.clearItems(false)\n    this.__itemsParam.setItems(items)\n    this.calcGroupXfo()\n  }\n\n  /**\n   * The _cleanBoundingBox method.\n   * @param {Box3} bbox - The bounding box value.\n   * @return {Box3} - The return value.\n   * @private\n   */\n  _cleanBoundingBox(bbox) {\n    const result = super._cleanBoundingBox(bbox)\n    const items = Array.from(this.__itemsParam.getValue())\n    items.forEach((item) => {\n      if (item instanceof TreeItem) {\n        if (item.isVisible()) {\n          result.addBox3(item.getParameter('BoundingBox').getValue())\n        }\n      }\n    })\n    return result\n  }\n\n  // ///////////////////////\n  // Events\n\n  /**\n   * Occurs when a user presses a mouse button over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   *\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerDown(event) {\n    super.onPointerDown(event)\n  }\n\n  /**\n   * Occurs when a user releases a mouse button over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   *\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerUp(event) {\n    super.onPointerUp(event)\n  }\n\n  /**\n   * Occur when the mouse pointer is moving  while over an element.\n   * Note: these methods are useful for debugging mouse event propagation to groups\n   * @private\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerMove(event) {\n    super.onPointerMove(event)\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * called once loading is done.\n   * @private\n   */\n  __loadDone() {\n    this.calculatingGroupXfo = true\n    this.calcGroupXfo()\n    this.calculatingGroupXfo = false\n  }\n\n  // ////////////////////////////////////////\n  // Clone and Destroy\n\n  /**\n   * The clone method constructs a new group,\n   * copies its values and returns it.\n   *\n   * @return {Group} - Returns a new cloned group.\n   */\n  clone() {\n    const cloned = new Group()\n    cloned.copyFrom(this)\n    return cloned\n  }\n}\n\nRegistry.register('Group', Group)\n\nexport { Group }\n","/* eslint-disable no-unused-vars */\nimport { Xfo } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { XfoParameter, MultiChoiceParameter } from '../Parameters/index'\nimport { BaseGroup } from './BaseGroup'\nimport { TreeItem } from '../TreeItem'\nimport { GroupTransformXfoOperator, GroupMemberXfoOperator } from '../Operators/GroupMemberXfoOperator.js'\n\nconst GROUP_XFO_MODES = {\n  disabled: 0,\n  manual: 1,\n  first: 2,\n  average: 3,\n  globalOri: 4,\n}\n\n/**\n * The KinematicGroup is used to control the transform of a collection of objects int eh scene.\n * Objects can be added to a kinematic group and then the group can be transformed, causing each\n * of the members to be transformed as one.\n *\n **Parameters**\n * **InitialXfoMode(`MultiChoiceParameter`):** _todo_\n * **GroupTransform(`XfoParameter`):** _todo_\n *\n * @extends BaseGroup\n */\nclass KinematicGroup extends BaseGroup {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n    // Items which can be constructed by a user (not loaded in binary data.)\n    this.calculatingGroupXfo = false\n    this.memberXfoOps = []\n\n    this.__initialXfoModeParam = this.addParameter(\n      new MultiChoiceParameter('InitialXfoMode', GROUP_XFO_MODES.average, ['manual', 'first', 'average', 'global'])\n    )\n    this.__initialXfoModeParam.on('valueChanged', (event) => {\n      this.calcGroupXfo()\n    })\n    const groupTransformParam = this.addParameter(new XfoParameter('GroupTransform', new Xfo()))\n    this.groupTransformOp = new GroupTransformXfoOperator(this.getParameter('GlobalXfo'), groupTransformParam)\n  }\n\n  /**\n   * Returns enum of available xfo modes.\n   *\n   * | Name | Default |\n   * | --- | --- |\n   * | manual | <code>0</code> |\n   * | first | <code>1</code> |\n   * | average | <code>2</code> |\n   * | globalOri | <code>3</code> |\n   */\n  static get INITIAL_XFO_MODES() {\n    return GROUP_XFO_MODES\n  }\n\n  // /////////////////////////////\n\n  /**\n   * The __updateHighlight method.\n   * @private\n   */\n  __updateHighlight() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      let highlighted = false\n      let color\n      if (this.isSelected()) {\n        highlighted = true\n        color = this.getHighlight()\n        color.a = 0.2\n      }\n\n      const key = 'kinematicGroupItemHighlight' + this.getId()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) {\n          if (highlighted) item.addHighlight(key, color, true)\n          else item.removeHighlight(key, true)\n        }\n      })\n      resolve()\n    })\n  }\n\n  /**\n   * Changes selection's state of the group with all items it owns.\n   *\n   * @param {boolean} sel - Boolean indicating the new selection state.\n   */\n  setSelected(sel) {\n    super.setSelected(sel)\n    this.__updateHighlight()\n  }\n\n  // ////////////////////////////////////////\n  // Global Xfo\n\n  /**\n   * Calculate the group Xfo translate.\n   * @private\n   * @return {Xfo} - Returns a new Xfo.\n   */\n  calcGroupXfo() {\n    const items = Array.from(this.__itemsParam.getValue())\n    if (items.length == 0) return new Xfo()\n    this.calculatingGroupXfo = true\n\n    this.memberXfoOps.forEach((op) => op.disable())\n\n    // TODO: Disable the group operator?\n    const initialXfoMode = this.__initialXfoModeParam.getValue()\n    let xfo\n    if (initialXfoMode == GROUP_XFO_MODES.manual) {\n      // The xfo is manually set by the current global xfo.\n      xfo = this.getParameter('GlobalXfo').getValue()\n    } else if (initialXfoMode == GROUP_XFO_MODES.first) {\n      if (items[0] instanceof TreeItem) {\n        xfo = items[0].getParameter('GlobalXfo').getValue()\n      }\n    } else if (initialXfoMode == GROUP_XFO_MODES.average) {\n      xfo = new Xfo()\n      xfo.ori.set(0, 0, 0, 0)\n      let numTreeItems = 0\n      items.forEach((item, index) => {\n        if (item instanceof TreeItem) {\n          const itemXfo = item.getParameter('GlobalXfo').getValue()\n          xfo.tr.addInPlace(itemXfo.tr)\n          xfo.ori.addInPlace(itemXfo.ori)\n          numTreeItems++\n        }\n      })\n      xfo.tr.scaleInPlace(1 / numTreeItems)\n      xfo.ori.normalizeInPlace()\n      // xfo.sc.scaleInPlace(1/ numTreeItems);\n    } else if (initialXfoMode == GROUP_XFO_MODES.globalOri) {\n      xfo = new Xfo()\n      let numTreeItems = 0\n      items.forEach((item, index) => {\n        if (item instanceof TreeItem) {\n          const itemXfo = item.getParameter('GlobalXfo').getValue()\n          xfo.tr.addInPlace(itemXfo.tr)\n          numTreeItems++\n        }\n      })\n      xfo.tr.scaleInPlace(1 / numTreeItems)\n    } else {\n      throw new Error('Invalid GROUP_XFO_MODES.')\n    }\n\n    // Note: if the KinematicGroup global param becomes dirty\n    // then it stops propagating dirty to its members.\n    // const newGlobal = this.getParameter('GlobalXfo').getValue() // force a cleaning.\n    // this.invGroupXfo = newGlobal.inverse()\n\n    this.getParameter('GlobalXfo').setValue(xfo)\n    this.groupTransformOp.setBindXfo(xfo)\n\n    this.memberXfoOps.forEach((op) => op.enable())\n    this.calculatingGroupXfo = false\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    if (!(item instanceof TreeItem)) return\n\n    // ///////////////////////////////\n    // Update the highlight\n    if (this.isSelected()) {\n      const color = this.getHighlight()\n      color.a = 0.2\n      const key = 'kinematicGroupItemHighlight' + this.getId()\n      item.addHighlight(key, color, true)\n    }\n\n    {\n      const memberGlobalXfoParam = item.getParameter('GlobalXfo')\n      const memberXfoOp = new GroupMemberXfoOperator(this.getParameter('GroupTransform'), memberGlobalXfoParam)\n      this.memberXfoOps.splice(index, 0, memberXfoOp)\n\n      if (!this.__itemsEventHandlers[index]) this.__itemsEventHandlers[index] = {} // initialize\n      const listenerIDs = this.__itemsEventHandlers[index]\n      listenerIDs['BoundingBox.valueChanged'] = item.getParameter('BoundingBox').on('valueChanged', (event) => {\n        this._setBoundingBoxDirty()\n      })\n    }\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    super.__unbindItem(item, index)\n\n    if (!(item instanceof TreeItem)) return\n\n    if (this.isSelected()) {\n      const key = 'kinematicGroupItemHighlight' + this.getId()\n      item.removeHighlight(key, true)\n    }\n\n    {\n      this.memberXfoOps[index].detach()\n      this.memberXfoOps.splice(index, 1)\n      this._setBoundingBoxDirty()\n    }\n  }\n\n  /**\n   * Adds an item to the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  addItem(item, emit = true) {\n    super.addItem(item, emit)\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  /**\n   * Removes an item from the group(See `Items` parameter).\n   *\n   * @param {BaseItem} item - The item value.\n   * @param {boolean} emit - The emit value.\n   */\n  removeItem(item, emit = true) {\n    super.removeItem(item, emit)\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  /**\n   * Sets an entire new array of items to the BaseGroup replacing any previous items.\n   *\n   * @param {array} items - List of `BaseItem` you want to add to the group\n   */\n  setItems(items) {\n    super.setItems(emit)\n    this.calcGroupXfo()\n  }\n\n  /**\n   * Removes all items from the group.\n   *\n   * @param {boolean} emit - `true` triggers `valueChanged` event.\n   */\n  clearItems(emit = true) {\n    super.clearItems(emit)\n    this.memberXfoOps = []\n    if (emit) {\n      this.calcGroupXfo()\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * called once loading is done.\n   * @private\n   */\n  __loadDone() {\n    this.calculatingGroupXfo = true\n    this.calcGroupXfo()\n    this.calculatingGroupXfo = false\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new group,\n   * copies its values and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {KinematicGroup} - Returns a new cloned group.\n   */\n  clone(context) {\n    const cloned = new KinematicGroup()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n}\n\nRegistry.register('KinematicGroup', KinematicGroup)\n\nexport { KinematicGroup }\n","/* eslint-disable no-unused-vars */\nimport { Registry } from '../../Registry'\nimport { BaseGroup } from './BaseGroup'\nimport { MaterialParameter } from '../Parameters/MaterialParameter.js'\nimport { TreeItem } from '../TreeItem'\n\n/**\n *\n * **Parameters**\n * * **Material(`MaterialParameter`):** _todo_\n *\n * @extends BaseGroup\n */\nclass MaterialGroup extends BaseGroup {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n\n    this.__materialParam = this.addParameter(new MaterialParameter('Material'))\n    this.__materialParam.on('valueChanged', () => {\n      this.__updateMaterial()\n    })\n  }\n\n  // /////////////////////////////\n\n  /**\n   * The __updateHighlight method.\n   * @private\n   */\n  __updateHighlight() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      let highlighted = false\n      let color\n      if (this.isSelected()) {\n        highlighted = true\n        color = this.getHighlight()\n        color.a = 0.2\n      }\n\n      const key = 'kinematicGroupItemHighlight' + this.getId()\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        if (item instanceof TreeItem) {\n          if (highlighted) item.addHighlight(key, color, true)\n          else item.removeHighlight(key, true)\n        }\n      })\n      resolve()\n    })\n  }\n\n  /**\n   * Changes selection's state of the group with all items it owns.\n   *\n   * @param {boolean} sel - Boolean indicating the new selection state.\n   */\n  setSelected(sel) {\n    super.setSelected(sel)\n    this.__updateHighlight()\n  }\n\n  // ////////////////////////////////////////\n  // Materials\n\n  /**\n   * The __updateMaterial method.\n   * @private\n   */\n  __updateMaterial() {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      const material = this.getParameter('Material').getValue()\n\n      // TODO: Bind an operator\n      Array.from(this.__itemsParam.getValue()).forEach((item) => {\n        item.traverse((treeItem) => {\n          if (treeItem instanceof TreeItem && treeItem.hasParameter('Material')) {\n            const p = treeItem.getParameter('Material')\n            if (material) {\n              const m = p.getValue()\n\n              // TODO: How do we filter material assignments? this is a nasty hack.\n              // but else we end up assigning surface materials to our edges.\n              if (m != material && (!m || m.getShaderName() != 'LinesShader')) {\n                p.__backupMaterial = m\n                p.setValue(material)\n              }\n            } else if (p.__backupMaterial) {\n              p.setValue(p.__backupMaterial)\n            }\n          }\n        })\n      })\n      resolve()\n    })\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    super.__bindItem(item, index)\n\n    if (!(item instanceof TreeItem)) return\n\n    // ///////////////////////////////\n    // Update the highlight\n    if (this.isSelected()) {\n      const color = this.getHighlight()\n      color.a = 0.2\n      const key = 'materialGroupItemHighlight' + this.getId()\n      item.addHighlight(key, color, true)\n    }\n\n    // ///////////////////////////////\n    // Update the Material\n    const material = this.getParameter('Material').getValue()\n    if (material) {\n      // TODO: Bind an operator instead\n      item.traverse((treeItem) => {\n        if (treeItem instanceof TreeItem && treeItem.hasParameter('Material')) {\n          const p = treeItem.getParameter('Material')\n          if (material) {\n            const m = p.getValue()\n            // TODO: How do we filter material assignments? this is a nasty hack.\n            // but else we end up assigning surface materials to our edges.\n            if (m != material && (!m || m.getShaderName() != 'LinesShader')) {\n              p.__backupMaterial = m\n              p.setValue(material)\n            }\n          }\n        }\n      }, true)\n    }\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    super.__unbindItem(item, index)\n    if (!(item instanceof TreeItem)) return\n\n    if (this.isSelected()) {\n      const key = 'materialGroupItemHighlight' + this.getId()\n      item.removeHighlight(key, true)\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new group,\n   * copies its values and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {MaterialGroup} - Returns a new cloned group.\n   */\n  clone(context) {\n    const cloned = new MaterialGroup()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n}\n\nRegistry.register('MaterialGroup', MaterialGroup)\n\nexport { MaterialGroup }\n","import { Vec4 } from '../../Math/Vec4'\nimport { Operator } from './Operator'\nimport { OperatorOutput } from './OperatorOutput'\nimport { OperatorInput } from './OperatorInput'\n\n/** An operator that calculates the delta transform of the group since items were bound to it.\n * @extends Operator\n *\n */\nclass CuttingPlaneOperator extends Operator {\n  /**\n   * Create a GroupMemberXfoOperator operator.\n   * @param {Parameter} groupGlobalXfoParam - The GlobalXfo param found on the Group.\n   * @param {Parameter} cuttingPlaneParam - The parameter on the Group which defines the displacement to apply to the members.\n   */\n  constructor(groupGlobalXfoParam, cuttingPlaneParam) {\n    super()\n    this.addInput(new OperatorInput('GroupGlobalXfo')).setParam(groupGlobalXfoParam)\n    this.addOutput(new OperatorOutput('CuttingPlane')).setParam(cuttingPlaneParam)\n  }\n\n  /**\n   * The evaluate method.\n   */\n  evaluate() {\n    const cuttingPlaneOutput = this.getOutput('CuttingPlane')\n    const groupGlobalXfo = this.getInput('GroupGlobalXfo').getValue()\n\n    const vec = groupGlobalXfo.ori.getZaxis()\n    const dist = groupGlobalXfo.tr.dot(vec)\n\n    cuttingPlaneOutput.setClean(new Vec4(vec.x, vec.y, vec.z, -dist))\n  }\n}\n\nexport { CuttingPlaneOperator }\n","/* eslint-disable no-unused-vars */\nimport { Vec4, Color, Box3, Xfo } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { BooleanParameter, Vec4Parameter } from '../Parameters/index'\nimport { Material } from '../Material'\nimport { GeomItem } from '../GeomItem'\nimport { BaseGroup } from './BaseGroup'\nimport { TreeItem } from '../TreeItem'\nimport { Plane } from '../Geometry/Shapes/Plane'\nimport { Rect } from '../Geometry/Shapes/Rect'\nimport { BaseGeomItem } from '../BaseGeomItem'\nimport { CuttingPlaneOperator } from '../Operators/CuttingPlaneOperator.js'\n\n/**\n * Groups are a special type of `BaseGroup` that allows you to gather/classify/organize/modify\n * multiple items contained within the group. Items can be added to the group directly, or using\n * its path.\n * All parameters set to the group are also set to the children; in other words, it's a faster way\n * to apply common things to multiple items.\n *\n * **Parameters**\n * * **CutAwayEnabled(`BooleanParameter`):** _todo_\n * * **CutPlaneNormal(`Vec3Parameter`):** _todo_\n * * **CutPlaneDist(`NumberParameter`):** _todo_\n *\n * @extends BaseGroup\n */\nclass CuttingPlane extends BaseGroup {\n  /**\n   * Creates an instance of a group.\n   *\n   * @param {string} name - The name of the group.\n   */\n  constructor(name) {\n    super(name)\n\n    const booleanParam = new BooleanParameter('CutAwayEnabled', false)\n    const vec4Parameter = new Vec4Parameter('CutPlane', new Vec4(1, 0, 0))\n    booleanParam.on('valueChanged', (event) => {\n      this.__updateCutaway(event)\n    })\n    vec4Parameter.on('vec4Parameter', (event) => {\n      this.__updateCutaway(event)\n    })\n    this.addParameter(booleanParam)\n    this.addParameter(vec4Parameter)\n\n    this.cutPlaneOp = new CuttingPlaneOperator(this.getParameter('GlobalXfo'), this.getParameter('CutPlane'))\n\n    // Create the geometry to display the plane.\n    const material = new Material('plane', 'FlatSurfaceShader')\n    material.getParameter('BaseColor').setValue(new Color(1, 1, 1, 0.2))\n    const plane = new GeomItem(`PlaneGeom`, new Plane(1, 1), material)\n    plane.getSelectable(false)\n    this.addChild(plane)\n\n    const borderMaterial = new Material('border', 'LinesShader')\n    borderMaterial.getParameter('BaseColor').setValue(new Color(1, 0, 0, 1))\n    const border = new GeomItem(`BorderGeom`, new Rect(1, 1), borderMaterial)\n    border.getSelectable(false)\n    this.addChild(border)\n  }\n\n  // ////////////////////////////////////////\n  // Cutaways\n\n  /**\n   * The __updateCutaway method.\n   * @param {TreeITem} item - The item in the group.\n   * @private\n   */\n  __updateCutaway(item) {\n    // Make this function async so that we don't pull on the\n    // graph immediately when we receive a notification.\n    // Note: propagating using an operator would be much better.\n    new Promise((resolve) => {\n      const cutEnabled = this.getParameter('CutAwayEnabled').getValue()\n      const cutPlane = this.getParameter('CutPlane').getValue()\n      const cutAwayVector = cutPlane.xyz\n      const cutAwayDist = cutPlane.w\n\n      if (item instanceof BaseGeomItem) {\n        item.setCutawayEnabled(cutEnabled)\n        item.setCutVector(cutAwayVector)\n        item.setCutDist(cutAwayDist)\n      } else {\n        Array.from(this.__itemsParam.getValue()).forEach((item) => {\n          item.traverse((item) => {\n            if (item instanceof BaseGeomItem) {\n              item.setCutawayEnabled(cutEnabled)\n              item.setCutVector(cutAwayVector)\n              item.setCutDist(cutAwayDist)\n            }\n          }, true)\n        })\n      }\n      resolve()\n    })\n  }\n\n  // ////////////////////////////////////////\n  // Items\n\n  /**\n   * The __bindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __bindItem(item, index) {\n    if (!(item instanceof TreeItem)) return\n\n    // ///////////////////////////////\n    // Update the item cutaway\n    const cutEnabled = this.getParameter('CutAwayEnabled').getValue()\n    if (cutEnabled) {\n      this.__updateCutaway(item)\n    }\n\n    const bbox = new Box3()\n    const xfo = this.getParameter('GlobalXfo').getValue()\n    const invxfo = xfo.inverse()\n    Array.from(this.__itemsParam.getValue()).forEach((item) => {\n      if (item instanceof TreeItem) {\n        // const itemxfo = invxfo.multiply(item.getParameter('GlobalXfo').getValue())\n        // bbox.addBox3(item.getParameter('BoundingBox').getValue(), itemxfo.toMat4())\n        bbox.addBox3(item.getParameter('BoundingBox').getValue())\n      }\n    })\n    {\n      const sizex = bbox.p1.x - bbox.p0.x\n      const sizey = bbox.p1.y - bbox.p0.y\n      const xfo = new Xfo()\n      xfo.sc.set(sizex, sizey, 1)\n      this.getChild(0).getParameter('LocalXfo').setValue(xfo)\n      this.getChild(1).getParameter('LocalXfo').setValue(xfo)\n      // this.getParameter('GlobalXfo').setValue(xfo)\n    }\n  }\n\n  /**\n   * The __unbindItem method.\n   * @param {BaseItem} item - The item value.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __unbindItem(item, index) {\n    if (!(item instanceof TreeItem)) return\n\n    // ///////////////////////////////\n    // Update the item cutaway\n    item.traverse((treeItem) => {\n      if (treeItem instanceof BaseGeomItem) {\n        treeItem.setCutawayEnabled(false)\n      }\n    }, true)\n  }\n\n  // ////////////////////////////////////////\n  // Clone\n\n  /**\n   * The clone method constructs a new group,\n   * copies its values and returns it.\n   *\n   * @param {object} context - The context value.\n   * @return {CuttingPlane} - Returns a new cloned group.\n   */\n  clone(context) {\n    const cloned = new CuttingPlane()\n    cloned.copyFrom(this, context)\n    return cloned\n  }\n}\n\nRegistry.register('CuttingPlane', CuttingPlane)\n\nexport { CuttingPlane }\n","import { Color } from '../Math/index'\nimport { BaseItem } from './BaseItem.js'\nimport { BooleanParameter, NumberParameter, ColorParameter, ImageParameter } from './Parameters/index'\n\n/**\n * `BaseItem` type of class\n *\n * **Parameters**\n * * **BackgroundColor(`ColorParameter`):** Changes background color of the scene\n * * **EnvMap(`ImageParameter`):** _todo_\n * * **Display(`BooleanParameter`):** _todo_\n * * **EnvMapLOD(`NumberParameter`):** _todo_\n * @extends BaseItem\n */\nclass SceneSettings extends BaseItem {\n  /**\n   * Create scene settings.\n   * @param {string} name - The name of the scene settings item.\n   */\n  constructor(name) {\n    super(name)\n    this.addParameter(new ColorParameter('BackgroundColor', new Color('#eeeeee')))\n    this.addParameter(new ImageParameter('EnvMap'))\n    this.addParameter(new BooleanParameter('Display EnvMap', false))\n    this.addParameter(new NumberParameter('EnvMapLOD', 0))\n  }\n}\n\nexport { SceneSettings }\n","import { Color, Xfo, Vec3 } from '../Math/index'\nimport { TreeItem } from './TreeItem'\nimport { Material } from './Material'\nimport { GeomItem } from './GeomItem'\nimport { Grid } from './Geometry/Shapes/Grid'\nimport { Lines } from './Geometry/Lines'\nimport { Registry } from '../Registry'\n\n/**\n * The GridTreeItem displays a grid of a given size and resolution. The Grid is oriented on the XY plane\n * and highlights the X and Y axes with Red and Green lines. Grids are useful in displaying scene scale and coordinate system.\n * The Grid geometry does not return a bounding box and so does not effect the bounding of the scene.\n *\n * @extends {TreeItem}\n */\nclass GridTreeItem extends TreeItem {\n  /**\n   * Creates an instance of GridTree.\n   *\n   * @param {number} [gridSize=5]\n   * @param {number} [resolution=50]\n   * @param {string} [gridColor=new Color('#DCDCDC')]\n   */\n  constructor(gridSize = 5, resolution = 50, gridColor = new Color('#DCDCDC')) {\n    super('GridTree')\n\n    this.disableBoundingBox = true\n    this.setSelectable(false)\n\n    const gridMaterial = new Material('gridMaterial', 'LinesShader')\n    gridMaterial.getParameter('BaseColor').setValue(gridColor)\n    gridMaterial.getParameter('Overlay').setValue(0.0)\n    gridMaterial.getParameter('StippleValue').setValue(0)\n    gridMaterial.getParameter('OccludedStippleValue').setValue(1)\n\n    const grid = new Grid(gridSize, gridSize, resolution, resolution, true)\n    const gridItem = new GeomItem('GridItem', grid, gridMaterial)\n    gridItem.setSelectable(false)\n    this.addChild(gridItem, false)\n    const axisLine = new Lines()\n    axisLine.setNumVertices(2)\n    axisLine.setNumSegments(1)\n    axisLine.setSegmentVertexIndices(0, 0, 1)\n    const positions = axisLine.getVertexAttribute('positions')\n    positions.getValueRef(0).set(gridSize * -0.5, 0.0, 0.0)\n    positions.getValueRef(1).set(gridSize * 0.5, 0.0, 0.0)\n\n    const gridXAxisMaterial = new Material('gridXAxisMaterial', 'LinesShader')\n    gridXAxisMaterial.getParameter('BaseColor').setValue(new Color(gridColor.luminance(), 0, 0))\n    gridXAxisMaterial.getParameter('Overlay').setValue(0.0)\n    gridXAxisMaterial.getParameter('StippleValue').setValue(0)\n    gridXAxisMaterial.getParameter('OccludedStippleValue').setValue(1)\n    const gridXAxis = new GeomItem('xAxisLine', axisLine, gridXAxisMaterial)\n    gridXAxis.setSelectable(false)\n    this.addChild(gridXAxis, false)\n\n    const gridYAxisMaterial = new Material('gridYAxisMaterial', 'LinesShader')\n    gridYAxisMaterial.getParameter('BaseColor').setValue(new Color(0, gridColor.luminance(), 0))\n    gridYAxisMaterial.getParameter('Overlay').setValue(0.0)\n    gridYAxisMaterial.getParameter('StippleValue').setValue(0)\n    gridYAxisMaterial.getParameter('OccludedStippleValue').setValue(1)\n    gridYAxisMaterial.setSelectable(false)\n\n    const zAxisLineItem = new GeomItem('yAxisLine', axisLine, gridYAxisMaterial)\n    zAxisLineItem.setSelectable(false)\n\n    const geomOffset = new Xfo()\n    geomOffset.ori.setFromAxisAndAngle(new Vec3(0, 0, 1), Math.PI * 0.5)\n    zAxisLineItem.setGeomOffsetXfo(geomOffset)\n    this.addChild(zAxisLineItem, false)\n\n    const bBox = this._cleanBoundingBox(this.__boundingBoxParam.getValue())\n    this.__boundingBoxParam.setValue(bBox)\n  }\n\n  /**\n   *\n   * @private\n   * @param {Box3} bBox\n   * @return {Box3} - Reset Bounding Box\n   */\n  _cleanBoundingBox(bBox) {\n    bBox.reset()\n    return bBox\n  }\n}\n\nRegistry.register('GridTreeItem', GridTreeItem)\n\nexport { GridTreeItem }\n","import { Color } from '../Math/index'\nimport { TreeItem } from './TreeItem.js'\nimport { resourceLoader } from './resourceLoader.js'\nimport { SceneSettings } from './SceneSettings.js'\nimport { GridTreeItem } from './GridTreeItem'\n\nconst defaultGridColor = new Color('#DCDCDC')\n\n/**\n * Class representing the environment where all the displayed assets live.\n */\nclass Scene {\n  /**\n   * Create a scene.\n   */\n  constructor() {\n    this.settings = new SceneSettings('Scene Settings')\n    this.root = new TreeItem('root')\n    this.root.addChild(this.settings)\n  }\n\n  /**\n   * The getRoot method.\n   * @return {BaseItem} - The return value.\n   */\n  getSettings() {\n    return this.settings\n  }\n\n  /**\n   * Returns the scene's root item(`TreeItem`) that owns every item in the scene.\n   *\n   * @return {TreeItem} - The return value.\n   */\n  getRoot() {\n    return this.root\n  }\n\n  /**\n   * Returns resourceLoader object set on class initialization.\n   *\n   * @return {ResourceLoader} - The return value.\n   */\n  getResourceLoader() {\n    return resourceLoader\n  }\n\n  /**\n   * Sets Environment Map with the BaseImage you'd like to display in your scene background.\n   *\n   * @deprecated\n   * @param {EnvMap} envMap - The envMap value.\n   */\n  setEnvMap(envMap) {\n    this.settings.getParameter('EnvMap').setValue(envMap)\n  }\n\n  /**\n   * Sets up and displays the scene grid of a given size and resolution. The Grid is oriented on the XY plane\n   * and highlights the X and Y axes with Red and Green lines. Grids are useful in displaying scene scale and coordinate system.\n   * The Grid geometry does not return a bounding box and so does not effect the bounding of the scene.\n   * The GridTreeItem display a grid of a given size and resolution. The Grid is oriented on the XY plane\n   * and highlights the X and Y axes with Red and Green lines.\n   *\n   * @param {number} gridSize - The size of the grid.\n   * @param {number} resolution - The resolution of the grid.\n   * @param {Color} gridColor - The color of the grid.\n   * @return {GridTreeItem} - The return value.\n   */\n  setupGrid(gridSize = 5, resolution = 50, gridColor = defaultGridColor) {\n    const gridTreeItem = new GridTreeItem(gridSize, resolution, gridColor)\n    this.root.addChild(gridTreeItem, false)\n    return gridTreeItem\n  }\n\n  // /////////////////////////////////////\n  // Persistence\n\n  /**\n   * The toJSON method encodes this type as a json object for persistence.\n   *\n   * @param {object} context - The context value.\n   * @return {object} - Returns the json object.\n   */\n  toJSON(context = {}) {\n    context.makeRelative = (path) => path\n    const json = {\n      root: this.root.toJSON(context),\n    }\n    return json\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} json - The json object this item must decode.\n   * @param {object} context - The context value.\n   */\n  fromJSON(json, context = {}) {\n    const plcbs = [] // Post load callbacks.\n    context.resolvePath = (path, cb) => {\n      // Note: Why not return a Promise here?\n      // Promise evaluation is always async, so\n      // all promisses will be resolved after the current call stack\n      // has terminated. In our case, we want all paths\n      // to be resolved before the end of the function, which\n      // we can handle easily with callback functions.\n      if (!path) throw new Error('Path not specified')\n      const item = this.root.resolvePath(path)\n      if (item) {\n        cb(item)\n      } else {\n        // Some paths resolve to items generated during load,\n        // so push a callback to re-try after the load is complete.\n        plcbs.push(() => {\n          const param = this.resolvePath(path)\n          if (param) cb(param)\n          else {\n            console.warn('Path unable to be resolved:' + path)\n          }\n        })\n      }\n    }\n    context.addPLCB = (plcb) => plcbs.push(plcb)\n    context.settings = this.settings\n\n    if (json.root) {\n      this.root.fromJSON(json.root, context)\n    }\n\n    // Invoke all the post-load callbacks to resolve any\n    // remaining references.\n    for (const cb of plcbs) cb()\n  }\n}\n\nexport { Scene }\n","import { SystemDesc } from '../SystemDesc.js'\nimport { FilePathParameter } from './Parameters/FilePathParameter'\nimport { AssetLoadContext } from './AssetLoadContext.js'\nimport { AssetItem } from './AssetItem.js'\nimport { BinReader } from './BinReader.js'\nimport { resourceLoader } from './resourceLoader.js'\nimport { Registry } from '../Registry'\nimport { Version } from './Version.js'\n\n/**\n * Class designed to load and handle `.vla` files.\n *\n * **Parameters**\n * * **DataFilePath(`FilePathParameter`):** Used to specify the path to the file.\n *\n * **Events**\n * * **loaded:** Triggered once the tree is loaded. Note: the tree bounding box is valid once the tree is loaded.\n * * **geomsLoaded:** Triggered once all geometries are loaded.\n *\n * @extends AssetItem\n */\nclass VLAAsset extends AssetItem {\n  /**\n   * Create a VLA asset.\n   * @param {string} name - The name value.\n   */\n  constructor(name) {\n    super(name)\n\n    // A signal that is emitted once all the geometries are loaded.\n    // Often the state machine will activate the\n    // first state when this signal emits.\n    this.__geomLibrary.on('loaded', () => {\n      this.emit('geomsLoaded', {})\n    })\n\n    this.__fileParam = this.addParameter(new FilePathParameter('FilePath'))\n\n    this.addParameterDeprecationMapping('DataFilePath', 'FilePath') // Note: migrating from 'DataFilePath' to 'FilePath'\n\n    this.__fileParam.on('valueChanged', () => {\n      const fileId = this.__fileParam.getValue()\n      const url = this.__fileParam.getUrl()\n      this.load(url)\n    })\n  }\n\n  // ////////////////////////////////////////\n  // Persistence\n\n  /**\n   * Sets state of current asset using a binary reader object.\n   *\n   * @param {BinReader} reader - The reader value.\n   * @param {object} context - The context value.\n   * @return {number} - The return value.\n   */\n  readBinary(reader, context) {\n    if (context.versions['zea-engine']) {\n      // Necessary for the smart lok\n    } else {\n      // Now we split the mesh out from the engine version.\n      context.versions['zea-mesh'] = new Version(reader.loadStr())\n    }\n    // console.log('Loading Mesh File version:', context.versions['zea-mesh'])\n\n    const numGeomsFiles = reader.loadUInt32()\n\n    super.readBinary(reader, context)\n\n    if (context.versions['zea-engine'].compare([2, 1, 0]) < 0) {\n      // Some data is no longer being read at the end of the buffer\n      // so we skip to the end here.\n      // The data was the atlas size of the lightmap that we no longer support.\n      const atlasSize = reader.loadFloat32Vec2()\n    }\n    this.__geomLibrary.setNumGeoms(reader.loadUInt32())\n\n    return numGeomsFiles\n  }\n\n  /**\n   * Loads all the geometries and metadata from the asset file.\n   * @param {string} url - The URL of the asset to load\n   * @param {AssetLoadContext} context - The load context object that provides additional data such as the units of the scene we are loading into.\n   * @return {Promise} - Returns a promise that resolves once the initial load is complete\n   */\n  load(url, context = new AssetLoadContext()) {\n    return new Promise((resolve, reject) => {\n      const folder = url.lastIndexOf('/') > -1 ? url.substring(0, url.lastIndexOf('/')) + '/' : ''\n      const filename = url.lastIndexOf('/') > -1 ? url.substring(url.lastIndexOf('/') + 1) : ''\n      const stem = filename.substring(0, filename.lastIndexOf('.'))\n      let numGeomsFiles = 0\n\n      context.assetItem = this\n      context.url = url\n      context.folder = folder\n\n      // preload in case we don't have embedded geoms.\n      // completed by geomLibrary.on('loaded' ..\n      resourceLoader.incrementWorkload(1)\n      // To ensure that the resource loader knows when\n      // parsing is done, we listen to the GeomLibrary streamFileLoaded\n      // signal. This is fired once the entire stream is parsed.\n      this.__geomLibrary.on('loaded', () => {\n        // A chunk of geoms are now parsed, so update the resource loader.\n        resourceLoader.incrementWorkDone(1)\n      })\n\n      resourceLoader.loadFile('archive', url).then(\n        (entries) => {\n          // Load the tree file. This file contains\n          // the scene tree of the asset, and also\n          // tells us how many geom files will need to be loaded.\n\n          let treeReader\n          if (entries.tree2) {\n            treeReader = new BinReader(entries.tree2.buffer, 0, SystemDesc.isMobileDevice)\n          } else {\n            const entry = entries.tree ? entries.tree : entries[Object.keys(entries)[0]]\n            treeReader = new BinReader(entry.buffer, 0, SystemDesc.isMobileDevice)\n            context.versions['zea-engine'] = new Version()\n          }\n\n          numGeomsFiles = this.readBinary(treeReader, context)\n\n          this.loaded = true\n          this.emit('loaded')\n\n          if (numGeomsFiles == 0 && entries.geoms) {\n            this.__geomLibrary.readBinaryBuffer(filename, entries.geoms.buffer, context)\n          } else {\n            const basePath = folder + stem\n            this.__geomLibrary.loadGeomFilesStream(basePath, numGeomFiles, context)\n          }\n          resolve()\n        },\n        (error) => {\n          this.emit('error', error)\n          reject(error)\n        }\n      )\n    })\n  }\n\n  /**\n   * The fromJSON method decodes a json object for this type.\n   *\n   * @param {object} j - The json object this item must decode.\n   * @param {AssetLoadContext} context - The load context object that provides additional data such as the units of the scene we are loading into.\n   * @param {function} onDone - The onDone value.\n   */\n  fromJSON(j, context, onDone) {\n    if (!context) context = {}\n    context.assetItem = this\n\n    const loadAssetJSON = () => {\n      super.fromJSON(j, context, onDone)\n      if (onDone) onDone()\n    }\n\n    if (j.params && j.params.DataFilePath) {\n      // Save the callback function for later.\n      this.__datafileLoaded = loadAssetJSON\n      const filePathJSON = j.params.DataFilePath\n      delete j.params.DataFilePath\n      this.__fileParam.fromJSON(filePathJSON, context)\n    } else {\n      loadAssetJSON()\n    }\n  }\n}\n\nRegistry.register('VLAAsset', VLAAsset)\n\nexport { VLAAsset }\n","/* eslint-disable guard-for-in */\n/* eslint-disable camelcase */\n/* eslint-disable no-array-constructor */\nimport { Vec2, Vec3, Xfo, Color } from '../Math/index'\nimport { GeomItem } from './GeomItem'\nimport { AssetItem } from './AssetItem'\nimport { Mesh } from './Geometry/Mesh.js'\nimport { loadTextfile } from './Utils.js'\nimport { Material } from './Material.js'\nimport { resourceLoader } from './resourceLoader.js'\nimport { BooleanParameter, NumberParameter, StringParameter } from './Parameters/index'\nimport { FilePathParameter } from './Parameters/FilePathParameter'\n\n// AssetItem.registerDataLoader('.obj', ObjDataLoader);\n\n/**\n * Class designed to load and handle `.obj` files.\n * Which define the geometry and other properties for objects.\n *\n * **Parameters**\n * * **splitObjects(`BooleanParameter`):** _todo_\n * * **splitGroupsIntoObjects(`BooleanParameter`):** _todo_\n * * **loadMtlFile(`BooleanParameter`):** _todo_\n * * **unitsConversion(`NumberParameter`):** _todo_\n * * **defaultShader(`StringParameter`):** _todo_\n * * **ObjFilePath(`FilePathParameter`):** Used to specify the path to the file.\n *\n * **Events**\n * * **loaded:** Triggered once everything is loaded.\n * * **geomsLoaded:** Triggered once all geometries are loaded.\n *\n * @extends AssetItem\n */\nclass ObjAsset extends AssetItem {\n  /**\n   * Create an obj asset.\n   * @param {string} name - The name of the object asset.\n   */\n  constructor(name) {\n    super(name)\n    this.addParameter(new BooleanParameter('splitObjects', false))\n    this.addParameter(new BooleanParameter('splitGroupsIntoObjects', false))\n    this.addParameter(new BooleanParameter('loadMtlFile', true))\n    this.addParameter(new NumberParameter('unitsConversion', 1.0))\n    this.addParameter(new StringParameter('defaultShader', ''))\n\n    const fileParam = this.addParameter(new FilePathParameter('FilePath'))\n    fileParam.on('valueChanged', () => {\n      this.loaded = false\n      const url = fileParam.getUrl()\n      this.load(url)\n    })\n  }\n\n  /**\n   * Loads all the geometries and metadata from the Obj file.\n   * @param {string} url - The URL of the asset to load\n   * @return {Promise} - Returns a promise that resolves once the initial load is complete\n   */\n  load(url) {\n    return new Promise((resolve, reject) => {\n      const fileFolder = url.substring(0, url.lastIndexOf('/')) + '/'\n      const filename = url.substring(url.lastIndexOf('/') + 1)\n\n      const parseMtlData = (mtlFileData) => {\n        const lines = mtlFileData.split('\\n')\n        const WHITESPACE_RE = /\\s+/\n        let material\n\n        const parseColor = function (elements) {\n          if (elements.length == 3)\n            return new Color(parseFloat(elements[0]), parseFloat(elements[1]), parseFloat(elements[2]))\n          else throw new Error('Unable to parse a color from the following parts:' + elements.join('_'))\n        }\n\n        const parseMap = (elements) => {\n          return new FileImage(elements[0], fileFolder + elements[0])\n        }\n\n        for (let i = 0; i < lines.length; i++) {\n          let line = lines[i].trim()\n          if (line.startsWith('#')) continue\n          if (line.includes('#')) line = line.substring(0, line.indexOf('#')).trim()\n          const elements = line.split(WHITESPACE_RE)\n          const key = elements.shift()\n          const value = elements.join(' ')\n          switch (key) {\n            case 'newmtl':\n              material = new Material(value)\n              material.setShaderName('StandardSurfaceShader')\n              this.__materials.addMaterial(material)\n              break\n            case 'Kd':\n              material.getParameter('BaseColor').setValue(parseColor(elements))\n              break\n            case 'map_Kd':\n              material.getParameter('BaseColor').setValue(parseMap(elements))\n              break\n            case 'Ks':\n              const specular = (parseFloat(elements[0]) + parseFloat(elements[1]) + parseFloat(elements[2])) / 3.0\n              material.roughness = 1.0 - specular\n              material.getParameter('Roughness').setValue(1.0 - specular)\n              material.getParameter('Reflectance').setValue(specular)\n              break\n            case 'map_Ks':\n              material.getParameter('Roughness').setValue(parseMap(elements /* flags=TEXTURE_INVERT */))\n              material.getParameter('Reflectance').setValue(0.2)\n              break\n            case 'd':\n              const d = parseFloat(value)\n              if (d < 1.0) {\n                material.setShaderName('TransparentSurfaceShader')\n                material.getParameter('Opacity').setValue(d)\n              }\n              break\n            case 'map_d':\n              material.getParameter('alpha').setValue(parseFloat(elements))\n              break\n            case 'map_bump':\n              material.getParameter('normal').setValue(parseMap(elements /* flags=BUMP_TO_NORMAL */))\n              break\n            default:\n            // console.warn(\"Unhandled material parameter: '\" + key +\"' in:\" + filePath);\n          }\n        }\n      }\n\n      const loadMtlFile = (mtlFile) => {\n        return new Promise((resolve) => {\n          loadTextfile(mtlFile.url, (fileData) => {\n            resourceLoader.incrementWorkDone(1)\n            parseMtlData(fileData)\n            resourceLoader.incrementWorkDone(1)\n            resolve()\n          })\n        })\n      }\n\n      const vertices = new Array()\n      const normals = new Array()\n      const texCoords = new Array()\n\n      const geomDatas = {}\n\n      const parseObjData = async (fileData) => {\n        // performance.mark(\"parseObjData\");\n\n        // array of lines separated by the newline\n        const lines = fileData.split('\\n')\n        const WHITESPACE_RE = /\\s+/\n\n        let currGeom = undefined\n        let currMtl = undefined\n        let numGeoms = 0\n        const newGeom = (name) => {\n          if (name in geomDatas) {\n            let suffix = 1\n            while (name + String(suffix) in geomDatas) {\n              suffix++\n            }\n            name = name + String(suffix)\n          }\n          currGeom = {\n            verticesRemapping: {},\n            texCoordsRemapping: {},\n            normalsRemapping: {},\n            vertexIndices: [],\n            texCoordIndices: [],\n            normalIndices: [],\n            numVertices: 0,\n            numTexCoords: 0,\n            numNormals: 0,\n            faceCounts: [],\n            material: currMtl,\n          }\n          geomDatas[name] = currGeom\n          numGeoms++\n        }\n        newGeom(filename)\n\n        const splitGroupsIntoObjects = this.getParameter('splitGroupsIntoObjects').getValue()\n\n        const stop = false\n        // let numPolys = 0;\n        for (let i = 0; i < lines.length && !stop; i++) {\n          let line = lines[i].trim()\n          if (line.startsWith('#')) continue\n          if (line.includes('#')) line = line.substring(0, line.indexOf('#')).trim()\n          const elements = line.split(WHITESPACE_RE)\n          const key = elements.shift()\n          const value = elements.join(' ')\n          switch (key) {\n            case '':\n            case 's':\n              // ignore shading groups\n              continue\n            case 'mtllib':\n              if (!this.getParameter('loadMtlFile').getValue()) continue\n              // Load and parse the mat lib.\n              resourceLoader.incrementWorkload(2)\n              const mtlFile = resourceLoader.resolveFilepath(fileFolder + value)\n              if (mtlFile) {\n                await loadMtlFile(mtlFile)\n              }\n              break\n            case 'o':\n              newGeom(value)\n              break\n            case 'usemtl':\n              currMtl = value\n              newGeom(value + Object.keys(geomDatas).length)\n              break\n            case 'g':\n              if (splitGroupsIntoObjects) {\n                newGeom(value ? elements.join('_') : 'Group' + numGeoms)\n              }\n              break\n            case 'v':\n              vertices.push(elements.map((i) => parseFloat(i)))\n              break\n            case 'vt':\n              texCoords.push(elements.map((i) => parseFloat(i)))\n              break\n            case 'vn':\n              normals.push(elements.map((i) => parseFloat(i)))\n              break\n            case 'f': {\n              const v_poly = []\n              const vt_poly = []\n              const vn_poly = []\n              for (let j = 0, eleLen = elements.length; j < eleLen; j++) {\n                // v/vt/vn\n                const indices = elements[j].split('/').map((i) => parseInt(i) - 1)\n                const v = indices[0]\n\n                // v_poly.push(v);\n                let v_index = currGeom.verticesRemapping[v]\n                if (v_index == undefined) {\n                  v_index = currGeom.numVertices\n                  currGeom.verticesRemapping[v] = v_index\n                  currGeom.numVertices++\n                }\n                v_poly.push(v_index)\n\n                if (indices.length > 1 && !isNaN(indices[1])) {\n                  const vt = indices[1]\n                  vt_poly.push(vt)\n                }\n                if (indices.length > 2 && !isNaN(indices[2])) {\n                  const vn = indices[2]\n                  vn_poly.push(vn)\n                }\n              }\n              currGeom.vertexIndices.push(v_poly)\n              if (vn_poly.length > 0) currGeom.normalIndices.push(vn_poly)\n              if (vt_poly.length > 0) currGeom.texCoordIndices.push(vt_poly)\n\n              if (currGeom.faceCounts[v_poly.length - 3] == undefined) {\n                currGeom.faceCounts[v_poly.length - 3] = []\n              }\n              currGeom.faceCounts[v_poly.length - 3]++\n              // numPolys++;\n              // if(numPolys == 16000)\n              //     stop = true;\n              break\n            }\n            default: {\n              console.warn('Unhandled line:' + line)\n            }\n          }\n        }\n      }\n\n      const buildChildItems = () => {\n        // performance.mark(\"parseObjDataDone\");\n        // performance.mark(\"buildObjTree\");\n        for (const geomName in geomDatas) {\n          if (geomDatas[geomName].numVertices == 0) continue\n          buildChildItem(geomName, geomDatas[geomName])\n        }\n\n        // Done.\n        this.emit('loaded')\n        this.getGeometryLibrary().emit('loaded')\n        this.emit('geomsLoaded')\n        resolve()\n      }\n\n      const buildChildItem = (geomName, geomData) => {\n        for (let i = 0; i < geomData.faceCounts.length; i++) {\n          if (geomData.faceCounts[i] == undefined) {\n            geomData.faceCounts[i] = 0\n          }\n        }\n\n        const numVertices = geomData.numVertices\n        const mesh = new Mesh(geomName)\n        mesh.setFaceCounts(geomData.faceCounts)\n        mesh.setNumVertices(numVertices)\n        const positionsAttr = mesh.getVertexAttribute('positions')\n        const unitsConversion = this.getParameter('unitsConversion').getValue()\n\n        for (const vsrc in geomData.verticesRemapping) {\n          const vtgt = geomData.verticesRemapping[vsrc]\n          positionsAttr\n            .getValueRef(vtgt)\n            .set(\n              vertices[vsrc][0] * unitsConversion,\n              vertices[vsrc][1] * unitsConversion,\n              vertices[vsrc][2] * unitsConversion\n            )\n        }\n\n        let normalsAttr\n        let texCoordsAttr\n        if (geomData.normalIndices.length > 0) normalsAttr = mesh.addVertexAttribute('normals', Vec3)\n        if (geomData.texCoordIndices.length > 0) texCoordsAttr = mesh.addVertexAttribute('texCoords', Vec2)\n\n        const loadedFaces = Array(geomData.faceCounts.length).fill(0)\n        for (let i = 0; i < geomData.vertexIndices.length; i++) {\n          const v_poly = geomData.vertexIndices[i]\n          let faceId = 0\n          for (let j = 0; j < v_poly.length - 3; ++j) {\n            if (geomData.faceCounts[j]) faceId += geomData.faceCounts[j]\n          }\n          faceId += loadedFaces[v_poly.length - 3]\n          loadedFaces[v_poly.length - 3]++\n          mesh.setFaceVertexIndices(faceId, v_poly)\n\n          // Set the texCoords and normals...\n          if (normalsAttr) {\n            const vn_poly = geomData.normalIndices[i]\n            for (let j = 0; j < vn_poly.length; j++) {\n              const value = new Vec3(normals[vn_poly[j]][0], normals[vn_poly[j]][1], normals[vn_poly[j]][2])\n              normalsAttr.setFaceVertexValue(faceId, j, value)\n            }\n          }\n          if (texCoordsAttr && geomData.texCoordIndices.length == geomData.vertexIndices.length) {\n            const vt_poly = geomData.texCoordIndices[i]\n            for (let j = 0; j < vt_poly.length; j++) {\n              const value = new Vec2(texCoords[vt_poly[j]][0], texCoords[vt_poly[j]][1])\n              texCoordsAttr.setFaceVertexValue(faceId, j, value)\n            }\n          }\n        }\n\n        const geomItem = new GeomItem(geomName, mesh)\n\n        // Move the transform of the geom item to the center of the geom.\n        // This is so that transparent objects can render correctly, and the\n        // transform gizmo becomes centered on each geom(for testing)\n        const delta = mesh.getBoundingBox().center()\n        {\n          const offset = delta.negate()\n          const positions = mesh.getVertexAttribute('positions')\n          for (let i = 0; i < positions.length; i++) positions.getValueRef(i).addInPlace(offset)\n          mesh.setBoundingBoxDirty()\n        }\n        geomItem.getParameter('LocalXfo').setValue(new Xfo(delta))\n\n        if (geomData.material != undefined && this.__materials.hasMaterial(geomData.material)) {\n          geomItem.getParameter('Material').setValue(this.__materials.getMaterial(geomData.material))\n        } else {\n          const defaultShader = this.getParameter('defaultShader').getValue()\n          const material = new Material(geomName + 'mat')\n          material.setShaderName(defaultShader != '' ? defaultShader : 'StandardSurfaceShader')\n          this.__materials.addMaterial(material)\n          geomItem.getParameter('Material').setValue(material)\n        }\n\n        this.addChild(geomItem, false)\n      }\n\n      const loadObjData = () => {\n        resourceLoader.incrementWorkload(2)\n        loadTextfile(\n          url,\n          (fileData) => {\n            resourceLoader.incrementWorkDone(1)\n            parseObjData(fileData).then(() => {\n              buildChildItems()\n              resourceLoader.incrementWorkDone(1)\n            })\n          },\n          (error) => {\n            this.emit('error', error)\n            reject(error)\n          }\n        )\n      }\n\n      loadObjData()\n    })\n  }\n}\n\nexport { ObjAsset }\n","import { Operator } from './Operator.js'\nimport { OperatorInput } from './OperatorInput.js'\nimport { OperatorOutput } from './OperatorOutput.js'\n\nimport { Registry } from '../../Registry'\n\n/** Class representing a router operator.\n * @extends Operator\n * @private\n */\nclass RouterOperator extends Operator {\n  /**\n   * Create a router operator.\n   * @param {string} name - The name value.\n   */\n  constructor(name) {\n    super(name)\n    this.__input = this.addInput(new OperatorInput('Input'))\n  }\n\n  /**\n   * The addRoute method.\n   * @param {Parameter} param - The parameter to router values to.\n   * @return {OperatorOutput} - The added output.\n   */\n  addRoute(param) {\n    const output = this.addOutput(new OperatorOutput('Output' + this.__outputs.size))\n    if (param) {\n      output.setParam(param)\n    }\n    return output\n  }\n\n  /**\n   * The evaluate method.\n   */\n  evaluate() {\n    if (this.__input.isConnected()) {\n      const inputValue = this.__input.getValue()\n      let i = this.__outputs.size\n      while (i--) {\n        const output = this.getOutputByIndex(i)\n        output.setClean(inputValue)\n      }\n    } else {\n      let i = this.__outputs.size\n      while (i--) {\n        const output = this.getOutputByIndex(i)\n        output.setClean(0.0)\n      }\n    }\n  }\n}\n\nRegistry.register('RouterOperator', RouterOperator)\n\nexport { RouterOperator }\n","import { ParameterOwner } from '../ParameterOwner.js'\n\n/**\n * The BaseTool provides an interface you can implement to define your own mouse, keyboard, and touch event handlers.\n *\n * A tool is a class that is delegated the handling of all user interaction events. The built-in {CameraManipulator}\n * class provides a default tool for moving the viewport camera.\n *\n * You can define your own custom tool, and replace the default CameraManipulator like so.\n * ```javascript\n *   const customManipulator = new MyCustomCameraManipulator()\n *   renderer.getViewport().setManipulator(customManipulator)\n * ```\n *\n * Each tool should provide handlers for the main types of events it will be responsible for handling.\n * These include mouse, keyboard, touch and VR events. Once a tool is installed on the viewport, the viewport\n * will start invoking the handler methods defined in the interface.\n * If the Tool handles an event, it should call stopPropagation on the event so the engine knows to stop the\n * propagation of the event to other classes.\n *\n * > Note: VR Events are ann emulation of mouse events, generated by the engine, allowing custom tools to be used to provide various VR interactions.\n *\n * **Events**\n * * **installChanged:** Triggered when the tool is installed or uninstalled.\n * * **activatedChanged:** Triggered when a tool is activated or deactivated.\n *\n * @extends ParameterOwner\n */\nclass BaseTool extends ParameterOwner {\n  /**\n   * Creates an instance of BaseTool.\n   */\n  constructor() {\n    super()\n    this.__activated = false\n  }\n\n  /**\n   * Enables tools usage. This method is called by either the Viewport when a tool is removed, or the ToolManage if it is installed.\n   */\n  activateTool() {\n    if (this.__activated) throw new Error('Tool already activate')\n    this.__activated = true\n    this.emit('activatedChanged', { activated: this.__activated })\n  }\n\n  /**\n   * Disables tool usage. This method is called by either the Viewport when a tool is removed, or the ToolManage if it is installed.\n   */\n  deactivateTool() {\n    this.__activated = false\n    this.emit('activatedChanged', { activated: this.__activated })\n  }\n\n  // ///////////////////////////////////\n  // Pointer events\n\n  /**\n   * Event fired when either the mouse button is pressed, or a touch start event occurs.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerDown(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when either the mouse cursor is moved, or a touch point moves.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerMove(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when either the mouse button is released, or a touch end event occurs.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerUp(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a pointing device button is double clicked.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerDoublePress(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a mouse pointer enters the viewport\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerEnter(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a mouse pointer leaves the viewport\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerLeave(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when the user rotates the pointing device wheel.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onWheel(event) {\n    // console.warn('Implement me')\n  }\n\n  // ///////////////////////////////////\n  // Keyboard events\n\n  /**\n   * Event fired when the user presses down a key on the keyboard.\n   *\n   * @param {KeyboardEvent} event - The event param.\n   */\n  onKeyDown(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when the user releases a key on the keyboard.\n   *\n   * @param {KeyboardEvent} event - The event param.\n   */\n  onKeyUp(event) {\n    // console.warn('Implement me')\n  }\n\n  // ///////////////////////////////////\n  // Touch events\n\n  /**\n   * Event fired when one or more touch points are placed on the touch surface over a tool.\n   *\n   * @param {TouchEvent} event - The event param.\n   */\n  onTouchStart(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when the one or more touch points are moved along the touch surface over a tool.\n   *\n   * @param {TouchEvent} event - The event param.\n   */\n  onTouchMove(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when one or more touch points are removed from the touch surface over a tool.\n   *\n   * @param {TouchEvent} event - The event param.\n   */\n  onTouchEnd(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when one or more touch points have been disrupted in an implementation-specific manner.\n   *\n   * @param {TouchEvent} event - The event param.\n   */\n  onTouchCancel(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when two continuos touch point are placed on the touch surface over a tool.\n   *\n   * @param {TouchEvent} event - The event param.\n   */\n  onDoubleTap(event) {\n    // console.warn('Implement me')\n  }\n\n  // ///////////////////////////////////\n  // VRController events\n\n  /**\n   * Event fired when a VR controller button is pressed over a tool.\n   *\n   * @param {object} event - The event param.\n   */\n  onVRControllerButtonDown(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a VR controller button is released over a tool.\n   *\n   * @param {object} event - The event param.\n   */\n  onVRControllerButtonUp(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a VR controller button is pressed twice over a tool.\n   *\n   * @param {object} event - The event param.\n   */\n  onVRControllerDoubleClicked(event) {\n    // console.warn('Implement me')\n  }\n\n  /**\n   * Event fired when a VR controller...\n   *\n   * @param {object} event - The event param.\n   */\n  onVRPoseChanged(event) {\n    // console.warn('Implement me')\n  }\n}\n\nexport default BaseTool\nexport { BaseTool }\n","import { ParameterOwner } from '../../SceneTree/ParameterOwner.js'\nimport { BooleanParameter } from '../../SceneTree/Parameters/index'\n\nconst PassType = {\n  OPAQUE: 1 << 0,\n  TRANSPARENT: 1 << 1,\n  OVERLAY: 1 << 2,\n}\n\n/** This class abstracts the rendering of a collection of geometries to screen.\n * @extends ParameterOwner\n */\nclass GLPass extends ParameterOwner {\n  /**\n   * Create a GL pass.\n   */\n  constructor() {\n    super()\n    this.enabled = true\n    this.passIndex = 0\n\n    const enabledParam = this.addParameter(new BooleanParameter('Enabled', true))\n    enabledParam.on('valueChanged', () => (this.enabled = enabledParam.getValue()))\n  }\n\n  /**\n   * The __parameterValueChanged method.\n   * @param {object} event - The event object.\n   * @private\n   */\n  __parameterValueChanged(event) {\n    super.__parameterValueChanged(event)\n    if (this.renderer) this.renderer.requestRedraw()\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    if (passIndex == undefined) throw new Error('Missing constructor argument.') // Type checking. Seomthing that TypeScript will do for us.\n\n    this.__gl = renderer.gl\n    this.renderer = renderer\n    this.__renderer = renderer\n    this.passIndex = passIndex\n    this.__passIndex = passIndex // for backwards compatibility\n  }\n\n  /**\n   * The setPassIndex method.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  setPassIndex(passIndex) {\n    this.passIndex = passIndex\n    this.__passIndex = passIndex // for backwards compatibility\n  }\n\n  /**\n   * Returns the pass type. OPAQUE passes are always rendered first, followed by TRANSPARENT passes, and finally OVERLAY.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.OPAQUE\n  }\n\n  /**\n   * The itemAddedToScene method is called on each pass when a new item\n   * is added to the scene, and the renderer must decide how to render it.\n   * It allows Passes to select geometries to handle the drawing of.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * The object contains a parameter 'continueInSubTree', which can be set to false,\n   * so the subtree of this node will not be traversed after this node is handled.\n   * @return {Boolean} - The return value.\n   */\n  itemAddedToScene(treeItem, rargs) {\n    throw Error(`${this.constructor.name} must implement itemAddedToScene and itemRemovedFromScene`)\n    return false\n  }\n\n  /**\n   * The itemRemovedFromScene method is called on each pass when aa item\n   * is removed to the scene, and the pass must handle cleaning up any resources.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * @return {Boolean} - The return value.\n   */\n  itemRemovedFromScene(treeItem, rargs) {\n    throw Error(`${this.constructor.name} must implement itemAddedToScene and itemRemovedFromScene`)\n    return false\n  }\n\n  /**\n   * The startPresenting method.\n   */\n  startPresenting() {}\n\n  /**\n   * The stopPresenting method.\n   */\n  stopPresenting() {}\n\n  // ///////////////////////////////////\n  // Rendering\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {}\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {}\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {}\n\n  /**\n   * The getGeomItemAndDist method.\n   * @param {any} geomData - The geomData value.\n   */\n  getGeomItemAndDist(geomData) {}\n}\n\nexport { GLPass, PassType }\n","/* eslint-disable require-jsdoc */\nimport { Vec2, Vec3, Quat, Xfo, Ray } from '../../Math/index'\nimport { BaseTool } from './BaseTool.js'\nimport { NumberParameter, BooleanParameter } from '../Parameters/index'\nimport { SystemDesc } from '../../SystemDesc.js'\nimport { POINTER_TYPES } from '../../Utilities/EnumUtils'\nimport { PassType } from '../../Renderer/Passes/GLPass.js'\n\nconst MANIPULATION_MODES = {\n  pan: 0,\n  dolly: 1,\n  focussing: 2,\n  look: 3,\n  turntable: 4,\n  tumbler: 5,\n  trackball: 6,\n}\n\n/**\n * Class for defining and interaction model of the camera.\n *\n * The CameraManipulator supports a variety of manipulation modes, and hotkeys/modifier keys\n * that allow the user to rapidly switch between modes, such as 'turntable' and 'pan'.\n * A detailed explanation of various camera manipulation modes can be found\n * here: https://www.mattkeeter.com/projects/rotation/\n *\n * **MANIPULATION_MODES**\n * * **pan:** Translates the camera sideways according the the camera's current orientation. Activated by the right mouse button, or two fingered touches on mobile.\n * * **dolly:** Translates the camera forwards and backwards according the the camera's current orientation. Activated by holding the ctrl and alt keys while using the left mouse button, or the mouse wheel, or two fingered touches on mobile.\n * * **focussing:** Focusses the camera on a specific 3d point in the scene. Activated by double clicking, or double tapping on a geometry in the 3d view.\n * * **look:** Rotates the camera around its own position. Useful for simulating looking by turning ones head inside a scene. Activated by holding the ctrl key and right mouse button.\n * * **turntable:** Rotates the camera around the current camera target, using the turntable style manipulation described above. Activated by the left mouse button.\n * * **tumbler:** Rotates the camera around the current camera target, using the tumbler style manipulation described above. Activated by the left mouse button.\n * * **trackball:** Rotates the camera around the current camera target, using the trackball style manipulation described above. Activated by the left mouse button.\n *\n * The default manipulation mode, is the mode that is active with only the left mouse button. The default manipulation mode is currently 'turntable'.\n *\n * To Assign a different default manipulation mode, retrieve the manipulator from the viewport\n * and set the default mode.\n * ```\n * const cameraManipulator = renderer.getViewport().getManipulator()\n * cameraManipulator.setDefaultManipulationMode(CameraManipulator.MANIPULATION_MODES.trackball);\n * ```\n *\n * This class is the default manipulator, and can be replaced with custom manipulators.\n *\n * ```\n * const customManipulator = new CustomCameraManipulator()\n * renderer.getViewport().setManipulator(customManipulator);\n * ```\n *\n * The Camera manipulator can focus the view on a point in the view by various gestures.\n * A single click or touch tap can cause the view to be focussed or a double click or tap.\n * This behavior can be configured using the 2 values.\n * e.g. to disable all focus gestures, set both values to zero.\n * ```\n * const cameraManipulator = renderer.getViewport().getManipulator()\n * cameraManipulator.aimFocusOnTouchTap = 0\n * cameraManipulator.aimFocusOnMouseClick = 0\n * ```\n *\n * **Parameters**\n * * **OrbitRate(`NumberParameter`):** The rate at which mouse or touch interactions are translated camera orientation changes.\n * * **DollySpeed(`NumberParameter`):** The rate at which the mouse button or touch interactions are translated camera dolly movement.\n * * **mouseWheelDollySpeed(`NumberParameter`):** The rate at which the mouse wheel interactions are translated camera dolly movement.\n *\n *   Note: this value defaults to different values for touch based interfaces to mouse based input.\n *   For mobile devices, the orbit rate defaults to 0.5, and for mouse based interaction, the value defaults to 1.\n *   A value of 1 means that the camera will rotate 180 degrees for a mouse interaction that spans from the left border of the viewport to the right border.\n *   Some applications might require lower, or higher default values\n *\n * To set different default values for mobile or desktop set a different value based on the SystemDesc.isMobileDevice flag.\n * ```\n * const cameraManipulator = renderer.getViewport().getManipulator()\n * cameraManipulator.getParameter('OrbitRate').setValue(SystemDesc.isMobileDevice ? 0.1 : 0.4)\n * ```\n *\n * **Events**\n * * **movementFinished:** Emitted when a camera movement is finished. E.g. when the user releases the mouse after a dolly, or after the focussing action has completed.\n * * **aimingFocus:** Emitted when a camera is being focussed on a target. E.g. when the user double clicks the mouse on a geometry in the view.\n *\n * @extends BaseTool\n */\nclass CameraManipulator extends BaseTool {\n  /**\n   * Create a camera, mouse and keyboard\n   * @param {object} appData - The object containing the scene and the renderer.\n   */\n  constructor(appData) {\n    super()\n\n    this.appData = appData\n\n    this.__defaultManipulationState = MANIPULATION_MODES.turntable\n    this.__manipulationState = this.__defaultManipulationState\n    this.__pointerDown = false\n    this.__dragging = 0\n\n    this.aimFocusOnTouchTap = 1\n    this.aimFocusOnMouseClick = 2\n    this.enabledWASDWalkMode = false\n    this.__keyboardMovement = false\n    this.__keysPressed = []\n    this.__velocity = new Vec3()\n    this.__prevVelocityIntegrationTime = -1\n    this.__ongoingTouches = {}\n\n    this.__orbitRateParam = this.addParameter(new NumberParameter('OrbitRate', SystemDesc.isMobileDevice ? 0.5 : 1))\n    this.__dollySpeedParam = this.addParameter(new NumberParameter('DollySpeed', 0.02))\n    this.addParameter(new BooleanParameter('OrbitAroundCursor', true))\n    this.__mouseWheelDollySpeedParam = this.addParameter(new NumberParameter('MouseWheelDollySpeed', 0.1))\n    this.addParameter(new NumberParameter('WalkSpeed', 5)) // Value is in meters/second\n    this.addParameter(new BooleanParameter('WalkModeCollisionDetection', false))\n\n    this.addParameterDeprecationMapping('orbitRate', 'OrbitRate')\n    this.addParameterDeprecationMapping('dollySpeed', 'DollySpeed')\n    this.addParameterDeprecationMapping('mouseWheelDollySpeed', 'MouseWheelDollySpeed')\n  }\n\n  /**\n   * Enables tools usage.\n   */\n  activateTool() {\n    super.activateTool()\n    if (this.appData && this.appData.renderer) {\n      this.prevCursor = this.appData.renderer.getGLCanvas().style.cursor\n      this.appData.renderer.getGLCanvas().style.cursor = 'cursor'\n    }\n  }\n\n  /**\n   * Disables tool usage.\n   */\n  deactivateTool() {\n    super.deactivateTool()\n    if (this.appData && this.appData.renderer) {\n      this.appData.renderer.getGLCanvas().style.cursor = this.appData.renderer.getGLCanvas().style.cursor\n    }\n  }\n\n  /**\n   * Sets default manipulation mode.\n   * The value can be on of the keys in #CameraManipulator.MANIPULATION_MODES\n   *\n   * @param {string} manipulationMode - The manipulation mode value.\n   */\n  setDefaultManipulationMode(manipulationMode) {\n    if (typeof manipulationMode == 'string') {\n      this.__defaultManipulationState = MANIPULATION_MODES[manipulationMode]\n    } else this.__defaultManipulationState = manipulationMode\n\n    if (!Object.values(MANIPULATION_MODES).includes(this.__defaultManipulationState)) {\n      throw new Error('Invalid Camera Manipulation Mode. Must be one of ' + Object.keys(MANIPULATION_MODES))\n    }\n  }\n\n  /**\n   * The look method.\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  look(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n\n    const orbitRate = this.__orbitRateParam.getValue()\n\n    const globalXfo = camera.getParameter('GlobalXfo').getValue()\n\n    // Orbit\n    const orbit = new Quat()\n    orbit.rotateZ((dragVec.x / viewport.getWidth()) * Math.PI * orbitRate)\n    globalXfo.ori = orbit.multiply(globalXfo.ori)\n\n    // Pitch\n    const pitch = new Quat()\n    pitch.rotateX((dragVec.y / viewport.getHeight()) * Math.PI * orbitRate)\n    globalXfo.ori.multiplyInPlace(pitch)\n\n    camera.getParameter('GlobalXfo').setValue(globalXfo)\n  }\n\n  /**\n   * Rotates viewport camera about the target.\n   *\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  turntable(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n\n    const orbitRate = this.__orbitRateParam.getValue()\n\n    const globalXfo = camera.getParameter('GlobalXfo').getValue()\n    const cameraTargetOffset = globalXfo.ori.inverse().rotateVec3(globalXfo.tr.subtract(this.__orbitTarget))\n\n    // Orbit\n    const orbit = new Quat()\n    orbit.rotateZ((dragVec.x / viewport.getWidth()) * 2 * Math.PI * -orbitRate)\n    globalXfo.ori = orbit.multiply(globalXfo.ori)\n\n    // Pitch\n    const pitch = new Quat()\n    pitch.rotateX((dragVec.y / viewport.getHeight()) * Math.PI * -orbitRate)\n    globalXfo.ori.multiplyInPlace(pitch)\n\n    globalXfo.tr = this.__orbitTarget.add(globalXfo.ori.rotateVec3(cameraTargetOffset))\n\n    camera.getParameter('GlobalXfo').setValue(globalXfo)\n  }\n\n  /**\n   * Rotates viewport camera about the target.\n   *\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  tumbler(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n    const orbitRate = this.__orbitRateParam.getValue()\n\n    const globalXfo = camera.getParameter('GlobalXfo').getValue()\n    const xVec = globalXfo.ori.getXaxis()\n    const yVec = globalXfo.ori.getYaxis()\n    const zVec = globalXfo.ori.getZaxis()\n    const vec = xVec.scale(-dragVec.x).add(yVec.scale(dragVec.y))\n    const rotateAxis = vec.cross(zVec)\n    rotateAxis.normalizeInPlace()\n\n    const dragVecLength = dragVec.length()\n    const cameraTargetOffset = globalXfo.ori.inverse().rotateVec3(globalXfo.tr.subtract(this.__orbitTarget))\n\n    // Orbit\n    const orbit = new Quat()\n    orbit.setFromAxisAndAngle(rotateAxis, (dragVecLength / viewport.getWidth()) * Math.PI * -orbitRate)\n    globalXfo.ori = orbit.multiply(globalXfo.ori)\n\n    globalXfo.tr = this.__orbitTarget.add(globalXfo.ori.rotateVec3(cameraTargetOffset))\n\n    camera.getParameter('GlobalXfo').setValue(globalXfo)\n  }\n\n  /**\n   * Rotates viewport camera about the target.\n   *\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  trackball(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n    const orbitRate = this.__orbitRateParam.getValue()\n\n    const globalXfo = camera.getParameter('GlobalXfo').getValue()\n    const xVec = globalXfo.ori.getXaxis()\n    const yVec = globalXfo.ori.getYaxis()\n    const zVec = globalXfo.ori.getZaxis()\n    const vec = xVec.scale(-dragVec.x).add(yVec.scale(dragVec.y))\n    const rotateAxis = vec.cross(zVec)\n    rotateAxis.normalizeInPlace()\n\n    const dragVecLength = dragVec.length()\n\n    const cameraTargetOffset = globalXfo.ori.inverse().rotateVec3(globalXfo.tr.subtract(this.__orbitTarget))\n\n    // Orbit\n    const orbit = new Quat()\n    orbit.setFromAxisAndAngle(rotateAxis, (dragVecLength / viewport.getWidth()) * Math.PI * -orbitRate)\n    globalXfo.ori = orbit.multiply(globalXfo.ori)\n\n    globalXfo.tr = this.__orbitTarget.add(globalXfo.ori.rotateVec3(cameraTargetOffset))\n\n    camera.getParameter('GlobalXfo').setValue(globalXfo)\n  }\n\n  /**\n   * Rotates the camera around its own `X`,`Y` axes.\n   *\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  pan(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n\n    const delta = new Xfo()\n    const xAxis = new Vec3(1, 0, 0)\n    const yAxis = new Vec3(0, 1, 0)\n\n    if (camera.isOrthographic()) {\n      const frustumHeight = camera.getFrustumHeight()\n      const frustumWidth = frustumHeight * (viewport.getWidth() / viewport.getHeight())\n\n      delta.tr = xAxis.scale(-(dragVec.x / viewport.getWidth()) * frustumWidth)\n      delta.tr.addInPlace(yAxis.scale((dragVec.y / viewport.getHeight()) * frustumHeight))\n    } else {\n      const focalDistance = camera.getFocalDistance()\n      const fovY = camera.getFov()\n\n      const cameraPlaneHeight = 2.0 * focalDistance * Math.tan(0.5 * fovY)\n      const cameraPlaneWidth = cameraPlaneHeight * (viewport.getWidth() / viewport.getHeight())\n      delta.tr = xAxis.scale(-(dragVec.x / viewport.getWidth()) * cameraPlaneWidth)\n      delta.tr.addInPlace(yAxis.scale((dragVec.y / viewport.getHeight()) * cameraPlaneHeight))\n    }\n\n    const cameraXfo = camera.getParameter('GlobalXfo').getValue()\n    camera.getParameter('GlobalXfo').setValue(cameraXfo.multiply(delta))\n  }\n\n  /**\n   * The dolly method.\n   * @param {MouseEvent} event - The event value.\n   * @param {Vec2} dragVec - The drag vector value.\n   */\n  dolly(event, dragVec) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n    const focalDistance = camera.getFocalDistance()\n\n    const applyMovement = () => {\n      const dollyDist = dragVec.y * this.__dollySpeedParam.getValue() * focalDistance\n      const delta = new Xfo()\n      delta.tr.set(0, 0, dollyDist)\n      const globalXfo = camera.getParameter('GlobalXfo').getValue()\n      camera.getParameter('GlobalXfo').setValue(globalXfo.multiply(delta))\n    }\n    const applyViewScale = () => {\n      const dollyDist = dragVec.y * this.__dollySpeedParam.getValue()\n      const viewHeight = camera.getFrustumHeight()\n      const zoomDist = viewHeight * dollyDist\n      camera.setFrustumHeight(viewHeight + zoomDist)\n    }\n\n    if (camera.isOrthographic()) {\n      applyViewScale()\n    } else {\n      applyMovement()\n    }\n  }\n\n  /**\n   * The initDrag method.\n   *\n   * @private\n   * @param {PointerEvent} event - The event value.\n   */\n  initDrag(event) {\n    const { pointerPos } = event\n    event.setCapture(this)\n\n    this.__pointerDown = true\n\n    const { viewport } = event\n    const camera = viewport.getCamera()\n    const xfo = camera.getParameter('GlobalXfo').getValue()\n    const orbitAroundCursor = this.getParameter('OrbitAroundCursor').getValue()\n    if (event.intersectionData != undefined && orbitAroundCursor) {\n      this.__orbitTarget = event.intersectionData.intersectionPos\n      const vec = xfo.inverse().transformVec3(event.intersectionData.intersectionPos)\n      camera.setFocalDistance(-vec.z)\n    } else {\n      this.__orbitTarget = xfo.tr.add(xfo.ori.getZaxis().scale(-camera.getFocalDistance()))\n    }\n\n    this.__prevPointerPos = pointerPos\n    this.__dragging = 1\n  }\n\n  /**\n   * The initDrag method.\n   *\n   * @private\n   * @param {MouseEvent} event - The event value.\n   */\n  endDrag(event) {\n    if (event.getCapture() == this) event.releaseCapture()\n    this.__dragging = 0\n    this.__pointerDown = false\n  }\n\n  /**\n   * The aimFocus method.\n   *\n   * @private\n   * @param {Camera} camera - The camera that we are aiming\n   * @param {Vec3} target - The target to focus on.\n   * @param {Number} distance - The distance from the target to get to.\n   * @param {Number} duration - The duration in milliseconds to aim the focus.\n   */\n  aimFocus(camera, target, distance = -1, duration = 400) {\n    if (this.__focusIntervalId) clearInterval(this.__focusIntervalId)\n\n    const count = Math.round(duration / 20) // each step is 20ms\n    const initalMode = this.__manipulationState\n    let i = 0\n    const applyMovement = () => {\n      const prevGlobalXfo = camera.getParameter('GlobalXfo').getValue()\n      const initialDist = camera.getFocalDistance()\n      const dir = target.subtract(prevGlobalXfo.tr)\n      const currDist = dir.normalizeInPlace()\n\n      const targetGlobalXfo = prevGlobalXfo.clone()\n      if (initalMode == MANIPULATION_MODES.turntable || initalMode == MANIPULATION_MODES.look) {\n        // Orbit\n        {\n          const currDir = prevGlobalXfo.ori.getZaxis().clone()\n          currDir.z = 0\n          const newDir = dir.negate()\n          newDir.z = 0\n\n          const orbit = new Quat()\n          orbit.setFrom2Vectors(currDir, newDir)\n          targetGlobalXfo.ori = orbit.multiply(targetGlobalXfo.ori)\n        }\n\n        // Pitch\n        {\n          const xAxis = prevGlobalXfo.ori.getXaxis().clone()\n          const currDir = prevGlobalXfo.ori.getZaxis().clone()\n          const newDir = dir.negate()\n\n          newDir.subtractInPlace(xAxis.scale(newDir.dot(xAxis)))\n          newDir.normalizeInPlace()\n\n          const pitch = new Quat()\n          if (currDir.cross(newDir).dot(xAxis) > 0.0) pitch.rotateX(currDir.angleTo(newDir))\n          else pitch.rotateX(-currDir.angleTo(newDir))\n          targetGlobalXfo.ori = targetGlobalXfo.ori.multiply(pitch)\n        }\n\n        // Fix Roll\n        {\n          const currDir = targetGlobalXfo.ori.getXaxis().clone()\n          const newDir = currDir.clone()\n          newDir.z = 0\n          newDir.normalizeInPlace()\n\n          const roll = new Quat()\n          roll.setFrom2Vectors(currDir, newDir)\n          targetGlobalXfo.ori = roll.multiply(targetGlobalXfo.ori)\n        }\n      } else {\n        const currDir = prevGlobalXfo.ori.getZaxis().clone()\n        const newDir = dir.negate()\n\n        const orbit = new Quat()\n        orbit.setFrom2Vectors(currDir, newDir)\n        targetGlobalXfo.ori = orbit.multiply(targetGlobalXfo.ori)\n      }\n\n      // With each iteration we get closer to our goal\n      // and on the final iteration we should aim perfectly at\n      // the target.\n      const t = Math.pow(i / count, 2)\n      const globalXfo = prevGlobalXfo.clone()\n      globalXfo.ori = prevGlobalXfo.ori.lerp(targetGlobalXfo.ori, t)\n      if (distance > 0) {\n        const displacement = dir.scale(currDist - distance)\n        globalXfo.tr.addInPlace(displacement.scale(t))\n      }\n\n      camera.setFocalDistance(initialDist + (currDist - initialDist) * t)\n      camera.getParameter('GlobalXfo').setValue(globalXfo)\n\n      i++\n      if (i <= count) {\n        this.__focusIntervalId = setTimeout(applyMovement, 20)\n      } else {\n        this.__focusIntervalId = undefined\n\n        this.emit('movementFinished', {})\n        camera.emit('movementFinished', {})\n      }\n    }\n    applyMovement()\n  }\n\n  /**\n   * The orientPointOfView method.\n   *\n   * @private\n   * @param {Camera} camera - The camera that we are orienting\n   * @param {Vec3} position - The target to focus on.\n   * @param {Vec3} target - The target to focus on.\n   * @param {Number} distance - The distance to the specified we want the user to be moved to\n   * @param {Number} duration - The duration in milliseconds to aim the focus.\n   */\n  orientPointOfView(camera, position, target, distance = 0, duration = 400) {\n    if (this.__focusIntervalId) clearInterval(this.__focusIntervalId)\n\n    const count = Math.round(duration / 20) // each step is 20ms\n    let i = 0\n    const applyMovement = () => {\n      const initialGlobalXfo = camera.getParameter('GlobalXfo').getValue()\n      const initialTarget = camera.getTargetPosition()\n\n      // With each iteration we get closer to our goal\n      // and on the final iteration we should aim perfectly at\n      // the target.\n      const t = Math.pow(i / count, 2)\n\n      // Sometimes we want to pull users to within some threshold of the specified position.\n      const dirToPosition = position.subtract(initialGlobalXfo.tr)\n      const currDistToPosition = dirToPosition.normalizeInPlace()\n      const displacement = dirToPosition.scale(currDistToPosition - distance)\n      const pos = initialGlobalXfo.tr.add(displacement.scale(t))\n\n      const targetPos = initialTarget.lerp(target, t)\n\n      camera.setPositionAndTarget(pos, targetPos)\n\n      i++\n      if (i <= count) {\n        this.__focusIntervalId = setTimeout(applyMovement, 20)\n      } else {\n        this.__focusIntervalId = undefined\n\n        this.emit('movementFinished')\n        camera.emit('movementFinished')\n      }\n    }\n    applyMovement()\n  }\n\n  /**\n   * Invoked when a user double presses a pointer over an element.\n   *\n   * @param {MouseEvent|TouchEvent} event - The pointer event that occurs\n   * @memberof CameraManipulator\n   */\n  onPointerDoublePress(event) {\n    if (event.intersectionData && this.aimFocusOnMouseClick) {\n      if (\n        (event.pointerType === POINTER_TYPES.mouse && this.aimFocusOnMouseClick == 2) ||\n        (event.pointerType === POINTER_TYPES.touch && this.aimFocusOnTouchTap == 2)\n      ) {\n        const { viewport } = event\n        const camera = viewport.getCamera()\n        const cameraGlobalXfo = camera.getParameter('GlobalXfo').getValue()\n        const aimTarget = cameraGlobalXfo.tr.add(event.pointerRay.dir.scale(event.intersectionData.dist))\n        this.aimFocus(camera, aimTarget)\n        // Note: Collab can use these events to guide users attention.\n        event.aimTarget = aimTarget\n        event.aimDistance = event.intersectionData.dist\n        this.emit('aimingFocus', event)\n        camera.emit('aimingFocus', event)\n        event.stopPropagation()\n        event.preventDefault()\n      }\n    }\n  }\n\n  /**\n   * Event fired when either the mouse button is pressed, or a touch start event occurs.\n   *\n   * @param {PointerEvent} event - The mouse event that occurs.\n   */\n  onPointerDown(event) {\n    if (event.pointerType === POINTER_TYPES.mouse) {\n      if (this.__dragging == 1) {\n        this.endDrag(event)\n      }\n\n      this.initDrag(event)\n\n      if (event.button == 2) {\n        this.__manipulationState = MANIPULATION_MODES.pan\n      } else if (event.ctrlKey && event.altKey) {\n        this.__manipulationState = MANIPULATION_MODES.dolly\n      } else if (event.ctrlKey || event.button == 2) {\n        this.__manipulationState = MANIPULATION_MODES.look\n      } else {\n        this.__manipulationState = this.__defaultManipulationState\n      }\n    } else if (event.pointerType === POINTER_TYPES.touch) {\n      this._onTouchStart(event)\n    }\n\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  /**\n   * Event fired when either the mouse cursor is moved, or a touch point moves.\n   *\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerMove(event) {\n    if (this.__dragging != 0) {\n      if (event.pointerType === POINTER_TYPES.mouse) this._onMouseMove(event)\n      if (event.pointerType === POINTER_TYPES.touch) this._onTouchMove(event)\n\n      this.__dragging = 2\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * The event that occurs when the user moves the pointer across a screen.\n   *\n   * @param {MouseEvent} event -The event value\n   */\n  _onMouseMove(event) {\n    if (!this.__pointerDown) return\n\n    const pointerPos = event.pointerPos\n    // this.__calculatingDragAction = true\n    const dragVec = pointerPos.subtract(this.__prevPointerPos)\n\n    switch (this.__manipulationState) {\n      case MANIPULATION_MODES.turntable:\n        this.turntable(event, dragVec)\n        break\n      case MANIPULATION_MODES.tumbler:\n        this.tumbler(event, dragVec)\n        break\n      case MANIPULATION_MODES.trackball:\n        this.trackball(event, dragVec)\n        break\n      case MANIPULATION_MODES.look:\n        this.look(event, dragVec)\n        break\n      case MANIPULATION_MODES.pan:\n        this.pan(event, pointerPos.subtract(this.__prevPointerPos))\n        break\n      case MANIPULATION_MODES.dolly:\n        this.dolly(event, dragVec)\n        break\n    }\n    this.__prevPointerPos = pointerPos\n    // this.__calculatingDragAction = false\n  }\n\n  /**\n   * The event that occurs when the user moves pointer across a touch screen.\n   *\n   * @param {TouchEvent} event - The touch event that occurs.\n   * @private\n   */\n  _onTouchMove(event) {\n    // this.__calculatingDragAction = true\n\n    const touches = event.touches\n    if (touches.length == 1) {\n      const touch = touches[0]\n      const touchPos = new Vec2(touch.clientX, touch.clientY)\n      const touchData = this.__ongoingTouches[touch.identifier]\n      if (!touchData) return\n      const dragVec = touchPos.subtract(touchData.pos)\n      switch (this.__defaultManipulationState) {\n        case MANIPULATION_MODES.look:\n          // TODO: scale panning here.\n          dragVec.scaleInPlace(6.0)\n          this.look(event, dragVec)\n          break\n        case MANIPULATION_MODES.turntable:\n          this.turntable(event, dragVec)\n          break\n        case MANIPULATION_MODES.tumbler:\n          this.tumbler(event, dragVec)\n          break\n        case MANIPULATION_MODES.trackball:\n          this.trackball(event, dragVec)\n          break\n      }\n      touchData.pos = touchPos\n    } else if (touches.length == 2) {\n      const touch0 = touches[0]\n      const touchData0 = this.__ongoingTouches[touch0.identifier]\n      const touch1 = touches[1]\n      const touchData1 = this.__ongoingTouches[touch1.identifier]\n\n      if (!touchData0 || !touchData1) return\n\n      const touch0Pos = new Vec2(touch0.clientX, touch0.clientY)\n      const touch1Pos = new Vec2(touch1.clientX, touch1.clientY)\n\n      const startSeparation = touchData1.pos.subtract(touchData0.pos).length()\n      const dragSeparation = touch1Pos.subtract(touch0Pos).length()\n      const separationDist = startSeparation - dragSeparation\n\n      const touch0Drag = touch0Pos.subtract(touchData0.pos)\n      const touch1Drag = touch1Pos.subtract(touchData1.pos)\n      const dragVec = touch0Drag.add(touch1Drag)\n      // TODO: scale panning here.\n      dragVec.scaleInPlace(0.5)\n\n      // apply the vectors to calculate a pan and zoom\n      const dragDist = separationDist * 0.002\n      const { viewport } = event\n      const camera = viewport.getCamera()\n\n      const focalDistance = camera.getFocalDistance()\n      const fovY = camera.getFov()\n\n      const xAxis = new Vec3(1, 0, 0)\n      const yAxis = new Vec3(0, 1, 0)\n\n      const cameraPlaneHeight = 2.0 * focalDistance * Math.tan(0.5 * fovY)\n      const cameraPlaneWidth = cameraPlaneHeight * (viewport.getWidth() / viewport.getHeight())\n      const delta = new Xfo()\n      delta.tr = xAxis.scale(-(dragVec.x / viewport.getWidth()) * cameraPlaneWidth)\n      delta.tr.addInPlace(yAxis.scale((dragVec.y / viewport.getHeight()) * cameraPlaneHeight))\n\n      const zoomDist = dragDist * focalDistance\n      camera.setFocalDistance(focalDistance + zoomDist)\n      delta.tr.z += zoomDist\n\n      // Apply the roll\n      switch (this.__defaultManipulationState) {\n        case MANIPULATION_MODES.tumbler:\n        case MANIPULATION_MODES.trackball:\n          const vecPrev = touchData1.pos.subtract(touchData0.pos)\n          const vecNow = touch1Pos.subtract(touch0Pos)\n          let deltaAngle = vecPrev.normalize().angleTo(vecNow.normalize())\n          if (vecPrev.cross(vecNow) < 0.0) {\n            deltaAngle = -deltaAngle\n          }\n\n          const roll = new Quat()\n          roll.rotateZ(deltaAngle)\n          delta.ori.multiplyInPlace(roll)\n          break\n      }\n\n      const globalXfo = camera.getParameter('GlobalXfo').getValue()\n      camera.getParameter('GlobalXfo').setValue(globalXfo.multiply(delta))\n\n      touchData0.pos = touch0Pos\n      touchData1.pos = touch1Pos\n    }\n\n    // this.__calculatingDragAction = false\n  }\n\n  /**\n   * Event fired when either the mouse button is released, or a touch end event occurs.\n   *\n   * @param {MouseEvent} event - The mouse event that occurs.\n   */\n  onPointerUp(event) {\n    if (this.__dragging == 1) {\n      // No dragging ocurred. Release the capture and let the event propagate like normal.\n      this.endDrag(event)\n\n      if (event.intersectionData) {\n        if (\n          (event.pointerType === POINTER_TYPES.mouse && this.aimFocusOnMouseClick == 1) ||\n          (event.pointerType === POINTER_TYPES.touch && this.aimFocusOnTouchTap == 1)\n        ) {\n          const { viewport } = event\n          const camera = viewport.getCamera()\n          const cameraGlobalXfo = camera.getParameter('GlobalXfo').getValue()\n          const aimTarget = cameraGlobalXfo.tr.add(event.pointerRay.dir.scale(event.intersectionData.dist))\n          this.aimFocus(camera, aimTarget)\n\n          // Note: Collab can use these events to guide users attention.\n          event.aimTarget = aimTarget\n          event.aimDistance = event.intersectionData.dist\n          this.emit('aimingFocus', event)\n          camera.emit('aimingFocus', event)\n\n          // Note: for a single click (no-drag) we don't want to stop the propagation of the event.\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }\n    } else if (this.__dragging == 2) {\n      if (event.pointerType === POINTER_TYPES.mouse) {\n        this.endDrag(event)\n\n        this.emit('movementFinished', {})\n        event.viewport.getCamera().emit('movementFinished', {})\n      } else if (event.pointerType === POINTER_TYPES.touch) {\n        event.preventDefault()\n        const { changedTouches, touches } = event\n\n        for (let i = 0; i < changedTouches.length; i++) {\n          this.__endTouch(changedTouches[i])\n        }\n\n        if (Object.keys(this.__ongoingTouches).length == 0) {\n          this.endDrag(event)\n        } else if (!touches.length) {\n          this.endDrag(event)\n          this.__ongoingTouches = {}\n        }\n      }\n\n      event.stopPropagation()\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved into this viewport\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerEnter(event) {}\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved out of this viewport\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerLeave(event) {\n    // If the pointer leaves the viewport, then we will no longer receive key up events,\n    // so we must immediately disable movement here.\n    if (this.__keysPressed.length > 0) {\n      this.__keysPressed = []\n      this.__velocity.set(0, 0, 0)\n      this.__keyboardMovement = false\n    }\n  }\n\n  /**\n   * Invoked when the mouse wheel is rolled up or down over an element.\n   *\n   * @param {WheelEvent} event - The wheel event that occurs.\n   */\n  onWheel(event) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n    const mouseWheelDollySpeed = this.__mouseWheelDollySpeedParam.getValue()\n    const modulator = event.shiftKey ? 0.1 : 0.5\n    const xfo = camera.getParameter('GlobalXfo').getValue()\n\n    let dir\n    if (!camera.isOrthographic()) {\n      if (event.intersectionData != undefined) {\n        dir = xfo.tr.subtract(event.intersectionData.intersectionPos)\n        dir.normalizeInPlace()\n        const viewVec = xfo.inverse().transformVec3(event.intersectionData.intersectionPos)\n        camera.setFocalDistance(-viewVec.z)\n      } else {\n        dir = xfo.ori.getZaxis()\n      }\n    }\n\n    // To normalize mouse wheel speed across vendors and OSs, it is recommended to simply convert scroll value to -1 or 1\n    // See here: https://stackoverflow.com/questions/5527601/normalizing-mousewheel-speed-across-browsers\n    const steps = 6\n    const direction = event.deltaY < 0 || event.wheelDelta > 0 || event.deltaY < 0 ? -1 : 1\n    const applyMovement = () => {\n      const focalDistance = camera.getFocalDistance()\n      const zoomDist = focalDistance * this.__mouseWheelMovementDist\n      xfo.tr.addInPlace(dir.scale(zoomDist))\n\n      camera.setFocalDistance(focalDistance + zoomDist)\n      camera.getParameter('GlobalXfo').setValue(xfo)\n\n      this.__mouseWheelZoomCount++\n      if (this.__mouseWheelZoomCount < steps) {\n        this.__mouseWheelZoomId = setTimeout(applyMovement, 10)\n      } else {\n        this.__mouseWheelZoomId = undefined\n        this.emit('movementFinished', {})\n        camera.emit('movementFinished', { event: 'onWheel' })\n      }\n    }\n    const applyViewScale = () => {\n      const frustumHeight = camera.getFrustumHeight()\n      const zoomDist = frustumHeight * this.__mouseWheelMovementDist\n      camera.setFrustumHeight(frustumHeight + zoomDist)\n\n      if (event.intersectionData) {\n        const dir = xfo.tr.subtract(event.intersectionData.intersectionPos)\n        const zAxis = xfo.ori.getZaxis()\n        dir.subtractInPlace(zAxis.scale(dir.dot(zAxis)))\n\n        xfo.tr.addInPlace(dir.scale(zoomDist / (frustumHeight + zoomDist)))\n        camera.getParameter('GlobalXfo').setValue(xfo)\n      }\n\n      this.__mouseWheelZoomCount++\n      if (this.__mouseWheelZoomCount < steps) {\n        this.__mouseWheelZoomId = setTimeout(applyViewScale, 10)\n      } else {\n        this.__mouseWheelZoomId = undefined\n        this.emit('movementFinished', {})\n        camera.emit('movementFinished', { event: 'onWheel' })\n      }\n    }\n\n    if (this.__mouseWheelZoomId) {\n      // If a new wheel event arrives while the previous is still running, modify the distance\n      // and reset.\n      this.__mouseWheelMovementDist += (direction * mouseWheelDollySpeed * modulator * 0.5) / steps\n      this.__mouseWheelZoomCount = 0\n    } else {\n      this.__mouseWheelMovementDist = (direction * mouseWheelDollySpeed * modulator) / steps\n      this.__mouseWheelZoomCount = 0\n      if (camera.isOrthographic()) {\n        applyViewScale()\n      } else {\n        applyMovement()\n      }\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n  }\n\n  /**\n   * The integrateVelocityChange method.\n   * @param {MouseEvent} event - The event value.\n   * @private\n   */\n  integrateVelocityChange(event) {\n    const { viewport } = event\n    const camera = viewport.getCamera()\n\n    const time = performance.now()\n    if (this.__prevVelocityIntegrationTime > 0) {\n      const timeDelta = (time - this.__prevVelocityIntegrationTime) / 1000\n      const speed = this.getParameter('WalkSpeed').getValue()\n      // movement.tr = this.__velocity.normalize().scale(speed * timeDelta)\n\n      if (speed > 0.0) {\n        // As we move over a terrain, it can be helpful to allow users to walk\n        // over surfaces without falling through them. This allows users to look\n        // down while walking forwards for example.\n        // Calculate where we might be soon\n        const movement = new Xfo()\n        movement.tr = this.__velocity.normalize().scale(speed * timeDelta)\n        const cameraXfo = camera.getParameter('GlobalXfo').getValue()\n\n        const newXfo = cameraXfo.multiply(movement)\n\n        const collisionDetection = this.getParameter('WalkModeCollisionDetection').getValue()\n        if (collisionDetection) {\n          // Raycast from 1.5 meter up\n          const headHeight = 1.5\n          const dist = 1.5\n          const area = 0.5\n          const raycastXfo = new Xfo(newXfo.tr)\n          const ray = new Ray(newXfo.tr, new Vec3(0, 0, -1))\n          const results = viewport.getRenderer().raycastCluster(raycastXfo, ray, dist, area, PassType.OPAQUE)\n\n          if (results.length > 0) {\n            let avgDist = 0\n            // eslint-disable-next-line guard-for-in\n            results.forEach((result) => {\n              avgDist += result.dist\n            })\n            avgDist /= results.length\n\n            // Snap the movement vector to make the user rest on the ground.\n            newXfo.tr = ray.start.add(ray.dir.scale(avgDist - headHeight))\n          }\n        }\n        camera.getParameter('GlobalXfo').setValue(newXfo)\n      }\n    }\n\n    this.__prevVelocityIntegrationTime = time\n  }\n\n  /**\n   * Invoked when the user is pressing a key on the keyboard.\n   *\n   * @param {KeyboardEvent} event - The keyboard event that occurs.\n   * @private\n   */\n  onKeyDown(event) {\n    if (!this.enabledWASDWalkMode) return\n    const key = event.key.toLowerCase()\n    // Note: onKeyPressed is called initially only once, and then we\n    // get a series of calls. Here we ignore subsequent events.\n    if (this.__keysPressed.includes(key)) return\n    switch (key) {\n      case 'w':\n        this.__velocity.z -= 1.0\n        break\n      case 's':\n        this.__velocity.z += 1.0\n        break\n      case 'a':\n        this.__velocity.x -= 1.0\n        break\n      case 'd':\n        this.__velocity.x += 1.0\n        break\n      default:\n        return\n    }\n    event.stopPropagation()\n    this.__keysPressed.push(key)\n    if (!this.__keyboardMovement) {\n      this.__keyboardMovement = true\n      this.__prevVelocityIntegrationTime = performance.now()\n      const animationFrame = () => {\n        this.integrateVelocityChange(event)\n        if (this.__keyboardMovement) {\n          window.requestAnimationFrame(animationFrame)\n        }\n      }\n      window.requestAnimationFrame(animationFrame)\n    }\n  }\n\n  /**\n   * Invoked when the user releases a key on the keyboard.\n   *\n   * @param {KeyboardEvent} event - The event that occurs.\n   */\n  onKeyUp(event) {\n    const key = event.key.toLowerCase()\n    if (!this.__keysPressed.includes(key)) return\n    switch (key) {\n      case 'w':\n        this.__velocity.z += 1.0\n        break\n      case 's':\n        this.__velocity.z -= 1.0\n        break\n      case 'a':\n        this.__velocity.x += 1.0\n        break\n      case 'd':\n        this.__velocity.x -= 1.0\n        break\n      default:\n        return\n    }\n    event.stopPropagation()\n    const keyIndex = this.__keysPressed.indexOf(key)\n    this.__keysPressed.splice(keyIndex, 1)\n    if (this.__keysPressed.length == 0) this.__keyboardMovement = false\n  }\n\n  // ///////////////////////////////////\n  // Touch controls\n\n  /**\n   * The __startTouch method.\n   * @param {TouchEvent} touch - The touch value.\n   * @private\n   */\n  __startTouch(touch) {\n    this.__ongoingTouches[touch.identifier] = {\n      identifier: touch.identifier,\n      pos: new Vec2(touch.clientX, touch.clientY),\n    }\n  }\n\n  /**\n   * The __endTouch method.\n   * @param {TouchEvent} touch - The touch value.\n   * @private\n   */\n  __endTouch(touch) {\n    // let idx = this.__ongoingTouchIndexById(touch.identifier);\n    // this.__ongoingTouches.splice(idx, 1); // remove it; we're done\n    delete this.__ongoingTouches[touch.identifier]\n  }\n\n  // Touch events\n\n  /**\n   * Invoked when the user touches an element on a touch screen.\n   *\n   * @param {TouchEvent} event - The touch event that occurs.\n   */\n  _onTouchStart(event) {\n    const touches = event.changedTouches\n    for (let i = 0; i < touches.length; i++) {\n      this.__startTouch(touches[i])\n    }\n\n    this.initDrag(event)\n  }\n\n  /**\n   * Invoked when the user removes his/her finger from the touch pad.\n   *\n   * @param {TouchEvent} event - The touch event that occurs.\n   */\n  onTouchEnd(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    const touches = event.changedTouches\n    for (let i = 0; i < touches.length; i++) {\n      this.__endTouch(touches[i])\n    }\n\n    if (Object.keys(this.__ongoingTouches).length == 0) this.endDrag(event)\n  }\n\n  /**\n   * Invoked when the touch event gets interrupted.\n   *\n   * @param {TouchEvent} event - The touch event that occurs.\n   */\n  onTouchCancel(event) {\n    event.preventDefault()\n    const touches = event.touches\n    for (let i = 0; i < touches.length; i++) {\n      this.__endTouch(touches[i])\n    }\n    if (Object.keys(this.__ongoingTouches).length == 0) this.endDrag(event)\n  }\n\n  /**\n   * Returns a dictionary of support manipulation modes.\n   *\n   * @param {TouchEvent} event - The touch event that occurs.\n   */\n  static get MANIPULATION_MODES() {\n    return MANIPULATION_MODES\n  }\n}\n\nexport { CameraManipulator }\n","import { Registry } from '../Registry'\n\n/**\n * @private\n */\nconst sgFactory = {\n  registerClass: (blueprintName, blueprint) => {\n    console.warn(`'sgFactory' is deprecated, Please use 'Registry.register'`)\n    Registry.register(blueprintName, blueprint)\n  },\n  constructClass: (blueprintName, ...args) => {\n    console.warn(`'sgFactory' is deprecated, Please use 'Registry.constructClass'`)\n    Registry.constructClass(blueprintName, ...args)\n  },\n}\n\nexport { sgFactory }\n","import { SystemDesc } from '../SystemDesc.js'\nimport { Float32 } from '../Utilities/MathFunctions'\n\nconst create3DContext = function (canvas, opt_attribs) {\n  let context = null\n  if (opt_attribs.webglContextType != undefined) {\n    try {\n      context = canvas.getContext(opt_attribs.webglContextType, opt_attribs)\n      context.name = opt_attribs.webglContextType\n    } catch (e) {}\n  } else {\n    const names = ['webgl2', 'webgl']\n    names.some((name) => {\n      try {\n        context = canvas.getContext(name, opt_attribs)\n        context.name = name\n      } catch (e) {}\n      if (context) {\n        return true\n      }\n    })\n  }\n  if (!context) {\n    return\n  }\n\n  // context.setupInstancedQuad = setupInstancedQuad;\n  // context.bindInstancedQuad = bindInstancedQuad;\n  context.sizeInBytes = function (type) {\n    switch (type) {\n      case this.BYTE:\n      case this.UNSIGNED_BYTE:\n        return 1\n      case this.SHORT:\n      case this.UNSIGNED_SHORT:\n        return 2\n      case this.INT:\n      case this.UNSIGNED_INT:\n      case this.FLOAT:\n        return 4\n      default:\n        throw new Error('unknown type')\n    }\n  }\n\n  if (context.name == 'webgl2') {\n    context.floatTexturesSupported = true\n\n    context.__ext_float_linear = context.getExtension('OES_texture_float_linear')\n    context.__ext_texture_half_float_linear = context.getExtension('OES_texture_half_float_linear')\n\n    // Needed for rendering to float textures in an Fbo\n    context.__ext_color_buffer_float = context.getExtension('EXT_color_buffer_float')\n\n    // Safari does not support uploading HALF_FLOAT data into the GPU.\n  } else {\n    context.__ext_float = context.getExtension('OES_texture_float')\n    if (context.__ext_float) {\n      context.floatTexturesSupported = true\n      context.__ext_float_linear = context.getExtension('OES_texture_float_linear')\n    } else {\n      console.warn('OES_texture_float is not available')\n    }\n\n    context.__ext_half_float = context.getExtension('OES_texture_half_float')\n    if (context.__ext_half_float) {\n      context.HALF_FLOAT = context.__ext_half_float.HALF_FLOAT_OES\n      context.floatTexturesSupported = true\n      context.__ext_texture_half_float_linear = context.getExtension('OES_texture_half_float_linear')\n    }\n\n    // Needed for rendering to flat textures in an Fbo\n    context.__ext_color_buffer_float = context.getExtension('EXT_color_buffer_float')\n\n    context.__ext_std_derivatives = context.getExtension('OES_standard_derivatives')\n    // context.__ext_sRGB = context.getExtension(\"EXT_sRGB\");\n    // context.__ext_draw_buffers = context.getExtension(\"WEBGL_draw_buffers\");\n\n    context.__ext_Inst = context.getExtension('ANGLE_instanced_arrays')\n    if (context.__ext_Inst) {\n      context.vertexAttribDivisor = context.__ext_Inst.vertexAttribDivisorANGLE.bind(context.__ext_Inst)\n      context.drawArraysInstanced = context.__ext_Inst.drawArraysInstancedANGLE.bind(context.__ext_Inst)\n      context.drawElementsInstanced = context.__ext_Inst.drawElementsInstancedANGLE.bind(context.__ext_Inst)\n    }\n\n    {\n      // Note: OES_vertex_array_object is now supported on Safari.\n      context.__ext_VAO = context.getExtension('OES_vertex_array_object')\n      if (context.__ext_VAO) {\n        context.createVertexArray = context.__ext_VAO.createVertexArrayOES.bind(context.__ext_VAO)\n        context.deleteVertexArray = context.__ext_VAO.deleteVertexArrayOES.bind(context.__ext_VAO)\n        context.bindVertexArray = context.__ext_VAO.bindVertexArrayOES.bind(context.__ext_VAO)\n      }\n    }\n    context.__ext_element_index_uint = context.getExtension('OES_element_index_uint')\n    context.__ext_WEBGL_depth_texture = context.getExtension('WEBGL_depth_texture') // Or browser-appropriate prefix\n    if (context.__ext_WEBGL_depth_texture) {\n      context.UNSIGNED_INT_24_8 = context.__ext_WEBGL_depth_texture.UNSIGNED_INT_24_8_WEBGL\n    }\n\n    context.DRAW_FRAMEBUFFER = context.FRAMEBUFFER\n  }\n\n  context.__ext_frag_depth = context.getExtension('EXT_frag_depth')\n\n  context.setupInstancedQuad = function () {\n    // ////////////////////////////\n    // Generate a buffer for drawing a full screen quad.\n    const vertexIDs = new Float32Array([0.0, 1.0, 2.0, 3.0])\n    const indices = new Uint16Array([0, 1, 2, 2, 1, 3])\n\n    this.__quadVertexIdsBuffer = this.createBuffer()\n    this.bindBuffer(this.ARRAY_BUFFER, this.__quadVertexIdsBuffer)\n    this.bufferData(this.ARRAY_BUFFER, vertexIDs, this.STATIC_DRAW)\n\n    this.__quadIndexBuffer = this.createBuffer()\n    this.bindBuffer(this.ELEMENT_ARRAY_BUFFER, this.__quadIndexBuffer)\n    this.bufferData(this.ELEMENT_ARRAY_BUFFER, indices, this.STATIC_DRAW)\n\n    this.__quadattrbuffers = {\n      vertexIDs: {\n        buffer: this.__quadVertexIdsBuffer,\n        dataType: Float32,\n        dimension: 1,\n        count: vertexIDs.length,\n        shared: true /*This buffer is shared between geoms. do not destroy */,\n      },\n    }\n  }\n  context.drawQuad = function () {\n    this.drawElements(this.TRIANGLES, 6, this.UNSIGNED_SHORT, 0)\n  }\n\n  context.setupLineSegAttrBuffers = function () {\n    // ////////////////////////////\n    // Generate a buffer for drawing an instanced 2 point line\n    const vertexIDs = new Float32Array([0.0, 1.0])\n    const vertexIdsBuffer = context.createBuffer()\n    context.bindBuffer(context.ARRAY_BUFFER, vertexIdsBuffer)\n    context.bufferData(context.ARRAY_BUFFER, vertexIDs, context.STATIC_DRAW)\n\n    context.__linesegattrbuffers = {\n      vertexIDs: {\n        buffer: vertexIdsBuffer,\n        dimension: 1,\n        count: vertexIDs.length,\n        shared: true /*This buffer is shared between geoms. do not destroy */,\n      },\n    }\n  }\n\n  return context\n}\n\nexport { create3DContext }\n","const processTextureParams = function (gl, params) {\n  if (!params.width || !params.height) {\n    if (!params.width) throw new Error(`Invalid texture params. 'width' not provided`)\n    if (!params.height) throw new Error(`Invalid texture params. 'height' not provided`)\n  }\n\n  const maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n  if (params.width <= 0 || params.width > maxSize || params.height <= 0 || params.height > maxSize) {\n    throw new Error(\n      'GLTextureParams: Invalid texture size. width:' +\n        params.width +\n        ' height:' +\n        params.height +\n        ' maxSize:' +\n        maxSize\n    )\n  }\n\n  const result = {\n    width: params.width,\n    height: params.height,\n  }\n  const getGLConst = (nameOrValue) => {\n    return isNaN(nameOrValue) ? gl[nameOrValue] : nameOrValue\n  }\n  const processParam = (name, defaultValue) => {\n    if (name in params) result[name] = getGLConst(params[name])\n    else if (defaultValue) result[name] = getGLConst(defaultValue)\n  }\n  processParam('format')\n  processParam('internalFormat', result.format)\n  processParam('type', gl.UNSIGNED_BYTE)\n  processParam('minFilter', params.filter ? params.filter : gl.LINEAR)\n  processParam('magFilter', params.filter ? params.filter : gl.LINEAR)\n  processParam('wrapS', params.wrap ? params.wrap : gl.CLAMP_TO_EDGE)\n  processParam('wrapT', params.wrap ? params.wrap : gl.CLAMP_TO_EDGE)\n  processParam('flipY', false)\n  processParam('mipMapped', false)\n\n  processParam('depthInternalFormat')\n  processParam('depthFormat')\n  processParam('depthType')\n\n  // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n  if (result.format == gl.FLOAT) {\n    if (gl.name == 'webgl2') {\n      if (result.filter == gl.LINEAR && !gl.__ext_float_linear) {\n        console.warn('Floating point texture filtering not supported on result device')\n        result.filter = gl.NEAREST\n      }\n    } else {\n      if (gl.__ext_float) {\n        if (result.filter == gl.LINEAR && !gl.__ext_float_linear) {\n          console.warn('Floating point texture filtering not supported on result device')\n          result.filter = gl.NEAREST\n        }\n      } else {\n        if (gl.__ext_half_float) {\n          result.format = gl.HALF_FLOAT\n          if (result.filter == gl.LINEAR && !gl.__ext_texture_half_float_linear) {\n            console.warn('Half Float texture filtering not supported on result device')\n            result.filter = gl.NEAREST\n          }\n        } else {\n          throw new Error('OES_texture_half_float is not available')\n        }\n      }\n    }\n  } else if (result.format == gl.HALF_FLOAT) {\n    if (gl.name == 'webgl2') {\n      // Half load linear filtering appears to be supported even without the extension.\n      // if (result.filter == gl.LINEAR && !gl.__ext_texture_half_float_linear) {\n      //     console.warn('Floating point texture filtering not supported on result device');\n      //     result.filter = 'NEAREST';\n      // }\n    } else {\n      if (gl.__ext_half_float) {\n        if (result.filter == gl.LINEAR && !gl.__ext_texture_half_float_linear) {\n          console.warn('Half Float texture filtering not supported on result device')\n          result.filter = gl.NEAREST\n        }\n      } else throw new Error('OES_texture_half_float is not available')\n      if (result.channels == gl.RGB) {\n        throw new Error('OES_texture_half_float onlysupports RGBA textures')\n      }\n    }\n  } else if (result.format == 'sRGB') {\n    if (!gl.__ext_sRGB) throw new Error('EXT_sRGB is not available')\n  }\n\n  // ////////////////////////////////////////////////////\n  // Format ... InternalFormat combos.\n  // Setup the correct combos.\n  // the proper texture format combination can be found here\n  // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n  // Determine the internal format from mthe format and type.\n  if (result.format != undefined && gl.name == 'webgl2' && result.internalFormat == result.format) {\n    if (result.type == gl.FLOAT) {\n      if (result.format == gl.RED) {\n        result.internalFormat = gl.R32F\n      } else if (result.format == gl.RG) {\n        result.internalFormat = gl.RG32F\n      } else if (result.format == gl.RGB) {\n        result.internalFormat = gl.RGB32F\n      } else if (result.format == gl.RGBA) {\n        result.internalFormat = gl.RGBA32F\n      }\n    } else if (result.type == gl.HALF_FLOAT) {\n      if (result.format == gl.RED) {\n        result.internalFormat = gl.R16F\n      } else if (result.format == gl.RGB) {\n        result.internalFormat = gl.RGB16F\n      } else if (result.format == gl.RGBA) {\n        result.internalFormat = gl.RGBA16F\n      }\n    } else if (result.type == gl.UNSIGNED_BYTE) {\n      if (result.format == gl.RED) {\n        result.internalFormat = gl.R8\n      }\n      if (result.format == gl.RGB) {\n        result.internalFormat = gl.RGB8\n      } else if (result.format == gl.RGBA) {\n        result.internalFormat = gl.RGBA8\n      }\n    }\n  }\n\n  if (result.depthFormat != undefined) {\n    if (gl.name == 'webgl2') {\n      if (result.depthType == gl.UNSIGNED_SHORT) {\n        result.depthInternalFormat = gl.DEPTH_COMPONENT16\n      } else if (result.depthType == gl.UNSIGNED_INT) {\n        result.depthInternalFormat = gl.UNSIGNED_INT\n      }\n    } else {\n      result.depthInternalFormat = result.depthFormat\n    }\n  }\n\n  return result\n}\n\nexport { processTextureParams }\n","import { BaseImage, RefCounted } from '../SceneTree/index'\nimport { MathFunctions } from '../Utilities/MathFunctions'\nimport { processTextureParams } from './processTextureParams.js'\n\n/**\n * Represents a texture that contains 2-dimensional images.\n * <br>\n * Images have width and height, but no depth.\n *\n * @extends RefCounted\n */\nclass GLTexture2D extends RefCounted {\n  /**\n   * Create a GL texture 2D.\n   *\n   * @param {WebGLRenderingContext | WebGL2RenderingContext | undefined} gl - The gl value.\n   * @param {BaseImage | object} params - The params value.\n   */\n  constructor(gl, params) {\n    super()\n    this.__gl = gl\n\n    this.ready = false\n\n    this.width = 0\n    this.height = 0\n    this.textureType = 1 // Default 2d 24bit texture image texture. No alpha.\n    this.textureDesc = [0, 0, 0, 0] // To be populated by derived classes.\n    this.__loaded = false\n    this.__bound = false\n    if (params != undefined) {\n      if (params instanceof BaseImage) {\n        this.__image = params\n        this.__image.setMetadata('gltexture', this)\n        const imageUpdated = () => {\n          // this.bufferData(data);\n          const params = this.__image.getParams()\n          const width = params.width\n          const height = params.height\n          const data = params.data\n          this.bufferData(data, width, height)\n        }\n        this.__image.on('updated', imageUpdated)\n        if (this.__image.isLoaded()) {\n          this.configure(this.__image.getParams())\n        } else {\n          this.__image.on('loaded', () => {\n            this.configure(this.__image.getParams())\n          })\n        }\n      } else {\n        this.configure(params)\n      }\n    }\n  }\n\n  /**\n   * Returns the loaded status of the 2D Texture\n   *\n   * @return {boolean} - The return value.\n   */\n  isLoaded() {\n    return this.__loaded\n  }\n\n  /**\n   * Returns the `BaseImage` of the GL Texture\n   *\n   * @return {BaseImage} - The return value.\n   */\n  getImage() {\n    return this.__image\n  }\n\n  /**\n   * Returns the specified value of the color components in the texture.\n   *\n   * @return {GLenum | enum} - The return value.\n   */\n  getInternalFormat() {\n    return this.__internalFormat\n  }\n\n  /**\n   * Returns the value of the specified data type of the texel data.\n   *\n   * @return {GLenum | enum} - The return value.\n   */\n  getType() {\n    return this.__type\n  }\n\n  /**\n   * Returns the value of the specified texel data. It must be the same as the `internalFormat`\n   *\n   * @return {GLenum | enum} - The return value.\n   */\n  getFormat() {\n    return this.__format\n  }\n\n  /**\n   * Returns the value of the specified wrapping function for texture coordinate\n   *\n   * @return {GLenum | enum} - The return value.\n   */\n  getWrap() {\n    return this.__wrapParam\n  }\n\n  /**\n   * Returns the value of the specified binding point.\n   *\n   * @return {GLenum | enum} - The return value.\n   */\n  getMipMapped() {\n    return this.__mipMapped\n  }\n\n  /**\n   * Builds the GLTexture2D using the specified parameters object.\n   * Parameters must have the `BaseImage` properties structure.\n   *\n   * @param {object} params - The params value.\n   *\n   * @param {boolean} emit - The emit value.\n   */\n  configure(params, emit = true) {\n    const gl = this.__gl\n    const p = processTextureParams(gl, params)\n\n    this.params = p\n    this.__format = p.format\n    this.__internalFormat = p.internalFormat\n    this.__type = p.type\n\n    this.__minFilter = p.minFilter\n    this.__magFilter = p.magFilter\n    this.__wrapS = p.wrapS\n    this.__wrapT = p.wrapT\n    this.__flipY = 'flipY' in params ? params.flipY : false\n    this.__mipMapped = 'mipMapped' in params ? params.mipMapped : false\n    this.invert = 'invert' in params ? params.invert : false\n    this.alphaFromLuminance = 'alphaFromLuminance' in params ? params.alphaFromLuminance : false\n\n    this.textureType = 1 // Default 2d 8 bit texture image texture.\n    this.textureDesc[0] = this.width\n    this.textureDesc[1] = this.height\n    // Detect an 8 bit image with an alpha channel.\n    if (this.textureType == 1 && this.__format == gl.RGBA) {\n      this.textureType = 2 // 32bit BPP image.\n    }\n\n    if (this.__gltex) {\n      gl.deleteTexture(this.__gltex)\n    }\n\n    this.__gltex = gl.createTexture()\n    this.__updateGLTexParams()\n\n    const width = p.width\n    const height = p.height\n    const data = params.data\n    if (data) {\n      this.bufferData(data, width, height, false, false)\n    } else {\n      this.resize(width, height, false, false)\n    }\n    if (!this.__loaded) {\n      this.emit('ready', {})\n      this.__loaded = true\n    }\n  }\n\n  /**\n   * The __updateGLTexParams method.\n   * @private\n   */\n  __updateGLTexParams() {\n    const gl = this.__gl\n\n    // Load the image into the GPU for rendering.\n    gl.bindTexture(gl.TEXTURE_2D, this.__gltex)\n\n    // This parameter caused all images to be blank. Flipping in the pixel shader instead(by default)\n    // gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.__minFilter)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.__magFilter)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.__wrapS)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.__wrapT)\n  }\n\n  /**\n   * Initializes and creates the buffer of the object's data store.\n   *\n   * @param {Image | ImageData | HTMLCanvasElement | HTMLImageElement | HTMLVideoElement | object} data - The data value.\n   * @param {number} width - The width value.\n   * @param {number} height - The height value.\n   * @param {boolean} bind - The bind value.\n   * @param {boolean} emit - The emit value.\n   */\n  bufferData(data, width = -1, height = -1, bind = true, emit = true) {\n    const gl = this.__gl\n    if (bind) {\n      gl.bindTexture(gl.TEXTURE_2D, this.__gltex)\n    }\n    if (data != undefined) {\n      if (\n        data instanceof Image ||\n        data instanceof ImageData ||\n        data instanceof HTMLCanvasElement ||\n        data instanceof HTMLImageElement ||\n        data instanceof HTMLVideoElement\n      ) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, this.__format, this.__type, data)\n        this.width = data.width\n        this.height = data.height\n      } else {\n        // if wieght and height not specified, assume they stay the same.\n        if (width == -1) {\n          width = this.width\n        }\n        if (height == -1) {\n          height = this.height\n        }\n        // Note: data images must have an even size width/height to load correctly.\n        // this doesn't mean they must be pot textures...\n        const numPixels = width * height\n        let numChannels\n        switch (this.__format) {\n          case gl.RED:\n          case gl.RED_INTEGER:\n          case gl.ALPHA:\n          case gl.LUMINANCE:\n          case gl.LUMINANCE_ALPHA:\n            numChannels = 1\n            break\n          case gl.RG:\n            numChannels = 2\n            // Note: when uploading UNSIGNED_BYTE  RG textures, I received the following error: ArrayBuffer not big enough for request\n            // This answer on stack overflow lead me to this fix.\n            // https://stackoverflow.com/questions/42789896/webgl-error-arraybuffer-not-big-enough-for-request-in-case-of-gl-luminance\n            // The same fix maybe need to be applied to single channel textures above, although I have not seen the error.\n            gl.pixelStorei(gl.UNPACK_ALIGNMENT, 2)\n            break\n          case gl.RGB:\n            numChannels = 3\n            break\n          case gl.RGBA:\n            numChannels = 4\n            break\n        }\n        if (data.length != numPixels * numChannels) {\n          console.warn(\n            'Invalid data for Image width:' +\n              width +\n              ' height:' +\n              height +\n              ' format:' +\n              this.__formatParam +\n              ' type:' +\n              this.__typeParam +\n              ' Data Length:' +\n              data.length +\n              ' Expected:' +\n              numPixels * numChannels\n          )\n        }\n        if (this.__type == gl.HALF_FLOAT && data instanceof Float32Array) {\n          data = MathFunctions.convertFloat32ArrayToUInt16Array(data)\n        }\n        if (gl.name == 'webgl2') {\n          gl.texImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, width, height, 0, this.__format, this.__type, data, 0)\n        } else {\n          gl.texImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, width, height, 0, this.__format, this.__type, data)\n        }\n        // These values may not have changed....\n        this.width = width\n        this.height = height\n      }\n\n      if (this.__mipMapped) {\n        gl.generateMipmap(gl.TEXTURE_2D)\n      }\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        this.__internalFormat,\n        this.width,\n        this.height,\n        0,\n        this.__format,\n        this.__type,\n        null\n      )\n\n      // simply resize the buffer.\n      this.width = width\n      this.height = height\n    }\n\n    if (emit) {\n      this.emit('updated', {})\n    }\n  }\n\n  /**\n   * Clears the buffers to preset values\n   */\n  clear() {\n    const gl = this.__gl\n    const numPixels = this.width * this.height\n    let numChannels\n    switch (this.__format) {\n      case gl.RED:\n      case gl.RED_INTEGER:\n      case gl.ALPHA:\n      case gl.LUMINANCE:\n      case gl.LUMINANCE_ALPHA:\n        numChannels = 1\n        break\n      case gl.RG:\n        numChannels = 2\n        break\n      case gl.RGB:\n        numChannels = 3\n        break\n      case gl.RGBA:\n        numChannels = 4\n        break\n      default:\n        throw new Error('Invalid Format')\n    }\n    let data\n    switch (this.__type) {\n      case gl.UNSIGNED_BYTE:\n        data = new UInt8Array(numPixels * numChannels)\n        break\n      case gl.HALF_FLOAT:\n        data = new UInt16Array(numPixels * numChannels)\n        break\n      case gl.FLOAT:\n        data = new Float32Array(numPixels * numChannels)\n        break\n      default:\n        throw new Error('Invalid Type')\n    }\n\n    if (gl.name == 'webgl2') {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        this.__internalFormat,\n        this.width,\n        this.height,\n        0,\n        this.__format,\n        this.__type,\n        data,\n        0\n      )\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        this.__internalFormat,\n        this.width,\n        this.height,\n        0,\n        this.__format,\n        this.__type,\n        data\n      )\n    }\n  }\n\n  /**\n   * The resize method.\n   * @param {number} width - The width value.\n   * @param {number} height - The height value.\n   * @param {boolean} preserveData - The preserveData value.\n   * @param {boolean} emit - The emit value.\n   */\n  resize(width, height, preserveData = false, emit = true) {\n    const gl = this.__gl\n    const sizeChanged = this.width != width || this.height != height\n    if (sizeChanged) {\n      const maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n      if (width < 0 || width > maxSize || height < 0 || height > maxSize) {\n        throw new Error(\n          'gl-texture2d: Invalid texture size. width:' + width + ' height:' + height + ' maxSize:' + maxSize\n        )\n      }\n\n      if (preserveData) {\n        const gltex = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, gltex)\n        gl.texImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, width, height, 0, this.__format, this.__type, null)\n        const fbo = gl.createFramebuffer()\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.__gltex, 0)\n\n        gl.bindTexture(gl.TEXTURE_2D, gltex) // Do we need this line?\n        gl.copyTexImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, 0, 0, this.width, this.height, 0)\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n        gl.deleteFramebuffer(fbo)\n\n        this.__gl.deleteTexture(this.__gltex)\n        this.__gltex = gltex\n        this.__updateGLTexParams()\n      } else {\n        if (this.width > 0 && this.height > 0) {\n          // this destroys the texture. I am sure this is a memory leak here, but can't figure out what to do to fix it.\n          // this.__gl.deleteTexture(this.__gltex)\n          // this.__gltex = gl.createTexture()\n        }\n        gl.bindTexture(gl.TEXTURE_2D, this.__gltex)\n        gl.texImage2D(gl.TEXTURE_2D, 0, this.__internalFormat, width, height, 0, this.__format, this.__type, null)\n      }\n\n      this.width = width\n      this.height = height\n\n      if (emit) {\n        this.emit('resized', { width, height })\n      }\n    }\n  }\n\n  /**\n   * Upload data for the image to the GPU.\n   *\n   * @param {Uint16Array} dataArray - The dataArray value.\n   * @param {number} width - The width value\n   * @param {number} height - The height value\n   * @param {number} offsetX - The offsetX value\n   * @param {number} offsetY - The offsetY value\n   * @param {boolean} bind - The bind value\n   */\n  populate(dataArray, width, height, offsetX = 0, offsetY = 0, bind = true) {\n    const gl = this.__gl\n    if (bind) gl.bindTexture(gl.TEXTURE_2D, this.__gltex)\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, offsetX, offsetY, width, height, this.__format, this.__type, dataArray)\n  }\n\n  /**\n   * Returns the `width`(Index 0) and the `height`(Index 1) of the GL Texture.\n   *\n   * @return {array} - The return value.\n   */\n  getSize() {\n    return [this.width, this.height]\n  }\n\n  /**\n   * Returns the value of the WebGLTexture value\n   *\n   * @return {WebGLTexture} - The return value.\n   */\n  get glTex() {\n    return this.__gltex\n  }\n\n  /**\n   * Returns the value of the WebGLTexture value\n   *\n   * @return {WebGLTexture} - The return value.\n   */\n  getTexHdl() {\n    return this.__gltex\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @return {any} - The return value.\n   * @deprecated\n   */\n  bind(renderstate, unif) {\n    console.warn(\"'bind' is deprecated. Please use 'bindToUniform'\")\n    return this.bindToUniform(renderstate, unif)\n  }\n\n  /**\n   * The preBind method.\n   * @param {object} unif - The unif value.\n   * @param {object} unifs - The unifs value.\n   * @return {object} - The return value.\n   */\n  preBind(unif, unifs) {\n    return {\n      textureTypeUnif: unifs[unif.name + 'Type'],\n      textureDescUnif: unifs[unif.name + 'Desc'],\n    }\n  }\n\n  /**\n   * Binds Texture to the Uniform attribute.\n   *\n   * @param {object} renderstate - The renderstate value.\n   * @param {object} unif - The unif value.\n   * @param {object} bindings - The bindings value.\n   * @return {boolean} - The return value.\n   */\n  bindToUniform(renderstate, unif, bindings) {\n    if (!this.__loaded) {\n      return false\n    }\n    if (!this.__gltex) {\n      throw new Error('Unable to bind non-initialized or deleted texture.')\n    }\n\n    const unit = renderstate.boundTextures++\n    const gl = this.__gl\n    gl.activeTexture(gl.TEXTURE0 + unit)\n    gl.bindTexture(gl.TEXTURE_2D, this.__gltex)\n    gl.uniform1i(unif.location, unit)\n\n    if (bindings) {\n      if (bindings.textureTypeUnif) {\n        gl.uniform1i(bindings.textureTypeUnif.location, this.textureType)\n      }\n\n      if (bindings.textureDescUnif) {\n        gl.uniform4fv(bindings.textureDescUnif.location, this.textureDesc)\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n    if (this.__image) {\n      this.__image.setMetadata('gltexture', undefined)\n    }\n    this.__gl.deleteTexture(this.__gltex)\n    this.__gltex = undefined\n  }\n}\n\nexport { GLTexture2D }\n","import { Vec2, Vec3, Vec4, Mat3, Mat4, Color } from '../Math/index'\nimport { BaseImage } from '../SceneTree/BaseImage.js'\nimport { SInt32, UInt32, Float32 } from '../Utilities/MathFunctions'\n\nconst glslTypes = {\n  bool: Boolean,\n  int: SInt32,\n  uint: UInt32,\n  float: Float32,\n  ivec2: Vec2,\n  ivec3: Vec3,\n  ivec4: Vec4,\n  vec2: Vec2,\n  vec3: Vec3,\n  vec4: Vec4,\n  color: Color,\n  mat3: Mat3,\n  mat4: Mat4,\n  sampler2D: BaseImage,\n  samplerCube: BaseImage,\n}\n\nexport { glslTypes }\n","import { glslTypes } from './GLSLConstants.js'\n\n/*\n  regex variables\n*/\nconst WHITESPACE_RE = /\\s+/\n\n/** Class representing a shader library.\n * @private\n */\nclass ShaderLibrary {\n  /**\n   * Create a shader library.\n   */\n  constructor() {\n    this.__shaderModules = {}\n  }\n\n  /**\n   * The setShaderModule method. Shader must be set before parsing.\n   * @param {string} shaderName - The shader name.\n   * @param {string} shader - The unparsed shader GLSL.\n   */\n  setShaderModule(shaderName, shader) {\n    if (!(shaderName in this.__shaderModules)) {\n      this.__shaderModules[shaderName] = shader\n      return\n    }\n    // note: this code does not update shader snippets, whatever is first, stays.\n    // important for creating tests, since shaderLibrary is global.\n  }\n\n  /**\n   * The getShaderModule method. Access specific uniforms, attributes of a particular module.\n   * @param {string} shaderName - The shader name.\n   * @return {any} - The return value.\n   */\n  getShaderModule(shaderName) {\n    return this.__shaderModules[shaderName]\n  }\n\n  /**\n   * The getShaderModuleNames method.\n   * @return {array} - The return value.\n   */\n  getShaderModuleNames() {\n    const shaderNames = []\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__shaderModules) shaderNames.push(shaderName)\n    return shaderNames\n  }\n\n  /**\n   * The parseAttr\n   * @param {string} parts - parts\n   * @param {bool} instanced - instanced\n   * @param {object} result - result object to store parsed data\n   */\n  parseAttr(parts, instanced, result) {\n    // see if type is valid\n    if (!(parts[1] in glslTypes)) {\n      throw new Error('Error while parsing :' + shaderName + ' \\nType not recognized:' + parts[1])\n    }\n\n    const name = parts[2].slice(0, parts[2].length - 1)\n    result.attributes[name] = {\n      type: glslTypes[parts[1]],\n      instanced: instanced,\n    }\n\n    // console.log('attributes:' + name + \":\" + parts[1]);\n    if (parts[1] == 'color') {\n      parts[1] = 'vec4'\n      line = parts.join(' ')\n    }\n  }\n\n  /**\n   * The handleImport method -- takes the includeFile and if it exists, adds the parsed glsl, uniforms, and attributes to the result, recursively.\n   * @param {object} result - result object that stores the glsl, attribute, uniform\n   * @param {string} shaderName - shaderName\n   * @param {string} includeFile - file name of the shader snippet/module\n   * @param {array} includes - keep track of what was included\n   * @param {number} lineNumber - keep track of what line we're on\n   */\n  handleImport(result, shaderName, includeFile, includes, lineNumber) {\n    if (includeFile in this.__shaderModules) {\n      const includedGLSL = this.__shaderModules[includeFile] // get glsl snippet code to add\n      if (!includedGLSL) throw error('snippet not loaded or does not exists!')\n\n      // recursively includes glsl snippets\n      const reursiveResult = this.parseShaderHelper(shaderName, includedGLSL, includes, lineNumber)\n\n      // adding code + snippet glsl, if not already added.\n      includes.push(includeFile) // keep track of imports\n      result.glsl = result.glsl + reursiveResult.glsl\n      result.numLines += reursiveResult.numLines\n      result.uniforms = {\n        ...result.uniforms,\n        ...reursiveResult.uniforms,\n      }\n      result.attributes = {\n        ...result.attributes,\n        ...reursiveResult.attributes,\n      }\n\n      // console.log('\\n glsl snippet: ' + reursiveResult.glsl) // print out snippets\n    } else {\n      // throw new Error(shaderName + ': SNIPPET NOT FOUND: ' + includeFile)\n      console.log('shaderName: ' + shaderName)\n      console.log('SNIPPET NOT FOUND: ' + includeFile)\n    }\n  }\n\n  /**\n   * The parseShader method.\n   * @param {string} shaderName - The shader name.\n   * @param {string} glsl - The glsl param.\n   * @return {object} - returns the 'result' object\n   */\n  parseShader(shaderName, glsl) {\n    return this.parseShaderHelper(shaderName, glsl, [], 0)\n  }\n\n  /**\n   * The parseShader recursive helper method\n   * @param {string} shaderName - The shader name.\n   * @param {string} glsl - The glsl param.\n   * @param {array} includes - keep track of what was included\n   * @param {int} lineNumber - keep track of what line we're on\n   * @return {object} - The return value.\n   */\n  parseShaderHelper(shaderName, glsl, includes, lineNumber) {\n    // console.log('parseShader:' + shaderName)\n    const addLine = (result, line) => {\n      result.glsl = result.glsl + line + '\\n'\n      result.numLines++\n    }\n\n    includes.push(shaderName)\n    // result that is returned\n    const result = {\n      glsl: '',\n      numLines: 0,\n      uniforms: {},\n      attributes: {},\n    }\n\n    // go through each line of a GLSL file\n    glsl = glsl.toString() // TODO: remove ideally, this cast is here just to make jest pass\n    const lines = glsl.split('\\n') // break up code by newlines\n\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i]\n      const trimmedLine = line.trim()\n\n      // Get first token of a statement and switch\n      const parts = trimmedLine.split(WHITESPACE_RE)\n      const firstToken = parts[0]\n      switch (firstToken) {\n        // TODO: deprecated - remove eventually\n        case '<%include':\n        case 'import': {\n          // get the contents between quotes and then if there are '/' get the filename\n          const includeFile = trimmedLine.split(/'|\"|`/)[1].split('/').pop()\n          if (!includes.includes(includeFile)) {\n            this.handleImport(result, shaderName, includeFile, includes, lineNumber)\n          } else {\n            // console.log(shaderName + ' already imported: ' + includeFile)\n          }\n\n          break\n        }\n        case 'attribute': {\n          this.parseAttr(parts, false, result)\n          addLine(result, line)\n          break\n        }\n        case 'instancedattribute': {\n          this.parseAttr(parts, true, result)\n          parts[0] = 'attribute'\n          line = parts.join(' ')\n          addLine(result, line)\n          break\n        }\n        case 'uniform': {\n          // When a precision qualifier exists in the uniform definition.\n          // e.g. uniform highp int instancesTextureSize;\n          let typeIndex = 1\n          if (parts.length == 4) typeIndex = 2\n          const typeName = parts[typeIndex]\n\n          if (!(typeName in glslTypes))\n            throw new Error('Error while parsing :' + shaderName + ' \\nType not recognized:' + parts[1])\n          const name = parts[typeIndex + 1].slice(0, parts[typeIndex + 1].length - 1)\n\n          if (name.includes('[')) {\n            // Strip off the square brackets.\n            result.uniforms[name.substring(0, name.indexOf('['))] = glslTypes[typeName]\n          } else {\n            result.uniforms[name] = glslTypes[typeName]\n          }\n\n          if (result.uniforms[name] == 'struct') {\n            console.log(parts)\n          }\n          if (parts[1] == 'color') {\n            parts[1] = 'vec4'\n            line = parts.join(' ')\n          }\n\n          addLine(result, line)\n          break\n        }\n        case 'struct': {\n          let membersStr = ''\n          if (trimmedLine.includes('}')) {\n            membersStr = trimmedLine.substring(trimmedLine.indexOf('{') + 1, trimmedLine.indexOf('}') - 1)\n          } else {\n            i++\n            while (true) {\n              line += lines[i] + '\\n'\n              membersStr += line.trim()\n              i++\n              if (membersStr.includes('}')) break\n            }\n          }\n          const structMembers = membersStr.substring(membersStr.indexOf('{') + 1, membersStr.indexOf('}') - 1)\n          const members = structMembers.split(';')\n          const structDesc = []\n          for (const member of members) {\n            if (member.length == 0) continue\n            const memberparts = member.trim().split(WHITESPACE_RE)\n            structDesc.push({\n              name: memberparts[1],\n              type: glslTypes[memberparts[0]],\n            })\n          }\n          glslTypes[parts[1]] = structDesc\n          addLine(result, line)\n          break\n        }\n        default: {\n          // all other statements\n          addLine(result, line)\n          break\n        }\n      } // end of switch\n    } // end of forloop\n\n    // console.log('length of shader: ' + result.numLines)\n    // console.log(result.glsl)\n    return result\n  }\n}\n\nconst shaderLibrary = new ShaderLibrary()\nexport { shaderLibrary }\n","/* eslint-disable valid-jsdoc */\n/* eslint-disable guard-for-in */\nimport { BaseItem } from '../SceneTree/BaseItem'\nimport { StringFunctions } from '../Utilities/StringFunctions'\nimport { shaderLibrary } from './ShaderLibrary'\n\n// Every instance of every shader should have a unique id.\n// This is so that we can uniquely identify the bound shader during\n// rendering. Materials and geometries cache bindings to shaders.\n// And need the id to be unique. (Note: we used to use the constructor.name\n// which was only unique if the same shader was constructed once, and\n// never unique in release mode after the port to Rollup)\nlet shaderInstanceId = 0\n\n/** Class representing a GL shader.\n * @extends BaseItem\n * @private\n */\nclass GLShader extends BaseItem {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl, name) {\n    super(name)\n    if (!gl) {\n      throw new Error('gl context must be passed to shader constructor')\n    }\n    this.__gl = gl\n    this.__shaderStagesGLSL = {}\n    this.__shaderStages = {}\n\n    this.__shaderProgramHdls = {}\n    this.__gltextures = {}\n\n    this.__id = shaderInstanceId++\n  }\n\n  /**\n   * Sets the GLSL code for a given shader stage.\n   * @param {string} stageName - The name of the stage. currently only 'VERTEX_SHADER' or 'FRAGMENT_SHADER' are supported.\n   * @param {string} glsl - The GLSL code for the shader stage.\n   */\n  setShaderStage(stageName, glsl) {\n    this.__shaderStagesGLSL[stageName] = glsl\n    this.clearProgramsCache()\n  }\n\n  /**\n   * Gets the GLSL code for a given shader stage.\n   * @param {string} stageName - The name of the stage. currently only 'VERTEX_SHADER' or 'FRAGMENT_SHADER' are supported.\n   * @return {string} - The GLSL code for the shader stage.\n   */\n  getShaderStage(stageName) {\n    return this.__shaderStagesGLSL[stageName]\n  }\n\n  /**\n   * Clears all cached shader compilations for this shader.\n   */\n  clearProgramsCache() {\n    const gl = this.__gl\n    for (const shaderProgramkey in this.__shaderProgramHdls) {\n      const shaderCompilationResult = this.__shaderProgramHdls[shaderProgramkey]\n\n      for (const shaderKey in shaderCompilationResult.shaderHdls) {\n        gl.deleteShader(shaderCompilationResult.shaderHdls[shaderKey])\n      }\n\n      gl.deleteProgram(shaderCompilationResult.shaderProgramHdl)\n    }\n  }\n\n  /**\n   * The isTransparent method.\n   * @return {boolean} - The return value.\n   */\n  static isTransparent() {\n    return false\n  }\n\n  /**\n   * The isOverlay method.\n   * @return {boolean} - The return value.\n   */\n  static isOverlay() {\n    return false\n  }\n\n  // /////////////////////////////////\n  // Compilation\n\n  /**\n   * The __compileShaderStage method.\n   * @param {string} glsl - The glsl value.\n   * @param {string} stageID - The stageID value.\n   * @param {string} name - The name value.\n   * @param {object} shaderopts - The shaderopts value.\n   * @return {WebGLShader} - The return value.\n   * @private\n   */\n  __compileShaderStage(glsl, stageID, name, shaderopts) {\n    const gl = this.__gl\n\n    // console.log(\"__compileShaderStage:\" + this.name+\".\"+name + \" glsl:\\n\" + glsl);\n    if (!shaderopts) shaderopts = gl.shaderopts\n    if (shaderopts) {\n      if (shaderopts.repl) {\n        for (const key in shaderopts.repl) glsl = StringFunctions.replaceAll(glsl, key, shaderopts.repl[key])\n      }\n      if (shaderopts.directives) {\n        const defines = shaderopts.directives.join('\\n') + '\\n'\n        glsl = defines + glsl\n      }\n    }\n\n    let prefix\n    if (gl.name == 'webgl2') {\n      glsl = StringFunctions.replaceAll(glsl, 'attribute', 'in')\n      if (name == 'vertexShader') glsl = StringFunctions.replaceAll(glsl, 'varying', 'out')\n      else glsl = StringFunctions.replaceAll(glsl, 'varying', 'in')\n      glsl = StringFunctions.replaceAll(glsl, 'texture2D', 'texture')\n\n      prefix = '#version 300 es\\n'\n      glsl = prefix + glsl\n    }\n\n    const shaderHdl = gl.createShader(stageID)\n    gl.shaderSource(shaderHdl, glsl)\n\n    // Compile the shader program.\n    gl.compileShader(shaderHdl)\n\n    // See if it compiled successfully\n    if (!gl.getShaderParameter(shaderHdl, gl.COMPILE_STATUS)) {\n      console.log('Errors in :' + this.constructor.name)\n      const errors = gl.getShaderInfoLog(shaderHdl).split('\\n')\n      const errorLines = {}\n      for (let i in errors) {\n        if (errors[i].startsWith(\"'\")) {\n          errors[i - 1] = errors[i - 1] + errors[i]\n          delete errors[i]\n          i--\n          continue\n        }\n        const parts = errors[i].split(':')\n        if (parts.length >= 2) {\n          const lineNum = parseInt(parts[2]) // TODO check against ATI and intel cards\n          if (!isNaN(lineNum)) {\n            if (errorLines[lineNum]) errorLines[lineNum].push(errors[i])\n            else errorLines[lineNum] = [errors[i]]\n          }\n        }\n      }\n      const numberedLinesWithErrors = []\n      const lines = glsl.split('\\n')\n      for (const key in errorLines) {\n        const lineNumber = Number.parseInt(key) - 1\n        for (let i = Math.max(0, lineNumber - 4); i < lineNumber; i++)\n          numberedLinesWithErrors.push((lineNumber + 1 + ' ').padStart(' ', 3) + lines[i])\n        numberedLinesWithErrors.push((lineNumber + 1 + '>').padStart(' ', 3) + lines[lineNumber])\n        for (let i = lineNumber + 1; i < Math.min(lines.length - 1, lineNumber + 5); i++)\n          numberedLinesWithErrors.push((lineNumber + 1 + ' ').padStart(' ', 3) + lines[i])\n        const errors = errorLines[key]\n        for (const error of errors) {\n          numberedLinesWithErrors.push(error)\n        }\n      }\n\n      // throw(\"An error occurred compiling the shader \\n\\n\" + numberedLinesWithErrors.join('\\n') + \"\\n\\n=================\\n\" + this.constructor.name + \".\" + name + \": \\n\\n\" + errors.join('\\n'));\n      throw new Error(\n        'An error occurred compiling the shader \\n=================\\n' +\n          this.constructor.name +\n          '.' +\n          name +\n          ': \\n\\n' +\n          numberedLinesWithErrors.join('\\n')\n      )\n      return null\n    }\n    return shaderHdl\n  }\n\n  /**\n   * The __createProgram method.\n   * @param {object} shaderopts - The shaderopts value.\n   * @return {WebGLProgram} - The program value.\n   * @private\n   */\n  __createProgram(shaderopts) {\n    const gl = this.__gl\n    this.__shaderCompilationAttempted = true\n    const shaderProgramHdl = gl.createProgram()\n    const shaderHdls = {}\n\n    if (!this.__shaderStages['VERTEX_SHADER']) {\n      // preprocess the GLSL, including all shader snippets\n      this.__shaderStages['VERTEX_SHADER'] = shaderLibrary.parseShader(\n        'VERTEX_SHADER',\n        this.__shaderStagesGLSL['VERTEX_SHADER']\n      )\n    }\n\n    const vertexShaderGLSL = this.__shaderStages['VERTEX_SHADER'].glsl\n    if (vertexShaderGLSL != undefined) {\n      const vertexShader = this.__compileShaderStage(vertexShaderGLSL, gl.VERTEX_SHADER, 'vertexShader', shaderopts)\n      if (!vertexShader) {\n        return false\n      }\n      gl.attachShader(shaderProgramHdl, vertexShader)\n      shaderHdls[gl.VERTEX_SHADER] = vertexShader\n    }\n\n    if (!this.__shaderStages['FRAGMENT_SHADER']) {\n      // preprocess the GLSL, including all shader snippets\n      this.__shaderStages['FRAGMENT_SHADER'] = shaderLibrary.parseShader(\n        'FRAGMENT_SHADER',\n        this.__shaderStagesGLSL['FRAGMENT_SHADER']\n      )\n    }\n\n    const fragmentShaderGLSL = this.__shaderStages['FRAGMENT_SHADER'].glsl\n    if (fragmentShaderGLSL != undefined) {\n      const fragshaderopts = Object.assign({}, gl.shaderopts, shaderopts)\n      if (fragshaderopts.frag) fragshaderopts.defines = fragshaderopts.frag.defines + fragshaderopts.defines\n      const fragmentShader = this.__compileShaderStage(\n        fragmentShaderGLSL,\n        gl.FRAGMENT_SHADER,\n        'fragmentShader',\n        fragshaderopts\n      )\n      if (!fragmentShader) {\n        return false\n      }\n      gl.attachShader(shaderProgramHdl, fragmentShader)\n      shaderHdls[gl.FRAGMENT_SHADER] = fragmentShader\n    }\n    gl.linkProgram(shaderProgramHdl)\n\n    if (!gl.getProgramParameter(shaderProgramHdl, gl.LINK_STATUS)) {\n      const info = gl.getProgramInfoLog(shaderProgramHdl)\n\n      if (info.includes('D3D shader compilation failed')) {\n        // Usefull for debugging very nasty compiler errors generated only in the ANGL layer.\n        const debugExt = gl.getExtension('WEBGL_debug_shaders')\n        if (debugExt) {\n          const hlsl = debugExt.getTranslatedShaderSource(shaderHdls[gl.VERTEX_SHADER])\n          console.log(hlsl)\n        }\n      }\n\n      console.log('vertexShaderGLSL:' + vertexShaderGLSL)\n      console.log('fragmentShaderGLSL:' + fragmentShaderGLSL)\n      throw new Error('Unable to link the shader program:' + this.constructor.name + '\\n==================\\n' + info)\n\n      gl.deleteProgram(shaderProgramHdl)\n      return false\n    }\n\n    const result = this.__extractAttributeAndUniformLocations(shaderProgramHdl, shaderopts)\n    result.shaderHdls = shaderHdls\n    result.shaderProgramHdl = shaderProgramHdl\n    return result\n  }\n\n  /**\n   * The __extractAttributeAndUniformLocations method.\n   * @param {WebGLProgram} shaderProgramHdl - The shaderProgramHdl value.\n   * @param {object} shaderopts - The shaderopts value.\n   * @return {object} - The dictionary of attributes and uniform values\n   * @private\n   */\n  __extractAttributeAndUniformLocations(shaderProgramHdl, shaderopts) {\n    const gl = this.__gl\n    const attrs = this.getAttributes()\n    const result = {\n      attrs: {},\n      unifs: {},\n    }\n    for (const attrName in attrs) {\n      const location = gl.getAttribLocation(shaderProgramHdl, attrName)\n      if (location == undefined) {\n        console.warn('Shader attribute not found:' + attrName)\n        continue\n      }\n      const attrDesc = attrs[attrName]\n      result.attrs[attrName] = {\n        name: attrName,\n        location: location,\n        type: attrDesc.type,\n        instanced: attrDesc.instanced,\n      }\n    }\n    const unifs = this.getUniforms()\n    for (let uniformName in unifs) {\n      const unifType = unifs[uniformName]\n      if (unifType instanceof Array) {\n        for (const member of unifType) {\n          const structMemberName = uniformName + '.' + member.name\n          const location = gl.getUniformLocation(shaderProgramHdl, structMemberName)\n          if (location == undefined) {\n            // console.warn(this.constructor.name + \" uniform found in shader code but not in compiled program:\" + uniformName);\n            continue\n          }\n          result.unifs[structMemberName] = {\n            name: structMemberName,\n            location: location,\n            type: member.type,\n          }\n        }\n      }\n      if (shaderopts) {\n        if (shaderopts.repl) {\n          for (const key in shaderopts.repl) uniformName = uniformName.replace(key, shaderopts.repl[key])\n        }\n      }\n\n      const location = gl.getUniformLocation(shaderProgramHdl, uniformName)\n      if (location == undefined) {\n        // console.warn(this.constructor.name + \" uniform found in shader code but not in compiled program:\" + uniformName);\n        continue\n      }\n      result.unifs[uniformName] = {\n        name: uniformName,\n        location: location,\n        type: unifType,\n      }\n    }\n    return result\n  }\n\n  /**\n   * The getAttributes method.\n   * @return {object} - The dictionary of attributes that this shader expects to be bound.\n   */\n  getAttributes() {\n    const attributes = {}\n    for (const stageName in this.__shaderStages) {\n      const shaderStageBlock = this.__shaderStages[stageName]\n      for (const attrName in shaderStageBlock['attributes'])\n        attributes[attrName] = shaderStageBlock['attributes'][attrName]\n    }\n    return attributes\n  }\n\n  /**\n   * The getUniforms method.\n   * @return {object} - The dictionary of uniforms that this shader expects to be bound.\n   */\n  getUniforms() {\n    const uniforms = {}\n    for (const stageName in this.__shaderStages) {\n      const shaderStageBlock = this.__shaderStages[stageName]\n      for (const unifName in shaderStageBlock['uniforms']) uniforms[unifName] = shaderStageBlock['uniforms'][unifName]\n    }\n    return uniforms\n  }\n\n  /**\n   * The finalize method.\n   */\n  finalize() {}\n\n  /**\n   * Checks to see if the engine is compiled for the target specified by the key\n   * @param {string} key - The key value.\n   * @return {boolean} - The return value.\n   */\n  isCompiledForTarget(key) {\n    const shaderkey = key ? key : this.getId()\n    return this.__shaderProgramHdls[shaderkey] != undefined\n  }\n\n  /**\n   * The compileForTarget method.\n   * @param {string} key - The key value.\n   * @param {object} shaderopts - The shaderopts value.\n   * @return {object} - The result of the shader compilation.\n   */\n  compileForTarget(key, shaderopts) {\n    const shaderkey = key ? key : this.getId()\n    let shaderCompilationResult = this.__shaderProgramHdls[shaderkey]\n    if (!shaderCompilationResult) {\n      if (shaderCompilationResult !== false) {\n        shaderCompilationResult = this.__createProgram(shaderopts)\n        shaderCompilationResult.shaderkey = shaderkey\n        this.__shaderProgramHdls[shaderkey] = shaderCompilationResult\n      }\n    }\n    return shaderCompilationResult\n  }\n\n  /**\n   * The compile method.\n   */\n  compile() {\n    this.compileForTarget()\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {string} key - The key value.\n   * @return {boolean} - The return value.\n   */\n  bind(renderstate, key) {\n    const gl = this.__gl\n\n    if (renderstate.glShader != this) {\n      const shaderCompilationResult = this.compileForTarget(key, renderstate.shaderopts)\n      if (shaderCompilationResult === false) {\n        console.warn(this.constructor.name + ' is not compiled for ' + key)\n        return false\n      }\n\n      const shaderProgramHdl = shaderCompilationResult.shaderProgramHdl\n\n      gl.useProgram(shaderProgramHdl)\n      renderstate.glShader = this\n      renderstate.shaderkey = shaderCompilationResult.shaderkey\n      renderstate.unifs = shaderCompilationResult.unifs\n      renderstate.attrs = shaderCompilationResult.attrs\n\n      renderstate.boundTextures = 0\n      // Make sure we clear the binding cached.\n      renderstate.glGeom = undefined\n\n      // Once the shader has been bound, we allow the renderer to bind any\n      // of its global uniform values. (e.g. env map values etc...)\n      if (renderstate.bindRendererUnifs) renderstate.bindRendererUnifs(shaderCompilationResult.unifs)\n    }\n\n    renderstate.supportsInstancing = true\n\n    return true\n  }\n\n  /**\n   * The unbind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  unbind(renderstate) {\n    delete renderstate.glShader\n    delete renderstate.shaderkey\n    delete renderstate.unifs\n    delete renderstate.attrs\n    return true\n  }\n\n  // /////////////////////////////\n  // Parameters\n\n  /**\n\n  /**\n   * Returns the parameters that this shader expects to be provided by the material.\n   * Note: the Material method setShaderName will retrieve these parameter declarations\n   * to initialize and configure the parameters for the Material instance.\n   * @return {array} - an array of param declarations that the shader expects the material tp provide.\n   */\n  static getParamDeclarations() {\n    return []\n  }\n\n  /**\n   * The getGeomDataShaderName method.\n   * @return {string} - an array of param declarations that the shader expects the material tp provide.\n   */\n  static getGeomDataShaderName() {\n    return null\n  }\n\n  /**\n   * The getSelectedShaderName method.\n   */\n  static getSelectedShaderName() {\n    return null\n  }\n\n  /**\n   * The supportsInstancing method.\n   * @return {boolean} - return false for shaders that cannot be rendered in instanced mode.\n   */\n  static supportsInstancing() {\n    return true\n  }\n\n  // /////////////////////////////////\n  // Destroy\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    const gl = this.__gl\n    // eslint-disable-next-line guard-for-in\n    for (const key in this.__shaderProgramHdls) {\n      const shaderCompilationResult = this.__shaderProgramHdls[key]\n      gl.deleteProgram(shaderCompilationResult.shaderProgramHdl)\n    }\n    this.__shaderProgramHdls = {}\n  }\n}\n\nexport { GLShader }\n","import { SystemDesc } from '../SystemDesc.js'\nimport '../Math/index'\n\n/**\n * This class abstracts the rendering of a collection of geometries to screen.\n */\nclass GLFbo {\n  /**\n   * Creates a GL Framebuffer Object\n   *\n   * @param {WebGLRenderingContext | WebGL2RenderingContext | undefined} gl - The Canvas 3D Context.\n   * @param {GLTexture2D} colorTexture - Represents 2D Texture in GL.\n   * @param {boolean} createDepthTexture - The createDepthTexture value.\n   */\n  constructor(gl, colorTexture, createDepthTexture = false) {\n    if (SystemDesc.isIOSDevice && (colorTexture.getType() == 'FLOAT' || colorTexture.getType() == 'HALF_FLOAT')) {\n      // So iOS simply refuses to bind anything to a render target except a UNSIGNED_BYTE texture.\n      // See the subtle error message here: \"floating-point render targets not supported -- this is legal\"\n      // https://www.khronos.org/registry/webgl/conformance-suites/1.0.2/conformance/extensions/oes-texture-float.html\n      console.error('IOS devices are unable to render to float textures.')\n    }\n\n    this.__gl = gl\n    this.__colorTexture = colorTexture\n    this.__createDepthTexture = createDepthTexture\n    this.__clearColor = [0, 0, 0, 0]\n    this.__depthTexture = undefined\n\n    if (this.__colorTexture) {\n      this.colorTextureResizeEventId = this.__colorTexture.on('resized', (event) => {\n        this.resize(this.__colorTexture.width, this.__colorTexture.height, false)\n      })\n    }\n\n    this.setup()\n  }\n\n  /**\n   * Sets FBO clear color using RGBA array structure.\n   *\n   * @param {array} clearColor - The clearColor value.\n   */\n  setClearColor(clearColor) {\n    this.__clearColor = clearColor\n  }\n\n  /**\n   * Returns the `width` of the GL Texture\n   *\n   * @return {number} - The return value.\n   */\n  getWidth() {\n    return this.__colorTexture.width\n  }\n\n  /**\n   * Returns the `height` of the GL Texture\n   *\n   * @return {number} - The return value.\n   */\n  getHeight() {\n    return this.__colorTexture.height\n  }\n\n  /**\n   * Returns the `width`(Index 0) and the `height`(Index 1) of the GL Texture.\n   *\n   * @return {array} - The return value.\n   */\n  getSize() {\n    return [this.__colorTexture.width, this.__colorTexture.height]\n  }\n\n  /**\n   * Returns the ColorTexture of the Fbo\n   *\n   * @return {GLTexture2D} - The return value.\n   */\n  getColorTexture() {\n    return this.__colorTexture\n  }\n\n  /**\n   * Returns the value of the deptTexture property.\n   *\n   * @return {boolean} - The return value.\n   */\n  getDepthTextureGL() {\n    return this.__depthTexture\n  }\n\n  /**\n   * Returns the `width` of the GL Texture\n   */\n  get width() {\n    return this.__colorTexture.width\n  }\n\n  /**\n   * Returns the `height` of the GL Texture\n   */\n  get height() {\n    return this.__colorTexture.height\n  }\n\n  /**\n   * Returns the `width`(Index 0) and the `height`(Index 1) of the GL Texture.\n   */\n  get size() {\n    return [this.__colorTexture.width, this.__colorTexture.height]\n  }\n\n  /**\n   * Returns the ColorTexture of the Fbo\n   */\n  get colorTexture() {\n    return this.__colorTexture\n  }\n\n  /**\n   * Sets ColorTexture of the Fbo.\n   *\n   * @param {GLTexture2D} colorTexture - The colorTexture value.\n   */\n  setColorTexture(colorTexture) {\n    this.__colorTexture = colorTexture\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.__colorTexture.glTex, 0)\n  }\n\n  /**\n   * Returns the value of the deptTexture property.\n   */\n  get depthTextureGL() {\n    return this.__depthTexture\n  }\n\n  /**\n   * The setup method.\n   */\n  setup() {\n    const gl = this.__gl\n\n    this.__fbo = gl.createFramebuffer()\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.__fbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__fbo)\n\n    // TODO: Migrate to using GLRenderTarget... This system is a mess.\n    // if(gl.name == 'webgl2'){\n    //     if (this.__colorTexture && this.__colorTexture.getType() == 'FLOAT' && this.__colorTexture.getFilter() == 'LINEAR') {\n    //         if (!gl.__ext_float_linear)\n    //             throw (\"Unable to use filtering on floating point textures\");\n    //     }\n    // }\n    // else {\n    //     if (this.__colorTexture.getType() == 'FLOAT') {\n    //         if(gl.__ext_float){\n    //             if (this.__colorTexture.getFilter() == 'LINEAR') {\n    //                 if (!gl.__ext_float_linear)\n    //                     throw (\"Unable to use filtering on floating point textures\");\n    //             }\n    //         }\n    //         else if(gl.__ext_half_float){\n    //             if (this.__colorTexture.getFilter() == 'LINEAR') {\n    //                 if (!gl.__ext_texture_half_float_linear)\n    //                     throw (\"Unable to use filtering on half-floating point textures\");\n    //             }\n    //         }\n    //         else{\n    //             throw(\"floating point textures unsupported.\");\n    //         }\n    //     }\n    // }\n\n    if (this.__colorTexture) {\n      if (gl.name == 'webgl2')\n        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.__colorTexture.glTex, 0)\n      else gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.__colorTexture.glTex, 0)\n    }\n\n    // Create the depth texture\n    if (this.__createDepthTexture) {\n      if (gl.name != 'webgl2' && !gl.__ext_WEBGL_depth_texture) {\n        // Create the depth buffer\n        const depthBuffer = gl.createRenderbuffer()\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer)\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer)\n      } else {\n        gl.activeTexture(gl.TEXTURE0)\n        this.__depthTexture = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, this.__depthTexture)\n        // TODO: Copy params from the color image.\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        if (gl.name == 'webgl2') {\n          // the proper texture format combination can be found here\n          // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n          // https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/fbo_rtt_depth_texture.html\n          // gl.texImage2D(gl.TEXTURE_2D, 0, gl.DEPTH_COMPONENT16, this.width, this.height, 0, gl.DEPTH_COMPONENT, gl.UNSIGNED_SHORT, null);\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.DEPTH_COMPONENT24,\n            this.width,\n            this.height,\n            0,\n            gl.DEPTH_COMPONENT,\n            gl.UNSIGNED_INT,\n            null\n          )\n          gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.__depthTexture, 0)\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.DEPTH_COMPONENT,\n            this.width,\n            this.height,\n            0,\n            gl.DEPTH_COMPONENT,\n            gl.UNSIGNED_INT,\n            null\n          )\n          gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.__depthTexture, 0)\n        }\n      }\n    }\n\n    this.__checkFramebuffer()\n\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  /**\n   * Triggered Automatically when the texture resizes.\n   *\n   * @todo: Fbos should manage the textures assigned to them.\n   * E.g. resizing and preserving data.\n   */\n  resize(width, height, resizeTexture) {\n    const gl = this.__gl\n\n    if (resizeTexture) {\n      this.__colorTexture.resize(width, height, false, false)\n    }\n\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.__fbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__fbo)\n\n    // The color texture is destoryed and re-created when it is resized,\n    // so we must re-bind it here.\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.__colorTexture.glTex, 0)\n    if (this.__depthTexture) {\n      gl.activeTexture(gl.TEXTURE0)\n      gl.bindTexture(gl.TEXTURE_2D, this.__depthTexture)\n      if (gl.name == 'webgl2') {\n        // the proper texture format combination can be found here\n        // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.DEPTH_COMPONENT24,\n          this.width,\n          this.height,\n          0,\n          gl.DEPTH_COMPONENT,\n          gl.UNSIGNED_INT,\n          null\n        )\n      } else {\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.DEPTH_COMPONENT,\n          this.width,\n          this.height,\n          0,\n          gl.DEPTH_COMPONENT,\n          gl.UNSIGNED_INT,\n          null\n        )\n      }\n    }\n    this.__checkFramebuffer()\n  }\n\n  /**\n   * The __checkFramebuffer method.\n   * @private\n   */\n  __checkFramebuffer() {\n    const gl = this.__gl\n\n    let check\n    if (gl.name == 'webgl2') check = gl.checkFramebufferStatus(gl.DRAW_FRAMEBUFFER)\n    else check = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n    if (check !== gl.FRAMEBUFFER_COMPLETE) {\n      gl.bindTexture(gl.TEXTURE_2D, null)\n      if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n      else gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n      console.warn(\n        'Error creating Fbo width:',\n        this.width,\n        ', height:',\n        this.height,\n        ' Texture Type:',\n        this.__colorTexture.getType()\n      )\n      switch (check) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          throw new Error(\n            'The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.'\n          )\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          throw new Error('There is no attachment.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error('Height and width of the attachment are not the same.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error(\n            'The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.'\n          )\n        case 36061: // gl.GL_FRAMEBUFFER_UNSUPPORTED:\n          throw new Error('The framebuffer is unsupported')\n        default:\n          throw new Error('Incomplete Frambuffer')\n      }\n    }\n  }\n\n  /**\n   * Binds the Fbo to the canvas context, meaning that all WRITE operations will affect the current Fbo.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  bindForWriting(renderstate) {\n    if (renderstate) {\n      this.__prevBoundFbo = renderstate.boundRendertarget\n      renderstate.boundRendertarget = this.__fbo\n    }\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.__fbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__fbo)\n    gl.viewport(0, 0, this.width, this.height) // Match the viewport to the texture size\n  }\n\n  /**\n   * Unbinds the Fbo to the canvas context for WRITE operations.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  unbindForWriting(renderstate) {\n    if (renderstate) renderstate.boundRendertarget = this.__prevBoundFbo\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.__prevBoundFbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__prevBoundFbo)\n  }\n\n  /**\n   * Binds the Fbo to the canvas context, meaning that all WRITE operations will affect the current Fbo.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  bind(renderstate) {\n    this.bindForWriting(renderstate)\n  }\n\n  /**\n   * Unbinds the Fbo to the canvas context for WRITE operations.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  unbind(renderstate) {\n    this.unbindForWriting(renderstate)\n  }\n\n  /**\n   * Binds the Fbo to the canvas context, meaning that all READ operations will affect the current Fbo.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  bindForReading() {\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.__fbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__fbo)\n  }\n\n  /**\n   * Unbinds the Fbo to the canvas context for READ operations.\n   *\n   * @param {object} renderstate - The renderstate value.\n   */\n  unbindForReading() {\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  /**\n   * Enables all color components of the rendering context of the Fbo,\n   * specifying the default color values when clearing color buffers and clears the buffers to preset values.\n   */\n  clear() {\n    const gl = this.__gl\n    gl.colorMask(true, true, true, true)\n    gl.clearColor(...this.__clearColor)\n    if (this.__createDepthTexture) {\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    } else {\n      gl.clear(gl.COLOR_BUFFER_BIT)\n    }\n  }\n\n  /**\n   * Runs [`bind`](#bind) then [`clear`](#clear) methods.\n   * @param {object} renderstate - The renderstate value.\n   */\n  bindAndClear(renderstate) {\n    this.bind(renderstate)\n    this.clear(renderstate)\n  }\n\n  /**\n   * Unbinds the Fbo to the canvas context.\n   */\n  unbind() {\n    const gl = this.__gl\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    const gl = this.__gl\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n    gl.deleteFramebuffer(this.__fbo)\n    this.__fbo = null\n    this.__colorTexture.removeListenerById('resized', this.colorTextureResizeEventId)\n  }\n}\n\nexport { GLFbo }\n","import { Color } from '../Math/Color.js'\nimport { EventEmitter } from '../Utilities/index'\nimport { processTextureParams } from './processTextureParams.js'\n\n/** Class representing a GL render target. */\nclass GLRenderTarget extends EventEmitter {\n  /**\n   * Create a GL render target.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {object} params - The params value.\n   */\n  constructor(gl, params) {\n    super()\n    this.__gl = gl\n    this.textureTargets = []\n    this.depthTexture = null\n    this.textureDesc = [0, 0, 0, 0]\n\n    if (params) {\n      this.configure(params)\n    }\n  }\n\n  /**\n   * The configure method.\n   * @param {object} params - The params param.\n   */\n  configure(params) {\n    const gl = this.__gl\n\n    const p = processTextureParams(gl, params)\n\n    this.textureTargets.forEach((colorTexture) => {\n      gl.deleteTexture(colorTexture)\n    })\n    this.textureTargets = []\n    if (this.depthTexture) {\n      gl.deleteTexture(this.depthTexture)\n      this.depthTexture = null\n    }\n    if (this.frameBuffer) {\n      gl.deleteFramebuffer(this.frameBuffer)\n    }\n\n    this.params = p\n    this.type = p.type\n    this.format = p.format\n    this.internalFormat = p.internalFormat\n    this.filter = p.filter\n    this.wrap = p.wrap\n    this.flipY = p.flipY\n    this.width = p.width\n    this.height = p.height\n    this.clearColor = new Color(0, 0, 0, 0)\n    this.colorMask = [true, true, true, true]\n\n    this.textureType = 1 // Default 2d 8 bit texture image texture.\n    this.textureDesc[0] = this.width\n    this.textureDesc[1] = this.height\n\n    // -- Initialize texture targets\n    const numColorChannels =\n      params.numColorChannels != undefined ? params.numColorChannels : p.format != undefined ? 1 : 0\n    for (let i = 0; i < numColorChannels; i++) {\n      gl.activeTexture(gl.TEXTURE0 + 1)\n      const colorTexture = gl.createTexture()\n      gl.bindTexture(gl.TEXTURE_2D, colorTexture)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, p.wrapS)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, p.wrapT)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, p.minFilter)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, p.magFilter)\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, p.width, p.height, 0, this.format, this.type, null)\n      this.textureTargets.push(colorTexture)\n    }\n\n    if (p.depthFormat) {\n      if (gl.name == 'webgl' && !gl.__ext_WEBGL_depth_texture)\n        throw new Error('Depth textures not support on this device')\n      // -- Initialize depth texture\n      gl.activeTexture(gl.TEXTURE0)\n      this.depthTexture = gl.createTexture()\n      gl.bindTexture(gl.TEXTURE_2D, this.depthTexture)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, p.wrapS)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, p.wrapT)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, p.minFilter)\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, p.magFilter)\n\n      // the proper texture format combination can be found here\n      // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n      gl.texImage2D(gl.TEXTURE_2D, 0, p.depthInternalFormat, p.width, p.height, 0, p.depthFormat, p.depthType, null)\n    }\n\n    // -- Initialize frame buffer\n    this.frameBuffer = gl.createFramebuffer()\n\n    this.bindForWriting()\n\n    if (this.textureTargets.length > 0) {\n      if (this.textureTargets.length > 1) {\n        if (gl.name == 'webgl' && !gl.drawBuffers) {\n          gl.__ext_draw_buffers = gl.getExtension('WEBGL_draw_buffers')\n          gl.drawBuffers = gl.__ext_draw_buffers.drawBuffersWEBGL.bind(gl.__ext_draw_buffers)\n          for (let i = 1; i < 14; i++) {\n            gl['COLOR_ATTACHMENT' + i] = gl.__ext_draw_buffers['COLOR_ATTACHMENT' + i + '_WEBGL']\n          }\n          gl.MAX_COLOR_ATTACHMENTS = gl.__ext_draw_buffers.MAX_COLOR_ATTACHMENTS_WEBGL\n          gl.MAX_DRAW_BUFFERS = gl.__ext_draw_buffers.MAX_DRAW_BUFFERS_WEBGL\n        }\n      }\n\n      const bufferIds = []\n      for (let i = 0; i < this.textureTargets.length; i++) {\n        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, this.textureTargets[i], 0)\n        bufferIds.push(gl.COLOR_ATTACHMENT0 + i)\n      }\n      if (this.textureTargets.length > 1) {\n        gl.drawBuffers(bufferIds)\n      }\n    }\n\n    if (this.depthTexture) {\n      gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.depthTexture, 0)\n    }\n\n    this.checkFramebuffer()\n  }\n\n  /**\n   * The checkFramebuffer method.\n   */\n  checkFramebuffer() {\n    this.bindForWriting()\n\n    const gl = this.__gl\n    const status = gl.checkFramebufferStatus(gl.DRAW_FRAMEBUFFER)\n    if (status != gl.FRAMEBUFFER_COMPLETE) {\n      switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          throw new Error(\n            'The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.'\n          )\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          throw new Error('There is no attachment.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error('Height and width of the attachment are not the same.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error(\n            'The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.'\n          )\n        case 36061: // gl.GL_FRAMEBUFFER_UNSUPPORTED:\n          throw new Error('The framebuffer is unsupported')\n        default:\n          throw new Error('Incomplete Frambuffer')\n      }\n      return\n    }\n    this.unbindForWriting()\n  }\n\n  /**\n   * The bindForWriting method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {boolean} clear - The clear value.\n   */\n  bindForWriting(renderstate, clear = false) {\n    if (renderstate) {\n      this.__prevBoundFbo = renderstate.boundRendertarget\n      renderstate.boundRendertarget = this.frameBuffer\n    }\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.frameBuffer)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer)\n    gl.viewport(0, 0, this.width, this.height) // Match the viewport to the texture size\n    if (clear) this.clear()\n  }\n\n  /**\n   * The unbindForWriting method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  unbindForWriting(renderstate) {\n    if (renderstate) renderstate.boundRendertarget = this.__prevBoundFbo\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.__prevBoundFbo)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.__prevBoundFbo)\n  }\n\n  /**\n   * The clear method.\n   * @param {boolean} clearDepth - The clearDepth value.\n   */\n  clear(clearDepth = true) {\n    const gl = this.__gl\n    gl.colorMask(...this.colorMask)\n    gl.clearColor(...this.clearColor.asArray())\n    let flags = 0\n    if (this.textureTargets.length > 0) flags |= gl.COLOR_BUFFER_BIT\n    if (this.depthTexture) flags |= gl.DEPTH_BUFFER_BIT\n    gl.clear(flags)\n  }\n\n  /**\n   * Binds the render target in preparation for 'readPixels' calls to pull data back to main memory.\n   */\n  bindForReading() {\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.frameBuffer)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer)\n  }\n\n  /**\n   * The unbindForReading method.\n   */\n  unbindForReading() {\n    const gl = this.__gl\n    if (gl.name == 'webgl2') gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null)\n    else gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n  }\n\n  /**\n   * The bindColorTexture method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @param {number} channelId - The channelId value.\n   * @return {boolean} - The return value.\n   */\n  bindColorTexture(renderstate, unif, channelId = 0) {\n    const gl = this.__gl\n    const unit = renderstate.boundTextures++\n    gl.uniform1i(unif.location, unit)\n    gl.activeTexture(gl.TEXTURE0 + unit)\n    gl.bindTexture(gl.TEXTURE_2D, this.textureTargets[channelId])\n    return true\n  }\n\n  /**\n   * The bindDepthTexture method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @return {boolean} - The return value.\n   */\n  bindDepthTexture(renderstate, unif) {\n    const gl = this.__gl\n    const unit = renderstate.boundTextures++\n    gl.uniform1i(unif.location, unit)\n    gl.activeTexture(gl.TEXTURE0 + unit)\n    gl.bindTexture(gl.TEXTURE_2D, this.depthTexture)\n    return true\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {\n    this.unbindForWriting()\n  }\n\n  /**\n   * The resize method.\n   * @param {number} width - The width value.\n   * @param {number} height - The height value.\n   * @param {boolean} preserveData - The preserveData value.\n   */\n  resize(width, height, preserveData = false) {\n    const gl = this.__gl\n    const sizeChanged = this.width != width || this.height != height\n    if (sizeChanged) {\n      const maxSize = gl.getParameter(gl.MAX_TEXTURE_SIZE)\n      if (width < 0 || width > maxSize || height < 0 || height > maxSize) {\n        throw new Error(`GLRenderTarget: Invalid texture size. width: ${width} height: ${height} maxSize: ${maxSize}`)\n      }\n      if (preserveData) {\n        this.bindForReading()\n      }\n\n      const p = this.params\n\n      for (let i = 0; i < this.textureTargets.length; i++) {\n        const colorTexture = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, colorTexture)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, p.wrapS)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, p.wrapT)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, p.minFilter)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, p.magFilter)\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat, width, height, 0, this.format, this.type, null)\n\n        if (preserveData) {\n          // see: http://jsfiddle.net/greggman/rs21sr46\n          gl.copyTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            this.internalFormat,\n            0,\n            0,\n            Math.min(width, this.width),\n            Math.min(height, this.height),\n            0\n          )\n        }\n\n        gl.deleteTexture(this.textureTargets[i])\n        this.textureTargets[i] = colorTexture\n      }\n\n      if (p.depthFormat) {\n        if (gl.name == 'webgl' && !gl.__ext_WEBGL_depth_texture)\n          throw new Error('Depth textures not support on this device')\n\n        // -- Initialize depth texture\n        gl.activeTexture(gl.TEXTURE0)\n        const depthTexture = gl.createTexture()\n        gl.bindTexture(gl.TEXTURE_2D, depthTexture)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, p.wrapS)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, p.wrapT)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, p.minFilter)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, p.magFilter)\n\n        // the proper texture format combination can be found here\n        // https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n        gl.texImage2D(gl.TEXTURE_2D, 0, p.depthInternalFormat, width, height, 0, p.depthFormat, p.depthType, null)\n\n        if (preserveData) {\n          // see: http://jsfiddle.net/greggman/rs21sr46\n          gl.copyTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            this.internalFormat,\n            0,\n            0,\n            Math.min(width, this.width),\n            Math.min(height, this.height),\n            0\n          )\n        }\n\n        gl.deleteTexture(this.depthTexture)\n        this.depthTexture = depthTexture\n      }\n\n      if (preserveData) {\n        this.unbindForReading()\n      }\n\n      this.width = width\n      this.height = height\n\n      // -- Initialize frame buffer\n      if (this.frameBuffer) {\n        // Note: avoid re-using the framebuffer.\n        // see here: https://gamedev.stackexchange.com/questions/91991/resizing-a-framebuffer-object-ie-its-attachments-on-screen-resize\n        gl.deleteFramebuffer(this.frameBuffer)\n      }\n      this.frameBuffer = gl.createFramebuffer()\n\n      this.bindForWriting()\n\n      if (this.textureTargets.length > 0) {\n        if (this.textureTargets.length > 1) {\n          if (gl.name == 'webgl' && !gl.drawBuffers) {\n            gl.__ext_draw_buffers = gl.getExtension('WEBGL_draw_buffers')\n            gl.drawBuffers = gl.__ext_draw_buffers.drawBuffersWEBGL.bind(gl.__ext_draw_buffers)\n            for (let i = 1; i < 14; i++) {\n              gl['COLOR_ATTACHMENT' + i] = gl.__ext_draw_buffers['COLOR_ATTACHMENT' + i + '_WEBGL']\n            }\n            gl.MAX_COLOR_ATTACHMENTS = gl.__ext_draw_buffers.MAX_COLOR_ATTACHMENTS_WEBGL\n            gl.MAX_DRAW_BUFFERS = gl.__ext_draw_buffers.MAX_DRAW_BUFFERS_WEBGL\n          }\n        }\n\n        const bufferIds = []\n        for (let i = 0; i < this.textureTargets.length; i++) {\n          gl.framebufferTexture2D(\n            gl.DRAW_FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0 + i,\n            gl.TEXTURE_2D,\n            this.textureTargets[i],\n            0\n          )\n          bufferIds.push(gl.COLOR_ATTACHMENT0 + i)\n        }\n        if (this.textureTargets.length > 1) {\n          gl.drawBuffers(bufferIds)\n        }\n      }\n\n      if (this.depthTexture) {\n        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.depthTexture, 0)\n      }\n\n      this.checkFramebuffer()\n    }\n  }\n\n  /**\n   * The bindToUniform method.\n   * @param {any} renderstate - The renderstate param.\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @param {any} bindings - The bindings param.\n   * @return {any} - The return value.\n   */\n  bindToUniform(renderstate, unif, bindings) {\n    // if (!this.__loaded) {\n    //   return false\n    // }\n    // if (!this.__gltex) {\n    //   throw new Error('Unable to bind non-initialized or deleted texture.')\n    // }\n\n    const unit = renderstate.boundTextures++\n    const texId = this.__gl.TEXTURE0 + unit\n    const gl = this.__gl\n    gl.activeTexture(texId)\n    gl.bindTexture(gl.TEXTURE_2D, this.textureTargets[0])\n    gl.uniform1i(unif.location, unit)\n\n    if (bindings) {\n      if (bindings.textureTypeUnif) {\n        gl.uniform1i(bindings.textureTypeUnif.location, this.textureType)\n      }\n\n      if (bindings.textureDescUnif) {\n        this.__gl.uniform4fv(bindings.textureDescUnif.location, this.textureDesc)\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    const gl = this.__gl\n    this.textureTargets.forEach((colorTexture) => {\n      gl.deleteTexture(colorTexture)\n    })\n    this.textureTargets = []\n    if (this.depthTexture) {\n      gl.deleteTexture(this.depthTexture)\n      this.depthTexture = null\n    }\n    if (this.frameBuffer) {\n      gl.deleteFramebuffer(this.frameBuffer)\n    }\n  }\n}\nexport { GLRenderTarget }\n","import { shaderLibrary } from '../../ShaderLibrary.js'\n\nimport computeViewNormal from './computeViewNormal.glsl'\nimport calcFatLinesViewPos from './calcFatLinesViewPos.glsl'\nimport constants from './constants.glsl'\nimport convolveHelpers from './convolve-helpers.glsl'\nimport cutaways from './cutaways.glsl'\nimport debugColors from './debugColors.glsl'\nimport drawItemId from './drawItemId.glsl'\nimport drawItemTexture from './drawItemTexture.glsl'\nimport envmapDualfisheye from './envmap-dualfisheye.glsl'\nimport envmapEquirect from './envmap-equirect.glsl'\nimport envmapOctahedral from './envmap-octahedral.glsl'\nimport GLSLBits from './GLSLBits.glsl'\nimport GLSLUtils from './GLSLUtils.glsl'\nimport Hammersley from './Hammersley.glsl'\nimport ImportanceSampleGGX from './ImportanceSampleGGX.glsl'\nimport materialparams from './materialparams.glsl'\nimport modelMatrix from './modelMatrix.glsl'\nimport PBRSurfaceRadiance from './PBRSurfaceRadiance.glsl'\nimport SHCoeffs from './SHCoeffs.glsl'\nimport gamma from './gamma.glsl'\nimport inverse from './inverse.glsl'\nimport transpose from './transpose.glsl'\nimport quadVertexFromID from './quadVertexFromID.glsl'\nimport unpackHDR from './unpackHDR.glsl'\nimport surfaceGeomData from './surfaceGeomData.glsl'\nimport surfaceHighlight from './surfaceHighlight.glsl'\nimport imageAtlas from './imageAtlas.glsl'\n\nshaderLibrary.setShaderModule('imageAtlas.glsl', imageAtlas)\nshaderLibrary.setShaderModule('surfaceGeomData.glsl', surfaceGeomData)\nshaderLibrary.setShaderModule('surfaceHighlight.glsl', surfaceHighlight)\n\nshaderLibrary.setShaderModule('computeViewNormal.glsl', computeViewNormal)\nshaderLibrary.setShaderModule('calcFatLinesViewPos.glsl', calcFatLinesViewPos)\nshaderLibrary.setShaderModule('constants.glsl', constants)\nshaderLibrary.setShaderModule('convolve-helpers.glsl', convolveHelpers)\nshaderLibrary.setShaderModule('cutaways.glsl', cutaways)\nshaderLibrary.setShaderModule('debugColors.glsl', debugColors)\nshaderLibrary.setShaderModule('drawItemId.glsl', drawItemId)\nshaderLibrary.setShaderModule('drawItemTexture.glsl', drawItemTexture)\nshaderLibrary.setShaderModule('envmap-dualfisheye.glsl', envmapDualfisheye)\nshaderLibrary.setShaderModule('envmap-equirect.glsl', envmapEquirect)\nshaderLibrary.setShaderModule('envmap-octahedral.glsl', envmapOctahedral)\nshaderLibrary.setShaderModule('GLSLBits.glsl', GLSLBits)\nshaderLibrary.setShaderModule('GLSLUtils.glsl', GLSLUtils)\nshaderLibrary.setShaderModule('Hammersley.glsl', Hammersley)\nshaderLibrary.setShaderModule('ImportanceSampleGGX.glsl', ImportanceSampleGGX)\nshaderLibrary.setShaderModule('materialparams.glsl', materialparams)\nshaderLibrary.setShaderModule('modelMatrix.glsl', modelMatrix)\nshaderLibrary.setShaderModule('PBRSurfaceRadiance.glsl', PBRSurfaceRadiance)\nshaderLibrary.setShaderModule('SHCoeffs.glsl', SHCoeffs)\nshaderLibrary.setShaderModule('gamma.glsl', gamma)\nshaderLibrary.setShaderModule('inverse.glsl', inverse)\nshaderLibrary.setShaderModule('transpose.glsl', transpose)\nshaderLibrary.setShaderModule('quadVertexFromID.glsl', quadVertexFromID)\nshaderLibrary.setShaderModule('unpackHDR.glsl', unpackHDR)\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\n\nimport frag from './UnpackHDR.frag'\nimport vert from './UnpackHDR.vert'\n\n/** Shader for unpacking HDR images using Boost HDR algorithm.\n * @extends GLShader\n * @private\n */\nclass UnpackHDRShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { UnpackHDRShader }\n","/* eslint-disable guard-for-in */\nimport { Color, Vec2, Vec3, Vec4, RGBA } from '../../Math/index'\nimport { UInt8, SInt8, UInt16, SInt16, UInt32, SInt32, Float32 } from '../../Utilities/MathFunctions'\n\n/**\n * Returns a descriptor for the provided geom attribute.\n * @private\n * @param {WebGLRenderingContext} gl - The webgl context\n * @param {object} attrDataType - The geometry attribute value.\n *\n * @return {object}\n */\nconst genDataTypeDesc = (gl, attrDataType) => {\n  let dimension\n  let elementSize\n  let dataType\n  switch (attrDataType) {\n    case UInt8:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.UNSIGNED_BYTE\n      break\n    case SInt8:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.BYTE\n      break\n    case UInt16:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.UNSIGNED_SHORT\n      break\n    case SInt16:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.SHORT\n      break\n    case UInt32:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.UNSIGNED_INT\n      break\n    case SInt32:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.INT\n      break\n    case Float32:\n      dimension = 1\n      elementSize = 4\n      dataType = gl.FLOAT\n      break\n    case Vec2:\n      dimension = 2\n      elementSize = 4\n      dataType = gl.FLOAT\n      break\n    case Vec3:\n      dimension = 3\n      elementSize = 4\n      dataType = gl.FLOAT\n      break\n    case Vec4:\n    case Color:\n      dimension = 4\n      elementSize = 4\n      dataType = gl.FLOAT\n      break\n    case RGBA:\n      dimension = 4\n      elementSize = 1\n      dataType = gl.UNSIGNED_BYTE\n      break\n    default:\n      throw 'Unhandled Type'\n  }\n\n  return {\n    dimension,\n    elementSize,\n    dataType,\n  }\n}\n\n/** Class representing a geom shader binding.\n * @private\n */\nclass GeomShaderBinding {\n  /**\n   * Create a geom shader binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} shaderAttrs - The shader attributes.\n   * @param {any} geomAttrBuffers - The geomAttrBuffers value.\n   * @param {any} indexBuffer - The index buffer.\n   */\n  constructor(gl, shaderAttrs, geomAttrBuffers, indexBuffer) {\n    this.__gl = gl\n    this.__shaderAttrs = shaderAttrs\n    this.__glattrbuffers = geomAttrBuffers\n    this.__indexBuffer = indexBuffer\n  }\n\n  /**\n   * The bind method.\n   * @param {any} renderstate - The render state.\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    const gl = this.__gl\n\n    for (const attrName in this.__shaderAttrs) {\n      if (attrName == 'instancedIds') continue\n      const shaderAttrDesc = this.__shaderAttrs[attrName]\n      const location = shaderAttrDesc.location\n      if (location == -1) continue\n      const geomAttrBuffer = this.__glattrbuffers[attrName]\n      if (!geomAttrBuffer) {\n        gl.disableVertexAttribArray(location)\n        continue\n      }\n\n      const geomAttrDesc = genDataTypeDesc(gl, geomAttrBuffer.dataType)\n\n      const stride = geomAttrDesc.dimension * geomAttrDesc.elementSize\n      const offset =\n        geomAttrBuffer.offset != undefined\n          ? geomAttrBuffer.offset * geomAttrDesc.dimension * geomAttrDesc.elementSize\n          : 0\n      const normalized = geomAttrBuffer.normalized == true\n      const instanced = shaderAttrDesc.instanced\n\n      gl.enableVertexAttribArray(location)\n      gl.bindBuffer(gl.ARRAY_BUFFER, geomAttrBuffer.buffer)\n      gl.vertexAttribPointer(location, geomAttrDesc.dimension, geomAttrDesc.dataType, normalized, stride, offset)\n\n      if (gl.vertexAttribDivisor) {\n        if (instanced == true) {\n          gl.vertexAttribDivisor(location, 1) // This makes it instanced\n        } else {\n          gl.vertexAttribDivisor(location, 0) // This makes it not-instanced\n        }\n      }\n\n      // console.log(\"Binding :\" + attrName + \" to attr:\" + location + \" count:\" + geomAttrBuffer.count + \" dimension:\" + dimension  + \" stride:\" + stride  + \" offset:\" + offset + \" normalized:\" + normalized + \" instanced:\" + instanced);\n    }\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n\n    return true\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {\n    const gl = this.__gl\n    for (const attrName in this.__shaderAttrs) {\n      const shaderAttrDesc = this.__shaderAttrs[attrName]\n      const location = shaderAttrDesc.location\n      if (location == -1) {\n        gl.enableVertexAttribArray(location)\n      }\n      if (shaderAttrDesc.instanced) {\n        gl.vertexAttribDivisor(location, 0) // This makes it not-instanced\n      }\n      // console.log(\"Binding :\" + attrName + \" to attr:\" + location + \" count:\" + geomAttrBuffer.count + \" dimension:\" + dimension  + \" stride:\" + stride  + \" offset:\" + offset + \" normalized:\" + normalized + \" instanced:\" + instanced);\n    }\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {}\n}\n\n/** Class representing vertex array objects (VAO) geom shader binding.\n * @private\n */\nclass VAOGeomShaderBinding {\n  /**\n   * Create VAO geom shader binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} shaderAttrs - The shaderAttrs value.\n   * @param {any} geomAttrBuffers - The geomAttrBuffers value.\n   * @param {any} indexBuffer - The indexBuffer value.\n   */\n  constructor(gl, shaderAttrs, geomAttrBuffers, indexBuffer) {\n    this.__gl = gl\n    this.__vao = gl.createVertexArray()\n    gl.bindVertexArray(this.__vao)\n\n    for (const attrName in shaderAttrs) {\n      if (attrName == 'instancedIds') continue\n\n      const shaderAttrDesc = shaderAttrs[attrName]\n      const location = shaderAttrDesc.location\n      if (location == -1) continue\n      let geomAttrBuffer = geomAttrBuffers[attrName]\n      if (!geomAttrBuffer) {\n        if (attrName.endsWith('Next')) {\n          geomAttrBuffer = geomAttrBuffers[attrName.substring(0, attrName.length - 4)]\n          shaderAttrDesc.offset = 1\n        }\n\n        if (!geomAttrBuffer) {\n          // console.warn(\"geomAttrBuffer missing:\" + attrName + \" location:\" + location);\n          gl.disableVertexAttribArray(location)\n          continue\n        }\n      }\n\n      const geomAttrDesc = genDataTypeDesc(gl, geomAttrBuffer.dataType)\n\n      const stride = geomAttrDesc.dimension * geomAttrDesc.elementSize\n      const offset =\n        shaderAttrDesc.offset != undefined\n          ? shaderAttrDesc.offset * geomAttrDesc.dimension * geomAttrDesc.elementSize\n          : 0\n      const normalized = geomAttrBuffer.normalized == true\n      const instanced = shaderAttrDesc.instanced\n\n      gl.enableVertexAttribArray(location)\n      gl.bindBuffer(gl.ARRAY_BUFFER, geomAttrBuffer.buffer)\n      gl.vertexAttribPointer(location, geomAttrDesc.dimension, geomAttrDesc.dataType, normalized, stride, offset)\n\n      if (gl.vertexAttribDivisor) {\n        if (instanced == true) {\n          gl.vertexAttribDivisor(location, 1) // This makes it instanced\n        } else {\n          gl.vertexAttribDivisor(location, 0) // This makes it not-instanced\n        }\n      }\n      // console.log(\"Binding :\" + attrName + \" to attr:\" + location + \" count:\" + geomAttrBuffer.count + \" dimension:\" + dimension  + \" stride:\" + stride  + \" offset:\" + offset + \" normalized:\" + normalized + \" instanced:\" + instanced);\n    }\n\n    // gl.bindVertexArray(null)\n\n    this.__indexBuffer = indexBuffer\n    if (this.__indexBuffer) this.__gl.bindBuffer(this.__gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n  }\n\n  /**\n   * The bind method.\n   * @param {any} renderstate - The render state.\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    this.__gl.bindVertexArray(this.__vao)\n    if (this.__indexBuffer) this.__gl.bindBuffer(this.__gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n    return true\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {\n    const gl = this.__gl\n    gl.bindVertexArray(null)\n    if (this.__indexBuffer) gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    this.__gl.deleteVertexArray(this.__vao)\n    if (this.__indexBuffer) this.__gl.deleteBuffer(this.__indexBuffe)\n  }\n}\n\nfunction generateShaderGeomBinding(gl, shaderAttrs, geomAttrBuffers, indexBuffer) {\n  if (gl.createVertexArray == null) {\n    return new GeomShaderBinding(gl, shaderAttrs, geomAttrBuffers, indexBuffer)\n  } else {\n    return new VAOGeomShaderBinding(gl, shaderAttrs, geomAttrBuffers, indexBuffer)\n  }\n}\n\nexport { generateShaderGeomBinding, genDataTypeDesc }\n","import { GLTexture2D } from './GLTexture2D.js'\nimport { UnpackHDRShader } from './Shaders/UnpackHDRShader.js'\nimport { GLFbo } from './GLFbo.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\n\n/** Class representing a GL high dynamic range (HDR) image.\n * @extends GLTexture2D\n * @private\n */\nclass GLHDRImage extends GLTexture2D {\n  /**\n   * Create a GL HDR image.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {VLHImage} hdrImage - The HDR image.\n   */\n  constructor(gl, hdrImage) {\n    super(gl)\n\n    this.__hdrImage = hdrImage\n    this.__hdrImage.setMetadata('gltexture', this)\n    const loadImage = () => {\n      this.__unpackHDRImage(this.__hdrImage.getParams())\n    }\n    this.__hdrImage.on('updated', loadImage)\n    if (this.__hdrImage.isLoaded()) {\n      loadImage()\n    } else {\n      this.__hdrImage.on('loaded', loadImage)\n    }\n  }\n\n  /**\n   * Returns the `BaseImage` of the GL Texture\n   *\n   * @return {BaseImage} - The return value.\n   */\n  getImage() {\n    return this.__hdrImage\n  }\n\n  /**\n   * The __unpackHDRImage method.\n   * @param {object} hdrImageParams - The HDR image parameters.\n   * @private\n   */\n  __unpackHDRImage(hdrImageParams) {\n    const gl = this.__gl\n\n    const ldr = hdrImageParams.data.ldr\n    const cdm = hdrImageParams.data.cdm\n\n    if (!this.__fbo) {\n      // Note: iOS devices create FLOAT Fbox.\n      // If we want better quality, we could unpack the texture in JavaScript.\n      this.configure({\n        format: 'RGBA',\n        type: 'FLOAT',\n        width: ldr.width,\n        height: ldr.height,\n        filter: 'LINEAR',\n        wrap: 'CLAMP_TO_EDGE',\n      })\n      this.__fbo = new GLFbo(gl, this)\n      this.__fbo.setClearColor([0, 0, 0, 0])\n\n      this.__srcLDRTex = new GLTexture2D(gl, {\n        format: 'RGB',\n        type: 'UNSIGNED_BYTE',\n        width: ldr.width,\n        height: ldr.height,\n        filter: 'NEAREST',\n        mipMapped: false,\n        wrap: 'CLAMP_TO_EDGE',\n        data: ldr,\n      })\n      this.__srcCDMTex = new GLTexture2D(gl, {\n        format: gl.name == 'webgl2' ? 'RED' : 'ALPHA',\n        type: 'UNSIGNED_BYTE',\n        width: ldr.width /* 8*/,\n        height: ldr.height /* 8*/,\n        filter: 'NEAREST',\n        mipMapped: false,\n        wrap: 'CLAMP_TO_EDGE',\n        data: cdm,\n      })\n\n      this.__unpackHDRShader = new UnpackHDRShader(gl)\n      const shaderComp = this.__unpackHDRShader.compileForTarget('GLHDRImage')\n      this.__shaderBinding = generateShaderGeomBinding(gl, shaderComp.attrs, gl.__quadattrbuffers, gl.__quadIndexBuffer)\n    } else {\n      this.__srcLDRTex.bufferData(ldr)\n      this.__srcCDMTex.bufferData(cdm)\n    }\n\n    this.__fbo.bindAndClear()\n\n    const renderstate = {}\n    this.__unpackHDRShader.bind(renderstate, 'GLHDRImage')\n    this.__shaderBinding.bind(renderstate)\n\n    const unifs = renderstate.unifs\n    this.__srcLDRTex.bindToUniform(renderstate, unifs.ldrSampler)\n    this.__srcCDMTex.bindToUniform(renderstate, unifs.cdmSampler)\n\n    gl.uniform4fv(unifs.srcRegion.location, [0, 0, 1, 1])\n    gl.drawQuad()\n\n    // // Debug a block of pixels.\n    // console.log(this.__hdrImage.getName());\n    // gl.finish();\n    // let numPixels = 4;\n    // let pixels = new Float32Array(4 * numPixels);\n    // gl.readPixels(ldr.width / 4, ldr.height/4, numPixels, 1, gl.RGBA, gl.FLOAT, pixels);\n    // console.log(pixels);\n    // gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.__fbo.unbind()\n\n    // if (!this.__hdrImage.isStream()) {\n    //     this.__fbo.destroy();\n    //     this.__srcLDRTex.destroy();\n    //     this.__srcCDMTex.destroy();\n    //     this.__fbo = null;\n    //     this.__srcLDRTex = null;\n    //     this.__srcCDMTex = null;\n    // }\n\n    this.emit('updated', {})\n  }\n\n  /**\n   * The bindToUniform method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @param {object} bindings - The bindings value.\n   * @return {boolean} - The return value.\n   */\n  bindToUniform(renderstate, unif, bindings) {\n    return super.bindToUniform(renderstate, unif, bindings)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n    if (this.__fbo) {\n      this.__fbo.destroy()\n      this.__srcLDRTex.destroy()\n      this.__srcCDMTex.destroy()\n    }\n    if (this.__unpackHDRShader) this.__unpackHDRShader.destroy()\n    if (this.__shaderBinding) this.__shaderBinding.destroy()\n\n    this.__hdrImage.loaded.disconnectScope(this)\n    this.__hdrImage.updated.disconnectScope(this)\n  }\n}\n\nexport { GLHDRImage }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './PreComputeBRDF.frag'\nimport vert from './PreComputeBRDF.vert'\n\n/** Shader for convolving Environment maps.\n * @extends GLShader\n * @private\n */\nclass PreComputeBRDFShader extends GLShader {\n  /**\n   * Create a GL renderer.\n   * @param {WebGLRenderingContext} gl - The options value.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { PreComputeBRDFShader }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './ConvolveIrradiance.frag'\nimport vert from './ConvolveIrradiance.vert'\n\n/** Shader for convolving Environment maps.\n * @extends GLShader\n * @private\n */\nclass ConvolveIrradianceShader extends GLShader {\n  /**\n   * Create a GL renderer.\n   * @param {WebGLRenderingContext} gl - The options value.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { ConvolveIrradianceShader }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './ConvolveSpecular.vert'\nimport frag from './ConvolveSpecular.frag'\n\n/** Shader for convolving Environment maps.\n * @extends GLShader\n * @private\n */\nclass ConvolveSpecularShader extends GLShader {\n  /**\n   * Create a GL renderer.\n   * @param {WebGLRenderingContext} gl - The options value.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { ConvolveSpecularShader }\n","import { EventEmitter } from '../Utilities/index'\nimport { SystemDesc } from '../SystemDesc'\nimport { PreComputeBRDFShader } from './Shaders/PreComputeBRDFShader.js'\nimport { ConvolveIrradianceShader } from './Shaders/ConvolveIrradianceShader.js'\nimport { ConvolveSpecularShader } from './Shaders/ConvolveSpecularShader.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\n\n/** Class representing a GL probe.\n * @private\n */\nclass GLProbe extends EventEmitter {\n  /**\n   * Create a GL probe.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {string} name - The name value.\n   */\n  constructor(gl, name) {\n    super()\n    this.__gl = gl\n    this.maxFragmentShaderTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n    if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n\n    this.textureType = 1 // Default 2d 8 bit texture image texture.\n    this.textureDesc = [0, 0, 0, 0] // To be populated by derived classes.\n\n    this.__convolved = false\n    this.__fbos = []\n  }\n\n  /**\n   * The convolveProbe method.\n   * @param {any} srcGLTex - The srcGLTex value.\n   */\n  convolveProbe(srcGLTex) {\n    const gl = this.__gl\n\n    const renderstate = { shaderopts: { directives: ['#define ENABLE_ES3', '#define ENABLE_FLOAT_TEXTURES'] } }\n\n    // Note: in testing we are running on the Google SwiftShader emulated GPU.\n    if (SystemDesc.deviceCategory == 'Low') {\n      renderstate.shaderopts.directives.push('#define SAMPLE_DELTA 0.1')\n      renderstate.shaderopts.directives.push('#define SAMPLE_COUNT 64u')\n    } else if (SystemDesc.deviceCategory == 'Medium') {\n      renderstate.shaderopts.directives.push('#define SAMPLE_DELTA 0.08')\n      renderstate.shaderopts.directives.push('#define SAMPLE_COUNT 256u')\n    } else {\n      renderstate.shaderopts.directives.push('#define SAMPLE_DELTA 0.025')\n      renderstate.shaderopts.directives.push('#define SAMPLE_COUNT 1024u')\n    }\n\n    this.brdfLUTTexture = gl.createTexture()\n\n    // pre-allocate enough memory for the LUT texture.\n    gl.bindTexture(gl.TEXTURE_2D, this.brdfLUTTexture)\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RG16F, 512, 512, 0, gl.RG, gl.FLOAT, null)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n\n    const brdfShader = new PreComputeBRDFShader(gl)\n    const brdfShaderComp = brdfShader.compileForTarget('GLProbe', renderstate.shaderopts)\n    const brdfShaderBinding = generateShaderGeomBinding(\n      gl,\n      brdfShaderComp.attrs,\n      gl.__quadattrbuffers,\n      gl.__quadIndexBuffer\n    )\n\n    const brdfFboId = gl.createFramebuffer()\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, brdfFboId)\n    gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.brdfLUTTexture, 0)\n\n    brdfShader.bind(renderstate)\n    brdfShaderBinding.bind(renderstate)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    gl.viewport(0, 0, 512, 512)\n    gl.drawQuad()\n\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n    gl.deleteFramebuffer(brdfFboId)\n\n    brdfShader.unbind(renderstate)\n    brdfShader.destroy()\n\n    // ////////////////////////////////////////////\n    // ConvolveIrradianceShader Shader\n\n    {\n      const convolveIrradianceShader = new ConvolveIrradianceShader(gl)\n      const convolveIrradianceShaderComp = convolveIrradianceShader.compileForTarget('GLProbe', renderstate.shaderopts)\n      const convolveIrradianceShaderBinding = generateShaderGeomBinding(\n        gl,\n        convolveIrradianceShaderComp.attrs,\n        gl.__quadattrbuffers,\n        gl.__quadIndexBuffer\n      )\n\n      convolveIrradianceShader.bind(renderstate, 'GLProbe')\n      convolveIrradianceShaderBinding.bind(renderstate)\n      const unifs = renderstate.unifs\n\n      srcGLTex.bindToUniform(renderstate, unifs.envMap)\n\n      // ////////////////////////////////////////////\n      // Irradiance Cube\n      const size = 64\n      this.irradianceCubeTex = gl.createTexture()\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.irradianceCubeTex)\n\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE)\n\n      // Resize all the faces first.\n      for (let i = 0; i < 6; i++) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGBA32F, size, size, 0, gl.RGBA, gl.FLOAT, null)\n      }\n\n      // Attach one face of cube map\n      const irradianceFboId = gl.createFramebuffer()\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, irradianceFboId)\n\n      for (let i = 0; i < 6; ++i) {\n        gl.uniform1i(unifs.faceId.location, i)\n        gl.framebufferTexture2D(\n          gl.DRAW_FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0,\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n          this.irradianceCubeTex,\n          0\n        )\n        gl.viewport(0, 0, size, size) // Match the viewport to the texture size\n        gl.clearColor(1, 0, 0, 1)\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n        gl.drawQuad()\n      }\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n      gl.deleteFramebuffer(irradianceFboId)\n\n      // Note: without the mipmaps, te cube sampling seems a big broken.\n      // No colors.\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP)\n    }\n\n    // ////////////////////////////////////////////\n    // Specular Cube Pyramid\n    {\n      const convolverShader = new ConvolveSpecularShader(gl)\n      const covolverShaderComp = convolverShader.compileForTarget('GLProbe', renderstate.shaderopts)\n      const covolverShaderBinding = generateShaderGeomBinding(\n        gl,\n        covolverShaderComp.attrs,\n        gl.__quadattrbuffers,\n        gl.__quadIndexBuffer\n      )\n\n      convolverShader.bind(renderstate, 'GLProbe')\n      covolverShaderBinding.bind(renderstate)\n      const unifs = renderstate.unifs\n\n      srcGLTex.bindToUniform(renderstate, unifs.envMap)\n\n      this.specularCubetex = gl.createTexture()\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.specularCubetex)\n\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n      gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE)\n\n      // Resize all the faces first.\n      const size = 256\n      for (let i = 0; i < 6; i++) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, gl.RGBA32F, size, size, 0, gl.RGBA, gl.FLOAT, null)\n      }\n      gl.generateMipmap(gl.TEXTURE_CUBE_MAP)\n      // gl.enable(gl.TEXTURE_CUBE_MAP_SEAMLESS) // not supported in webgl\n\n      const maxMipLevels = 5\n      for (let mip = 0; mip < maxMipLevels; ++mip) {\n        // resize framebuffer according to mip-level size.\n        const mipWidth = size * Math.pow(0.5, mip)\n        const mipHeight = size * Math.pow(0.5, mip)\n\n        // Attach one face of cube map\n        const fboId = gl.createFramebuffer()\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, fboId)\n        gl.viewport(0, 0, mipWidth, mipHeight) // Match the viewport to the texture size\n\n        const roughness = mip / (maxMipLevels - 1)\n        gl.uniform1f(unifs.roughness.location, roughness)\n        for (let i = 0; i < 6; ++i) {\n          gl.uniform1i(unifs.faceId.location, i)\n          gl.framebufferTexture2D(\n            gl.DRAW_FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n            this.specularCubetex,\n            mip\n          )\n          gl.drawQuad()\n        }\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n        gl.deleteFramebuffer(fboId)\n      }\n\n      convolverShader.destroy()\n    }\n\n    this.__convolved = true\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @return {boolean} - Returns true if the Probe was successfully bound.\n   */\n  bind(renderstate) {\n    const gl = this.__gl\n    const { irradianceMap, prefilterMap, brdfLUT, envMapFlags } = renderstate.unifs\n\n    if (!this.__convolved) {\n      // By default, all the texture units are bound to unit:0\n      // So if a shader contains cube maps, and they are left on unit 0\n      // and also the shader contains regular textures, and they are also left on unit 0\n      // then we get errors saying:\n      // GL_INVALID_OPERATION: Two textures of different types use the same sampler location.\n      // So bind to an unused texture unit...\n      if (irradianceMap) {\n        gl.uniform1i(irradianceMap.location, this.maxFragmentShaderTextureUnits - 1)\n      }\n      if (prefilterMap) {\n        gl.uniform1i(prefilterMap.location, this.maxFragmentShaderTextureUnits - 1)\n      }\n      if (envMapFlags) {\n        gl.uniform1i(envMapFlags.location, -1)\n      }\n      return false\n    }\n\n    // Note: a cube map can never be bound to texture unit 0.\n    // This is because if any other samplers are left unbound\n    // (e.g. a diffuse sampler left unbound because no diffuse texture is assigned)\n    // then the texture unit binding defaults to 0.\n    // If the cube map is then bound to unit 0, then we get the error message:\n    // GL_INVALID_OPERATION: Two textures of different types use the same sampler location.\n    // Ths simple workaround here is to bind the BRDF Lut first, which is a TEXTURE_2D, and the cube maps\n    // to other units:(1 & 2).\n    // This error started occuring when we moved PBR binding to the shader instead of in the renderer.\n    // See: StandardSurfaceShader.bind\n    if (brdfLUT) {\n      const unit = renderstate.boundTextures++\n      gl.activeTexture(this.__gl.TEXTURE0 + unit)\n      gl.bindTexture(gl.TEXTURE_2D, this.brdfLUTTexture)\n      gl.uniform1i(brdfLUT.location, unit)\n    }\n    if (irradianceMap) {\n      const unit = renderstate.boundTextures++\n      const texId = this.__gl.TEXTURE0 + unit\n      gl.activeTexture(texId)\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.irradianceCubeTex)\n      gl.uniform1i(irradianceMap.location, unit)\n    }\n    if (prefilterMap) {\n      const unit = renderstate.boundTextures++\n      const texId = this.__gl.TEXTURE0 + unit\n      gl.activeTexture(texId)\n      gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.specularCubetex)\n      gl.uniform1i(prefilterMap.location, unit)\n    }\n    if (envMapFlags) {\n      gl.uniform1i(envMapFlags.location, 0)\n    }\n    return true\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    // super.destroy()\n  }\n}\n\nexport { GLProbe }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './EnvMap.frag'\nimport vert from './EnvMap.vert'\nclass EnvMapShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { EnvMapShader }\n","import { GLProbe } from './GLProbe.js'\nimport { GLHDRImage } from './GLHDRImage.js'\nimport { EnvMapShader } from './Shaders/EnvMapShader.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\n\n/** Class representing a GL environment map.\n * @extends GLProbe\n * @private\n */\nclass GLEnvMap extends GLProbe {\n  /**\n   * Create a GL env map.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {EnvMap} envMap - The environment map.\n   */\n  constructor(renderer, envMap) {\n    super(renderer.gl, 'EnvMap')\n    this.__renderer = renderer\n    this.__envMap = envMap\n    this.__backgroundFocus = 0.0\n\n    if (this.__envMap.isLoaded()) {\n      this.init()\n    } else {\n      this.__envMap.once('loaded', (event) => {\n        this.init()\n      })\n    }\n  }\n\n  /**\n   * @private\n   */\n  init() {\n    const gl = this.__renderer.gl\n    if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n\n    this.__srcGLTex = new GLHDRImage(gl, this.__envMap)\n    this.__envMapShader = new EnvMapShader(gl)\n\n    const envMapShaderComp = this.__envMapShader.compileForTarget('GLEnvMap')\n    this.__envMapShaderBinding = generateShaderGeomBinding(\n      gl,\n      envMapShaderComp.attrs,\n      gl.__quadattrbuffers,\n      gl.__quadIndexBuffer\n    )\n\n    //\n    const headlightParam = this.__envMap.getParameter('HeadLightMode')\n\n    const updateHeadlightModeFlag = () => {\n      const ENVMAP_FLAG_HEADLIGHT = 1 // 1<<0;\n      if (headlightParam.getValue()) {\n        this.textureDesc[3] |= ENVMAP_FLAG_HEADLIGHT\n      } else {\n        this.textureDesc[3] &= ~ENVMAP_FLAG_HEADLIGHT\n      }\n    }\n    updateHeadlightModeFlag()\n    headlightParam.on('valueChanged', () => {\n      updateHeadlightModeFlag()\n      this.emit('updated')\n    })\n\n    this.convolveProbe(this.__srcGLTex)\n\n    this.emit('updated')\n  }\n\n  /**\n   * The getEnvMap method.\n   * @return {EnvMap} - The return value.\n   */\n  getEnvMap() {\n    return this.__envMap\n  }\n\n  /**\n   * The getBackgroundFocus method.\n   * @return {number} - The return value.\n   */\n  getBackgroundFocus() {\n    return this.__backgroundFocus\n  }\n\n  /**\n   * The setBackgroundFocus method.\n   * @param {number} val - The val param.\n   */\n  setBackgroundFocus(val) {\n    this.__backgroundFocus = val\n    this.__renderer.requestRedraw()\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    if (this.__envMap.isLoaded()) {\n      const gl = this.__gl\n      const debug = false\n      if (debug) {\n        const screenQuad = gl.screenQuad\n        screenQuad.bindShader(renderstate)\n        const debugId = 2\n        switch (debugId) {\n          case 0:\n            screenQuad.draw(renderstate, this.__srcGLTex.__srcLDRTex)\n            break\n          case 1:\n            screenQuad.draw(renderstate, this.__srcGLTex.__srcCDMTex)\n            break\n          case 2:\n            screenQuad.draw(renderstate, this.__srcGLTex)\n            break\n          case 3:\n            screenQuad.draw(renderstate, this.__lodPyramid)\n            break\n          case 4:\n            screenQuad.draw(renderstate, this.__fbos[0].getColorTexture())\n            break\n          case 5:\n            screenQuad.draw(renderstate, this)\n            break\n        }\n      } else {\n        // /////////////////\n        this.__envMapShader.bind(renderstate, 'GLEnvMap')\n        const unifs = renderstate.unifs\n\n        const { envMap, focus, exposure } = renderstate.unifs\n        if (envMap) {\n          this.__srcGLTex.bindToUniform(renderstate, envMap)\n        }\n        if (focus) gl.uniform1f(focus.location, this.__backgroundFocus)\n        if (exposure) gl.uniform1f(exposure.location, renderstate.exposure)\n\n        this.__envMapShaderBinding.bind(renderstate)\n        gl.depthMask(false)\n\n        renderstate.bindViewports(unifs, () => {\n          gl.drawQuad()\n        })\n      }\n    }\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n    this.__srcGLTex.destroy()\n  }\n}\n\nexport { GLEnvMap }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './ScreenQuad.frag'\nimport vert from './ScreenQuad.vert'\n\nclass ScreenQuadShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { ScreenQuadShader }\n","import { AttrValue } from '../Math/index'\nimport { ScreenQuadShader } from './Shaders/ScreenQuadShader.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\n\n/** Class representing a GL screen quad.\n * @private\n */\nclass GLScreenQuad {\n  /**\n   * Create a GL screen quad.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    this.__gl = gl\n\n    this.__pos = [0.0, 0.0]\n    this.__size = [1.0, 1.0]\n    this.flipY = true\n    this.__glshader = new ScreenQuadShader(gl)\n\n    if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n\n    const shaderComp = this.__glshader.compileForTarget('GLScreenQuad')\n    this.__quadBinding = generateShaderGeomBinding(gl, shaderComp.attrs, gl.__quadattrbuffers, gl.__quadIndexBuffer)\n\n    this.ready = true\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {GLTexture2D} texture - The texture param.\n   * @param {Vec2} pos - The pos value.\n   * @param {Vec2} size - The size value.\n   */\n  bind(renderstate, texture, pos = undefined, size = undefined) {\n    const unifs = renderstate.unifs\n    if (texture) {\n      texture.bindToUniform(renderstate, renderstate.unifs.image)\n    }\n\n    const gl = this.__gl\n    {\n      const unif = unifs.pos\n      if (unif) {\n        gl.uniform2fv(unif.location, pos ? (pos instanceof AttrValue ? pos.asArray() : pos) : this.__pos)\n      }\n    }\n    {\n      const unif = unifs.size\n      if (unif) {\n        gl.uniform2fv(unif.location, size ? (size instanceof AttrValue ? size.asArray() : size) : this.__size)\n      }\n    }\n    // if ('flipY' in unifs)\n    //     gl.uniform1i(unifs.flipY.location, this.flipY ? 1 : 0);\n\n    // if ('textureDim' in unifs)\n    //     gl.uniform2fv(unifs.textureDim.location, [texture.width, texture.height]);\n\n    this.__quadBinding.bind(renderstate)\n  }\n\n  /**\n   * The bindShader method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bindShader(renderstate) {\n    return this.__glshader.bind(renderstate, 'GLScreenQuad')\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {GLTexture2D} texture - The texture value.\n   * @param {Vec2} pos - The pos value.\n   * @param {Vec2} size - The size value.\n   */\n  draw(renderstate, texture, pos = undefined, size = undefined) {\n    this.bind(renderstate, texture, pos, size)\n\n    this.__gl.drawQuad()\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {}\n}\n\nexport { GLScreenQuad }\n","import { RefCounted } from '../../SceneTree/index'\nimport { generateShaderGeomBinding } from './GeomShaderBinding.js'\n\n/** Class representing a GL geom.\n * @private\n */\nclass GLGeom extends RefCounted {\n  /**\n   * Create a GL geom.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {BaseGeom} geom - A geometry object\n   */\n  constructor(gl, geom) {\n    super()\n    this.__gl = gl\n    this.__geom = geom\n\n    this.__glattrbuffers = {}\n    this.__shaderBindings = {}\n    this.buffersDirty = true\n\n    const geomDataChanged = (opts) => {\n      this.dirtyBuffers(opts)\n    }\n    this.__geom.on('geomDataChanged', geomDataChanged)\n\n    const geomDataTopologyChanged = (opts) => {\n      this.clearBuffers()\n      this.dirtyBuffers(opts)\n    }\n    this.__geom.on('geomDataTopologyChanged', geomDataTopologyChanged)\n  }\n\n  /**\n   * Returns the owned Geometry object\n   * @return {BaseGeom} - The geometry object.\n   */\n  getGeom() {\n    return this.__geom\n  }\n\n  // /////////////////////////////////////\n  // Buffers\n\n  /**\n   * The dirtyBuffers method.\n   * @param {object} opts - options passed when geomDataChanged is emitted. (Currently ony used by the FreehandLines tool)\n   */\n  dirtyBuffers(opts) {\n    this.genBufferOpts = opts\n    this.buffersDirty = true\n    this.emit('updated')\n  }\n\n  /**\n   * The genBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  genBuffers(renderstate) {}\n\n  /**\n   * The updateBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  updateBuffers(renderstate) {\n    this.genBuffers(renderstate)\n    this.buffersDirty = false\n  }\n\n  // /////////////////////////////////////\n  // Binding\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {boolean} - returns false if the binding failed.\n   */\n  bind(renderstate) {\n    if (this.__destroyed) throw new Error('Error binding a destroyed geom')\n\n    if (this.buffersDirty) this.updateBuffers()\n\n    let shaderBinding = this.__shaderBindings[renderstate.shaderkey]\n    if (!shaderBinding) {\n      const gl = this.__gl\n      shaderBinding = generateShaderGeomBinding(gl, renderstate.attrs, this.__glattrbuffers, this.__indexBuffer)\n      this.__shaderBindings[renderstate.shaderkey] = shaderBinding\n    }\n    shaderBinding.bind(renderstate)\n    return true\n  }\n\n  /**\n   * The unbind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  unbind(renderstate) {\n    // Unbinding a geom is important as it puts back some important\n    // GL state. (vertexAttribDivisor)\n    const shaderBinding = this.__shaderBindings[renderstate.shaderkey]\n    if (shaderBinding) {\n      shaderBinding.unbind(renderstate)\n    }\n  }\n\n  // /////////////////////////////////////\n  // Drawing\n  // Draw an item to screen.\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    throw new Error('Not implemented. Implement this method in a derived class.')\n  }\n\n  /**\n   * The drawInstanced method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} instanceCount - The instanceCount param.\n   */\n  drawInstanced(renderstate, instanceCount) {\n    throw new Error('Not implemented. Implement this method in a derived class.')\n  }\n\n  /**\n   * The bindAndDraw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindAndDraw(renderstate) {\n    this.bind(renderstate)\n    this.draw(renderstate)\n  }\n\n  /**\n   * The clearBuffers method.\n   */\n  clearBuffers() {\n    const gl = this.__gl\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in this.__glattrbuffers) {\n      const glbuffer = this.__glattrbuffers[attrName]\n      if (glbuffer.shared) continue /* This buffer is shared between geoms. do not destroy */\n      gl.deleteBuffer(glbuffer.buffer)\n    }\n    this.__glattrbuffers = {}\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderkey in this.__shaderBindings) {\n      const shaderBinding = this.__shaderBindings[shaderkey]\n      shaderBinding.destroy()\n    }\n    this.__shaderBindings = {}\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    this.__geom.deleteMetadata('glgeom')\n\n    this.clearBuffers()\n\n    this.__destroyed = true\n\n    //  Note: PoTree listens to this event. If moved up into RefCounted, make sure it is still emitted.\n    this.emit('destructing', {})\n  }\n}\n\nexport { GLGeom }\n","import { GLGeom } from './GLGeom.js'\nimport '../../SceneTree/Geometry/Mesh.js'\n\n/** Class representing a GL mesh.\n * @extends GLGeom\n * @private\n */\nclass GLMesh extends GLGeom {\n  /**\n   * Create a GL mesh.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} mesh - The mesh value.\n   */\n  constructor(gl, mesh) {\n    super(gl, mesh)\n  }\n\n  // /////////////////////////////////////\n  // Buffers\n\n  /**\n   * The genBuffers method.\n   */\n  genBuffers() {\n    super.genBuffers()\n\n    const gl = this.__gl\n\n    const geomBuffers = this.__geom.genBuffers()\n    const indices = geomBuffers.indices\n    this.__numTriIndices = geomBuffers.indices.length\n    if (indices instanceof Uint8Array) this.__indexDataType = this.__gl.UNSIGNED_BYTE\n    if (indices instanceof Uint16Array) this.__indexDataType = this.__gl.UNSIGNED_SHORT\n    if (indices instanceof Uint32Array) this.__indexDataType = this.__gl.UNSIGNED_INT\n\n    this.__numVertices = this.__geom.getNumVertices()\n    this.__numTriangles = indices.length / 3\n    this.__numRenderVerts = geomBuffers.numRenderVerts\n\n    if (this.__indexBuffer) {\n      gl.deleteBuffer(this.__indexBuffer)\n    }\n\n    this.__indexBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, geomBuffers.indices, gl.STATIC_DRAW)\n\n    // Create some vertex attribute buffers\n    // const debugAttrValues = false;\n    // let maxIndex;\n    // if (debugAttrValues)\n    //   maxIndex = Math.max(...indices);\n\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      const attrData = geomBuffers.attrBuffers[attrName]\n\n      if (this.__glattrbuffers[attrName] && this.__glattrbuffers[attrName].buffer) {\n        gl.deleteBuffer(this.__glattrbuffers[attrName].buffer)\n      }\n\n      const attrBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ARRAY_BUFFER, attrBuffer)\n      gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n\n      this.__glattrbuffers[attrName] = {\n        buffer: attrBuffer,\n        dataType: attrData.dataType,\n        normalized: attrData.normalized,\n      }\n\n      if (attrName == 'textureCoords') this.__glattrbuffers['texCoords'] = this.__glattrbuffers['textureCoords']\n    }\n  }\n\n  /**\n   * The updateBuffers method.\n   * @param {object} opts - The options object.\n   */\n  updateBuffers(opts) {\n    const gl = this.__gl\n\n    if (this.__numVertices != this.__geom.getNumVertices()) {\n      this.genBuffers()\n      return\n    }\n\n    const geomBuffers = this.__geom.genBuffers({ includeIndices: false })\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      const attrData = geomBuffers.attrBuffers[attrName]\n      const glattr = this.__glattrbuffers[attrName]\n      gl.bindBuffer(gl.ARRAY_BUFFER, glattr.buffer)\n      gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n    }\n    this.buffersDirty = false\n  }\n\n  /**\n   * The clearBuffers method.\n   */\n  clearBuffers() {\n    const gl = this.__gl\n    gl.deleteBuffer(this.__indexBuffer)\n    this.__indexBuffer = null\n\n    super.clearBuffers()\n  }\n\n  // ////////////////////////////////\n  // Wireframes\n\n  /**\n   * The generateWireframesVAO method.\n   * @return {any} - The return value.\n   */\n  generateWireframesVAO() {\n    if (!this.__vao) return false\n\n    if (!this.__geom.edgeVerts) this.__geom.genTopologyInfo()\n\n    // Generate the wireframes VAO.\n    // It can share buffers with the regular VAO, but provide a different index buffer.\n    if (this.__wireframesVao) this.__ext.deleteVertexArrayOES(this.__wireframesVao)\n    this.__wireframesVao = this.__ext.createVertexArrayOES()\n    this.__ext.bindVertexArrayOES(this.__wireframesVao)\n\n    const gl = this.__gl\n    const wireframeIndexBuffer = gl.createBuffer()\n    const wireframeIndices = Uint32Array.from(this.__geom.edgeVerts)\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, wireframeIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, wireframeIndices, gl.STATIC_DRAW)\n\n    const positionsBuffer = this.__glattrbuffers['positions'].buffer\n    gl.enableVertexAttribArray(0)\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 3 * 4, 0)\n\n    this.__numWireIndices = wireframeIndices.length\n    this.__ext.bindVertexArrayOES(null) // Note: is this necessary?\n  }\n\n  /**\n   * The bindWireframeVAO method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bindWireframeVAO(renderstate) {\n    if (this.__wireframesVao == undefined) return false\n    this.__ext.bindVertexArrayOES(this.__wireframesVao)\n    return true\n  }\n\n  /**\n   * The unbindWireframeVAO method.\n   */\n  unbindWireframeVAO() {\n    this.__ext.bindVertexArrayOES(null) // Note: is this necessary?\n  }\n\n  /**\n   * Draw an item to screen.\n   */\n  drawWireframe() {\n    if (this.__wireframesVao) this.__gl.drawElements(this.__gl.LINES, this.__numWireIndices, this.__gl.UNSIGNED_INT, 0)\n  }\n\n  // ////////////////////////////////\n  // Hard Edges\n\n  /**\n   * The generateHardEdgesVAO method.\n   * @return {any} - The return value.\n   */\n  generateHardEdgesVAO() {\n    if (!this.__vao) return false\n\n    // generate the wireframes VAO.\n    // It can share buffers with the regular VAO, but provide a different index buffer.\n    if (this.__hardEdgesVao) this.__ext.deleteVertexArrayOES(this.__hardEdgesVao)\n    this.__hardEdgesVao = this.__ext.createVertexArrayOES()\n    this.__ext.bindVertexArrayOES(this.__hardEdgesVao)\n\n    const gl = this.__gl\n    const hardEdgeIndexBuffer = gl.createBuffer()\n    const hardEdgeIndices = this.__geom.computeHardEdgesIndices()\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, hardEdgeIndexBuffer)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, hardEdgeIndices, gl.STATIC_DRAW)\n\n    const positionsBuffer = this.__glattrbuffers['positions'].buffer\n    gl.enableVertexAttribArray(0)\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer)\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 3 * 4, 0)\n\n    this.__numEdgeIndices = hardEdgeIndices.length\n    this.__ext.bindVertexArrayOES(null) // Note: is this necessary?\n  }\n\n  /**\n   * The bindHardEdgesVAO method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bindHardEdgesVAO(renderstate) {\n    if (this.__hardEdgesVao == undefined) return false\n    this.__ext.bindVertexArrayOES(this.__hardEdgesVao)\n    return true\n  }\n\n  /**\n   * The unbindHardEdgesVAO method.\n   */\n  unbindHardEdgesVAO() {\n    this.__ext.bindVertexArrayOES(null) // Note: is this necessary?\n  }\n\n  /**\n   * Draw an item to screen.\n   */\n  drawHardEdges() {\n    if (this.__hardEdgesVao) this.__gl.drawElements(this.__gl.LINES, this.__numEdgeIndices, this.__gl.UNSIGNED_INT, 0)\n  }\n\n  // ////////////////////////////////\n  // Drawing Mesh Points.\n\n  /**\n   * The drawPoints method.\n   */\n  drawPoints() {\n    this.__gl.drawArrays(this.__gl.POINTS, 0, this.__geom.numVertices())\n  }\n\n  // ////////////////////////////////\n  // Regular Drawing.\n\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    this.__gl.drawElements(this.__gl.TRIANGLES, this.__numTriIndices, this.__indexDataType, 0)\n  }\n\n  /**\n   * The drawInstanced method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} instanceCount - The instanceCount value.\n   */\n  drawInstanced(renderstate, instanceCount) {\n    this.__gl.drawElementsInstanced(this.__gl.TRIANGLES, this.__numTriIndices, this.__indexDataType, 0, instanceCount)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n    const gl = this.__gl\n    gl.deleteBuffer(this.__indexBuffer)\n    this.__indexBuffer = undefined\n    // if (this.__wireframesVao)\n    //     gl.deleteVertexArray(this.__wireframesVao);\n    // if (this.__hardEdgesVao)\n    //     gl.deleteVertexArray(this.__hardEdgesVao);\n  }\n}\n\nexport { GLMesh }\n","import { SystemDesc } from '../SystemDesc.js'\nimport { Color } from '../Math/index'\nimport { Plane, ParameterOwner, BaseImage, NumberParameter, BaseTool } from '../SceneTree/index'\nimport { GLRenderTarget } from './GLRenderTarget.js'\nimport { GLBaseRenderer } from './GLBaseRenderer'\nimport { GLHDRImage } from './GLHDRImage.js'\nimport { GLTexture2D } from './GLTexture2D.js'\nimport { GLFbo } from './GLFbo.js'\nimport { GLMesh } from './Drawing/GLMesh.js'\n\nconst FRAMEBUFFER = {\n  MSAA_RENDERBUFFER: 0,\n  COLORBUFFER: 1,\n  DEPTHBUFFER: 2,\n}\n\n/**\n * Class representing a GL base viewport.\n * @extends ParameterOwner\n * @private\n */\nclass GLBaseViewport extends ParameterOwner {\n  /**\n   * Create a GL base viewport.\n   * @param {GLRenderer} renderer - The renderer value.\n   */\n  constructor(renderer) {\n    super()\n    this.renderer = renderer\n    this.__renderer = renderer\n    this.__doubleClickTimeMSParam = this.addParameter(new NumberParameter('DoubleClickTimeMS', 200))\n    this.__fbo = undefined\n    // Since there is not multi touch on `PointerEvent`, we need to store pointers pressed.\n    this.__ongoingPointers = []\n    this.__backgroundColor = new Color(0.3, 0.3, 0.3, 1)\n\n    const gl = this.__renderer.gl\n\n    this.quad = new GLMesh(gl, new Plane(1, 1))\n\n    // //////////////////////////////////\n    // Setup Offscreen Render Targets\n    // Note: On low end devices, such as Oculus, blitting the multi-sampled depth buffer is throwing errors,\n    // and so we are simply disabling silhouettes on all low end devices now.\n    if (gl.name == 'webgl2') {\n      this.offscreenBuffer = new GLTexture2D(gl, {\n        type: 'UNSIGNED_BYTE',\n        format: 'RGBA',\n        filter: 'LINEAR',\n        width: 4,\n        height: 4,\n      })\n      this.depthTexture = new GLTexture2D(gl, {\n        type: gl.UNSIGNED_INT_24_8,\n        format: gl.DEPTH_STENCIL,\n        internalFormat: gl.name == 'webgl2' ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT,\n        filter: gl.NEAREST,\n        wrap: gl.CLAMP_TO_EDGE,\n        width: 4,\n        height: 4,\n      })\n      // this.offscreenBufferFbo = new GLFbo(gl, this.offscreenBuffer, true)\n      // this.offscreenBufferFbo.setClearColor(this.__backgroundColor.asArray())\n    }\n\n    this.highlightedGeomsBuffer = new GLTexture2D(gl, {\n      type: 'UNSIGNED_BYTE',\n      format: 'RGBA',\n      filter: 'NEAREST',\n      width: 4,\n      height: 4,\n    })\n    this.highlightedGeomsBufferFbo = new GLFbo(gl, this.highlightedGeomsBuffer, true)\n    this.highlightedGeomsBufferFbo.setClearColor([0, 0, 0, 0])\n\n    // //////////////////////////////////\n    // Setup Camera Manipulator\n    const sceneSet = () => {\n      const settings = renderer.getScene().settings\n      const bgColorParam = settings.getParameter('BackgroundColor')\n      const processBGValue = () => {\n        const value = bgColorParam.getValue()\n        if (value instanceof BaseImage) {\n          if (value.type === 'FLOAT') {\n            this.__backgroundTexture = value\n            this.__backgroundGLTexture = new GLHDRImage(gl, value)\n          } else {\n            this.__backgroundTexture = value\n            this.__backgroundGLTexture = new GLTexture2D(gl, value)\n          }\n        } else if (value instanceof Color) {\n          if (this.__backgroundGLTexture) {\n            this.__backgroundGLTexture.destroy()\n            this.__backgroundGLTexture = undefined\n            this.__backgroundTexture = undefined\n          }\n          this.__backgroundColor = value\n\n          if (this.offscreenBufferFbo) {\n            this.offscreenBufferFbo.setClearColor(value.asArray())\n          }\n        } else {\n          console.warn('Invalid background:' + value)\n        }\n        this.emit('updated', {})\n      }\n      processBGValue()\n      bgColorParam.on('valueChanged', processBGValue)\n    }\n    if (this.__renderer.getScene()) {\n      sceneSet(this.__renderer.getScene())\n    } else {\n      this.__renderer.on('sceneSet', sceneSet)\n    }\n  }\n\n  /**\n   * The getRenderer method.\n   * @return {GLBaseRenderer} - The return value.\n   */\n  getRenderer() {\n    return this.__renderer\n  }\n\n  /**\n   * The getWidth method.\n   * @return {number} - The return value.\n   */\n  getWidth() {\n    return this.__width\n  }\n\n  /**\n   * The getHeight method.\n   * @return {number} - The return value.\n   */\n  getHeight() {\n    return this.__height\n  }\n\n  /**\n   * The getBackground method.\n   * @return {Color} - The return value.\n   */\n  getBackground() {\n    console.warn('Deprecated Function. Please access the Scene Settings object.')\n    const settings = this.__renderer.getScene().settings\n    const bgColorParam = settings.getParameter('BackgroundColor')\n    return bgColorParam.getValue()\n  }\n\n  /**\n   * The setBackground method.\n   * @param {Color} background - The background value.\n   */\n  setBackground(background) {\n    console.warn('Deprecated Function. Please access the Scene Settings object.')\n    const settings = this.__renderer.getScene().settings\n    const bgColorParam = settings.getParameter('BackgroundColor')\n    bgColorParam.setValue(background)\n    this.emit('updated', {})\n  }\n\n  /**\n   * The resize method.\n   * @param {number} canvasWidth - The canvasWidth value.\n   * @param {number} canvasHeight - The canvasHeight value.\n   */\n  resize(canvasWidth, canvasHeight) {\n    if (this.__canvasWidth == canvasWidth && this.__canvasHeight == canvasHeight) return\n    this.__canvasWidth = canvasWidth\n    this.__canvasHeight = canvasHeight\n    this.__width = canvasWidth\n    this.__height = canvasHeight\n    this.resizeRenderTargets(canvasWidth, canvasHeight)\n    this.emit('resized', { width: this.__width, height: this.__height })\n  }\n\n  /**\n   * Resize any offscreen render targets.\n   * > Note: Values ,ay not be the entire canvas with if multiple viewports exists.\n   * @param {number} width - The width used by this viewport.\n   * @param {number} height - The height  used by this viewport.\n   */\n  resizeRenderTargets(width, height) {\n    // Note: On low end devices, such as Oculus, blitting the multi-sampled depth buffer is throwing errors,\n    // and so we are simply disabling silhouettes on all low end devices now.\n    const gl = this.__renderer.gl\n    if (this.renderer.outlineThickness > 0 && gl.name == 'webgl2') {\n      if (this.fb) {\n        gl.deleteFramebuffer(this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n        gl.deleteFramebuffer(this.fb[FRAMEBUFFER.COLORBUFFER])\n        gl.deleteFramebuffer(this.fb[FRAMEBUFFER.DEPTHBUFFER])\n        if (this.colorRenderbuffer) gl.deleteRenderbuffer(this.colorRenderbuffer)\n        if (this.depthBuffer) gl.deleteRenderbuffer(this.depthBuffer)\n      }\n      // Create and bind the framebuffer\n      this.offscreenBuffer.resize(width, height)\n      this.depthTexture.resize(width, height)\n\n      this.fb = []\n      this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER] = gl.createFramebuffer()\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n      this.colorRenderbuffer = gl.createRenderbuffer()\n\n      // Create the color buffer\n      gl.bindRenderbuffer(gl.RENDERBUFFER, this.colorRenderbuffer)\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.RGBA8, width, height)\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.colorRenderbuffer)\n\n      this.depthBuffer = gl.createRenderbuffer()\n      gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer)\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, 4, gl.DEPTH24_STENCIL8, width, height)\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer)\n\n      // //////////////////////////////////\n      // COLORBUFFER\n      this.fb[FRAMEBUFFER.COLORBUFFER] = gl.createFramebuffer()\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb[FRAMEBUFFER.COLORBUFFER])\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.offscreenBuffer.glTex, 0)\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n      // //////////////////////////////////\n      // DEPTHBUFFER\n      // Create the depth texture that will be bitted to.\n      this.fb[FRAMEBUFFER.DEPTHBUFFER] = gl.createFramebuffer()\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb[FRAMEBUFFER.DEPTHBUFFER])\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.depthTexture.glTex, 0)\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n      const check = gl.checkFramebufferStatus(gl.name == 'webgl2' ? gl.DRAW_FRAMEBUFFER : gl.FRAMEBUFFER)\n      if (check !== gl.FRAMEBUFFER_COMPLETE) {\n        switch (check) {\n          case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            throw new Error(\n              'The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.'\n            )\n          case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            throw new Error('There is no attachment.')\n          case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            throw new Error('Height and width of the attachment are not the same.')\n          case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            throw new Error(\n              'The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.'\n            )\n          case 36061: // gl.GL_FRAMEBUFFER_UNSUPPORTED:\n            throw new Error('The framebuffer is unsupported')\n          default:\n            throw new Error('Incomplete Frambuffer')\n        }\n      }\n    }\n    if (this.highlightedGeomsBuffer) {\n      this.highlightedGeomsBuffer.resize(width, height)\n    }\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate = {}) {\n    const gl = this.__renderer.gl\n\n    const prevRendertarget = renderstate.boundRendertarget\n\n    if (this.renderer.outlineThickness > 0 && gl.name == 'webgl2') {\n      if (!this.fb) this.resizeRenderTargets(this.__width, this.__height)\n\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n      renderstate.boundRendertarget = this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER]\n    } else {\n      // Make sure the default fbo is bound\n      // Note: Sometimes an Fbo is left bound\n      // from another op(like resizing, populating etc..)\n      // We need to unbind here to ensure rendering is to the\n      // right target.\n      if (!renderstate.boundRendertarget) gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n    }\n    gl.viewport(0, 0, this.__width, this.__height)\n    gl.clearColor(...this.__backgroundColor.asArray())\n    // Note: in Chrome's macOS the alpha channel causes strange\n    // compositing issues. Here where we disable the alpha channel\n    // in the color mask which addresses the issues on MacOS.\n    // To see the artifacts, pass 'true' as the 4th parameter, and\n    // open a simple testing scene containing a grid. Moving the\n    // camera causes a ghosting effect to be left behind.\n    gl.colorMask(true, true, true, false)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n    gl.enable(gl.DEPTH_TEST)\n\n    this.__renderer.drawScene(renderstate)\n\n    this.drawHighlights(renderstate)\n\n    // //////////////////////////////////\n    // Post processing (only in webgl2)\n    if (this.fb) {\n      // \"blit\" the scene into the color buffer\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fb[FRAMEBUFFER.COLORBUFFER])\n      gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 0.0])\n\n      // Blit to the offscreenBuffer texture that we then render to screen.\n      gl.blitFramebuffer(\n        0,\n        0,\n        this.__width,\n        this.__height,\n        0,\n        0,\n        this.__width,\n        this.__height,\n        gl.COLOR_BUFFER_BIT,\n        gl.LINEAR\n      )\n\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, prevRendertarget)\n      renderstate.boundRendertarget = prevRendertarget\n      gl.viewport(0, 0, this.__width, this.__height)\n\n      gl.disable(gl.DEPTH_TEST)\n      gl.screenQuad.bindShader(renderstate)\n      gl.screenQuad.draw(renderstate, this.offscreenBuffer)\n    }\n  }\n\n  /**\n   * Draws the Silhouettes around geometries.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @private\n   */\n  drawSilhouettes(renderstate) {\n    // We cannot render silhouettes in iOS because EXT_frag_depth is not supported\n    // and without it, we cannot draw lines over the top of geometries.\n    // Note: On low end devices, such as Oculus, blitting the multi-sampled depth buffer is throwing errors,\n    // and so we are simply disabling silhouettes on all low end devices now.\n    const gl = this.__renderer.gl\n    if (this.renderer.outlineThickness == 0 || gl.name != 'webgl2' || !this.fb) return\n\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fb[FRAMEBUFFER.DEPTHBUFFER])\n    gl.clearBufferfv(gl.COLOR, 0, [1, 1, 1, 1])\n\n    gl.blitFramebuffer(\n      0,\n      0,\n      this.__width,\n      this.__height,\n      0,\n      0,\n      this.__width,\n      this.__height,\n      gl.DEPTH_BUFFER_BIT,\n      gl.NEAREST\n    )\n    // Rebind the MSAA RenderBuffer.\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER])\n    renderstate.boundRendertarget = this.fb[FRAMEBUFFER.MSAA_RENDERBUFFER]\n    gl.viewport(0, 0, this.__width, this.__height)\n\n    if (this.renderer.outlineThickness == 0) return\n\n    // ////////////////////////////////////\n    //\n    gl.enable(gl.BLEND)\n    gl.blendEquation(gl.FUNC_ADD)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // For add\n    gl.disable(gl.DEPTH_TEST)\n    gl.depthMask(false)\n\n    this.renderer.silhouetteShader.bind(renderstate)\n\n    const unifs = renderstate.unifs\n\n    this.depthTexture.bindToUniform(renderstate, unifs.depthTexture)\n\n    gl.uniform2f(unifs.screenSize.location, this.__width, this.__height)\n    gl.uniform1f(unifs.outlineThickness.location, this.renderer.outlineThickness)\n    gl.uniform4f(unifs.outlineColor.location, ...this.renderer.outlineColor.asArray())\n    gl.uniform1f(unifs.outlineSensitivity.location, this.renderer.outlineSensitivity)\n    gl.uniform1f(unifs.outlineDepthBias.location, this.renderer.outlineDepthBias)\n\n    gl.uniform2f(unifs.depthRange.location, renderstate.depthRange[0], renderstate.depthRange[1])\n\n    this.quad.bindAndDraw(renderstate)\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthMask(true)\n  }\n\n  /**\n   * Draws the highlights around geometries.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @private\n   */\n  drawHighlights(renderstate) {\n    if (this.highlightedGeomsBufferFbo) {\n      const gl = this.__renderer.gl\n\n      this.highlightedGeomsBufferFbo.bindForWriting(renderstate)\n      this.highlightedGeomsBufferFbo.clear()\n\n      gl.disable(gl.BLEND)\n      gl.enable(gl.DEPTH_TEST)\n      gl.depthFunc(gl.LESS)\n      gl.depthMask(true)\n      renderstate.glShader = null // clear any bound shaders.\n\n      this.__renderer.drawHighlightedGeoms(renderstate)\n\n      // Unbind and restore the bound fbo\n      this.highlightedGeomsBufferFbo.unbindForWriting(renderstate)\n\n      // Now render the outlines to the entire screen.\n      gl.viewport(0, 0, this.__width, this.__height)\n\n      // Turn this on to debug the highlight data buffer.\n      const debugHighlightBuffer = false\n      if (debugHighlightBuffer) {\n        gl.screenQuad.bindShader(renderstate)\n        this.highlightedGeomsBuffer.bindToUniform(renderstate, renderstate.unifs.image)\n        gl.screenQuad.draw(renderstate)\n      } else {\n        this.renderer.highlightsShader.bind(renderstate)\n        gl.enable(gl.BLEND)\n        gl.blendEquation(gl.FUNC_ADD)\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // For add\n\n        const unifs = renderstate.unifs\n        gl.uniform1f(unifs.outlineThickness.location, this.renderer.highlightOutlineThickness)\n        this.highlightedGeomsBuffer.bindToUniform(renderstate, unifs.highlightDataTexture)\n        gl.uniform2f(unifs.highlightDataTextureSize.location, renderstate.region[2], renderstate.region[3])\n        this.quad.bindAndDraw(renderstate)\n\n        gl.disable(gl.BLEND)\n      }\n    }\n  }\n\n  // ///////////////////////////\n  // Events\n\n  /**\n   * The getManipulator method.\n   * @return {BaseTool} - The return value.\n   */\n  getManipulator() {\n    return this.manipulator\n  }\n\n  /**\n   * Sets the tool that will receive mouse, touch and keyboard events from the viewport.\n   * @param {BaseTool} tool - The manipulator value.\n   */\n  setManipulator(tool) {\n    if (this.manipulator != tool) {\n      if (this.manipulator && this.manipulator.deactivateTool) {\n        this.manipulator.deactivateTool()\n      }\n\n      this.manipulator = tool\n\n      if (this.manipulator.activateTool) {\n        this.manipulator.activateTool()\n      }\n    }\n  }\n\n  /**\n   * Handler of the `pointerdown` event fired when the pointer device is initially pressed.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerDown(event) {\n    console.warn('@GLBaseViewport#onPointerDown - Implement me!')\n  }\n\n  /**\n   * Handler of the `pointerup` event fired when the pointer device is finally released.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerUp(event) {\n    console.warn('@GLBaseViewport#onPointerUp - Implement me!')\n  }\n\n  /**\n   * Handler of the `pointermove` event fired when the pointer device changes coordinates, and the pointer has not been cancelled\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerMove(event) {\n    console.warn('@GLBaseViewport#onPointerMove - Implement me!')\n  }\n\n  /**\n   * Invoked when the mouse pointer is moved into this viewport.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerEnter(event) {\n    console.warn('@GLBaseViewport#onPointerEnter - Implement me!')\n  }\n\n  /**\n   * Invoked when the mouse pointer is moved out of this viewport.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerLeave(event) {\n    console.warn('@GLBaseViewport#onPointerLeave - Implement me!')\n  }\n\n  /**\n   * Invoked when the mouse pointer is moved out of an element.\n   * @param {MouseEvent} event - The event that occurs.\n   */\n  onMouseLeave(event) {}\n\n  /**\n   * Invoked when the user is pressing a key on the keyboard.\n   * @param {KeyboardEvent} event - The event that occurs.\n   */\n  onKeyDown(event) {}\n\n  /**\n   * Causes an event to occur  when the user releases a key on the keyboard.\n   * @param {KeyboardEvent} event - The event that occurs.\n   */\n  onKeyUp(event) {}\n\n  /**\n   *\n   * @param {id} pointerId\n   * @return {number} - index result of the find.\n   */\n  _getOngoingPointerIndexById(pointerId) {\n    return this.__ongoingPointers.findIndex((pointer) => pointer.pointerId === pointerId)\n  }\n}\n\nexport { GLBaseViewport, FRAMEBUFFER }\n","/* eslint-disable guard-for-in */\nimport { Vec2, Vec3, Ray, Mat4 } from '../Math/index'\nimport { Camera } from '../SceneTree/index'\nimport { GLBaseViewport } from './GLBaseViewport.js'\nimport { GLFbo } from './GLFbo.js'\nimport { GLTexture2D } from './GLTexture2D.js'\nimport { POINTER_TYPES } from '../Utilities/EnumUtils'\nimport { BaseTool } from '../SceneTree/index'\nimport { CameraManipulator } from '../SceneTree/index'\n\n/**\n * Class representing a GL viewport.\n *\n * **Events**\n * * **resized:** Emitted when the GLViewport resizes\n * * **updated:** Emitted when the GLViewport needs updating. The Renderer will trigger a redraw when this occurs.\n * * **viewChanged:** Emitted when the view changes. Usually caused by the camera moving.\n * * **pointerDoublePressed:** Emitted when the user double clicks with the mouse, or double taps in the viewport.\n * * **pointerDown:** Emitted when the user presses a pointer\n * * **pointerUp:** Emitted when the user releases a pointer\n * * **pointerOverGeom:** Emitted when the pointer is moved over a geometry\n * * **pointerLeaveGeom:** Emitted when the pointer is moved off a geometry\n * * **pointerMove:** Emitted when the pointer is moved\n * * **pointerEnter:** Emitted when the pointer is moved into thg viewport\n * * **pointerLeave:** Emitted when the mouse leaves the viewport.\n * * **keyDown:** Emitted when the user presses a key on the keyboard\n * * **keyUp:** Emitted when the user releases a key on the keyboard\n * * **touchCancel:** Emitted when the user cancels a touch interaction\n *\n * @extends GLBaseViewport\n */\nclass GLViewport extends GLBaseViewport {\n  /**\n   * Create a GL viewport.\n   * @param {GLRenderer} renderer - The renderer value.\n   * @param {string} name - The name value.\n   * @param {number} width - The width of the viewport\n   * @param {number} height - The height of the viewport\n   */\n  constructor(renderer, name, width, height) {\n    super(renderer)\n    this.__name = name\n    this.__projectionMatrix = new Mat4()\n    this.__frustumDim = new Vec2()\n\n    // Layout coords, x:[0..1], y:[0..1]\n    this.__bl = new Vec2(0, 0)\n    this.__tr = new Vec2(1, 1)\n\n    this.__prevDownTime = 0\n\n    // //////////////////////////////////\n    // Setup GeomData Fbo\n    this.__geomDataBuffer = undefined\n    this.__geomDataBufferSizeFactor = 1\n    this.__geomDataBufferFbo = undefined\n    this.debugGeomShader = false\n\n    const gl = this.__renderer.gl\n    this.__geomDataBuffer = new GLTexture2D(gl, {\n      type: renderer.__floatGeomBuffer ? 'FLOAT' : 'UNSIGNED_BYTE',\n      format: 'RGBA',\n      filter: 'NEAREST',\n      width: width <= 1 ? 1 : Math.floor(width / this.__geomDataBufferSizeFactor),\n      height: height <= 1 ? 1 : Math.floor(height / this.__geomDataBufferSizeFactor),\n    })\n    this.__geomDataBufferFbo = new GLFbo(gl, this.__geomDataBuffer, true)\n    this.__geomDataBufferFbo.setClearColor([0, 0, 0, 0])\n\n    // //////////////////////////////////\n    // Setup Camera Manipulator\n\n    // Each user has a separate camera, and so the default\n    //  camera cannot be part of the scene.\n    this.setCamera(new Camera('DefaultCamera'))\n    this.setManipulator(new CameraManipulator({ renderer }))\n\n    this.resize(width, height)\n  }\n\n  /**\n   * The getBl method.\n   * @return {number} - The return value.\n   */\n  getBl() {\n    return this.__bl\n  }\n\n  /**\n   * The setBl method.\n   * @param {number} bl - The bl value.\n   */\n  setBl(bl) {\n    this.__bl = bl\n    this.resize(this.__canvasWidth, this.__canvasHeight)\n  }\n\n  /**\n   * The getTr method.\n   * @return {number} - The return value.\n   */\n  getTr() {\n    return this.__tr\n  }\n\n  /**\n   * The setTr method.\n   * @param {number} tr - The tr value.\n   */\n  setTr(tr) {\n    this.__tr = tr\n    this.resize(this.__canvasWidth, this.__canvasHeight)\n  }\n\n  /**\n   * The getPosX method.\n   * @return {number} - The return value.\n   */\n  getPosX() {\n    return this.__x\n  }\n\n  /**\n   * The getPosY method.\n   * @return {number} - The return value.\n   */\n  getPosY() {\n    return this.__y\n  }\n\n  /**\n   * Dynamically resizes viewport.\n   *\n   * @param {number} canvasWidth - The canvasWidth value.\n   * @param {number} canvasHeight - The canvasHeight value.\n   */\n  resize(canvasWidth, canvasHeight) {\n    if (this.__canvasWidth == canvasWidth && this.__canvasHeight == canvasHeight) return\n    this.__canvasWidth = canvasWidth\n    this.__canvasHeight = canvasHeight\n    this.__x = canvasWidth * this.__bl.x\n    this.__y = canvasWidth * this.__bl.y\n    this.__width = canvasWidth * this.__tr.x - canvasWidth * this.__bl.x\n    this.__height = canvasHeight * this.__tr.y - canvasHeight * this.__bl.y\n    this.region = [this.__x, this.__y, this.__width, this.__height]\n\n    this.resizeRenderTargets(this.__width, this.__height)\n    if (this.__camera) this.__updateProjectionMatrix()\n    this.emit('resized', { width: this.__width, height: this.__height })\n  }\n\n  /**\n   * Resize any offscreen render targets.\n   * > Note: Values ,ay not be the entire canvas with if multiple viewports exists.\n   * @param {number} width - The width used by this viewport.\n   * @param {number} height - The height  used by this viewport.\n   */\n  resizeRenderTargets(width, height) {\n    super.resizeRenderTargets(width, height)\n\n    if (this.__geomDataBufferFbo) {\n      this.__geomDataBuffer.resize(\n        Math.floor(this.__width / this.__geomDataBufferSizeFactor),\n        Math.floor(this.__height / this.__geomDataBufferSizeFactor)\n      )\n      this.renderGeomDataFbo()\n    }\n  }\n\n  /**\n   * Returns current camera object\n   *\n   * @return {Camera} - The return value.\n   */\n  getCamera() {\n    return this.__camera\n  }\n\n  /**\n   * Sets current camera object\n   *\n   * @param {Camera} camera - The camera value.\n   */\n  setCamera(camera) {\n    this.__camera = camera\n    this.depthRange = [this.__camera.getNear(), this.__camera.getFar()]\n    const globalXfoParam = camera.getParameter('GlobalXfo')\n    const getCameraParams = () => {\n      this.__cameraXfo = globalXfoParam.getValue()\n      this.__cameraMat = this.__cameraXfo.toMat4()\n      this.__viewMat = this.__cameraMat.inverse()\n    }\n    getCameraParams()\n    globalXfoParam.on('valueChanged', () => {\n      getCameraParams()\n      this.invalidateGeomDataBuffer()\n      this.emit('updated')\n      this.emit('viewChanged', {\n        interfaceType: 'CameraAndPointer',\n        viewXfo: this.__cameraXfo,\n        focalDistance: this.__camera.getFocalDistance(),\n        fieldOfView: this.__camera.getFov(),\n      })\n    })\n    this.__camera.on('projectionParamChanged', () => {\n      this.__updateProjectionMatrix()\n      this.depthRange = [this.__camera.getNear(), this.__camera.getFar()]\n      this.emit('updated')\n    })\n\n    this.__updateProjectionMatrix()\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  __updateProjectionMatrix() {\n    const aspect = this.__width / this.__height\n    this.__camera.updateProjectionMatrix(this.__projectionMatrix, aspect)\n\n    const frustumH = Math.tan(this.__camera.getFov() / 2.0) * this.__camera.getNear() * 2.0\n    const frustumW = frustumH * aspect\n    this.__frustumDim.set(frustumW, frustumH)\n  }\n\n  /**\n   * The getProjectionMatrix method.\n   * @return {Mat4} - The return projection matrix for the viewport.\n   */\n  getProjectionMatrix() {\n    return this.__projectionMatrix\n  }\n\n  /**\n   * The getProjectionMatrix method.\n   * @return {Mat4} - The return projection matrix for the viewport.\n   */\n  getViewMatrix() {\n    return this.__viewMat\n  }\n\n  /**\n   * The setActive method.\n   * @param {boolean} state - The state value.\n   */\n  setActive(state) {\n    if (state) activeViewport = this\n    else activeViewport = undefined\n  }\n\n  /**\n   * Calculates a new camera position that frames all the items passed in `treeItems` array, moving\n   * the camera to a point where we can see all of them.\n   * > See Camera.frameView\n   * @param {array} treeItems - The array of TreeItem.\n   */\n  frameView(treeItems) {\n    if (this.__width > 0 && this.__height > 0) {\n      this.__camera.frameView(this, treeItems)\n    } else {\n      // Sometimes thew renderer is not yet setup, so here we\n      // wait till the window is resized and try again.\n      this.once('resized', () => this.frameView())\n    }\n  }\n\n  /**\n   * Compute a ray into the scene based on a mouse coordinate.\n   * @param {Vec2} screenPos - The screen position.\n   * @return {Ray} - The return value.\n   */\n  calcRayFromScreenPos(screenPos) {\n    // Convert the raster coordinates to screen space ([0,{w|h}] -> [-1,1]\n    // - Note: The raster vertical is inverted wrt OGL screenspace Y\n\n    const topy = this.__canvasHeight * (1.0 - this.__tr.y)\n    let sx = (screenPos.x - this.__x) / this.__width\n    let sy = (screenPos.y - topy) / this.__height\n\n    sx = sx * 2.0 - 1.0\n    sy = sy * 2.0 - 1.0\n\n    // Transform the origin from camera local to world space\n    const cameraMat = this.__cameraMat\n\n    const projInv = this.__projectionMatrix.inverse()\n    if (projInv == null)\n      // Sometimes this happens, not sure why...\n      return null\n\n    let rayStart\n    let rayDirection\n    if (this.__camera.isOrthographic()) {\n      // Orthographic projections.\n      const cameraSpaceOffset = projInv.transformVec3(new Vec3(sx, -sy, -1.0))\n      cameraSpaceOffset.z = 0\n      rayStart = cameraMat.transformVec3(cameraSpaceOffset)\n      rayDirection = new Vec3(0.0, 0.0, -1.0)\n    } else {\n      rayStart = cameraMat.translation\n      // Get the projected window coordinate on the near plane\n      // See http://www.songho.ca/opengl/gl_projectionmatrix.html\n      // for details.\n      rayDirection = projInv.transformVec3(new Vec3(sx, -sy, -1.0))\n    }\n    // And from projection space to camera local.\n    // - We nuke the translation part since we're transforming a vector.\n    rayDirection = cameraMat.rotateVec3(rayDirection).normalize()\n    return new Ray(rayStart, rayDirection)\n  }\n\n  // //////////////////////////\n  // GeomData\n\n  /**\n   * Renders the scene geometry to the viewport's geom data buffer\n   * in preparation for mouse picking.\n   */\n  renderGeomDataFbo() {\n    if (this.__geomDataBufferFbo) {\n      const renderstate = {}\n      this.__initRenderState(renderstate)\n\n      // Note: GLLinesPass binds a new Fbo, but shares this ones depth buffer.\n      renderstate.geomDataFbo = this.__geomDataBufferFbo\n\n      this.__geomDataBufferFbo.bindAndClear(renderstate)\n\n      this.__renderer.drawSceneGeomData(renderstate)\n      this.__geomDataBufferInvalid = false\n      this.__geomDataBufferFbo.unbind()\n    }\n  }\n\n  /**\n   * The invalidateGeomDataBuffer method.\n   */\n  invalidateGeomDataBuffer() {\n    this.__geomDataBufferInvalid = true\n  }\n\n  /**\n   * The getGeomDataAtPos method.\n   * @param {Vec2} screenPos - The screen position.\n   * @param {Ray} pointerRay - The pointerRay value.\n   * @return {object} - The return value.\n   */\n  getGeomDataAtPos(screenPos, pointerRay) {\n    if (this.__geomDataBufferFbo) {\n      if (this.__geomDataBufferInvalid) {\n        this.renderGeomDataFbo()\n        this.__screenPos = null\n      }\n\n      // Cache the intersection tests result so subsequent queries will return the same value.\n      // Note: every new mouse event will generate a new pointerPos value, so the cache\n      // is only valid for a given event propagation, and for that exact pointerPos value.\n      if (screenPos === this.__screenPos) {\n        return this.__intersectionData\n      }\n      this.__screenPos = screenPos\n      this.__intersectionData = null\n\n      const gl = this.__renderer.gl\n      gl.finish()\n\n      this.__geomDataBufferFbo.bindForReading()\n\n      // const logGeomData = ()=>{\n      //     console.log(\"logGeomData :[\" + this.__geomDataBuffer.width +\",\"+ this.__geomDataBuffer.height + \"]\")\n      //     const pixels = new Float32Array(this.__geomDataBuffer.width * 4);\n      //     for(let i=0; i<this.__geomDataBuffer.height; i++){\n      //       gl.readPixels(0, i, this.__geomDataBuffer.width, 1, gl.RGBA, gl.FLOAT, pixels);\n      //         for(let j=0; j<this.__geomDataBuffer.width; j++){\n      //             const geomData = pixels.subarray(j*4, (j+1)*4);\n      //             if (geomData[0] != 0 || geomData[1] != 0){\n      //                 console.log(j, i)\n      //                 break; // Only log the left border pixels.\n      //             }\n      //         }\n      //       // console.log(pixels);\n      //     }\n      // }\n      // logGeomData();\n      // console.log(\"getGeomDataAtPos:\", screenPos.toString(), screenPos.x,this.__width)\n\n      // Allocate a 1 pixel block and read from the GeomData buffer.\n      const bufferWidth = this.__geomDataBufferFbo.width\n      const bufferHeight = this.__geomDataBufferFbo.height\n      const x = Math.floor(screenPos.x * (bufferWidth / this.__width))\n      const y = Math.floor(screenPos.y * (bufferHeight / this.__height))\n      // const x = Math.floor(screenPos.x / this.__geomDataBufferSizeFactor)\n      // const y = Math.floor(screenPos.y / this.__geomDataBufferSizeFactor)\n      let passId\n      let geomData\n      if (this.__renderer.__floatGeomBuffer) {\n        geomData = new Float32Array(4)\n        gl.readPixels(x, bufferHeight - y - 1, 1, 1, gl.RGBA, gl.FLOAT, geomData)\n        if (geomData[3] == 0) return undefined\n\n        // Mask the pass id to be only the first 6 bits of the integer.\n        passId = Math.round(geomData[0]) & (64 - 1)\n      } else {\n        geomData = new Uint8Array(4)\n        gl.readPixels(x, bufferHeight - y - 1, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, geomData)\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n        if (geomData[0] == 0 && geomData[1] == 0) return undefined\n        passId = Math.floor(geomData[1] / 32)\n      }\n      this.__geomDataBufferFbo.unbind()\n      const pass = this.__renderer.getPass(passId)\n      if (!pass) {\n        console.warn('Geom data buffer returns invalid pass id:', passId)\n        return\n      }\n\n      const geomItemAndDist = pass.getGeomItemAndDist(geomData)\n\n      if (geomItemAndDist) {\n        if (!geomItemAndDist.geomItem.getSelectable()) return\n\n        if (!pointerRay) pointerRay = this.calcRayFromScreenPos(screenPos)\n        const intersectionPos = pointerRay.start.add(pointerRay.dir.scale(geomItemAndDist.dist))\n        this.__intersectionData = Object.assign(\n          {\n            screenPos,\n            pointerRay,\n            intersectionPos,\n            geomData,\n          },\n          geomItemAndDist\n        )\n      }\n\n      return this.__intersectionData\n    }\n  }\n\n  /**\n   * getGeomItemsInRect\n   * Gathers all the geoms renders in a given rectangle of the viewport.\n   * @param {Vec2} tl - The top left value of the rectangle.\n   * @param {Vec2} br - The bottom right corner of the rectangle.\n   * @return {Set} - The return value.\n   */\n  getGeomItemsInRect(tl, br) {\n    // TODO: Use a Math.Rect instead\n    if (this.__geomDataBufferFbo) {\n      const gl = this.__renderer.gl\n      gl.finish()\n      // Allocate a pixel block.\n      const bufferWidth = this.__geomDataBufferFbo.width\n      const bufferHeight = this.__geomDataBufferFbo.height\n      const widthFactor = bufferWidth / this.__width\n      const heightFactor = bufferHeight / this.__height\n      const tlX = Math.round(tl.x * widthFactor)\n      const tlY = Math.round(tl.y * heightFactor)\n      const brX = Math.round(br.x * widthFactor)\n      const brY = Math.round(br.y * heightFactor)\n\n      const rectBottom = Math.round(bufferHeight - brY)\n      const rectLeft = Math.round(tlX)\n      const rectWidth = Math.round(brX - tlX)\n      const rectHeight = Math.round(brY - tlY)\n      const numPixels = rectWidth * rectHeight\n\n      this.__geomDataBufferFbo.bindForReading()\n\n      let geomDatas\n      if (this.__renderer.__floatGeomBuffer) {\n        geomDatas = new Float32Array(4 * numPixels)\n        gl.readPixels(rectLeft, rectBottom, rectWidth, rectHeight, gl.RGBA, gl.FLOAT, geomDatas)\n      } else {\n        geomDatas = new Uint8Array(4 * numPixels)\n        gl.readPixels(rectLeft, rectBottom, rectWidth, rectHeight, gl.RGBA, gl.UNSIGNED_BYTE, geomDatas)\n      }\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n      const geomItems = new Set()\n      for (let i = 0; i < numPixels; i++) {\n        let passId\n        const geomData = geomDatas.subarray(i * 4, (i + 1) * 4)\n        if (this.__renderer.__floatGeomBuffer) {\n          if (geomData[3] == 0) continue\n          passId = Math.round(geomData[0])\n        } else {\n          if (geomData[0] == 0 && geomData[1] == 0) continue\n          passId = Math.floor(geomData[1] / 64)\n        }\n\n        const geomItemAndDist = this.__renderer.getPass(passId).getGeomItemAndDist(geomData)\n        if (geomItemAndDist) {\n          if (!geomItemAndDist.geomItem.getSelectable()) continue\n\n          geomItems.add(geomItemAndDist.geomItem)\n        }\n      }\n\n      return [...geomItems].filter((geomItem) => {\n        if (!geomItem.getSelectable()) return false\n\n        return true\n      })\n    }\n  }\n\n  // ///////////////////////////\n  // Events\n  /**\n   * Calculates the event coordinates relative to the viewport.\n   * There could be multiple viewports connected to the current renderer.\n   *\n   * @param {number} rendererX - The rendererX value\n   * @param {number} rendererY - The rendererY value\n   * @return {Vec2} - Returns a new Vec2.\n   * @private\n   */\n  __getPointerPos(rendererX, rendererY) {\n    return new Vec2(rendererX - this.getPosX(), rendererY - this.getPosY())\n  }\n\n  /**\n   * The getCapture method.\n   * @return {BaseItem} - The return value.\n   */\n  getCapture() {\n    return this.capturedItem\n  }\n\n  /**\n   * The releaseCapture method.\n   */\n  releaseCapture() {\n    this.capturedItem = null\n  }\n\n  /**\n   * Prepares pointer event by adding properties of the engine to it.\n   *\n   * @param {MouseEvent|TouchEvent} event - The event that occurs in the canvas\n   * @private\n   */\n  __preparePointerEvent(event) {\n    event.viewport = this\n\n    event.setCapture = (item) => {\n      this.capturedItem = item\n    }\n\n    event.getCapture = (item) => {\n      return this.capturedItem\n    }\n\n    event.releaseCapture = () => {\n      this.capturedItem = null\n    }\n  }\n\n  /**\n   * Handler of the `pointerdown` event fired when the pointer device is initially pressed.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerDown(event) {\n    this.__preparePointerEvent(event)\n\n    if (event.pointerType === POINTER_TYPES.mouse) {\n      event.pointerPos = this.__getPointerPos(event.rendererX, event.rendererY)\n\n      event.pointerRay = this.calcRayFromScreenPos(event.pointerPos)\n      event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n    } else if (event.pointerType === POINTER_TYPES.touch) {\n      if (event.touches.length == 1) {\n        const touch = event.touches[0]\n        event.pointerPos = this.__getPointerPos(touch.rendererX, touch.rendererY)\n\n        event.pointerRay = this.calcRayFromScreenPos(event.pointerPos)\n        event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n      }\n    }\n\n    // //////////////////////////////////////\n    // Double Tap\n    // First check for double tap handlers.\n    // If the manipulator or the viewport handle that\n    // then skip the 'pointerDown' event.\n    const downTime = Date.now()\n    if (downTime - this.__prevDownTime < this.__doubleClickTimeMSParam.getValue()) {\n      if (this.manipulator) {\n        this.manipulator.onPointerDoublePress(event)\n        if (!event.propagating) return\n      }\n      this.emit('pointerDoublePressed', event)\n      if (!event.propagating) return\n    } else {\n      this.__prevDownTime = downTime\n    }\n\n    // //////////////////////////////////////\n\n    if (this.capturedItem) {\n      this.capturedItem.onPointerDown(event)\n      return\n    }\n\n    if (event.intersectionData != undefined) {\n      event.intersectionData.geomItem.onPointerDown(event)\n      if (!event.propagating || this.capturedItem) return\n    }\n\n    this.emit('pointerDown', event)\n    if (!event.propagating || this.capturedItem) return\n\n    if (this.manipulator) {\n      this.manipulator.onPointerDown(event)\n\n      if (!event.propagating) return\n    }\n  }\n\n  /**\n   * Causes an event to occur when a user releases a mouse button over a element.\n   *\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerUp(event) {\n    this.__preparePointerEvent(event)\n\n    if (event.pointerType === POINTER_TYPES.mouse) {\n      event.pointerPos = this.__getPointerPos(event.rendererX, event.rendererY)\n      event.pointerRay = this.calcRayFromScreenPos(event.pointerPos)\n      event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n    } else if (event.pointerType === POINTER_TYPES.touch) {\n      if (event.touches.length == 0 && event.changedTouches.length == 1) {\n        const touch = event.changedTouches[0]\n        event.pointerPos = this.__getPointerPos(touch.rendererX, touch.rendererY)\n        event.pointerRay = this.calcRayFromScreenPos(event.pointerPos)\n        event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n      }\n    }\n\n    if (this.capturedItem) {\n      this.capturedItem.onPointerUp(event)\n      if (!event.propagating) return\n    }\n\n    if (event.intersectionData != undefined) {\n      event.intersectionData.geomItem.onPointerUp(event)\n      if (!event.propagating) return\n    }\n\n    this.emit('pointerUp', event)\n    if (!event.propagating) return\n\n    if (this.manipulator) {\n      this.manipulator.onPointerUp(event)\n\n      if (!event.propagating) return\n    }\n  }\n\n  /**\n   * Causes an event to occur when the pointer device is moving.\n   *\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerMove(event) {\n    this.__preparePointerEvent(event)\n\n    if (event.pointerType === POINTER_TYPES.mouse) {\n      const pointerPos = this.__getPointerPos(event.rendererX, event.rendererY)\n      event.pointerPos = pointerPos\n      event.pointerRay = this.calcRayFromScreenPos(pointerPos)\n    } else if (event.pointerType === POINTER_TYPES.touch) {\n      event.touchPos = []\n      event.touchRay = []\n      for (let index = 0; index < event.touches.length; index++) {\n        const touch = event.touches[index]\n        const touchPos = this.__getPointerPos(touch.rendererX, touch.rendererY)\n        event.touchPos[index] = touchPos\n        event.touchRay[index] = this.calcRayFromScreenPos(touchPos)\n      }\n\n      event.pointerPos = event.touchPos[0]\n      event.pointerRay = event.touchRay[0]\n    }\n\n    // Note: the Captured item might be a tool, which might not need to have\n    // the geom under the pointer. e.g. the CameraManipulator during a drag.\n    if (this.capturedItem) {\n      this.capturedItem.onPointerMove(event)\n      if (!event.propagating) return\n    }\n\n    event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n    if (event.intersectionData) {\n      if (event.intersectionData.geomItem != this.pointerOverItem) {\n        if (this.pointerOverItem) {\n          event.leftGeometry = this.pointerOverItem\n          this.pointerOverItem.onPointerLeave(event)\n\n          if (event.propagating) this.emit('pointerLeaveGeom', event)\n        }\n\n        this.pointerOverItem = event.intersectionData.geomItem\n        this.pointerOverItem.onPointerEnter(event)\n\n        if (!event.propagating) return\n\n        this.emit('pointerOverGeom', event)\n      }\n\n      event.intersectionData.geomItem.onPointerMove(event)\n      if (!event.propagating || this.capturedItem) return\n    } else if (this.pointerOverItem) {\n      event.leftGeometry = this.pointerOverItem\n      this.pointerOverItem.onPointerLeave(event)\n      this.pointerOverItem = null\n\n      if (!event.propagating) return\n\n      this.emit('pointerLeaveGeom', event)\n    }\n\n    this.emit('pointerMove', event)\n    if (!event.propagating) return\n\n    if (this.manipulator) {\n      this.manipulator.onPointerMove(event)\n      if (!event.propagating) return\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved into this viewport\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerEnter(event) {\n    this.__preparePointerEvent(event)\n    this.emit('pointerEnter', event)\n    if (!event.propagating) return\n\n    if (this.manipulator && this.manipulator.onPointerEnter) {\n      this.manipulator.onPointerEnter(event)\n      if (!event.propagating) return\n    }\n  }\n\n  /**\n   * Causes an event to occur when the mouse pointer is moved out of this viewport\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerLeave(event) {\n    this.__preparePointerEvent(event)\n    this.emit('pointerLeave', event)\n    if (!event.propagating) return\n\n    if (this.manipulator && this.manipulator.onPointerLeave) {\n      this.manipulator.onPointerLeave(event)\n      if (!event.propagating) return\n    }\n  }\n\n  /**\n   * Causes an event to occur when the user is pressing a key on the keyboard.\n   * @param {KeyboardEvent} event - The event that occurs.\n   */\n  onKeyDown(event) {\n    this.__preparePointerEvent(event)\n    if (this.manipulator) {\n      this.manipulator.onKeyDown(event)\n      if (!event.propagating) return\n    }\n    this.emit('keyDown', event)\n  }\n\n  /**\n   * Causes an event to occur  when the user releases a key on the keyboard.\n   * @param {KeyboardEvent} event - The event that occurs.\n   */\n  onKeyUp(event) {\n    this.__preparePointerEvent(event)\n    if (this.manipulator) {\n      this.manipulator.onKeyUp(event)\n      if (!event.propagating) return\n    }\n    this.emit('keyUp', event)\n  }\n\n  /**\n   * Causes an event to occur when the mouse wheel is rolled up or down over an element.\n   * @param {WheelEvent} event - The event that occurs.\n   */\n  onWheel(event) {\n    this.__preparePointerEvent(event)\n\n    event.pointerPos = this.__getPointerPos(event.rendererX, event.rendererY)\n    event.pointerRay = this.calcRayFromScreenPos(event.pointerPos)\n    event.intersectionData = this.getGeomDataAtPos(event.pointerPos, event.pointerRay)\n\n    if (event.intersectionData != undefined) {\n      event.intersectionData.geomItem.onWheel(event)\n      if (!event.propagating) return\n    }\n\n    if (this.manipulator) {\n      this.manipulator.onWheel(event)\n      return\n    }\n    this.emit('mouseWheel', event)\n  }\n\n  // Touch events\n\n  /**\n   * Causes an event to occur when the touch event gets interrupted.\n   * @param {TouchEvent} event - The event that occurs.\n   */\n  onTouchCancel(event) {\n    this.__preparePointerEvent(event)\n\n    if (this.capturedItem) {\n      this.capturedItem.onTouchCancel(event)\n      return\n    }\n\n    if (this.manipulator) {\n      this.manipulator.onTouchCancel(event)\n      return\n    }\n    this.emit('touchCancel', event)\n  }\n\n  // //////////////////////////\n  // Rendering\n\n  /**\n   * The __initRenderState method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @private\n   */\n  __initRenderState(renderstate) {\n    // console.log(this.__viewMat.toString())\n    renderstate.viewXfo = this.__cameraXfo\n    renderstate.viewScale = 1.0\n    renderstate.region = this.region\n    renderstate.cameraMatrix = this.__cameraMat\n    renderstate.depthRange = this.depthRange\n    renderstate.viewport = this\n    renderstate.viewports = [\n      {\n        region: this.region,\n        viewMatrix: this.__viewMat,\n        projectionMatrix: this.__projectionMatrix,\n        viewportFrustumSize: this.__frustumDim,\n        isOrthographic: this.__camera.isOrthographic(),\n        fovY: this.__camera.getFov(),\n      },\n    ]\n  }\n\n  /**\n   * The draw method.\n   */\n  draw(renderstate = {}) {\n    this.__initRenderState(renderstate)\n\n    super.draw(renderstate)\n\n    // Turn this on to debug the geom data buffer.\n    if (this.debugGeomShader) {\n      this.renderGeomDataFbo()\n      const gl = this.__renderer.gl\n      gl.screenQuad.bindShader(renderstate)\n      gl.screenQuad.draw(renderstate, this.__geomDataBuffer, new Vec2(0, 0), new Vec2(1, 1))\n    }\n    if (this.debugHighlightedGeomsBuffer) {\n      const gl = this.__renderer.gl\n      gl.screenQuad.bindShader(renderstate)\n      gl.screenQuad.draw(renderstate, this.highlightedGeomsBuffer, new Vec2(0, 0), new Vec2(1, 1))\n    }\n  }\n}\n\nexport { GLViewport }\n","import { Vec3, Quat, Xfo, Mat4 } from '../../Math/index'\nimport { TreeItem } from '../../SceneTree/index'\n\n/** Class representing a VR head.\n * @private\n */\nclass VRHead {\n  /**\n   * Create a VR head.\n   * @param {any} xrvp - The VR viewport.\n   * @param {any} stageTreeItem - The stageTreeItem value.\n   */\n  constructor(xrvp, stageTreeItem) {\n    this.__xrvp = xrvp\n    this.__treeItem = new TreeItem('VRHead')\n    stageTreeItem.addChild(this.__treeItem)\n\n    this.__mat4 = new Mat4()\n    this.__localXfo = new Xfo()\n  }\n\n  /**\n   * The Set wether the HMB is visible in rendering or not. Used in spectator rendering.\n   * @param {boolean} state - The visibility value.\n   */\n  setVisible(state) {\n    if (state && !this.hmdGeomItem) {\n      const assetItem = this.__xrvp.getAsset()\n      if (!assetItem) return\n      const hmdGeomItem = assetItem.getChildByName('HMD')\n      if (!hmdGeomItem) return\n      this.hmdGeomItem = hmdGeomItem.clone({ assetItem })\n      if (this.hmdGeomItem) {\n        this.hmdGeomItem.getParameter('LocalXfo').setValue(\n          new Xfo(\n            new Vec3(0, -0.035, -0.03),\n            new Quat({ setFromAxisAndAngle: [new Vec3(0, 1, 0), Math.PI] }),\n            new Vec3(0.001, 0.001, 0.001) // VRAsset units are in mm.\n          )\n        )\n        this.__treeItem.addChild(this.hmdGeomItem, false)\n      }\n    }\n    if (this.hmdGeomItem) {\n      this.hmdGeomItem.getParameter('Visible').setValue(state)\n    }\n  }\n\n  /**\n   * The update method.\n   * @param {any} pose - The pose value.\n   */\n  update(pose) {\n    // Old\n    // this.__mat4.setDataArray(pose.poseModelMatrix);\n\n    // New\n    this.__mat4.setDataArray(pose.transform.matrix)\n\n    this.__localXfo.fromMat4(this.__mat4)\n\n    // const pos = pose.transform.position;\n    // this.__localXfo.tr.set(pos.x, pos.y,pos.z);\n    // const ori = pose.transform.orientation;\n    // this.__localXfo.ori.set(ori.x, ori.y, ori.z, ori.x);\n\n    this.__treeItem.getParameter('LocalXfo').setValue(this.__localXfo)\n  }\n\n  /**\n   * The getTreeItem method.\n   * @return {any} - The return value.\n   */\n  getTreeItem() {\n    return this.__treeItem\n  }\n\n  /**\n   * The getXfo method.\n   * @return {Xfo} - The return value.\n   */\n  getXfo() {\n    return this.__localXfo\n  }\n}\n\nexport { VRHead }\n","import { SystemDesc } from '../../SystemDesc.js'\nimport { Vec3, Quat, Xfo, Mat4 } from '../../Math/index'\nimport { TreeItem } from '../../SceneTree/index'\n\n/** Class representing a VR controller. */\nclass VRController {\n  /**\n   * Create a VR controller.\n   * @param {any} xrvp - The Vr viewport.\n   * @param {any} inputSource - The input source.\n   * @param {any} id - The id value.\n   */\n  constructor(xrvp, inputSource, id) {\n    this.xrvp = xrvp\n    this.__inputSource = inputSource\n    this.id = id\n    this.buttonPressed = false\n\n    // /////////////////////////////////\n    // Xfo\n\n    this.__mat4 = new Mat4()\n    this.__xfo = new Xfo()\n\n    // this.setVisible(true);\n\n    this.__treeItem = new TreeItem('VRController:' + inputSource.handedness + id)\n    // Controller coordinate system\n    // X = Horizontal.\n    // Y = Up.\n    // Z = Towards handle base.\n\n    if (!SystemDesc.isMobileDevice) {\n      // A Vive or Oculus Controller\n      this.__tip = new TreeItem('Tip')\n      // Note: the tip of the controller need to be off\n      // the end of the controller. getGeomItemAtTip\n      // now searches a grid in that area and so we need to\n      // ensure that the grid does not touch the controller,\n      // else it will return the controller geom from\n      // the getGeomItemAtTip function\n      const tipXfo = new Xfo()\n      tipXfo.tr.set(0.0, -0.05, -0.13)\n      // Flip the tip around so +z is forwards.\n      // tipXfo.ori.setFromAxisAndAngle(new Vec3(0, 1, 0), Math.PI)\n      this.__tip.getParameter('LocalXfo').setValue(tipXfo)\n      this.__treeItem.addChild(this.__tip, false)\n      xrvp.getTreeItem().addChild(this.__treeItem)\n\n      this.__activeVolumeSize = 0.04\n\n      if (inputSource.targetRayMode == 'tracked-pointer') {\n        // Once we have an input profile, we can determine the XR Device in use.\n        switch (inputSource.profiles[0]) {\n          case 'htc-vive':\n            localStorage.setItem('ZeaEngine_XRDevice', 'Vive')\n            break\n          case 'oculus-touch':\n          case 'oculus-touch-v2':\n          case 'oculus-touch-v3':\n            localStorage.setItem('ZeaEngine_XRDevice', 'Oculus')\n            break\n          default:\n            break\n        }\n\n        //   // Use the fetchProfile method from the motionControllers library\n        //   // to find the appropriate glTF mesh path for this controller.\n        //   fetchProfile(inputSource, DEFAULT_PROFILES_PATH).then(({ profile, assetPath }) => {\n        //     // Typically if you wanted to animate the controllers in response\n        //     // to device inputs you'd create a new MotionController() instance\n        //     // here to handle the animation, but this sample will skip that\n        //     // and only display a static mesh for simplicity.\n        //     scene.inputRenderer.setControllerMesh(new Gltf2Node({ url: assetPath }), inputSource.handedness)\n        //   })\n        xrvp.loadHMDResources().then((assetItem) => {\n          if (!assetItem) return\n          const localXfo = new Xfo(\n            new Vec3(0, 0.0, 0.0),\n            new Quat({ setFromAxisAndAngle: [new Vec3(0, 1, 0), Math.PI] }),\n            new Vec3(0.001, 0.001, 0.001) // VRAsset units are in mm.\n          )\n          let srcControllerTree\n          if (inputSource.profiles[0] == 'htc-vive') {\n            srcControllerTree = assetItem.getChildByName('Controller')\n            localXfo.tr.set(0, -0.035, -0.085)\n          } else {\n            switch (inputSource.handedness) {\n              case 'left':\n                srcControllerTree = assetItem.getChildByName('LeftController')\n                localXfo.tr.set(0, -0.035, -0.085)\n                localXfo.sc.scaleInPlace(0.85)\n                break\n              case 'right':\n                srcControllerTree = assetItem.getChildByName('RightController')\n                localXfo.tr.set(0, -0.035, -0.085)\n                localXfo.sc.scaleInPlace(0.85)\n                break\n              case 'none':\n              case 'left-right':\n              case 'left-right-none':\n                srcControllerTree = assetItem.getChildByName('Controller')\n                break\n              default:\n                break\n            }\n          }\n          if (srcControllerTree) {\n            const controllerTree = srcControllerTree.clone({ assetItem })\n            controllerTree.getParameter('LocalXfo').setValue(localXfo)\n            this.__treeItem.addChild(controllerTree, false)\n          }\n        })\n      }\n    }\n\n    this.tick = 0\n  }\n\n  /**\n   * The getHandedness method.\n   * @return {any} - The return value.\n   */\n  getHandedness() {\n    return this.__inputSource.handedness\n  }\n\n  /**\n   * The getId method.\n   * @return {any} - The return value.\n   */\n  getId() {\n    return this.id\n  }\n\n  /**\n   * The getTreeItem method.\n   * @return {any} - The return value.\n   */\n  getTreeItem() {\n    return this.__treeItem\n  }\n\n  /**\n   * The getTipItem method.\n   * @return {any} - The return value.\n   */\n  getTipItem() {\n    return this.__tip\n  }\n\n  /**\n   * The getTipXfo method.\n   * @return {any} - The return value.\n   */\n  getTipXfo() {\n    return this.__tip.getParameter('GlobalXfo').getValue()\n  }\n\n  /**\n   * The getTouchPadValue method.\n   * @return {any} - The return value.\n   */\n  getTouchPadValue() {\n    return this.__touchpadValue\n  }\n\n  /**\n   * The isButtonPressed method.\n   * @return {boolean} - The return value.\n   */\n  isButtonPressed() {\n    return this.__buttonPressed\n  }\n\n  /**\n   * The getControllerStageLocalXfo method.\n   * @return {any} - The return value.\n   */\n  getControllerStageLocalXfo() {\n    return this.__xfo\n  }\n\n  /**\n   * The getControllerTipStageLocalXfo method.\n   * @return {any} - The return value.\n   */\n  getControllerTipStageLocalXfo() {\n    return this.__xfo.multiply(this.__tip.getParameter('LocalXfo').getValue())\n  }\n\n  // ////////////////////////////////\n\n  /**\n   * The updatePose method.\n   * @param {any} refSpace - The refSpace value.\n   * @param {any} xrFrame - The xrFrame value.\n   * @param {any} inputSource - The inputSource value.\n   * @param {any} event - The event object.\n   */\n  updatePose(refSpace, xrFrame, inputSource, event) {\n    const inputPose = xrFrame.getPose(inputSource.gripSpace, refSpace)\n\n    // We may not get a inputPose back in cases where the input source has lost\n    // tracking or does not know where it is relative to the given frame\n    // of reference.\n    if (!inputPose || !inputPose.transform) {\n      return\n    }\n\n    this.__mat4.setDataArray(inputPose.transform.matrix)\n    this.__xfo.fromMat4(this.__mat4)\n\n    // const pos = inputPose.transform.position;\n    // this.__xfo.tr.set(pos.x, pos.y,pos.z);\n    // const ori = inputPose.transform.orientation;\n    // this.__xfo.ori.set(ori.x, ori.y, ori.z, ori.x);\n    // //////////////////////////////\n\n    this.__treeItem.getParameter('LocalXfo').setValue(this.__xfo)\n\n    // Reset the geom at tip so it will be recomuted if necessary\n    this.__geomAtTip = undefined\n    this.__hitTested = false\n\n    // /////////////////////////////////\n    // Simulate Pointer Enter/Leave Events.\n    // Check for pointer over every Nth frame (at 90fps this should be fine.)\n    if (this.tick % 5 == 0 && !event.getCapture()) {\n      const intersectionData = this.getGeomItemAtTip()\n      if (intersectionData != undefined) {\n        event.intersectionData = intersectionData\n        if (intersectionData.geomItem != this.pointerOverItem) {\n          if (this.pointerOverItem) {\n            this.pointerOverItem.onPointerLeave(event)\n          }\n          this.pointerOverItem = intersectionData.geomItem\n          event.geomItem = intersectionData.geomItem\n          this.pointerOverItem.onPointerEnter(event)\n        }\n\n        // emit the pointer move event directly to the item.\n        intersectionData.geomItem.onPointerMove(event)\n      } else if (this.pointerOverItem) {\n        event.leftGeometry = this.pointerOverItem\n        this.pointerOverItem.onPointerLeave(event)\n        this.pointerOverItem = null\n      }\n    }\n    this.tick++\n  }\n\n  // ////////////////////////////////\n\n  /**\n   * The getGeomItemAtTip method.\n   * @return {any} - The return value.\n   */\n  getGeomItemAtTip() {\n    if (this.__hitTested) return this.__intersectionData\n    this.__hitTested = true\n\n    const renderer = this.xrvp.getRenderer()\n    const xfo = this.__tip.getParameter('GlobalXfo').getValue()\n    const vol = this.__activeVolumeSize\n    this.__intersectionData = renderer.raycastWithXfo(xfo, vol, vol)\n    return this.__intersectionData\n  }\n}\n\nexport { VRController }\n","import { Color, Xfo } from '../../Math/index'\nimport { Sphere } from '../../SceneTree/Geometry/Shapes'\nimport { GeomItem } from '../../SceneTree/GeomItem'\nimport { Material } from '../../SceneTree/Material'\n\nimport { BaseTool } from '../../SceneTree/Manipulators/BaseTool'\nimport { POINTER_TYPES } from '../../Utilities/EnumUtils'\n\n/**\n * Class representing a view tool\n * @extends BaseTool\n */\nclass VRViewManipulator extends BaseTool {\n  /**\n   */\n  constructor(xrvp) {\n    super()\n\n    this.__controllerTriggersHeld = []\n\n    this.xrvp = xrvp\n    this.vrControllerToolTip = new Sphere(0.02 * 0.75)\n    this.vrControllerToolTipMat = new Material('Cross', 'FlatSurfaceShader')\n    this.vrControllerToolTipMat.getParameter('BaseColor').setValue(new Color('#03E3AC'))\n    this.listenerIDs = {}\n  }\n\n  // /////////////////////////////////////\n  //\n\n  /**\n   * Adds the icon to the tip of the VR Controller\n   * @param {object} event\n   * @private\n   */\n  addIconToController(event) {\n    const { controller } = event\n    const geomItem = new GeomItem('HandleToolTip', this.vrControllerToolTip, this.vrControllerToolTipMat)\n    geomItem.setSelectable(false)\n    controller.getTipItem().removeAllChildren()\n    controller.getTipItem().addChild(geomItem, false)\n  }\n\n  /**\n   * The activateTool method.\n   */\n  activateTool() {\n    super.activateTool()\n\n    for (const controller of this.xrvp.getControllers()) {\n      this.addIconToController({ controller })\n    }\n    this.listenerIDs['controllerAdded'] = this.xrvp.on('controllerAdded', (event) => {\n      this.addIconToController(event)\n    })\n  }\n\n  /**\n   * The deactivateTool method.\n   */\n  deactivateTool() {\n    super.deactivateTool()\n\n    for (const controller of this.xrvp.getControllers()) {\n      controller.getTipItem().removeAllChildren()\n    }\n    this.xrvp.removeListenerById('controllerAdded', this.listenerIDs['controllerAdded'])\n  }\n\n  // ///////////////////////////////////\n  // VRController events\n\n  // eslint-disable-next-line require-jsdoc\n  __initMoveStage() {\n    if (this.__controllerTriggersHeld.length == 1) {\n      this.__grabPos = this.__controllerTriggersHeld[0].getControllerTipStageLocalXfo().tr.clone()\n      this.stageXfo__GrabStart = this.xrvp.getXfo().clone()\n      this.__invOri = this.stageXfo__GrabStart.ori.inverse()\n    } else if (this.__controllerTriggersHeld.length == 2) {\n      const p0 = this.__controllerTriggersHeld[0].getControllerTipStageLocalXfo().tr\n      const p1 = this.__controllerTriggersHeld[1].getControllerTipStageLocalXfo().tr\n      this.__grabDir = p1.subtract(p0)\n      this.__grabPos = p0.lerp(p1, 0.5)\n      this.__grabDir.y = 0.0\n      this.__grabDist = this.__grabDir.length()\n      this.__grabDir.scaleInPlace(1 / this.__grabDist)\n      this.stageXfo__GrabStart = this.xrvp.getXfo().clone()\n      this.__grab_to_stage = this.__grabPos.subtract(this.stageXfo__GrabStart.tr)\n    }\n  }\n\n  /**\n   * The onVRControllerButtonDown method.\n   * @param {any} event - The event param.\n   * @return {any} The return value.\n   */\n  onVRControllerButtonDown(event) {\n    if (event.button != 1) return\n    this.__controllerTriggersHeld.push(event.controller)\n    this.__initMoveStage()\n    event.stopPropagation()\n  }\n\n  /**\n   * The onVRControllerButtonUp method.\n   * @param {any} event - The event param.\n   * @return {any} The return value.\n   */\n  onVRControllerButtonUp(event) {\n    if (event.button != 1) return\n    const index = this.__controllerTriggersHeld.indexOf(event.controller)\n    this.__controllerTriggersHeld.splice(index, 1)\n    this.__initMoveStage()\n    event.stopPropagation()\n  }\n\n  /**\n   * The onVRControllerDoubleClicked method.\n   * @param {any} event - The event param.\n   */\n  onVRControllerDoubleClicked(event) {\n    console.log('onVRControllerDoubleClicked:', this.__controllerTriggersHeld.length)\n\n    const stageXfo = this.xrvp.getXfo().clone()\n    stageXfo.sc.set(1, 1, 1)\n    this.xrvp.setXfo(stageXfo)\n  }\n\n  /**\n   * The onVRPoseChanged method.\n   * @param {any} event - The event param.\n   */\n  onVRPoseChanged(event) {\n    if (this.__controllerTriggersHeld.length == 1) {\n      const grabPos = this.__controllerTriggersHeld[0].getControllerTipStageLocalXfo().tr\n\n      const deltaXfo = new Xfo()\n      deltaXfo.tr = this.__grabPos.subtract(grabPos)\n\n      // //////////////\n      // Update the stage Xfo\n      const stageXfo = this.stageXfo__GrabStart.multiply(deltaXfo)\n      this.xrvp.setXfo(stageXfo)\n    } else if (this.__controllerTriggersHeld.length == 2) {\n      const p0 = this.__controllerTriggersHeld[0].getControllerTipStageLocalXfo().tr\n      const p1 = this.__controllerTriggersHeld[1].getControllerTipStageLocalXfo().tr\n\n      const grabPos = p0.lerp(p1, 0.5)\n      const grabDir = p1.subtract(p0)\n      grabDir.y = 0.0\n      const grabDist = grabDir.length()\n      grabDir.scaleInPlace(1 / grabDist)\n\n      const deltaXfo = new Xfo()\n\n      // //////////////\n      // Compute sc\n      // Limit to a 10x change in scale per grab.\n      const sc = Math.max(Math.min(this.__grabDist / grabDist, 10.0), 0.1)\n\n      // Avoid causing a scale that would make the user < 1.0 scale factor.\n      // if(stageSc < 1.0){\n      //     sc = 1.0 / this.stageXfo__GrabStart.sc.x;\n      // }\n      deltaXfo.sc.set(sc, sc, sc)\n\n      // //////////////\n      // Compute ori\n      let angle = this.__grabDir.angleTo(grabDir)\n      if (this.__grabDir.cross(grabDir).y > 0.0) {\n        angle = -angle\n      }\n      deltaXfo.ori.rotateY(angle)\n\n      // Rotate around the point between the hands.\n      const oriTrDelta = deltaXfo.ori.rotateVec3(this.__grabPos)\n      deltaXfo.tr.addInPlace(this.__grabPos.subtract(oriTrDelta))\n\n      // Scale around the point between the hands.\n      const deltaSc = this.__grabPos.scale(1.0 - sc)\n      deltaXfo.tr.addInPlace(deltaXfo.ori.rotateVec3(deltaSc))\n\n      // //////////////\n      // Compute tr\n      // Not quite working.....\n      const deltaTr = this.__grabPos.subtract(grabPos).scale(sc)\n      deltaXfo.tr.addInPlace(deltaXfo.ori.rotateVec3(deltaTr))\n\n      // //////////////\n      // Update the stage Xfo\n      const stageXfo = this.stageXfo__GrabStart.multiply(deltaXfo)\n      this.xrvp.setXfo(stageXfo)\n    }\n  }\n\n  // ///////////////////////////////////\n  // Pointer events\n\n  /**\n   * Event fired when a pointing device button is pressed while the pointer is over the tool.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerDown(event) {\n    if (event.pointerType === POINTER_TYPES.xr) {\n      this.onVRControllerButtonDown(event)\n    }\n  }\n\n  /**\n   * Event fired when a pointing device is moved while the cursor's hotspot is inside it.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerMove(event) {\n    if (event.pointerType === POINTER_TYPES.xr) {\n      this.onVRPoseChanged(event)\n    }\n  }\n\n  /**\n   * Event fired when a pointing device button is released while the pointer is over the tool.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerUp(event) {\n    if (event.pointerType === POINTER_TYPES.xr) {\n      this.onVRControllerButtonUp(event)\n    }\n  }\n\n  /**\n   * Event fired when a pointing device button is double clicked on the tool.\n   *\n   * @param {MouseEvent} event - The event param.\n   */\n  onPointerDoublePress(event) {\n    if (event.pointerType === POINTER_TYPES.xr) {\n      this.onVRControllerDoubleClicked(event)\n    }\n  }\n}\n\nexport { VRViewManipulator }\n","import { SystemDesc } from '../../SystemDesc.js'\nimport { Vec3, Mat4, Xfo } from '../../Math/index'\nimport { GeomItem, TreeItem, VLAAsset } from '../../SceneTree/index'\nimport { GLBaseViewport } from '../GLBaseViewport.js'\nimport { VRHead } from './VRHead.js'\nimport { VRController } from './VRController.js'\nimport { VRViewManipulator } from './VRViewManipulator.js'\nimport { resourceLoader } from '../../SceneTree/resourceLoader.js'\nimport { POINTER_TYPES } from '../../Utilities/EnumUtils'\n\n/** This Viewport class is used for rendering stereoscopic views to VR controllers using the WebXR api.\n *  When the GLRenderer class detects a valid WebXF capable device is plugged in, this class is automatically\n *  instantiated ready for XR sessions\n *\n * **Events**\n * * **presentingChanged:** Emitted when presenting is started or stopped\n * * **controllerAdded:** Emitted when a new XR controller is detected.\n * * **viewChanged:** Emitted during presentation each time the frame is rendered.\n * * **pointerDoublePressed:** Emitted when the user double clicks with an XR pointer.\n * * **pointerDown:** Emitted when the user presses an XR pointer\n * * **pointerUp:** Emitted when the user releases an XR pointer\n *\n * @extends GLBaseViewport\n */\nclass VRViewport extends GLBaseViewport {\n  /**\n   * Create a VR viewport.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   */\n  constructor(renderer) {\n    super(renderer)\n    this.getParameter('DoubleClickTimeMS').setValue(300)\n\n    // ////////////////////////////////////////////\n    // Viewport params\n    this.__projectionMatricesUpdated = false\n\n    // ////////////////////////////////////////////\n    // Tree\n\n    this.__stageTreeItem = new TreeItem('VRStage')\n    this.__stageTreeItem.setVisible(false)\n    this.__renderer.addTreeItem(this.__stageTreeItem)\n\n    this.__vrhead = new VRHead(this, this.__stageTreeItem)\n\n    this.controllersMap = {}\n    this.controllers = []\n    this.controllerPointerDownTime = []\n    this.spectatorMode = false\n    this.tick = 0\n\n    // ////////////////////////////////////////////\n    // Xfos\n    const xfo = new Xfo()\n    // Convert Y-Up to Z-Up.\n    xfo.ori.setFromAxisAndAngle(new Vec3(1, 0, 0), Math.PI * 0.5)\n    this.setXfo(xfo) // Reset the stage Xfo.\n\n    this.__leftViewMatrix = new Mat4()\n    this.__leftProjectionMatrix = new Mat4()\n    this.__rightViewMatrix = new Mat4()\n    this.__rightProjectionMatrix = new Mat4()\n\n    this.setManipulator(new VRViewManipulator(this))\n  }\n\n  /**\n   * The getAsset method.\n   * @return {any} - The return value.\n   */\n  getAsset() {\n    return this.__vrAsset\n  }\n\n  /**\n   * The getTreeItem method.\n   * @return {any} - The return value.\n   */\n  getTreeItem() {\n    return this.__stageTreeItem\n  }\n\n  /**\n   * The getVRHead method.\n   * @return {any} - The return value.\n   */\n  getVRHead() {\n    return this.__vrhead\n  }\n\n  /**\n   * The getXfo method.\n   * @return {Xfo} - The return value.\n   */\n  getXfo() {\n    return this.__stageXfo\n  }\n\n  /**\n   * The setXfo method.\n   * @param {Xfo} xfo - The xfo value.\n   */\n  setXfo(xfo) {\n    this.__stageXfo = xfo\n    this.__stageTreeItem.getParameter('GlobalXfo').setValue(xfo)\n    this.__stageMatrix = xfo.inverse().toMat4()\n    // this.__stageMatrix.multiplyInPlace(this.__sittingToStandingMatrix);\n    this.__stageScale = xfo.sc.x\n  }\n\n  /**\n   * The getControllers method.\n   * @return {any} - The return value.\n   */\n  getControllers() {\n    return this.controllers\n  }\n\n  // //////////////////////////\n  // Presenting\n\n  /**\n   * The canPresent method.\n   * @return {any} - The return value.\n   */\n  canPresent() {\n    return this.__canPresent\n  }\n\n  /**\n   * The isPresenting method.\n   * @return {boolean} - The return value.\n   */\n  isPresenting() {\n    return this.session\n  }\n\n  /**\n   * Turns on and off the spectator mode.\n   * Note: specator mode renders the scene an extra time to our regular viewport.\n   * @param {boolean} state -  true for enabling spectator mode, else false\n   */\n  setSpectatorMode(state) {\n    if (!state) {\n      // when disabling spectator mode, clear the screen to the background color.\n      const gl = this.__renderer.gl\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n      gl.clearColor(...this.__backgroundColor.asArray())\n      gl.colorMask(true, true, true, true)\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    }\n    this.spectatorMode = state\n  }\n\n  /**\n   * The __startSession method.\n   * @private\n   */\n  __startSession() {\n    const onAnimationFrame = (t, frame) => {\n      if (this.session) {\n        this.session.requestAnimationFrame(onAnimationFrame)\n        this.drawXRFrame(frame)\n      }\n    }\n    this.session.requestAnimationFrame(onAnimationFrame)\n  }\n\n  /**\n   * The loadHMDResources method.\n   * @return {any} - The return value.\n   */\n  loadHMDResources() {\n    if (SystemDesc.isMobileDevice) {\n      return Promise.resolve()\n    }\n    // If the HMD has changed, reset it.\n    let hmd = localStorage.getItem('ZeaEngine_XRDevice')\n    if (!hmd) {\n      hmd = 'Vive'\n      localStorage.setItem('ZeaEngine_XRDevice', hmd)\n    }\n    if (this.__hmd != hmd) {\n      this.__hmdAssetPromise = undefined\n    } else if (this.__hmdAssetPromise) return this.__hmdAssetPromise\n\n    this.__hmd = hmd\n    this.__hmdAssetPromise = new Promise((resolve, reject) => {\n      // ////////////////////////////////////////////\n      // Resources\n      {\n        let hmdAssetId\n        switch (hmd) {\n          case 'Vive':\n            hmdAssetId = 'ZeaEngine/Vive.vla'\n            break\n          case 'Oculus':\n            hmdAssetId = 'ZeaEngine/Oculus.vla'\n            break\n          default:\n            hmdAssetId = 'ZeaEngine/Vive.vla'\n            break\n        }\n        if (!resourceLoader.getCommonResource(hmdAssetId)) {\n          // Cache the asset so if an avatar needs to display,\n          // it can use the same asset.\n          const asset = new VLAAsset(hmdAssetId)\n          asset.getParameter('FilePath').setValue(hmdAssetId)\n          resourceLoader.setCommonResource(hmdAssetId, asset)\n        }\n        this.__vrAsset = resourceLoader.getCommonResource(hmdAssetId)\n        const bind = () => {\n          const materialLibrary = this.__vrAsset.getMaterialLibrary()\n          const materialNames = materialLibrary.getMaterialNames()\n          for (const name of materialNames) {\n            const material = materialLibrary.getMaterial(name, false)\n            if (material) {\n              material.setShaderName('SimpleSurfaceShader')\n            }\n          }\n          this.__vrAsset.traverse((item) => {\n            item.setSelectable(false)\n          })\n          resolve(this.__vrAsset)\n        }\n        if (this.__vrAsset.isLoaded()) bind()\n        else this.__vrAsset.once('loaded', bind)\n      }\n    })\n    return this.__hmdAssetPromise\n  }\n\n  /**\n   * The startPresenting method.\n   */\n  startPresenting() {\n    return new Promise((resolve, reject) => {\n      if (!this.spectatorMode) {\n        // clear the main viewport if spectator mode is off.\n        this.setSpectatorMode(false)\n      }\n\n      // https://github.com/immersive-web/webxr/blob/master/explainer.md\n\n      const gl = this.__renderer.gl\n\n      const startPresenting = () => {\n        navigator.xr\n          .requestSession('immersive-vr', {\n            requiredFeatures: ['local-floor'],\n            optionalFeatures: ['bounded-floor'],\n          })\n          .then((session) => {\n            this.__renderer.__xrViewportPresenting = true\n\n            const viewport = this.__renderer.getViewport()\n            if (viewport) {\n              const camera = viewport.getCamera()\n              const cameraXfo = camera.getParameter('GlobalXfo').getValue()\n\n              // Convert Y-Up to Z-Up.\n              const stageXfo = new Xfo()\n              stageXfo.tr = cameraXfo.tr.clone()\n              stageXfo.tr.z -= 1.3 // assume sitting, and move the floor down a bit\n              const dir = cameraXfo.ori.getZaxis()\n              dir.z = 0\n              dir.normalizeInPlace()\n              stageXfo.ori.setFromDirectionAndUpvector(dir, new Vec3(0, 0, 1))\n              this.setXfo(stageXfo)\n            }\n\n            session.addEventListener('end', (event) => {\n              this.__stageTreeItem.setVisible(false)\n              this.session = null\n              this.emit('presentingChanged', { state: false })\n            })\n\n            const onSelectStart = (ev) => {\n              const controller = this.controllersMap[ev.inputSource.handedness]\n              if (controller) {\n                controller.buttonPressed = true\n                this.onPointerDown({\n                  button: 1,\n                  controller,\n                })\n              }\n            }\n            const onSelectEnd = (ev) => {\n              const controller = this.controllersMap[ev.inputSource.handedness]\n              if (controller) {\n                controller.buttonPressed = false\n                this.onPointerUp({\n                  button: 1,\n                  controller,\n                })\n              }\n            }\n\n            const createController = (inputSource) => {\n              console.log('creating controller:', inputSource.handedness, inputSource.profiles)\n              const id = this.controllers.length\n              const controller = new VRController(this, inputSource, id)\n              this.controllersMap[inputSource.handedness] = controller\n              this.controllers[id] = controller\n              this.emit('controllerAdded', { controller })\n              return controller\n            }\n            const onInputSourcesChange = (event) => {\n              // As input sources are connected if they are tracked-pointer devices\n              // look up which meshes should be associated with their profile and\n              // load as the controller model for that hand.\n              for (const inputSource of event.added) {\n                if (inputSource.profiles.length == 0) continue\n                createController(inputSource)\n              }\n            }\n            session.addEventListener('selectstart', onSelectStart)\n            session.addEventListener('selectend', onSelectEnd)\n            session.addEventListener('inputsourceschange', onInputSourcesChange)\n\n            this.session = session\n\n            // ////////////////////////////\n            const glLayer = new XRWebGLLayer(session, gl)\n            session.updateRenderState({\n              baseLayer: glLayer /* \n              // Output canvas not working anymore\n              outputContext: mirrorCanvas ? mirrorCanvas.getContext('xrpresent') : null,\n              ,*/,\n            })\n\n            this.__width = glLayer.framebufferWidth\n            this.__height = glLayer.framebufferHeight\n            this.__region = [0, 0, this.__width, this.__height]\n            this.resizeRenderTargets(this.__width, this.__height)\n\n            // ////////////////////////////\n\n            // eslint-disable-next-line require-jsdoc\n            const onRefSpaceCreated = (refSpace) => {\n              this.__refSpace = refSpace\n              this.__stageTreeItem.setVisible(true)\n              this.emit('presentingChanged', { state: true })\n\n              this.loadHMDResources().then(() => {\n                this.__startSession()\n                resolve()\n              })\n            }\n\n            // Attempt to get a 'bounded-floor' reference space, which will align\n            // the user's physical floor with Y=0 and provide boundaries that\n            // indicate where the user can safely walk.\n            session\n              .requestReferenceSpace(SystemDesc.isMobileDevice ? 'local' : 'bounded-floor')\n              .catch((e) => {\n                // If a bounded reference space isn't supported, fall back to a\n                // local-floor reference space. This still provides a floor-relative\n                // space and will always be supported for immersive sessions. It\n                // will not, however, provide boundaries and generally expects the\n                // user to stand in one place. If the device doesn't have a way of\n                // determining the floor level (for example, with a 3DoF device)\n                // then it will return an emulated local-floor space, where the view\n                // is translated up by a static height so that the scene still\n                // renders in approximately the right place.\n                console.log('Falling back to local-floor reference space')\n                session.requestReferenceSpace('local-floor').then(onRefSpaceCreated)\n              })\n              .then((refSpace) => {\n                onRefSpaceCreated(refSpace)\n              })\n              .catch((e) => {\n                console.warn(e.message)\n                reject(new Error('Unable to start XR Session:' + e.message))\n              })\n          })\n          .catch((e) => {\n            console.warn(e.message)\n          })\n      }\n\n      startPresenting()\n    })\n  }\n\n  /**\n   * The stopPresenting method.\n   */\n  stopPresenting() {\n    if (!this.session) return\n\n    this.session.end()\n  }\n\n  /**\n   * The togglePresenting method.\n   */\n  togglePresenting() {\n    if (this.session) this.stopPresenting()\n    else this.startPresenting()\n  }\n\n  /**\n   * The getHMDCanvasSize method.\n   * @return {any} - The return value.\n   */\n  getHMDCanvasSize() {\n    return this.__hmdCanvasSize\n  }\n\n  // //////////////////////////\n  // Controllers\n\n  /**\n   * The updateControllers method.\n   * @param {XRFrame} xrFrame - The xrFrame value.\n   * @param {object} event - The pose changed event object that will be emitted for observers such as collab.\n   */\n  updateControllers(xrFrame, event) {\n    const inputSources = this.session.inputSources\n    for (let i = 0; i < inputSources.length; i++) {\n      const inputSource = inputSources[i]\n\n      // Note: This is to avoid a bug/feature in WebXR where initially the\n      // controllers have no handedness specified, then suddenly\n      // get handedness. We need the handedness before we can setup the controller.\n      if (inputSource.profiles.length == 0) return\n      if (!this.controllers[i]) {\n        console.warn('Missing controller')\n        continue\n        // this.__createController(i, inputSource)\n      }\n      this.controllers[i].updatePose(this.__refSpace, xrFrame, inputSource, event)\n    }\n  }\n\n  /**\n   * The drawXRFrame method.\n   * @param {XRFrame} xrFrame - The xrFrame value.\n   */\n  drawXRFrame(xrFrame) {\n    const session = xrFrame.session\n\n    const layer = session.renderState.baseLayer\n\n    const pose = xrFrame.getViewerPose(this.__refSpace)\n    if (!pose) {\n      // No pose available during XR present\n      // Note: before the Headset is put on the pose is missing, or after it is taken off\n      return\n    }\n\n    this.__vrhead.update(pose)\n    const viewXfo = this.__vrhead.getTreeItem().getParameter('GlobalXfo').getValue()\n\n    const views = pose.views\n\n    if (!this.__projectionMatricesUpdated) {\n      this.__projectionMatrices = []\n      this.__viewMatrices = []\n      this.__cameraMatrices = []\n      for (let i = 0; i < views.length; i++) {\n        const view = views[i]\n        const projMat = new Mat4()\n        projMat.setDataArray(view.projectionMatrix)\n        this.__projectionMatrices[i] = projMat\n        this.__viewMatrices[i] = new Mat4()\n        this.__cameraMatrices[i] = new Mat4()\n      }\n      this.__projectionMatricesUpdated = true\n    }\n\n    const gl = this.__renderer.gl\n    gl.bindFramebuffer(gl.FRAMEBUFFER, layer.framebuffer)\n\n    gl.clearColor(...this.__backgroundColor.asArray())\n    gl.colorMask(true, true, true, true)\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n    const renderstate = {\n      boundRendertarget: layer.framebuffer,\n      depthRange: [session.renderState.depthNear, session.renderState.depthFar],\n      region: this.__region,\n      viewport: this,\n      vrviewport: this,\n      viewports: [],\n    }\n    // renderstate.boundRendertarget.vrfbo = true;\n\n    for (let i = 0; i < views.length; i++) {\n      const view = views[i]\n      this.__viewMatrices[i].setDataArray(view.transform.inverse.matrix)\n      this.__viewMatrices[i].multiplyInPlace(this.__stageMatrix)\n      // this.__cameraMatrices[i].setDataArray(view.transform.matrix);\n\n      const vp = layer.getViewport(view)\n      renderstate.viewports.push({\n        viewMatrix: this.__viewMatrices[i],\n        projectionMatrix: this.__projectionMatrices[i],\n        region: [vp.x, vp.y, vp.width, vp.height],\n        isOrthographic: false,\n      })\n    }\n\n    renderstate.viewXfo = viewXfo\n    renderstate.viewScale = 1.0 / this.__stageScale\n    renderstate.cameraMatrix = renderstate.viewXfo.toMat4()\n    renderstate.region = this.__region\n    renderstate.vrPresenting = true // Some rendering is adjusted slightly in VR. e.g. Billboards\n\n    this.draw(renderstate)\n\n    // ///////////////////////\n    // Prepare the pointerMove event.\n    const event = { controllers: this.controllers, viewXfo }\n    this.preparePointerEvent(event)\n    this.updateControllers(xrFrame, event)\n    if (this.capturedElement && event.propagating) {\n      this.capturedElement.onPointerMove(event)\n    }\n    if (this.manipulator && event.propagating) {\n      this.manipulator.onPointerMove(event)\n    }\n\n    // ///////////////////////\n    // Emit a signal for the shared session.\n    const data = {\n      interfaceType: 'VR',\n      hmd: this.__hmd,\n      viewXfo: renderstate.viewXfo,\n      controllers: this.controllers,\n      viewport: this,\n      vrviewport: this,\n    }\n    this.emit('viewChanged', data)\n\n    // If spectator mode is active, draw a 3rd person view of the scene to\n    // the WebGL context's default back buffer.\n    if (this.spectatorMode && !SystemDesc.isMobileDevice && this.tick % 5 == 0) {\n      const viewport = this.__renderer.getViewport()\n      if (viewport) {\n        // display the head in spectator mode.\n        this.__vrhead.setVisible(true)\n        viewport.draw()\n        this.__vrhead.setVisible(false)\n      }\n    }\n\n    this.tick++\n  }\n\n  /**\n   * Prepares pointer event by adding properties of the engine to it.\n   *\n   * @param {XREvent} event - The event that occurs in the canvas\n   * @private\n   */\n  preparePointerEvent(event) {\n    event.viewport = this\n    event.propagating = true\n    event.pointerType = POINTER_TYPES.xr\n\n    event.stopPropagation = () => {\n      event.propagating = false\n    }\n\n    event.setCapture = (item) => {\n      this.capturedItem = item\n    }\n\n    event.getCapture = (item) => {\n      return this.capturedItem\n    }\n\n    event.releaseCapture = () => {\n      this.capturedItem = null\n    }\n  }\n\n  /**\n   * Handler of the `pointerdown` event fired when the pointer device is initially pressed.\n   *\n   * @param {MouseEvent|TouchEvent} event - The DOM event produced by a pointer\n   */\n  onPointerDown(event) {\n    this.preparePointerEvent(event)\n    event.intersectionData = event.controller.getGeomItemAtTip()\n\n    // //////////////////////////////////////\n    // Double Tap\n    // First check for double tap handlers.\n    // If the manipulator or the viewport handle that\n    // then skip the 'pointerDown' event.\n    const downTime = Date.now()\n    if (downTime - this.controllerPointerDownTime[event.controller.id] < this.__doubleClickTimeMSParam.getValue()) {\n      this.emit('pointerDoublePressed', event)\n      if (!event.propagating) return\n\n      if (this.manipulator) {\n        this.manipulator.onPointerDoublePress(event)\n        if (!event.propagating) return\n      }\n    }\n    this.controllerPointerDownTime[event.controller.id] = downTime\n\n    // //////////////////////////////////////\n\n    if (this.capturedItem) {\n      this.capturedItem.onPointerDown(event)\n      return\n    }\n\n    if (event.intersectionData != undefined) {\n      event.intersectionData.geomItem.onPointerDown(event)\n      if (!event.propagating || this.capturedItem) return\n    }\n\n    this.emit('pointerDown', event)\n    if (!event.propagating || this.capturedItem) return\n\n    if (this.manipulator) {\n      this.manipulator.onPointerDown(event)\n    }\n  }\n\n  /**\n   * Causes an event to occur when a user releases a mouse button over a element.\n   *\n   * @param {MouseEvent|TouchEvent} event - The event that occurs.\n   */\n  onPointerUp(event) {\n    this.preparePointerEvent(event)\n    this.controllerPointerDownTime[event.controller.id] = 0\n\n    if (this.capturedItem) {\n      this.capturedItem.onPointerUp(event)\n      return\n    }\n\n    event.intersectionData = event.controller.getGeomItemAtTip()\n    if (event.intersectionData != undefined) {\n      event.intersectionData.geomItem.onPointerUp(event)\n      if (!event.propagating) return\n    }\n\n    this.emit('pointerUp', event)\n    if (!event.propagating) return\n\n    if (this.manipulator) {\n      this.manipulator.onPointerUp(event)\n\n      if (!event.propagating) return\n    }\n  }\n}\n\nexport { VRViewport }\n","import { Vec2, Vec3, Vec4, Color, Mat4 } from '../../Math/index'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { GLHDRImage } from '../GLHDRImage.js'\nimport { SInt32, UInt32, Float32 } from '../../Utilities/MathFunctions'\n\n/** Class representing simple uniform binding.\n * @private\n */\nclass SimpleUniformBinding {\n  /**\n   * Create simple uniform binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glMaterial - The glMaterial value.\n   * @param {any} param - The param value.\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @param {object} unifs - The dictionary of WebGL uniforms.\n   */\n  constructor(gl, glMaterial, param, unif, unifs) {\n    const name = param.getName()\n    this.param = param\n    this.unif = unif\n    this.textureUnif = unifs[name + 'Tex']\n    this.textureTypeUnif = unifs[name + 'TexType']\n    this.uniform1i = gl.uniform1i.bind(gl)\n\n    switch (unif.type) {\n      case Boolean:\n        // gl.uniform1ui(unif.location, value);// WebGL 2\n        this.uniformXX = gl.uniform1i.bind(gl)\n        break\n      case UInt32:\n        if (gl.name == 'webgl2') this.uniformXX = gl.uniform1ui.bind(gl)\n        else this.uniformXX = gl.uniform1i.bind(gl)\n        break\n      case SInt32:\n        this.uniformXX = gl.uniform1i.bind(gl)\n        break\n      case Float32:\n        this.uniformXX = gl.uniform1f.bind(gl)\n        break\n    }\n\n    this.bind = this.bindValue\n\n    const genGLTex = (image) => {\n      let gltexture = image.getMetadata('gltexture')\n      const textureType = 1\n      if (!gltexture) {\n        if (image.type === 'FLOAT') {\n          gltexture = new GLHDRImage(gl, image)\n        } else {\n          gltexture = new GLTexture2D(gl, image)\n        }\n      }\n      this.texBinding = gltexture.preBind(this.textureUnif, unifs)\n      gltexture.on('updated', () => {\n        glMaterial.emit('updated', {})\n      })\n      this.gltexture = gltexture\n      this.gltexture.addRef(this)\n      this.textureType = textureType\n      this.bind = this.bindTexture\n      glMaterial.emit('updated', {})\n    }\n\n    let boundImage\n    let imageLoaded\n    const connectImage = (image) => {\n      if (!image.isLoaded()) {\n        imageLoaded = () => {\n          genGLTex(boundImage)\n        }\n        image.on('loaded', imageLoaded)\n      } else {\n        genGLTex(image)\n      }\n      boundImage = image\n    }\n\n    const disconnectImage = () => {\n      const gltexture = boundImage.getMetadata('gltexture')\n      gltexture.removeRef(this)\n      this.texBinding = null\n      this.gltexture = null\n      this.textureType = null\n      this.bind = this.bindValue\n\n      if (imageLoaded) {\n        boundImage.off('loaded', imageLoaded)\n      }\n      boundImage = null\n      imageLoaded = null\n      glMaterial.emit('updated', {})\n    }\n\n    this.update = () => {\n      try {\n        // Sometimes the value of a color param is an image.\n        if (boundImage) {\n        } else {\n          this.val = param.getValue()\n        }\n      } catch (e) {}\n      glMaterial.emit('updated')\n    }\n\n    /**\n     * The update method.\n     */\n    if (param.getImage()) connectImage(param.getImage())\n    param.on('textureConnected', () => {\n      connectImage(param.getImage())\n    })\n    param.on('textureDisconnected', () => {\n      disconnectImage()\n    })\n\n    this.dirty = true\n    param.on('valueChanged', () => {\n      this.dirty = true\n      glMaterial.emit('updated', {})\n    })\n  }\n\n  /**\n   * The bindValue method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindValue(renderstate) {\n    if (this.dirty) {\n      this.update()\n      this.dirty = false\n    }\n    if (this.unif) this.uniformXX(this.unif.location, this.val)\n    if (this.textureTypeUnif) this.uniform1i(this.textureTypeUnif.location, 0)\n  }\n\n  /**\n   * The bindTexture method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindTexture(renderstate) {\n    if (this.dirty) {\n      this.update()\n      this.dirty = false\n    }\n    this.gltexture.bindToUniform(renderstate, this.textureUnif, this.texBinding)\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {}\n\n  /**\n   * The destroy method.\n   */\n  destroy() {}\n}\n\n/** Class representing complex uniform binding.\n * @private\n */\nclass ComplexUniformBinding {\n  /**\n   * Create complex uniform binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glMaterial - The glMaterial value.\n   * @param {any} param - The param value.\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   */\n  constructor(gl, glMaterial, param, unif) {\n    this.param = param\n    this.unif = unif\n\n    switch (unif.type) {\n      case Vec2:\n        this.uniformXX = gl.uniform2fv.bind(gl)\n        break\n      case Vec3:\n        this.uniformXX = gl.uniform3fv.bind(gl)\n        break\n      case Vec4:\n        this.uniformXX = gl.uniform4fv.bind(gl)\n        break\n    }\n    this.dirty = true\n    param.on('valueChanged', () => {\n      this.dirty = true\n      glMaterial.emit('updated', {})\n    })\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bind(renderstate) {\n    if (this.dirty) {\n      this.vals = this.param.getValue().asArray()\n      this.dirty = false\n    }\n    this.uniformXX(this.unif.location, this.vals)\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {}\n\n  /**\n   * The destroy method.\n   */\n  destroy() {}\n}\n\n/** Class representing material uniform binding.\n * @private\n */\nclass MatrixUniformBinding {\n  /**\n   * Create material uniform binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glMaterial - The glMaterial value.\n   * @param {any} param - The param value.\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   */\n  constructor(gl, glMaterial, param, unif) {\n    this.param = param\n    this.unif = unif\n\n    switch (unif.type) {\n      case Mat3:\n        this.uniformMatrixXXX = gl.uniformMatrix3fv.bind(gl)\n        break\n      case Mat4:\n        this.uniformMatrixXXX = gl.uniformMatrix4fv.bind(gl)\n        break\n    }\n\n    this.dirty = true\n    param.on('valueChanged', () => {\n      this.dirty = true\n      glMaterial.emit('updated', {})\n    })\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bind(renderstate) {\n    if (this.dirty) {\n      this.vals = this.param.getValue().asArray()\n      this.dirty = false\n    }\n    this.uniformMatrixXXX(this.unif.location, false, this.val)\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {}\n\n  /**\n   * The destroy method.\n   */\n  destroy() {}\n}\n\n/** Class representing color uniform binding.\n * @private\n */\nclass ColorUniformBinding {\n  /**\n   * Create color uniform binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glMaterial - The glMaterial value.\n   * @param {any} param - The param value.\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @param {object} unifs - The dictionary of WebGL uniforms.\n   */\n  constructor(gl, glMaterial, param, unif, unifs) {\n    const name = param.getName()\n    this.param = param\n    this.unif = unif\n    this.textureUnif = unifs[name + 'Tex']\n    this.textureTypeUnif = unifs[name + 'TexType']\n\n    this.vals = [0, 0, 0, 0]\n    this.bind = this.bindValue\n\n    const genGLTex = (image) => {\n      boundImage = image\n      let gltexture = image.getMetadata('gltexture')\n      const textureType = 1\n      if (!gltexture) {\n        if (image.type === 'FLOAT') {\n          gltexture = new GLHDRImage(gl, image)\n        } else {\n          gltexture = new GLTexture2D(gl, image)\n        }\n      }\n      this.texBinding = gltexture.preBind(this.textureUnif, unifs)\n      gltexture.on('updated', () => {\n        glMaterial.emit('updated', {})\n      })\n      this.gltexture = gltexture\n      this.gltexture.addRef(this)\n      this.textureType = textureType\n      this.bind = this.bindTexture\n      glMaterial.emit('updated', {})\n    }\n\n    let boundImage\n    let imageLoaded\n    const connectImage = (image) => {\n      if (!image.isLoaded()) {\n        imageLoaded = () => {\n          genGLTex(image)\n        }\n        image.once('loaded', imageLoaded)\n      } else {\n        genGLTex(image)\n      }\n    }\n\n    const disconnectImage = () => {\n      this.gltexture.removeRef(this)\n      this.gltexture = null\n      this.texBinding = null\n      this.textureType = null\n      this.bind = this.bindValue\n      boundImage = null\n      imageLoaded = null\n      glMaterial.emit('updated', {})\n    }\n\n    this.update = () => {\n      try {\n        // Sometimes the value of a color param is an image.\n        if (boundImage) {\n        } else if (this.unif) {\n          this.vals = param.getValue().asArray()\n        }\n      } catch (e) {}\n      glMaterial.emit('updated')\n    }\n\n    /**\n     * The update method.\n     */\n    if (param.getImage()) connectImage(param.getImage())\n    param.on('textureConnected', () => {\n      connectImage(param.getImage())\n    })\n    param.on('textureDisconnected', () => {\n      disconnectImage()\n    })\n\n    this.dirty = true\n    param.on('valueChanged', () => {\n      this.dirty = true\n    })\n\n    this.uniform1i = gl.uniform1i.bind(gl)\n    this.uniform4fv = gl.uniform4fv.bind(gl)\n  }\n\n  /**\n   * The bindValue method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindValue(renderstate) {\n    if (!this.unif) return // Note: Normals parms have no unif and can only be bound to a texture.\n    if (this.dirty) {\n      this.update()\n      this.dirty = false\n    }\n    if (this.unif) this.uniform4fv(this.unif.location, this.vals)\n    if (this.textureTypeUnif) this.uniform1i(this.textureTypeUnif.location, 0)\n  }\n\n  /**\n   * The bindTexture method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindTexture(renderstate) {\n    if (this.dirty) {\n      this.update()\n      this.dirty = false\n    }\n    this.gltexture.bindToUniform(renderstate, this.textureUnif, this.texBinding)\n  }\n}\n\nconst logged = {}\n\n/** Class representing material shader binding.\n * @private\n */\nclass MaterialShaderBinding {\n  /**\n   * Create material shader binding.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glMaterial - The glMaterial value.\n   * @param {object} unifs - The dictionary of WebGL uniforms.\n   * @param {any} warnMissingUnifs - The warnMissingUnifs value.\n   */\n  constructor(gl, glMaterial, unifs, warnMissingUnifs) {\n    this.uniformBindings = []\n\n    const bindParam = (param) => {\n      const name = param.getName()\n      const unif = unifs[name]\n      if (unif == undefined) {\n        const textureUnif = unifs[name + 'Tex']\n        if (textureUnif) {\n          this.uniformBindings.push(new ColorUniformBinding(gl, glMaterial, param, unif, unifs))\n          return\n        }\n\n        // Note: we now bind the Material even for rendering geom datas,\n        // which can mean many params have no uniform in the shader, which is fine.\n        if (warnMissingUnifs) {\n          // Note: this silent error caused me a lot of searching. make it noisy.\n          const shaderName = glMaterial.getMaterial().getShaderName()\n          if (!logged[shaderName]) {\n            logged[shaderName] = {}\n          }\n          if (!logged[shaderName][name]) {\n            // TODO: Many of these warnings are because when we change shaders\n            // we do not remove obsolete params, but we probably should.\n            console.warn(\n              'Material:' + glMaterial.getMaterial().getName(),\n              'with Shader ',\n              shaderName,\n              'Param has no unif',\n              name\n            )\n            logged[shaderName][name] = true\n          }\n        }\n        return\n      }\n      switch (unif.type) {\n        case Boolean:\n        case UInt32:\n        case SInt32:\n        case Float32:\n          this.uniformBindings.push(new SimpleUniformBinding(gl, glMaterial, param, unif, unifs))\n          break\n        case Vec2:\n        case Vec3:\n        case Vec4:\n          this.uniformBindings.push(new ComplexUniformBinding(gl, glMaterial, param, unif))\n          break\n        case Color:\n          this.uniformBindings.push(new ColorUniformBinding(gl, glMaterial, param, unif, unifs))\n          break\n        case Mat4:\n          this.uniformBindings.push(new MatrixUniformBinding(gl, glMaterial, param, unif))\n          break\n        default:\n          console.warn('Param :' + name + ' has unhandled data type:' + unif.type)\n          return\n      }\n      return\n    }\n    const params = glMaterial.getMaterial().getParameters()\n    for (const param of params) {\n      bindParam(param)\n    }\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    for (const uniformBinding of this.uniformBindings) {\n      uniformBinding.bind(renderstate)\n    }\n    return true\n  }\n\n  /**\n   * The unbind method.\n   */\n  unbind() {\n    for (const uniformBinding of this.uniformBindings) {\n      uniformBinding.unbind(renderstate)\n    }\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    for (const uniformBinding of this.uniformBindings) {\n      uniformBinding.destroy(renderstate)\n    }\n  }\n}\n\nexport { MaterialShaderBinding }\n","import { EventEmitter } from '../../Utilities/index'\nimport { MaterialShaderBinding } from './MaterialShaderBinding.js'\n\n/** Class representing a GL material.\n * @extends EventEmitter\n * @private\n */\nclass GLMaterial extends EventEmitter {\n  /**\n   * Create a GL material.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} material - The material value.\n   * @param {any} glShader - The glShader value.\n   */\n  constructor(gl, material, glShader) {\n    super()\n    this.__gl = gl\n    this.__material = material\n    this.__glshader = glShader\n\n    this.__shaderBindings = {}\n\n    material.on('parameterValueChanged', () => this.emit('updated'))\n  }\n\n  /**\n   * The getMaterial method.\n   * @return {any} - The return value.\n   */\n  getMaterial() {\n    return this.__material\n  }\n\n  /**\n   * The getGLShader method.\n   * @return {any} - The return value.\n   */\n  getGLShader() {\n    return this.__glshader\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {any} warnMissingUnifs - The renderstate value.\n   * @return {any} - The return value.\n   */\n  bind(renderstate, warnMissingUnifs) {\n    this.__boundTexturesBeforeMaterial = renderstate.boundTextures\n\n    let shaderBinding = this.__shaderBindings[renderstate.shaderkey]\n    if (!shaderBinding) {\n      const gl = this.__gl\n      shaderBinding = new MaterialShaderBinding(gl, this, renderstate.unifs, warnMissingUnifs)\n      this.__shaderBindings[renderstate.shaderkey] = shaderBinding\n    }\n    return shaderBinding.bind(renderstate)\n\n    return true\n  }\n\n  /**\n   * The unbind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  unbind(renderstate) {\n    // Enable texture units to be re-used by resetting the count back\n    // to what it was.\n    renderstate.boundTextures = this.__boundTexturesBeforeMaterial\n  }\n}\n\nexport { GLMaterial }\n","﻿import { GLTexture2D } from '../GLTexture2D.js'\nimport { EventEmitter, MathFunctions, Allocator1D } from '../../Utilities/index'\nimport { GLMaterial } from './GLMaterial.js'\n\n/** Class representing a GL CAD material library.\n * @ignore\n */\nclass GLMaterialLibrary extends EventEmitter {\n  /**\n   * Create a GL CAD material library.\n   * @param {GLBaseRenderer} renderer - The renderer object\n   */\n  constructor(renderer) {\n    super()\n    this.renderer = renderer\n    this.materials = []\n    this.refCounts = [] // The number of times this material was added to the library.\n    this.materialIndices = {}\n    this.glMaterials = {}\n    this.freeIndices = []\n    this.dirtyIndices = new Set()\n    this.materialsAllocator = new Allocator1D()\n\n    this.materialsAllocator.on('dataReallocated', event => {\n      // during allocation, a defragment might occur, which means\n      // we need to re-upload some of our data.\n      const id = event.id\n      this.dirtyIndices.add(id)\n    })\n  }\n\n  /**\n   * The addMaterial method.\n   * @param {Material} material - The material object.\n   * @return {number} - The index of GLMaterial\n   */\n  addMaterial(material) {\n    let index = this.materialIndices[material.getId()]\n    if (index != undefined) {\n      // Increment the ref count for the Material\n      this.refCounts[index]++\n      return index\n    }\n\n    if (this.freeIndices.length) {\n      index = this.freeIndices.pop()\n    } else {\n      index = this.materials.length\n    }\n\n    this.materials[index] = material\n    this.refCounts[index] = 1\n    this.materialIndices[material.getId()] = index\n\n    const matData = material.getShaderClass().getPackedMaterialData(material)\n    this.materialsAllocator.allocate(index, matData.length / 4)\n\n    const parameterValueChanged = () => {\n      this.dirtyIndices.add(index)\n      this.emit('updated')\n    }\n    material.on('parameterValueChanged', parameterValueChanged)\n\n    // const transparencyChanged = () => {\n    //   material.off('parameterValueChanged', parameterValueChanged)\n    //   material.off('transparencyChanged', transparencyChanged)\n    //   this.removeMaterial(material)\n    // }\n    // material.on('transparencyChanged', transparencyChanged)\n\n    this.dirtyIndices.add(index)\n\n    return index\n  }\n\n  /**\n   * Given a material, generates a GLMaterial that manages the GPU state for the material.\n   * @param {Material} material - The material value.\n   * @return {GLMaterial} - The constructed GLMaterial.\n   */\n  getGLMaterial(material) {\n    if (this.glMaterials[material.getId()]) {\n      return this.glMaterials[material.getId()]\n    }\n\n    const glShader = this.renderer.getOrCreateShader(material.getShaderName())\n    const gl = this.renderer.gl\n    const glMaterial = new GLMaterial(gl, material, glShader)\n    glMaterial.on('updated', () => {\n      this.renderer.requestRedraw()\n    })\n    material.setMetadata('glMaterial', glMaterial)\n\n    this.glMaterials[material.getId()] = glMaterial\n\n    return glMaterial\n  }\n\n  getMaterialAllocation(material) {\n    const index = this.materialIndices[material.getId()]\n    if (index != undefined) {\n      return this.materialsAllocator.getAllocation(index)\n    }\n  }\n\n  /**\n   * The removeMaterial method.\n   * @param {Material} material - The material object.\n   */\n  removeMaterial(material) {\n    const index = this.materialIndices[material.getId()]\n    this.refCounts[index]--\n\n    // If there are still refs to this geom. (GeomItems that use it)\n    // then we keep it in the renderer.\n    if (this.refCounts[index] > 0) {\n      return\n    }\n\n    this.freeIndices.push(index)\n    this.materialsAllocator.deallocate(index)\n    this.materials[index] = null\n    delete this.materialIndices[material.getId()]\n\n    if (this.dirtyIndices.has(index)) {\n      this.dirtyIndices.delete(index)\n    }\n  }\n\n  /**\n   * The uploadMaterials method.\n   * @param {object} renderstate - The render state for the current draw traversal\n   */\n  uploadMaterials(renderstate) {\n    const gl = this.renderer.gl\n\n    const materialsTextureSize = MathFunctions.nextPow2(Math.ceil(Math.sqrt(this.materialsAllocator.reservedSpace)))\n    const unit = renderstate.boundTextures++\n    gl.activeTexture(gl.TEXTURE0 + unit)\n\n    if (!this.materialsTexture) {\n      this.materialsTexture = new GLTexture2D(gl, {\n        format: 'RGBA',\n        type: 'FLOAT',\n        width: materialsTextureSize,\n        height: materialsTextureSize,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        mipMapped: false\n      })\n      this.materialsTexture.clear()\n    } else if (this.materialsTexture.width < materialsTextureSize) {\n      this.materialsTexture.resize(materialsTextureSize, materialsTextureSize)\n\n      for (let i = 0; i < this.materials.length; i++) {\n        if (this.materialsAllocator.getAllocation(i)) {\n          this.dirtyIndices.add(i)\n        }\n      }\n    }\n\n    const tex = this.materialsTexture\n    const texWidth = this.materialsTexture.width\n    gl.bindTexture(gl.TEXTURE_2D, tex.glTex)\n    this.dirtyIndices.forEach(index => {\n      const allocation = this.materialsAllocator.getAllocation(index)\n      const material = this.materials[index]\n      const matData = material.getShaderClass().getPackedMaterialData(material)\n\n      const level = 0\n      const xoffset = allocation.start % texWidth\n      const height = 1\n      const rows = Math.ceil((xoffset + allocation.size) / texWidth)\n\n      let consumed = 0\n      let remaining = allocation.size\n      let rowStart = xoffset\n      for (let i = 0; i < rows; i++) {\n        let width\n        if (rowStart + remaining > texWidth) {\n          width = texWidth - rowStart\n          rowStart = 0\n        } else {\n          width = remaining\n        }\n        const x = (allocation.start + consumed) % texWidth\n        const y = Math.floor((allocation.start + consumed) / texWidth)\n        const data = matData.subarray(consumed * 4, (consumed + width) * 4)\n        gl.texSubImage2D(gl.TEXTURE_2D, level, x, y, width, height, tex.__format, tex.__type, data)\n        consumed += width\n        remaining -= width\n      }\n    })\n    this.dirtyIndices = new Set()\n    gl.bindTexture(gl.TEXTURE_2D, null)\n    renderstate.boundTextures--\n  }\n\n  /**\n   * Updates the GPU state if any update is needed.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  update(renderstate) {\n    if (this.dirtyItemIndices.length > 0) this.uploadGeomItems(renderstate)\n    renderstate.drawItemsTexture = this.glGeomItemsTexture\n  }\n\n  /**\n   * The bind method.\n   * @param {any} renderstate - The renderstate param.\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    if (this.dirtyIndices.size > 0) {\n      this.uploadMaterials(renderstate)\n    }\n\n    if (!this.materialsTexture) return\n\n    const { materialsTexture, materialsTextureSize } = renderstate.unifs\n    if (materialsTexture) {\n      this.materialsTexture.bindToUniform(renderstate, materialsTexture)\n      if (materialsTextureSize) {\n        const gl = this.renderer.gl\n        gl.uniform2i(materialsTextureSize.location, this.materialsTexture.width, this.materialsTexture.height)\n      }\n    }\n\n    return true\n  }\n}\nexport { GLMaterialLibrary }\n","import { GLGeom } from './GLGeom.js'\nimport { generateShaderGeomBinding } from './GeomShaderBinding.js'\n\n/** Class representing GL points.\n * @extends GLGeom\n * @private\n */\nclass GLPoints extends GLGeom {\n  /**\n   * Create a GL point.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} points - The points value.\n   */\n  constructor(gl, points) {\n    super(gl, points)\n    this.genBuffers()\n  }\n\n  /**\n   * The genBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  genBuffers(renderstate) {\n    super.genBuffers(renderstate)\n\n    const gl = this.__gl\n\n    const geomBuffers = this.__geom.genBuffers()\n\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      const attrData = geomBuffers.attrBuffers[attrName]\n\n      const attrBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ARRAY_BUFFER, attrBuffer)\n      gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n\n      this.__glattrbuffers[attrName] = {\n        buffer: attrBuffer,\n        dataType: attrData.dataType,\n        normalized: attrData.normalized,\n      }\n    }\n\n    this.__numVertices = geomBuffers.numVertices\n    this.__vboState = 2\n  }\n\n  /**\n   * The updateBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  updateBuffers(renderstate) {\n    const gl = this.__gl\n    const geomBuffers = this.__geom.genBuffers()\n\n    // Update the vertex attribute buffers\n    const numVertsChanged = geomBuffers.numVertices != this.__numVertices\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      const attrData = geomBuffers.attrBuffers[attrName]\n      const glattr = this.__glattrbuffers[attrName]\n      if (numVertsChanged) {\n        gl.deleteBuffer(glattr.buffer)\n        glattr.buffer = gl.createBuffer()\n      }\n      gl.bindBuffer(gl.ARRAY_BUFFER, glattr.buffer)\n      gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n    }\n\n    // Cache the size so we know later if it changed (see below)\n    this.__numVertices = geomBuffers.numVertices\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    if (renderstate.unifs.PointSize) {\n      const gl = this.__gl\n      let shaderBinding = this.__shaderBindings[renderstate.shaderkey]\n      if (!shaderBinding) {\n        if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n\n        // Merge the points attrs with the quad attrs.\n        const attrbuffers = Object.assign(this.__glattrbuffers, gl.__quadattrbuffers)\n\n        shaderBinding = generateShaderGeomBinding(gl, renderstate.attrs, attrbuffers, gl.__quadIndexBuffer)\n        this.__shaderBindings[renderstate.shaderkey] = shaderBinding\n      }\n      shaderBinding.bind(renderstate)\n      return true\n    } else {\n      return super.bind(renderstate)\n    }\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    const gl = this.__gl\n    if (renderstate.unifs.PointSize) {\n      gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0, this.__numVertices)\n    } else {\n      gl.drawArrays(gl.POINTS, 0, this.__numVertices)\n    }\n  }\n\n  /**\n   * The drawInstanced method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} instanceCount - The instanceCount value.\n   */\n  drawInstanced(renderstate, instanceCount) {\n    this.__gl.drawArraysInstanced(this.__gl.POINTS, 0, this.__numVertices, instanceCount)\n  }\n}\nexport { GLPoints }\n// GLPoints;\n","import { Vec2, Vec3 } from '../../Math/index.js'\nimport { GLGeom } from './GLGeom.js'\nimport { generateShaderGeomBinding } from './GeomShaderBinding.js'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { Lines } from '../../SceneTree/Geometry/Lines'\n\n/** Class representing GL lines.\n * @extends GLGeom\n * @private\n */\nclass GLLines extends GLGeom {\n  /**\n   * Create a GL line.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} lines - The geom value.\n   */\n  constructor(gl, lines) {\n    super(gl, lines)\n\n    this.__numSegIndices = 0\n    this.__numVertices = 0\n    this.__fatBuffersNeedUpload = true\n  }\n\n  /**\n   * The dirtyBuffers method.\n   * @param {object} opts - options passed when geomDataChanged is emitted. (Currently ony used by the FreehandLines tool)\n   */\n  dirtyBuffers(opts) {\n    super.dirtyBuffers(opts)\n    this.__fatBuffersNeedUpload = true\n    this.emit('updated')\n  }\n\n  /**\n   * The clearBuffers method.\n   */\n  clearBuffers() {\n    const gl = this.__gl\n    gl.deleteBuffer(this.__indexBuffer)\n    this.__indexBuffer = null\n\n    if (this.fatBuffers && this.fatBuffers.positionsTexture) {\n      if (this.fatBuffers.positionsTexture) {\n        this.fatBuffers.positionsTexture.destroy()\n        this.fatBuffers.positionsTexture = null\n      }\n      if (this.fatBuffers.glattrbuffers.segmentIndices.buffer) {\n        gl.deleteBuffer(this.fatBuffers.glattrbuffers.segmentIndices.buffer)\n        this.fatBuffers.glattrbuffers.segmentIndices = null\n      }\n    }\n\n    super.clearBuffers()\n  }\n\n  /**\n   * The genFatBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  genFatBuffers(renderstate) {\n    const gl = this.__gl\n\n    const geomBuffers = this.__geom.genBuffers()\n    const indices = geomBuffers.indices\n    const numVertsChanged = geomBuffers.numVertices != this.__numVertices\n\n    if (!gl.__quadVertexIdsBuffer) {\n      gl.setupInstancedQuad()\n    }\n    if (!this.fatBuffers) {\n      this.fatBuffers = { glattrbuffers: {} }\n      this.fatBuffers.glattrbuffers.vertexIDs = gl.__quadattrbuffers.vertexIDs\n    }\n\n    const unit = renderstate.boundTextures++\n    gl.activeTexture(this.__gl.TEXTURE0 + unit)\n\n    this.fatBuffers.drawCount = indices.length / 2\n\n    const vertexAttributes = this.__geom.getVertexAttributes()\n    const positions = vertexAttributes.positions\n    const lineThicknessAttr = vertexAttributes.lineThickness\n\n    const stride = 4 // The number of floats per draw item.\n    const dataArray = new Float32Array(positions.length * stride)\n    for (let i = 0; i < positions.length; i++) {\n      const pos = Vec3.createFromBuffer(dataArray.buffer, i * stride * 4)\n      pos.setFromOther(positions.getValueRef(i))\n\n      // The thickness of the line.\n      if (lineThicknessAttr) dataArray[i * 4 + 3] = lineThicknessAttr.getFloat32Value(i)\n      else dataArray[i * 4 + 3] = 1.0\n    }\n\n    if (numVertsChanged && this.fatBuffers.positionsTexture) {\n      this.fatBuffers.positionsTexture.destroy()\n      this.fatBuffers.positionsTexture = null\n    }\n    if (!this.fatBuffers.positionsTexture) {\n      this.fatBuffers.positionsTexture = new GLTexture2D(gl, {\n        format: 'RGBA',\n        type: 'FLOAT',\n        width: positions.length,\n        /* each pixel has 4 floats*/\n        height: 1,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        data: dataArray,\n        mipMapped: false,\n      })\n    } else {\n      this.fatBuffers.positionsTexture.bufferData(dataArray, positions.length, 1)\n    }\n\n    const makeIndices = () => {\n      const indexArray = new Float32Array(indices.length)\n      for (let i = 0; i < indices.length; i++) {\n        let seqentialIndex\n        if (i % 2 == 0) {\n          seqentialIndex = i > 0 ? indices[i] == indices[i - 1] : indices[i] == indices[indices.length - 1]\n        } else {\n          seqentialIndex = i < indices.length - 1 ? indices[i] == indices[i + 1] : indices[i] == indices[0]\n        }\n        // encode the flag into the indices values.\n        // this flag is decoded in GLSL.\n        indexArray[i] = (seqentialIndex ? 1 : 0) + indices[i] * 2\n      }\n      return indexArray\n    }\n\n    if (!this.fatBuffers.glattrbuffers.segmentIndices) {\n      const indexBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ARRAY_BUFFER, indexBuffer)\n      gl.bufferData(gl.ARRAY_BUFFER, makeIndices(), gl.STATIC_DRAW)\n\n      this.fatBuffers.glattrbuffers.segmentIndices = {\n        buffer: indexBuffer,\n        dimension: 2,\n        dataType: Vec2,\n      }\n    } else {\n      if (!this.genBufferOpts || (this.genBufferOpts && this.genBufferOpts.topologyChanged)) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.fatBuffers.glattrbuffers.segmentIndices.buffer)\n        gl.bufferData(gl.ARRAY_BUFFER, makeIndices(), gl.STATIC_DRAW)\n      }\n    }\n    this.__numSegIndices = indices.length\n    this.__numVertices = geomBuffers.numVertices\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n    renderstate.boundTextures--\n\n    this.__fatBuffersNeedUpload = false\n  }\n\n  /**\n   * The genBuffers method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  genBuffers(renderstate) {\n    const gl = this.__gl\n\n    const geomBuffers = this.__geom.genBuffers()\n    const indices = geomBuffers.indices\n    const numVertsChanged = geomBuffers.numVertices != this.__numVertices\n    {\n      if (!this.__indexBuffer) {\n        this.__indexBuffer = gl.createBuffer()\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\n      } else {\n        // Note: the topology can change without the number of vertices changing\n        // and vice versa.\n        if (!this.genBufferOpts || (this.genBufferOpts && this.genBufferOpts.topologyChanged)) {\n          if (this.__numSegIndices != indices.length) {\n            gl.deleteBuffer(this.__indexBuffer)\n            this.__indexBuffer = gl.createBuffer()\n          }\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.__indexBuffer)\n          gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW)\n          this.__numSegIndices = indices.length\n        }\n      }\n\n      // eslint-disable-next-line guard-for-in\n      for (const attrName in geomBuffers.attrBuffers) {\n        const attrData = geomBuffers.attrBuffers[attrName]\n        if (!this.__glattrbuffers[attrName]) {\n          const attrBuffer = gl.createBuffer()\n          gl.bindBuffer(gl.ARRAY_BUFFER, attrBuffer)\n          gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n\n          this.__glattrbuffers[attrName] = {\n            buffer: attrBuffer,\n            dataType: attrData.dataType,\n            normalized: attrData.normalized,\n          }\n        } else {\n          const glattr = this.__glattrbuffers[attrName]\n          if (numVertsChanged) {\n            gl.deleteBuffer(glattr.buffer)\n            glattr.buffer = gl.createBuffer()\n          }\n          gl.bindBuffer(gl.ARRAY_BUFFER, glattr.buffer)\n          gl.bufferData(gl.ARRAY_BUFFER, attrData.values, gl.STATIC_DRAW)\n        }\n      }\n\n      // Cache the size so we know later if it changed\n      this.__numSegIndices = indices.length\n      this.__numVertices = geomBuffers.numVertices\n      this.__buffersNeedUpload = false\n    }\n\n    if (indices instanceof Uint8Array) this.__indexDataType = this.__gl.UNSIGNED_BYTE\n    if (indices instanceof Uint16Array) this.__indexDataType = this.__gl.UNSIGNED_SHORT\n    if (indices instanceof Uint32Array) this.__indexDataType = this.__gl.UNSIGNED_INT\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    const gl = this.__gl\n    const unifs = renderstate.unifs\n    if (unifs.LineThickness && gl.floatTexturesSupported) {\n      if (this.__fatBuffersNeedUpload) this.genFatBuffers(renderstate, true)\n\n      let shaderBinding = this.__shaderBindings[renderstate.shaderkey]\n      if (!shaderBinding) {\n        shaderBinding = generateShaderGeomBinding(\n          gl,\n          renderstate.attrs,\n          this.fatBuffers.glattrbuffers,\n          gl.__quadIndexBuffer\n        )\n        this.__shaderBindings[renderstate.shaderkey] = shaderBinding\n      }\n      shaderBinding.bind(renderstate)\n\n      const usePositionsTexture = true\n      if (usePositionsTexture) {\n        if (unifs.positionsTexture) {\n          this.fatBuffers.positionsTexture.bindToUniform(renderstate, unifs.positionsTexture)\n          gl.uniform1i(unifs.positionsTextureSize.location, this.fatBuffers.positionsTexture.width)\n        }\n      }\n\n      return true\n    } else {\n      return super.bind(renderstate)\n    }\n  }\n\n  // ////////////////////////////////\n  // Drawing Lines Points.\n\n  /**\n   * The drawPoints method.\n   */\n  drawPoints() {\n    this.__gl.drawArrays(this.__gl.POINTS, 0, this.__geom.numVertices())\n  }\n\n  // ////////////////////////////////\n  // Regular Drawing.\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    const gl = this.__gl\n    if (renderstate.unifs.LineThickness && gl.floatTexturesSupported) {\n      gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0, this.fatBuffers.drawCount)\n\n      // Note: We don't have a solution for drawing fat lines to the geom data buffer.\n    } else {\n      gl.drawElements(this.__gl.LINES, this.__numSegIndices, this.__indexDataType, 0)\n    }\n  }\n\n  /**\n   * The drawInstanced method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} instanceCount - The instanceCount value.\n   */\n  drawInstanced(renderstate, instanceCount) {\n    const gl = this.__gl\n    const { occluded } = renderstate.unifs\n    if (occluded) {\n      gl.uniform1i(occluded.location, 0)\n    }\n    this.__gl.drawElementsInstanced(this.__gl.LINES, this.__numSegIndices, this.__indexDataType, 0, instanceCount)\n\n    if (occluded) {\n      gl.uniform1i(occluded.location, 1)\n      gl.depthFunc(gl.GREATER)\n      this.__gl.drawElementsInstanced(this.__gl.LINES, this.__numSegIndices, this.__indexDataType, 0, instanceCount)\n      gl.depthFunc(gl.LEQUAL)\n    }\n  }\n}\n\nexport { GLLines }\n","import { EventEmitter } from '../../Utilities/index'\n\nimport '../../SceneTree/GeomItem.js'\nimport { GeomItem } from '../../SceneTree/GeomItem.js'\n\nconst GLGeomItemChangeType = {\n  GEOMITEM_CHANGED: 0,\n  GEOM_CHANGED: 1,\n  VISIBILITY_CHANGED: 2,\n  HIGHLIGHT_CHANGED: 3,\n}\n\nconst GLGeomItemFlags = {\n  GEOMITEM_FLAG_CUTAWAY: 1, // 1<<0;\n  GEOMITEM_INVISIBLE_IN_GEOMDATA: 2, // 1<<0;\n}\n\n/** This class is responsible for managing a GeomItem within the renderer.\n * @private\n * @extends EventEmitter\n */\nclass GLGeomItem extends EventEmitter {\n  /**\n   * Create a GL geom item.\n   * @param {WebGLContextAttributes} gl - The gl value.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @param {number} drawItemId - The drawItemId value.\n   * @param {number} geomId - The geomId value.\n   * @param {number} materialId - The materialId value.\n   * @param {boolean} supportInstancing - a boolean to disable instancing support on some mobile platforms\n   */\n  constructor(gl, geomItem, drawItemId, geomId, materialId, supportInstancing = false) {\n    super()\n    this.gl = gl\n    this.geomItem = geomItem\n    this.drawItemId = drawItemId\n    this.geomId = geomId\n    this.materialId = materialId\n    this.supportInstancing = supportInstancing\n\n    this.geomVisible = this.geomItem.isVisible()\n    this.visible = this.geomVisible\n    this.culled = false\n\n    this.listenerIDs = {}\n    this.listenerIDs['visibilityChanged'] = this.geomItem.on('visibilityChanged', (event) => {\n      this.updateVisibility()\n    })\n\n    if (!this.supportInstancing) {\n      this.cutDataChanged = false\n      this.cutData = [0, 0, 0, 0]\n\n      const materialId = 0\n      let flags = 0\n      if (this.geomItem.isCutawayEnabled()) {\n        flags |= GLGeomItemFlags.GEOMITEM_FLAG_CUTAWAY\n      }\n      if (geomItem.getSelectable() == false) {\n        flags |= GLGeomItemFlags.GEOMITEM_INVISIBLE_IN_GEOMDATA\n      }\n\n      this.geomData = [flags, materialId, 0, 0]\n\n      this.geomMatrixDirty = true\n      this.listenerIDs['GeomMat.valueChanged'] = this.geomItem.getParameter('GeomMat').on('valueChanged', () => {\n        this.geomMatrixDirty = true\n        this.emit('updated')\n      })\n      this.listenerIDs['cutAwayChanged'] = this.geomItem.on('cutAwayChanged', () => {\n        this.cutDataChanged = true\n        this.emit('updated')\n      })\n    }\n  }\n\n  /**\n   * The getGeomItem method.\n   * @return {any} - The return value.\n   */\n  getGeomItem() {\n    return this.geomItem\n  }\n\n  /**\n   * The isVisible method.\n   * @return {any} - The return value.\n   */\n  isVisible() {\n    return this.visible\n  }\n\n  /**\n   * The getId method.\n   * @return {any} - The return value.\n   */\n  getDrawItemId() {\n    return this.drawItemId\n  }\n\n  /**\n   * The updateVisibility method.\n   */\n  updateVisibility() {\n    this.geomVisible = this.geomItem.isVisible()\n    const visible = this.geomVisible && !this.culled\n    if (this.visible != visible) {\n      this.visible = visible\n      this.emit('visibilityChanged', { visible })\n      this.emit('updated', {})\n    }\n  }\n\n  /**\n   * Sets the additional culled value which controls visiblity\n   * @param {boolean} culled - True if culled, else false.\n   */\n  setCulled(culled) {\n    this.culled = culled\n    const visible = this.geomVisible && !this.culled\n    if (this.visible != visible) {\n      this.visible = visible\n      this.emit('visibilityChanged', { visible })\n    }\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  bind(renderstate) {\n    const gl = this.gl\n    const unifs = renderstate.unifs\n\n    if (!this.supportInstancing) {\n      const modelMatrixunif = unifs.modelMatrix\n      if (modelMatrixunif) {\n        if (this.geomMatrixDirty) {\n          this.modelMatrixArray = this.geomItem.getGeomMat4().asArray()\n        }\n        gl.uniformMatrix4fv(modelMatrixunif.location, false, this.modelMatrixArray)\n      }\n      const drawItemDataunif = unifs.drawItemData\n      if (drawItemDataunif) {\n        gl.uniform4fv(drawItemDataunif.location, this.geomData)\n      }\n      const cutawayDataUnif = unifs.cutawayData\n      if (cutawayDataUnif) {\n        if (this.cutDataChanged) {\n          if (this.geomItem.isCutawayEnabled()) {\n            const cutAwayVector = this.geomItem.getCutVector()\n            const cutAwayDist = this.geomItem.getCutDist()\n            this.cutData = [cutAwayVector.x, cutAwayVector.y, cutAwayVector.z, cutAwayDist]\n          }\n        }\n        gl.uniform4fv(cutawayDataUnif.location, this.cutData)\n      }\n    }\n\n    const unif = unifs.drawItemId\n    if (unif) {\n      gl.uniform1i(unif.location, this.drawItemId)\n    }\n    return true\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    this.geomItem.removeListenerById('visibilityChanged', this.listenerIDs['visibilityChanged'])\n    if (!this.supportInstancing) {\n      this.geomItem.getParameter('GeomMat').removeListenerById('valueChanged', this.listenerIDs['GeomMat.valueChanged'])\n      this.geomItem.removeListenerById('cutAwayChanged', this.listenerIDs['cutAwayChanged'])\n    }\n  }\n}\n\nexport { GLGeomItemChangeType, GLGeomItemFlags, GLGeomItem }\n","import '../../SceneTree/GeomItem.js'\n\nimport { EventEmitter } from '../../Utilities/index'\n\n/** This class abstracts the rendering of a collection of geometries to screen.\n * @extends EventEmitter\n * @private\n */\nclass GLGeomItemSet extends EventEmitter {\n  /**\n   * Create a GL geom item set.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {any} glGeom - The glGeom value.\n   */\n  constructor(gl, glGeom) {\n    super()\n    this.gl = gl\n    this.glGeom = glGeom\n    this.id = glGeom ? glGeom.getGeom().getId() : this.getId()\n    this.glGeomItems = []\n    this.glgeomItems_freeIndices = []\n    this.glgeomItemEventHandlers = []\n    this.drawIdsArray = null\n    this.drawIdsBuffer = null\n    this.drawIdsBufferDirty = true\n\n    this.highlightedIdsArray = null\n    this.highlightedIdsBuffer = null\n    this.highlightedIdsBufferDirty = true\n\n    this.visibleItems = []\n    this.highlightedItems = []\n  }\n\n  /**\n   * The getGLGeom method.\n   * @return {any} - The return value.\n   */\n  getGLGeom() {\n    return this.glGeom\n  }\n\n  /**\n   * The getDrawCount method.\n   * @return {any} - The return value.\n   */\n  getDrawCount() {\n    return this.visibleItems.length\n  }\n\n  /**\n   * The addGLGeomItem method.\n   * @param {any} glGeomItem - The glGeomItem value.\n   */\n  addGLGeomItem(glGeomItem) {\n    let index\n    if (this.glgeomItems_freeIndices.length > 0) {\n      index = this.glgeomItems_freeIndices.pop()\n    } else {\n      index = this.glGeomItems.length\n      this.glGeomItems.push(null)\n    }\n    if (glGeomItem.geomItem.isVisible()) {\n      this.visibleItems.push(index)\n      this.emit('drawCountChanged', { change: 1, count: this.visibleItems.length })\n    }\n    if (glGeomItem.geomItem.isHighlighted()) {\n      this.highlightedItems.push(index)\n      this.highlightedIdsBufferDirty = true\n    }\n\n    const eventHandlers = {}\n\n    eventHandlers.highlightChanged = (event) => {\n      if (glGeomItem.geomItem.isHighlighted()) {\n        // Note: highlightChanged is fired when the color changes\n        // or another highlight is added over the top. We avoid\n        // adding the same index again here. (TODO: use Set?)\n        if (this.highlightedItems.includes(index)) return\n        this.highlightedItems.push(index)\n        this.emit('highlightedCountChanged', { change: 1, count: this.highlightedItems.length })\n      } else {\n        this.highlightedItems.splice(this.highlightedItems.indexOf(index), 1)\n        this.emit('highlightedCountChanged', { change: -1, count: this.highlightedItems.length })\n      }\n      // console.log(\"highlightChanged:\", glGeomItem.geomItem.getName(), glGeomItem.geomItem.isHighlighted(), this.highlightedItems)\n      this.highlightedIdsBufferDirty = true\n    }\n    glGeomItem.geomItem.on('highlightChanged', eventHandlers.highlightChanged)\n    eventHandlers.visibilityChanged = (event) => {\n      const visible = event.visible\n      if (visible) {\n        this.visibleItems.push(index)\n        this.emit('drawCountChanged', { change: 1, count: this.visibleItems.length })\n      } else {\n        this.visibleItems.splice(this.visibleItems.indexOf(index), 1)\n        this.emit('drawCountChanged', { change: -1, count: this.visibleItems.length })\n      }\n      this.drawIdsBufferDirty = true\n    }\n    glGeomItem.geomItem.on('visibilityChanged', eventHandlers.visibilityChanged)\n\n    this.glGeomItems[index] = glGeomItem\n    this.glgeomItemEventHandlers[index] = eventHandlers\n\n    this.drawIdsBufferDirty = true\n\n    glGeomItem.GLGeomItemSet = this\n  }\n\n  /**\n   * The removeGLGeomItem method.\n   * @param {any} glGeomItem - The glGeomItem value.\n   */\n  removeGLGeomItem(glGeomItem) {\n    const index = this.glGeomItems.indexOf(glGeomItem)\n    const eventHandlers = this.glgeomItemEventHandlers[index]\n    glGeomItem.geomItem.off('highlightChanged', eventHandlers.highlightChanged)\n    glGeomItem.geomItem.off('visibilityChanged', eventHandlers.visibilityChanged)\n\n    this.glGeomItems[index] = null\n    this.glgeomItemEventHandlers[index] = null\n    glGeomItem.GLGeomItemSet = null\n\n    this.glgeomItems_freeIndices.push(index)\n\n    if (glGeomItem.geomItem.isVisible()) {\n      this.visibleItems.splice(this.visibleItems.indexOf(index), 1)\n      this.emit('drawCountChanged', { change: -1, count: this.visibleItems.length })\n    }\n    if (glGeomItem.geomItem.isHighlighted()) {\n      this.highlightedItems.splice(this.highlightedItems.indexOf(index), 1)\n      this.emit('highlightedCountChanged', { change: -1, count: this.highlightedItems.length })\n    }\n    this.drawIdsBufferDirty = true\n    // console.log(\"removeGLGeomItem:\", glGeomItem.geomItem.getName(), this.glGeomItems.length)\n    if (this.glGeomItems.length == this.glgeomItems_freeIndices.length) {\n      this.destroy()\n    }\n  }\n\n  // ////////////////////////////////////\n  // Instance Ids\n\n  /**\n   * The updateDrawIDsBuffer method.\n   * The culling system will specify a subset of the total number of items for\n   * drawing.\n   */\n  updateDrawIDsBuffer() {\n    const gl = this.gl\n    if (!gl.floatTexturesSupported) {\n      this.drawIdsBufferDirty = false\n      return\n    }\n    if (this.drawIdsBuffer && this.glGeomItems.length != this.drawIdsArray.length) {\n      this.gl.deleteBuffer(this.drawIdsBuffer)\n      this.drawIdsBuffer = null\n    }\n    if (!this.drawIdsBuffer) {\n      this.drawIdsBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.drawIdsBuffer)\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.drawIdsBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.getDrawIdsArray(), gl.STATIC_DRAW)\n\n    this.drawIdsBufferDirty = false\n  }\n\n  /**\n   * The getDrawIdsArray method.\n   * @return {Float32Array} - The drawIds for each GeomItem packed into a Float32Array\n   */\n  getDrawIdsArray() {\n    if (this.drawIdsBufferDirty) {\n      if (!this.drawIdsArray || this.glGeomItems.length != this.drawIdsArray.length) {\n        this.drawIdsArray = new Float32Array(this.glGeomItems.length)\n      }\n\n      // Collect all visible geom ids into the instanceIds array.\n      // Note: the draw count can be less than the number of instances\n      // we re-use the same buffer and simply invoke fewer draw calls.\n      this.visibleItems.forEach((index, tgtIndex) => {\n        this.drawIdsArray[tgtIndex] = this.glGeomItems[index].getDrawItemId()\n      })\n\n      this.drawIdsBufferDirty = false\n    }\n    return this.drawIdsArray\n  }\n\n  // ////////////////////////////////////\n  // Selected Items\n\n  /**\n   * The updateHighlightedIDsBuffer method.\n   */\n  updateHighlightedIDsBuffer() {\n    const gl = this.gl\n    if (!gl.floatTexturesSupported) {\n      this.highlightedIdsBufferDirty = false\n      return\n    }\n    if (this.highlightedIdsBuffer && this.glGeomItems.length > this.highlightedIdsArray.length) {\n      this.gl.deleteBuffer(this.highlightedIdsBuffer)\n      this.highlightedIdsBuffer = null\n    }\n    if (!this.highlightedIdsBuffer) {\n      this.highlightedIdsBuffer = gl.createBuffer()\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.highlightedIdsBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.getHighlightedIdsArray(), gl.STATIC_DRAW)\n\n    this.highlightedIdsBufferDirty = false\n  }\n\n  /**\n   * The getHighlightedIdsArray method.\n   * @return {Float32Array} - The drawIds for each GeomItem packed into a Float32Array\n   */\n  getHighlightedIdsArray() {\n    if (this.highlightedIdsBufferDirty) {\n      if (!this.highlightedIdsArray || this.highlightedItems.length > this.highlightedIdsArray.length) {\n        this.highlightedIdsArray = new Float32Array(this.glGeomItems.length)\n      }\n\n      // Collect all visible geom ids into the instanceIds array.\n      // Note: the draw count can be less than the number of instances\n      // we re-use the same buffer and simply invoke fewer draw calls.\n      this.highlightedItems.forEach((index, tgtIndex) => {\n        this.highlightedIdsArray[tgtIndex] = this.glGeomItems[index].getDrawItemId()\n      })\n\n      this.highlightedIdsBufferDirty = false\n    }\n    return this.highlightedIdsArray\n  }\n\n  // ////////////////////////////////////\n  // Drawing\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    if (this.visibleItems.length == 0) {\n      return\n    }\n    if (this.drawIdsBufferDirty) {\n      this.updateDrawIDsBuffer()\n    }\n\n    this.__bindAndRender(renderstate, this.visibleItems, this.drawIdsBuffer)\n  }\n\n  /**\n   * The drawHighlighted method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlighted(renderstate) {\n    if (this.highlightedItems.length == 0) {\n      return\n    }\n    if (this.highlightedIdsBufferDirty) {\n      this.updateHighlightedIDsBuffer()\n    }\n\n    this.__bindAndRender(renderstate, this.highlightedItems, this.highlightedIdsBuffer)\n  }\n\n  /**\n   * The __bindAndRender method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {any} itemIndices - The itemIndices value.\n   * @param {any} drawIdsBuffer - The drawIdsBuffer value.\n   * @private\n   */\n  __bindAndRender(renderstate, itemIndices, drawIdsBuffer) {\n    const gl = this.gl\n    const unifs = renderstate.unifs\n\n    // Lazy unbinding. We can have situations where we have many materials\n    // all bound to the same geom. e.g. lots of billboards\n    // We can avoid the expensive re-binding of geoms with a simple check.\n    if (renderstate.glGeom != this.glGeom) {\n      this.glGeom.bind(renderstate)\n      renderstate.glGeom = this.glGeom\n    }\n\n    if (!gl.floatTexturesSupported || !gl.drawElementsInstanced || !renderstate.supportsInstancing) {\n      if (renderstate.unifs.instancedDraw) {\n        gl.uniform1i(renderstate.unifs.instancedDraw.location, 0)\n      }\n      itemIndices.forEach((index) => {\n        this.glGeomItems[index].bind(renderstate)\n        renderstate.bindViewports(unifs, () => {\n          this.glGeom.draw(renderstate)\n        })\n      })\n    } else {\n      // console.log(\"draw:\"+ this.drawIdsArray);\n\n      // Specify an instanced draw to the shader so it knows how\n      // to retrieve the modelmatrix.\n      if (renderstate.unifs.instancedDraw) {\n        gl.uniform1i(renderstate.unifs.instancedDraw.location, 1)\n      }\n\n      // The instanced transform ids are bound as an instanced attribute.\n      const location = renderstate.attrs.instancedIds.location\n      gl.enableVertexAttribArray(location)\n      gl.bindBuffer(gl.ARRAY_BUFFER, drawIdsBuffer)\n      gl.vertexAttribPointer(location, 1, gl.FLOAT, false, 1 * 4, 0)\n      gl.vertexAttribDivisor(location, 1) // This makes it instanced\n\n      renderstate.bindViewports(unifs, () => {\n        this.glGeom.drawInstanced(renderstate, itemIndices.length)\n      })\n    }\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    if (this.drawIdsBuffer) {\n      this.gl.deleteBuffer(this.drawIdsBuffer)\n      this.drawIdsBuffer = null\n    }\n\n    if (this.highlightedIdsBuffer) {\n      this.gl.deleteBuffer(this.highlightedIdsBuffer)\n      this.highlightedIdsBuffer = null\n    }\n\n    this.emit('destructing')\n  }\n}\n\nexport { GLGeomItemSet }\n","/* eslint-disable guard-for-in */\nimport { EventEmitter } from '../../Utilities/index'\nimport { GLGeomItemSet } from './GLGeomItemSet'\n\n/** Class representing GL material geom item sets.\n * @private\n */\nclass GLMaterialGeomItemSets extends EventEmitter {\n  /**\n   * Create a GL material geom item set.\n   * @param {GLPass} pass - The pass that owns the GLMaterialGeomItemSets.\n   * @param {GLMaterial} glMaterial - The glMaterial value.\n   */\n  constructor(pass, glMaterial = undefined) {\n    super()\n    this.pass = pass\n    this.__gl = pass.__gl\n    this.glMaterial = glMaterial\n    this.glGeomItemSets = {}\n    this.drawCount = 0\n\n    const material = glMaterial.getMaterial()\n    const materialChanged = (event) => {\n      material.off('transparencyChanged', materialChanged)\n      for (const key in this.glGeomItemSets) {\n        const glGeomItemSet = this.glGeomItemSets[key]\n        for (const glGeomItem of glGeomItemSet.glGeomItems) {\n          const geomItem = glGeomItem.geomItem\n          this.pass.removeGeomItem(geomItem)\n          this.pass.__renderer.assignTreeItemToGLPass(geomItem)\n        }\n      }\n    }\n    material.on('transparencyChanged', materialChanged)\n  }\n\n  /**\n   * The getGLMaterial method.\n   * @return {any} - The return value.\n   */\n  getGLMaterial() {\n    return this.glMaterial\n  }\n\n  /**\n   * The addGLGeomItem method.\n   * @param {GLGeomItem} glGeomItem - The glGeomItem value.\n   * @param {GLGeom} glGeom - The glGeomItem value.\n   * @private\n   */\n  addGLGeomItem(glGeomItem, glGeom) {\n    const id = glGeom.getGeom().getId()\n    let geomItemSet = this.glGeomItemSets[id]\n    if (!geomItemSet) {\n      geomItemSet = new GLGeomItemSet(this.__gl, glGeom)\n      this.addGeomItemSet(geomItemSet)\n    }\n    geomItemSet.addGLGeomItem(glGeomItem)\n  }\n\n  /**\n   * The drawCountChanged method.\n   * @param {Event} event - The change value.\n   * @private\n   */\n  drawCountChanged(event) {\n    this.drawCount += event.change\n    this.emit('updated')\n  }\n\n  /**\n   * The __materialChanged method.\n   * @private\n   */\n  __materialChanged() {\n    const material = this.glMaterial.getMaterial()\n    if (!this.pass.checkMaterial(material)) {\n      for (const key in this.glGeomItemSets) {\n        const glGeomItemSet = this.glGeomItemSets[key]\n        for (const glGeomItem of glGeomItemSet.glGeomItems) {\n          const geomItem = glGeomItem.geomItem\n          this.pass.removeGeomItem(geomItem)\n          this.pass.__renderer.assignTreeItemToGLPass(geomItem)\n        }\n      }\n    }\n  }\n\n  /**\n   * The addGeomItemSet method.\n   * @param {any} glGeomItemSet - The glGeomItemSet value.\n   */\n  addGeomItemSet(glGeomItemSet) {\n    const id = glGeomItemSet.getGLGeom().getGeom().getId()\n    this.glGeomItemSets[id] = glGeomItemSet\n    const listenerID = glGeomItemSet.on('drawCountChanged', (event) => {\n      this.drawCountChanged(event)\n    })\n    glGeomItemSet.once('destructing', () => {\n      glGeomItemSet.removeListenerById('drawCountChanged', listenerID)\n      delete this.glGeomItemSets[id]\n      if (Object.keys(this.glGeomItemSets).length == 0) {\n        // Remove the listeners.\n        // const material = this.glMaterial.getMaterial()\n        // const baseColorParam = material.getParameter('BaseColor')\n        // if (baseColorParam) {\n        //   baseColorParam.off('valueChanged', this.__materialChanged)\n        // }\n        // const opacityParam = material.getParameter('Opacity')\n        // if (opacityParam) {\n        //   opacityParam.off('valueChanged', this.__materialChanged)\n        // }\n\n        this.emit('destructing')\n      }\n    })\n  }\n\n  /**\n   * Draws all elements, binding the shader and continuing into the GLGeomItemSet\n   * @param {object} renderstate - The render state for the current draw traversal\n   */\n  draw(renderstate) {\n    if (this.drawCount == 0) return\n    const warnMissingUnifs = true\n    this.glMaterial.bind(renderstate, warnMissingUnifs)\n    for (const key in this.glGeomItemSets) {\n      const glGeomItemSet = this.glGeomItemSets[key]\n      glGeomItemSet.draw(renderstate)\n    }\n  }\n\n  /**\n   * The drawHighlighted method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlighted(renderstate) {\n    this.glMaterial.bind(renderstate, false)\n    for (const key in this.glGeomItemSets) {\n      const glGeomItemSet = this.glGeomItemSets[key]\n      glGeomItemSet.drawHighlighted(renderstate)\n    }\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    this.glMaterial.bind(renderstate, false)\n    for (const key in this.glGeomItemSets) {\n      const glGeomItemSet = this.glGeomItemSets[key]\n      glGeomItemSet.draw(renderstate)\n    }\n  }\n}\n\nexport { GLMaterialGeomItemSets }\n","import { EventEmitter } from '../../Utilities/index'\nimport { GLGeomItem } from './GLGeomItem'\nimport { GLMaterialGeomItemSets } from './GLMaterialGeomItemSets'\n\n/** Class representing GL shader materials.\n * @private\n */\nclass GLShaderMaterials extends EventEmitter {\n  /**\n   * Create a GL shader material.\n   * @param {WebGLRenderingContext} gl - The WebGL Context value.\n   * @param {GLPass} pass - The pass that owns this GLShaderMaterials object.\n   * @param {object} shaders - The shaders value.\n   */\n  constructor(gl, pass, shaders) {\n    super()\n    this.gl = gl\n    this.pass = pass\n    this.glShader = shaders.glShader\n    this.glgeomdatashader = shaders.glgeomdatashader\n    this.glselectedshader = shaders.glselectedshader\n    this.glMaterialGeomItemSets = []\n  }\n\n  /**\n   * The findMaterialGeomItemSets method.\n   * @param {GLMaterial} glMaterial - The glMaterial value.\n   * @return {boolean} - The return value.\n   */\n  findMaterialGeomItemSets(glMaterial) {\n    for (const matGeomItemSet of this.glMaterialGeomItemSets) {\n      if (matGeomItemSet.glMaterial == glMaterial) return matGeomItemSet\n    }\n  }\n\n  /**\n   * The addGLGeomItem method.\n   * @param {GLGeomItem} glGeomItem - The glGeomItem value.\n   * @param {GLGeom} glGeom - The glGeomItem value.\n   * @param {GLMaterial} glMaterial - The glMaterial value.\n   */\n  addGLGeomItem(glGeomItem, glGeom, glMaterial) {\n    let glMaterialGeomItemSets = this.findMaterialGeomItemSets(glMaterial)\n    if (!glMaterialGeomItemSets) {\n      glMaterialGeomItemSets = new GLMaterialGeomItemSets(this.pass, glMaterial)\n      this.addMaterialGeomItemSets(glMaterialGeomItemSets)\n    }\n\n    glMaterialGeomItemSets.addGLGeomItem(glGeomItem, glGeom)\n  }\n\n  /**\n   * The addMaterialGeomItemSets method.\n   * @param {any} glMaterialGeomItemSets - The glMaterialGeomItemSets value.\n   */\n  addMaterialGeomItemSets(glMaterialGeomItemSets) {\n    this.glMaterialGeomItemSets.push(glMaterialGeomItemSets)\n    const updated = () => {\n      this.emit('updated')\n    }\n    const destructing = () => {\n      glMaterialGeomItemSets.off('updated', updated)\n      glMaterialGeomItemSets.off('destructing', destructing)\n      const index = this.glMaterialGeomItemSets.indexOf(glMaterialGeomItemSets)\n      this.glMaterialGeomItemSets.splice(index, 1)\n      if (this.glMaterialGeomItemSets.length == 0) {\n        // TODO: clean up the shader... maybe.\n        this.emit('destructing')\n      }\n    }\n    glMaterialGeomItemSets.on('updated', updated)\n    glMaterialGeomItemSets.on('destructing', destructing)\n  }\n\n  /**\n   * The removeMaterialGeomItemSets method.\n   * @param {GLMaterialGeomItemSets} glMaterialGeomItemSets - The glMaterialGeomItemSets value.\n   */\n  removeMaterialGeomItemSets(glMaterialGeomItemSets) {\n    const index = this.glMaterialGeomItemSets.indexOf(glMaterialGeomItemSets)\n    this.glMaterialGeomItemSets.splice(index, 1)\n  }\n\n  /**\n   * The getMaterialGeomItemSets method.\n   * @return {GLMaterialGeomItemSets} - The return value.\n   */\n  getMaterialGeomItemSets() {\n    return this.glMaterialGeomItemSets\n  }\n\n  /**\n   * Draws all elements, binding the shader and continuing into the GLMaterialGeomItemSets\n   * @param {object} renderstate - The render state for the current draw traversal\n   */\n  draw(renderstate) {\n    const glShader = this.glShader\n    if (!this.glShader.bind(renderstate)) return\n\n    this.pass.renderer.glGeomItemLibrary.bind(renderstate)\n\n    for (const glMaterialGeomItemSet of this.glMaterialGeomItemSets) {\n      glMaterialGeomItemSet.draw(renderstate)\n    }\n    glShader.unbind(renderstate)\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {\n    if (!this.glselectedshader || !this.glselectedshader.bind(renderstate, 'highlight')) return\n\n    this.pass.renderer.glGeomItemLibrary.bind(renderstate)\n\n    for (const glMaterialGeomItemSet of this.glMaterialGeomItemSets) {\n      glMaterialGeomItemSet.drawHighlighted(renderstate)\n    }\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    if (!this.glgeomdatashader || !this.glgeomdatashader.bind(renderstate, 'geomData')) return\n\n    this.pass.renderer.glGeomItemLibrary.bind(renderstate)\n\n    const gl = this.gl\n\n    const { floatGeomBuffer, passId } = renderstate.unifs\n    if (floatGeomBuffer) {\n      gl.uniform1i(floatGeomBuffer.location, renderstate.floatGeomBuffer ? 1 : 0)\n    }\n    if (passId) {\n      gl.uniform1i(passId.location, renderstate.passIndex)\n    }\n\n    for (const glMaterialGeomItemSet of this.glMaterialGeomItemSets) {\n      glMaterialGeomItemSet.drawGeomData(renderstate)\n    }\n  }\n}\n\nexport { GLShaderMaterials }\n","/* eslint-disable guard-for-in */\nimport { EventEmitter, Allocator1D } from '../../Utilities/index'\nimport { generateShaderGeomBinding, genDataTypeDesc } from './GeomShaderBinding.js'\nimport { Points, Lines, Mesh, PointsProxy, LinesProxy, MeshProxy } from '../../SceneTree/index'\nimport { GLPoints, GLLines, GLMesh } from '../Drawing/index.js'\n\nconst resizeIntArray = (intArray, newSize) => {\n  const newArray = new Int32Array(newSize)\n  newArray.set(intArray)\n  return newArray\n}\n\n/** Class representing a GL geom.\n * @private\n */\nclass GLGeomLibrary extends EventEmitter {\n  /**\n   * Create a GLGeomLibrary.\n   * @param {GLBaseRenderer} renderer - The renderer object\n   */\n  constructor(renderer) {\n    super()\n\n    this.renderer = renderer\n    this.__gl = renderer.gl\n\n    this.shaderAttrSpec = {}\n    this.freeGeomIndices = []\n    this.geoms = []\n    this.geomRefCounts = []\n    this.geomsDict = {}\n    this.glGeomsDict = {}\n    this.geomBuffersTmp = [] // for each geom, these are the buffer\n    this.glattrbuffers = {}\n    this.shaderBindings = {}\n    this.bufferNeedsRealloc = false\n    this.attributesAllocator = new Allocator1D()\n    this.dirtyGeomIndices = new Set()\n\n    // If the allocator ever resizes, then we need to re-upload everything.\n    this.attributesAllocator.on('resized', () => {\n      this.bufferNeedsRealloc = true\n    })\n    this.attributesAllocator.on('dataReallocated', (event) => {\n      // during allocation, a defragment might occur, which means\n      // we need to re-upload some of our data.\n      const id = event.id\n      const allocation = event.allocation\n      this.dirtyGeomIndices.add(id)\n\n      this.geomVertexOffsets[id] = allocation.start\n      this.geomVertexCounts[id] = allocation.size\n    })\n\n    this.geomVertexCounts = new Int32Array(0)\n    this.geomVertexOffsets = new Int32Array(0)\n\n    // //////////////////////////////////////\n    // Indices\n    this.numIndices = 0\n\n    this.indicesAllocator = new Allocator1D()\n    this.indicesCounts = new Int32Array(0)\n    this.indicesOffsets = new Int32Array(0)\n\n    this.indicesAllocator.on('resized', () => {\n      this.bufferNeedsRealloc = true\n    })\n    this.indicesAllocator.on('dataReallocated', (event) => {\n      // during allocation, a defragment might occur, which means\n      // we need to re-upload some of our data.\n      const id = event.id\n      this.dirtyGeomIndices.add(id)\n    })\n  }\n\n  /**\n   * Given a BaseGeom, constructs the GLGeom that manages the state of the geometry in the GPU.\n   * @param {BaseGeom} geom - The geom value.\n   * @return {GLGeom} - The return value.\n   */\n  constructGLGeom(geom) {\n    let glgeom = this.glGeomsDict[geom.getId()]\n    if (glgeom != undefined) {\n      // Increment the ref count for the GLGeom\n      // glgeom.addRef(this)\n      return glgeom\n    }\n    const gl = this.__gl\n    if (geom instanceof Mesh || geom instanceof MeshProxy) {\n      glgeom = new GLMesh(gl, geom)\n    } else if (geom instanceof Lines || geom instanceof LinesProxy) {\n      glgeom = new GLLines(gl, geom)\n    } else if (geom instanceof Points || geom instanceof PointsProxy) {\n      glgeom = new GLPoints(gl, geom)\n    } else {\n      throw new Error('Unsupported geom type:' + geom.constructor.name)\n    }\n    this.glGeomsDict[geom.getId()] = glgeom\n    glgeom.on('updated', () => {\n      this.renderer.requestRedraw()\n    })\n    glgeom.addRef(this)\n    return glgeom\n  }\n\n  /**\n   * Adds a geom to the GLGeomLibrary.\n   *\n   * @param {BaseGeom} geom - The geom to be managed by this GLGeomLibrary.\n   * @return {number} - The index of the geom in the GLGeomLibrary\n   */\n  addGeom(geom) {\n    let index = this.geomsDict[geom.getId()]\n    if (index != undefined) {\n      // Increment the ref count for the GLGeom\n      this.geomRefCounts[index]++\n      return index\n    }\n    if (this.freeGeomIndices.length) {\n      index = this.freeGeomIndices.pop()\n    } else {\n      index = this.geoms.length\n\n      this.geomVertexCounts = resizeIntArray(this.geomVertexCounts, index + 1)\n      this.geomVertexOffsets = resizeIntArray(this.geomVertexOffsets, index + 1)\n    }\n\n    this.geomVertexCounts[index] = 0\n    this.geomVertexOffsets[index] = 0\n\n    const geomDataChanged = () => {\n      this.dirtyGeomIndices.add(index)\n      this.emit('updated')\n    }\n    const geomDataTopologyChanged = () => {\n      this.dirtyGeomIndices.add(index)\n      this.emit('updated')\n    }\n    geom.on('geomDataChanged', geomDataChanged)\n    geom.on('geomDataTopologyChanged', geomDataTopologyChanged)\n\n    this.geoms[index] = geom\n    this.geomRefCounts[index] = 1\n    this.geomsDict[geom.getId()] = index\n    this.dirtyGeomIndices.add(index)\n\n    // //////////////////////////////////////\n    // Indices\n    if (index == this.indicesCounts.length) {\n      this.indicesCounts = resizeIntArray(this.indicesCounts, this.indicesCounts.length + 1)\n      this.indicesOffsets = resizeIntArray(this.indicesOffsets, this.indicesOffsets.length + 1)\n    }\n    this.indicesCounts[index] = 0\n    this.indicesOffsets[index] = 0\n\n    return index\n  }\n\n  /**\n   * Removes a Geom managed by this GLGeomLibrary.\n   * @param {BaseGeom} geom - The geom to remove\n   */\n  removeGeom(geom) {\n    const index = this.geomsDict[geom.getId()]\n\n    this.geomRefCounts[index]--\n\n    // If there are still refs to this geom. (GeomItems that use it)\n    // then we keep it in the renderer.\n    if (this.geomRefCounts[index] > 0) {\n      return\n    }\n\n    // If the geom was never drawn, and we are already removing it, there may be no allocation.\n    if (this.attributesAllocator.getAllocation(index)) {\n      this.attributesAllocator.deallocate(index)\n    }\n    if (this.indicesAllocator.getAllocation(index)) {\n      this.indicesAllocator.deallocate(index)\n    }\n    if (this.dirtyGeomIndices.has(index)) {\n      this.dirtyGeomIndices.delete(index)\n    }\n\n    this.geomVertexCounts[index] = 0\n    this.geomVertexOffsets[index] = 0\n\n    // geom.deleteMetadata(this.glgeomset_indexKey)\n    this.geoms[index] = null\n    this.freeGeomIndices.push(index)\n    delete this.geomsDict[geom.getId()]\n    delete this.geomBuffersTmp[index]\n\n    this.indicesCounts[index] = 0\n    this.indicesOffsets[index] = 0\n  }\n\n  /**\n   * Returns a Geom managed by this GLGeomLibrary.\n   * @param {number} index - The index of the geom to retrieve\n   * @return {BaseGeom} - The return value.\n   */\n  getGeom(index) {\n    return this.geoms[index]\n  }\n\n  /**\n   * Returns a Geom managed by this GLGeomLibrary.\n   * @param {number} index - The index of the geom to retrieve\n   * @return {array} - The return value.\n   */\n  getGeomOffsetAndCount(index) {\n    return [this.indicesOffsets[index], this.indicesCounts[index]]\n  }\n\n  // /////////////////////////////////////\n  // Buffers\n\n  /**\n   * Allocates space for the geomBuffers for the specified geometry\n   * @param {number} index - The index of the geom to upload\n   * @param {object} opts - The opts value.\n   */\n  allocateBuffers(index) {\n    const geom = this.geoms[index]\n    if (!geom) return\n    const geomBuffers = geom.genBuffers()\n\n    const numVerts = geomBuffers.numRenderVerts ? geomBuffers.numRenderVerts : geomBuffers.numVertices\n    if (this.geomVertexCounts[index] != numVerts) {\n      if (numVerts == 0) {\n        this.attributesAllocator.deallocate(index)\n        this.geomVertexOffsets[index] = 0\n        this.geomVertexCounts[index] = 0\n      } else {\n        const allocation = this.attributesAllocator.allocate(index, numVerts)\n\n        this.geomVertexOffsets[index] = allocation.start\n        this.geomVertexCounts[index] = allocation.size\n      }\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      if (!this.shaderAttrSpec[attrName]) {\n        const attrData = geomBuffers.attrBuffers[attrName]\n        const geomAttrDesc = genDataTypeDesc(this.__gl, attrData.dataType)\n\n        this.shaderAttrSpec[attrName] = {\n          dataType: attrData.dataType,\n          normalized: attrData.normalized,\n          dimension: geomAttrDesc.dimension,\n          elementSize: geomAttrDesc.elementSize,\n        }\n      }\n    }\n\n    // //////////////////////////////////////\n    // Indices\n    if (geomBuffers.indices) {\n      const numIndices = geomBuffers.indices.length\n      if (this.indicesCounts[index] != numIndices) {\n        if (numIndices == 0) {\n          this.indicesAllocator.deallocate(index)\n          this.indicesOffsets[index] = 0\n          this.indicesCounts[index] = 0\n        } else {\n          const allocation = this.indicesAllocator.allocate(index, numIndices)\n          const elementSize = 4 //  Uint32Array for UNSIGNED_INT\n          this.indicesOffsets[index] = allocation.start * elementSize // offset is in bytes\n          this.indicesCounts[index] = allocation.size\n        }\n      }\n    } else {\n      // Note: for non-indexed data, like Points, we provide\n      // the vertex data as offset and count in the method\n      // getGeomOffsetAndCount.\n      this.indicesOffsets[index] = this.geomVertexOffsets[index]\n      this.indicesCounts[index] = this.geomVertexCounts[index]\n    }\n\n    this.geomBuffersTmp[index] = geomBuffers\n  }\n\n  /**\n   * Generates the GPU buffers required to store all the geometries\n   */\n  genBuffers() {\n    const reservedSpace = this.attributesAllocator.reservedSpace\n    // console.log('GeomSet GPU buffers resized:', reservedSpace)\n    const gl = this.__gl\n\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in this.shaderAttrSpec) {\n      const attrSpec = this.shaderAttrSpec[attrName]\n      const numValues = reservedSpace * attrSpec.dimension\n      attrSpec.numValues = numValues // cache for debugging only\n\n      if (this.glattrbuffers[attrName] && this.glattrbuffers[attrName].buffer) {\n        gl.deleteBuffer(this.glattrbuffers[attrName].buffer)\n      }\n\n      const attrBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ARRAY_BUFFER, attrBuffer)\n\n      const sizeInBytes = numValues * attrSpec.elementSize\n      gl.bufferData(gl.ARRAY_BUFFER, sizeInBytes, gl.STATIC_DRAW)\n\n      this.glattrbuffers[attrName] = {\n        buffer: attrBuffer,\n        dataType: attrSpec.dataType,\n        normalized: attrSpec.normalized,\n        length: numValues,\n        dimension: attrSpec.dimension,\n      }\n\n      if (attrName == 'textureCoords') this.glattrbuffers['texCoords'] = this.glattrbuffers['textureCoords']\n    }\n\n    // //////////////////////////////////////\n    // Indices\n    const length = this.indicesAllocator.reservedSpace\n    if (this.numIndices != length) {\n      const gl = this.__gl\n      if (this.indexBuffer) {\n        gl.deleteBuffer(this.indexBuffer)\n      }\n\n      this.indexBuffer = gl.createBuffer()\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n\n      const length = this.indicesAllocator.reservedSpace\n      const elementSize = 4 //  Uint32Array for UNSIGNED_INT\n      const sizeInBytes = length * elementSize\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, sizeInBytes, gl.STATIC_DRAW)\n\n      this.numIndices = length\n    }\n  }\n\n  /**\n   * The uploadBuffers method.\n   * @param {number} index - The index of the geom to upload\n   */\n  uploadBuffers(index) {\n    const gl = this.__gl\n\n    // Note: when we allocate the buffers, we may resize the buffer, which\n    // means we need to re-upload geoms that were not changed.\n    let geomBuffers = this.geomBuffersTmp[index]\n    if (!geomBuffers) {\n      const geom = this.geoms[index]\n      if (!geom) return\n      geomBuffers = geom.genBuffers()\n      this.geomBuffersTmp[index] = geomBuffers\n    }\n\n    const count = this.geomVertexCounts[index]\n    const numVerts = geomBuffers.numRenderVerts ? geomBuffers.numRenderVerts : geomBuffers.numVertices\n    if (count != numVerts) {\n      throw new Error('Invalid allocation for this geom')\n    }\n    if (numVerts == 0) {\n      this.emit('geomDataChanged', { index })\n      return\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in geomBuffers.attrBuffers) {\n      const attrSpec = this.shaderAttrSpec[attrName]\n      const attrData = geomBuffers.attrBuffers[attrName]\n      const glattrbuffer = this.glattrbuffers[attrName]\n\n      // Some geoms might not have all the attributes.\n      // and some geoms have more attributes than others.\n      if (!attrData || !glattrbuffer) continue\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, glattrbuffer.buffer)\n      const elementSize = attrSpec.elementSize\n      const dstByteOffsetInBytes = this.geomVertexOffsets[index] * elementSize * attrSpec.dimension\n      gl.bufferSubData(gl.ARRAY_BUFFER, dstByteOffsetInBytes, attrData.values, 0)\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n    // //////////////////////////////////////\n    // Indices\n    // Note: we sometimes see geometries with zero vertices/indices which means\n    // no allocation has yet been made. We can safely skip these.\n    if (geomBuffers.indices && geomBuffers.indices.length > 0) {\n      const indices = geomBuffers.indices\n\n      const allocation = this.indicesAllocator.getAllocation(index)\n\n      if (allocation.size != indices.length) {\n        throw new Error('Invalid allocation for this geom')\n      }\n\n      const attributesAllocation = this.attributesAllocator.getAllocation(index)\n      // The indices need to be offset so they they index the new attributes array.\n      const offsettedIndices = new Uint32Array(allocation.size)\n      for (let i = 0; i < indices.length; i++) {\n        offsettedIndices[i] = geomBuffers.indices[i] + attributesAllocation.start\n      }\n\n      const gl = this.__gl\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer)\n      const elementSize = 4 //  Uint32Array\n      const dstByteOffsetInBytes = allocation.start * elementSize\n      gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, dstByteOffsetInBytes, offsettedIndices, 0)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n    }\n\n    this.emit('geomDataChanged', { index })\n  }\n\n  /**\n   * Cleans the state of this GeomSet during rendering.\n   */\n  cleanGeomBuffers() {\n    // First we alocate all memory needed to clean the GeomSet,\n    // and then we start uploading all the data.\n    // Note: during allocation, some buffers that were not dirty may\n    // need to be uploaded because of re-allocation\n    // Note: copy the source array as new dirty items may be added during\n    // allocation.\n    const dirtyGeomIndices = new Set(this.dirtyGeomIndices)\n    dirtyGeomIndices.forEach((index) => {\n      this.allocateBuffers(index)\n    })\n\n    if (this.bufferNeedsRealloc) {\n      // If the geom buffers are re-allocated, we need to regenerate\n      // all the shader bindings.\n      for (const shaderkey in this.shaderBindings) {\n        const shaderBinding = this.shaderBindings[shaderkey]\n        shaderBinding.destroy()\n      }\n      this.shaderBindings = {}\n\n      for (let i = 0; i < this.geoms.length; i++) {\n        if (this.geoms[i]) this.dirtyGeomIndices.add(i)\n      }\n\n      this.genBuffers()\n      this.bufferNeedsRealloc = false\n    }\n\n    this.dirtyGeomIndices.forEach((index) => {\n      this.uploadBuffers(index)\n    })\n\n    this.dirtyGeomIndices = new Set()\n    this.geomBuffersTmp = []\n  }\n\n  // /////////////////////////////////////\n  // Binding\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The renderstate value.\n   * @return {boolean} - Returns true if binding was successful\n   */\n  bind(renderstate) {\n    if (this.dirtyGeomIndices.size > 0) {\n      this.cleanGeomBuffers()\n    }\n\n    let shaderBinding = this.shaderBindings[renderstate.shaderkey]\n    if (!shaderBinding) {\n      const gl = this.__gl\n      shaderBinding = generateShaderGeomBinding(gl, renderstate.attrs, this.glattrbuffers, this.indexBuffer)\n      this.shaderBindings[renderstate.shaderkey] = shaderBinding\n    } else {\n      shaderBinding.bind(renderstate)\n    }\n    return true\n  }\n\n  /**\n   * The unbind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  unbind(renderstate) {\n    // Unbinding a geom is important as it puts back some important\n    // GL state. (vertexAttribDivisor)\n    const shaderBinding = this.shaderBindings[renderstate.shaderkey]\n    if (shaderBinding) {\n      shaderBinding.unbind(renderstate)\n    }\n  }\n\n  // /////////////////////////////////////\n  // Drawing\n\n  /**\n   * The clearBuffers method.\n   */\n  clearBuffers() {\n    const gl = this.__gl\n    // eslint-disable-next-line guard-for-in\n    for (const attrName in this.glattrbuffers) {\n      const glbuffer = this.glattrbuffers[attrName]\n      if (glbuffer.shared) continue /* This buffer is shared between geoms. do not destroy */\n      gl.deleteBuffer(glbuffer.buffer)\n    }\n    this.glattrbuffers = {}\n\n    if (this.indexBuffer) {\n      gl.deleteBuffer(this.indexBuffer)\n      this.indexBuffer = null\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderkey in this.shaderBindings) {\n      const shaderBinding = this.shaderBindings[shaderkey]\n      shaderBinding.destroy()\n    }\n    this.shaderBindings = {}\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    // this.geoms.forEach((geom) => this.removeGeom(geom))\n\n    this.clearBuffers()\n\n    this.__destroyed = true\n\n    //  Note: PoTree listens to this event. If moved up into RefCounted, make sure it is still emitted.\n    this.emit('destructing', {})\n  }\n}\n\nexport { GLGeomLibrary, resizeIntArray }\n","/* eslint-disable guard-for-in */\nimport { EventEmitter } from '../../Utilities/index'\nimport { Vec4 } from '../../Math/index'\nimport { GLGeomItemFlags, GLGeomItem } from './GLGeomItem.js'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\nimport { GLTexture2D } from '../GLTexture2D.js'\n\n// import { handleMessage } from './GLGeomItemLibraryCullingWorker.js'\nimport GLGeomItemLibraryCullingWorker from 'web-worker:./GLGeomItemLibraryCullingWorker.js'\n\nconst pixelsPerItem = 6 // The number of RGBA pixels per draw item.\n\n/** Class for managing all the GeomItems discovered in the SceneTree.\n * @private\n */\nclass GLGeomItemLibrary extends EventEmitter {\n  /**\n   * Create a GLGeomItemLibrary.\n   * @param {GLBaseRenderer} renderer - The renderer instance\n   * @param {object} options - The options object passed to the GLRenderer constructor.\n   */\n  constructor(renderer, options) {\n    super()\n\n    this.renderer = renderer\n    this.glGeomItems = [undefined]\n    this.glGeomItemEventHandlers = [undefined]\n    this.glGeomItemsMap = {}\n    this.glGeomItemsIndexFreeList = []\n    this.dirtyItemIndices = []\n\n    // Items that have transform or bounding box changes and need to be updated in the worker.\n    this.dirtyWorkerItemIndices = new Set()\n    this.removedItemIndices = []\n    this.enableFrustumCulling = options.enableFrustumCulling\n\n    if (this.enableFrustumCulling) {\n      this.setupCullingWorker(renderer)\n    }\n  }\n\n  /**\n   * Sets up the Culling Worker to start calculating frustum culling.\n   * @param {GLBaseRenderer} renderer - The renderer instance\n   */\n  setupCullingWorker(renderer) {\n    // this.worker = {\n    //   postMessage: (message) => {},\n    // }\n\n    this.worker = new GLGeomItemLibraryCullingWorker()\n    // this.worker = {\n    //   postMessage: (message) => {\n    //     handleMessage(message, (message) => {\n    //       this.worker.onmessage({data: message })\n    //     })\n    //   },\n    // }\n\n    let workerReady = true\n    this.worker.onmessage = (message) => {\n      if (message.data.type == 'CullResults') {\n        this.applyCullResults(message.data)\n      } else if (message.data.type == 'Done') {\n        // Used mostly to make our uni testing robust.\n        this.renderer.emit('CullingUpdated')\n      }\n      workerReady = true\n    }\n\n    const viewportChanged = () => {\n      const viewport = renderer.getViewport()\n      const camera = renderer.getViewport().getCamera()\n      const aspectRatio = viewport.getWidth() / viewport.getHeight()\n      if (camera.isOrthographic()) {\n        const frustumHeight = camera.getFrustumHeight()\n        const frustumWidth = frustumHeight * aspectRatio\n        this.worker.postMessage({\n          type: 'ViewportChanged',\n          frustumHeight,\n          frustumWidth,\n          isOrthographic: true,\n          solidAngleLimit: renderer.solidAngleLimit,\n        })\n      } else {\n        const frustumHalfAngleY = camera.getFov() * 0.5\n        const frustumHalfAngleX = Math.atan(Math.tan(frustumHalfAngleY) * aspectRatio)\n        this.worker.postMessage({\n          type: 'ViewportChanged',\n          frustumHalfAngleX,\n          frustumHalfAngleY,\n          isOrthographic: false,\n          solidAngleLimit: renderer.solidAngleLimit,\n        })\n      }\n    }\n    renderer.on('resized', viewportChanged)\n    const camera = renderer.getViewport().getCamera()\n    camera.on('projectionParamChanged', (event) => {\n      if (camera.isOrthographic()) {\n        viewportChanged()\n      }\n    })\n    viewportChanged()\n\n    renderer.once('xrViewportSetup', (event) => {\n      const xrvp = event.xrViewport\n      xrvp.on('presentingChanged', (event) => {\n        if (event.state) {\n          cullFreq = 10\n          // Note: We approximate the culling viewport to be\n          // a wider version of the 2 eye frustums merged together.\n          // Wider, so that items are considered visible before the are in view.\n          // Note each VR headset comes with its own FOV, and I can't seem to be\n          // able to get it from the WebXR API, so I am putting in some guesses\n          // based on this diagram: https://blog.mozvr.com/content/images/2016/02/human-visual-field.jpg\n          const degToRad = Math.PI / 180\n          const frustumHalfAngleY = 62 * degToRad\n          const frustumHalfAngleX = 50 * degToRad\n          this.worker.postMessage({\n            type: 'ViewportChanged',\n            frustumHalfAngleX,\n            frustumHalfAngleY,\n            isOrthographic: false,\n            solidAngleLimit: renderer.solidAngleLimit * 2,\n          })\n        } else {\n          cullFreq = 5\n          viewportChanged()\n        }\n      })\n    })\n\n    let tick = 0\n    let cullFreq = 5\n    renderer.on('viewChanged', (event) => {\n      // Calculate culling every Nth frame.\n      if (workerReady) {\n        if (tick % cullFreq == 0) {\n          workerReady = false\n          const pos = event.viewXfo.tr\n          const ori = event.viewXfo.ori\n          this.worker.postMessage({\n            type: 'ViewChanged',\n            cameraPos: pos.asArray(),\n            cameraOri: ori.asArray(),\n            solidAngleLimit: renderer.solidAngleLimit,\n          })\n        }\n        tick++\n      }\n    })\n\n    const forceViewChanged = () => {\n      const camera = renderer.getViewport().getCamera()\n      const viewXfo = camera.getParameter('GlobalXfo').getValue()\n      const pos = viewXfo.tr\n      const ori = viewXfo.ori\n      this.worker.postMessage({\n        type: 'ViewChanged',\n        cameraPos: pos.asArray(),\n        cameraOri: ori.asArray(),\n        solidAngleLimit: renderer.solidAngleLimit,\n      })\n    }\n\n    // If a movement finishes, we should update the culling results\n    // based on the last position. (we might have skipped it in the viewChanged handler above)\n    renderer.getViewport().getCamera().on('movementFinished', forceViewChanged)\n\n    // Initialize the view values on the worker.\n    forceViewChanged()\n  }\n\n  /**\n   * The addGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {number} - The index of GLGeomItem\n   */\n  addGeomItem(geomItem) {\n    let index = this.glGeomItemsMap[geomItem.getId()]\n    if (index != undefined) {\n      // Increment the ref count for the GLGeom\n      return this.glGeomItems[index]\n    }\n\n    // ///////////////////////////////////////////\n    // Material\n    const materialParam = geomItem.getParameter('Material')\n    let material = materialParam.getValue()\n\n    // Add the material here so that when we populate the GeomItem texture.\n    // the material already has an Id.\n    let matIndex = -1\n    if (material.getShaderClass().getPackedMaterialData) {\n      matIndex = this.renderer.glMaterialLibrary.addMaterial(material)\n    }\n    const materialChanged = (event) => {\n      // Ref count the materials in the material library.\n      this.renderer.glMaterialLibrary.removeMaterial(material)\n      material = materialParam.getValue()\n      glGeomItem.materialId = this.renderer.glMaterialLibrary.addMaterial(material)\n      geomItemChanged()\n    }\n    materialParam.on('valueChanged', materialChanged)\n\n    // ///////////////////////////////////////////\n    // Geometry\n    const geomParm = geomItem.getParameter('Geometry')\n    let geom = geomParm.getValue()\n    const geomIndex = this.renderer.glGeomLibrary.addGeom(geom)\n\n    const geomChanged = (event) => {\n      this.renderer.glGeomLibrary.removeGeom(geom)\n      geom = geomParm.getValue()\n      glGeomItem.geomId = this.renderer.glGeomLibrary.addGeom(geom)\n\n      this.dirtyWorkerItemIndices.add(index)\n\n      geomItemChanged()\n    }\n    geomParm.on('valueChanged', geomChanged)\n\n    // ///////////////////////////////////////////\n    // GeomItem\n    // Use recycled indices if there are any available...\n    if (this.glGeomItemsIndexFreeList.length > 0) {\n      index = this.glGeomItemsIndexFreeList.pop()\n    } else {\n      index = this.glGeomItems.length\n      this.glGeomItems.push(null)\n    }\n    // If an item is removed and re-added immediately, we avoid removing the item from the culling worker.\n    if (this.removedItemIndices.includes(index)) {\n      this.removedItemIndices.splice(this.removedItemIndices.indexOf(index), 1)\n    }\n\n    this.dirtyItemIndices.push(index)\n\n    const gl = this.renderer.gl\n    const supportInstancing = gl.floatTexturesSupported\n    const glGeomItem = new GLGeomItem(gl, geomItem, index, geomIndex, matIndex, supportInstancing)\n\n    const geomItemChanged = () => {\n      if (this.dirtyItemIndices.includes(index)) return\n      this.dirtyItemIndices.push(index)\n      this.renderer.drawItemChanged()\n    }\n    geomItem.getParameter('GeomMat').on('valueChanged', geomItemChanged)\n    geomItem.on('cutAwayChanged', geomItemChanged)\n    geomItem.on('highlightChanged', geomItemChanged)\n    geomItem.on('selectabilityChanged', geomItemChanged)\n\n    const workerItemDataChanged = () => {\n      if (!this.dirtyWorkerItemIndices.has(index)) {\n        this.dirtyWorkerItemIndices.add(index)\n        this.renderer.drawItemChanged()\n      }\n    }\n    this.dirtyWorkerItemIndices.add(index)\n\n    geomItem.on('visibilityChanged', workerItemDataChanged)\n    geomItem.getParameter('GeomMat').on('valueChanged', workerItemDataChanged)\n    geomParm.on('boundingBoxChanged', workerItemDataChanged)\n\n    this.glGeomItems[index] = glGeomItem\n    this.glGeomItemEventHandlers[index] = {\n      geomItemChanged,\n      materialChanged,\n      geomChanged,\n      workerItemDataChanged,\n    }\n    this.glGeomItemsMap[geomItem.getId()] = index\n\n    // Note: before the renderer is disabled, this is a  no-op.\n    this.renderer.requestRedraw()\n\n    return glGeomItem\n  }\n\n  /**\n   * Handles applyging the culling results recieved from the GLGeomItemLibraryCullingWorker\n   * @param {object} data - The object containing the newlyCulled and newlyUnCulled results.\n   */\n  applyCullResults(data) {\n    const { newlyCulled, newlyUnCulled } = data\n    if (newlyCulled.length == 0 && newlyUnCulled.length == 0) return\n    // console.log('applyCullResults newlyCulled', newlyCulled.length, 'newlyUnCulled', newlyUnCulled.length)\n    newlyCulled.forEach((index) => {\n      if (!this.glGeomItems[index]) {\n        if (this.removedItemIndices.indexOf(index) == -1) {\n          console.warn('Culling worker has items that are deleted.')\n        }\n        return\n      }\n      this.glGeomItems[index].setCulled(true)\n    })\n    newlyUnCulled.forEach((index) => {\n      if (!this.glGeomItems[index]) {\n        if (this.removedItemIndices.indexOf(index) == -1) {\n          console.warn('Culling worker has items that are deleted.')\n        }\n        return\n      }\n      this.glGeomItems[index].setCulled(false)\n    })\n    this.renderer.requestRedraw()\n    // Used mostly to make our uni testing robust.\n    this.renderer.emit('CullingUpdated')\n  }\n\n  /**\n   * The removeGeomItem method.\n   * @param {any} geomItem - The geomItem value.\n   * @return {any} - The return value.\n   */\n  removeGeomItem(geomItem) {\n    const index = this.glGeomItemsMap[geomItem.getId()]\n\n    // This GeomItem may not yet have been added to the Renderer.\n    // This may be because it is part of an asset that is still loading\n    // and has not yet received its geometry.\n    if (index == undefined) return\n\n    const glGeomItem = this.glGeomItems[index]\n\n    const geom = geomItem.getParameter('Geometry').getValue()\n    this.renderer.glGeomLibrary.removeGeom(geom)\n\n    const material = geomItem.getParameter('Material').getValue()\n    this.renderer.glMaterialLibrary.removeMaterial(material)\n\n    const handlers = this.glGeomItemEventHandlers[index]\n\n    geomItem.getParameter('Material').off('valueChanged', handlers.materialChanged)\n    geomItem.getParameter('GeomMat').off('valueChanged', handlers.geomItemChanged)\n    geomItem.off('cutAwayChanged', handlers.geomItemChanged)\n    geomItem.off('highlightChanged', handlers.geomItemChanged)\n\n    geomItem.off('visibilityChanged', handlers.workerItemDataChanged)\n    geomItem.getParameter('GeomMat').off('valueChanged', handlers.workerItemDataChanged)\n\n    const geomParm = geomItem.getParameter('Geometry')\n    geomParm.off('valueChanged', handlers.geomChanged)\n    geomParm.off('boundingBoxChanged', handlers.workerItemDataChanged)\n\n    this.glGeomItems[index] = null\n    this.glGeomItemEventHandlers[index] = null\n    this.glGeomItemsIndexFreeList.push(index)\n    delete this.glGeomItemsMap[geomItem.getId()]\n\n    this.removedItemIndices.push(index)\n\n    this.renderer.requestRedraw()\n\n    return glGeomItem\n  }\n\n  /**\n   * The getGeomItem method.\n   * @param {number} index - The index value.\n   * @return {GLGeomItem} - The GLGeomItem that wraps the provided GeomItem\n   */\n  getGeomItem(index) {\n    if (index >= this.glGeomItems.length) {\n      console.warn('Invalid Draw Item id:' + index + ' NumItems:' + (this.glGeomItems.length - 1))\n      return undefined\n    }\n    return this.glGeomItems[index].geomItem\n  }\n\n  /**\n   * The getGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {GLGeomItem} - The GLGeomItem that wraps the provided GeomItem\n   */\n  getGLGeomItem(geomItem) {\n    const index = this.glGeomItemsMap[geomItem.getId()]\n    if (index != undefined) {\n      // Increment the ref count for the GLGeom\n      return this.glGeomItems[index]\n    }\n    return null\n  }\n\n  // ////////////////////////////////////////////////\n  // Data Uploading\n\n  /**\n   * The populateDrawItemDataArray method.\n   * @param {number} index - The index of the item in the library.\n   * @param {number} subIndex - The index of the item within the block being uploaded.\n   * @param {Float32Array} dataArray - The dataArray value.\n   * @private\n   */\n  populateDrawItemDataArray(index, subIndex, dataArray) {\n    const glGeomItem = this.glGeomItems[index]\n    // When an item is deleted, we allocate its index to the free list\n    // and null this item in the array. skip over null items.\n    if (!glGeomItem) return\n    const { geomItem, geomId } = glGeomItem\n\n    const stride = pixelsPerItem * 4 // The number of floats per draw item.\n    const offset = subIndex * stride\n\n    // /////////////////////////\n    // Geom Item Params\n    let flags = 0\n    if (geomItem.isCutawayEnabled()) {\n      flags |= GLGeomItemFlags.GEOMITEM_FLAG_CUTAWAY\n    }\n    if (geomItem.getSelectable() == false) {\n      flags |= GLGeomItemFlags.GEOMITEM_INVISIBLE_IN_GEOMDATA\n    }\n\n    const pix0 = Vec4.createFromBuffer(dataArray.buffer, (offset + 0) * 4)\n    pix0.set(flags, 0, 0, 0)\n\n    const material = geomItem.getParameter('Material').getValue()\n    const allocation = this.renderer.glMaterialLibrary.getMaterialAllocation(material)\n    if (allocation) {\n      pix0.z = allocation.start\n    }\n\n    // Store the geomId for debugging purposes.\n    // see: DEBUG_GEOM_ID\n    pix0.w = geomId\n\n    // /////////////////////////\n    // Geom Matrix\n    const mat4 = geomItem.getGeomMat4()\n    const pix1 = Vec4.createFromBuffer(dataArray.buffer, (offset + 4) * 4)\n    const pix2 = Vec4.createFromBuffer(dataArray.buffer, (offset + 8) * 4)\n    const pix3 = Vec4.createFromBuffer(dataArray.buffer, (offset + 12) * 4)\n    pix1.set(mat4.xAxis.x, mat4.yAxis.x, mat4.zAxis.x, mat4.translation.x)\n    pix2.set(mat4.xAxis.y, mat4.yAxis.y, mat4.zAxis.y, mat4.translation.y)\n    pix3.set(mat4.xAxis.z, mat4.yAxis.z, mat4.zAxis.z, mat4.translation.z)\n\n    // /////////////////////////\n    // Hilight\n    const pix4 = Vec4.createFromBuffer(dataArray.buffer, (offset + 16) * 4)\n    if (geomItem.isHighlighted()) {\n      const highlight = geomItem.getHighlight()\n      pix4.set(highlight.r, highlight.g, highlight.b, highlight.a)\n    }\n\n    // /////////////////////////\n    // Cutaway\n    const pix5 = Vec4.createFromBuffer(dataArray.buffer, (offset + 20) * 4)\n    if (geomItem.isCutawayEnabled()) {\n      const cutAwayVector = geomItem.getCutVector()\n      const cutAwayDist = geomItem.getCutDist()\n      // console.log(geomItem.getName(), geomItem.isCutawayEnabled(), flags, pix0.toString())\n      pix5.set(cutAwayVector.x, cutAwayVector.y, cutAwayVector.z, cutAwayDist)\n    }\n  }\n\n  /**\n   * Gathers data to pass to the culling worker.\n   * @param {GeomItem} geomItem - The GeomItem to gether the data for.\n   * @param {Material} material - The material of GeomItem.\n   * @param {number} index - The index of the item to gether the data for.\n   * @return {object} - the JSON data that will be passed to the worker.\n   */\n  getCullingWorkerData(geomItem, material, index) {\n    const bbox = geomItem.getParameter('BoundingBox').getValue()\n    const boundingRadius = bbox.size() * 0.5\n    const pos = bbox.center()\n\n    // Some items can't be culled, if they calculate the size in the GPU.\n    // Handles with a fixed size on screen, or points with a fixed size on\n    // screen simply cannot be culled, as they\n    let cullable = geomItem.cullable != false\n    const fixedSizeParam = material.getParameter('MaintainScreenSize')\n    if (fixedSizeParam && fixedSizeParam.getValue()) {\n      cullable = false\n    }\n    if (material.getShaderName().startsWith('ScreenSpace')) {\n      cullable = false\n    }\n    if (material.hasParameter('PointSize')) {\n      cullable = false\n    }\n\n    return {\n      id: index,\n      boundingRadius,\n      pos: pos.asArray(),\n      cullable,\n      visible: geomItem.isVisible(),\n    }\n  }\n\n  /**\n   * Any items that need to be updated on the worker are now pushed.\n   */\n  uploadGeomItemsToWorker() {\n    if (this.enableFrustumCulling) {\n      const geomItemsUpdateToCullingWorker = []\n      this.dirtyWorkerItemIndices.forEach((index) => {\n        const glGeomItem = this.glGeomItems[index]\n        // When an item is deleted, we allocate its index to the free list\n        // and null this item in the array. skip over null items.\n        if (!glGeomItem) return\n        const { geomItem } = glGeomItem\n        const material = geomItem.getParameter('Material').getValue()\n        geomItemsUpdateToCullingWorker.push(this.getCullingWorkerData(geomItem, material, index))\n      })\n\n      // /////////////////////////\n      // Update the culling worker\n      this.worker.postMessage({\n        type: 'UpdateGeomItems',\n        geomItems: geomItemsUpdateToCullingWorker,\n        removedItemIndices: this.removedItemIndices,\n      })\n\n      this.dirtyWorkerItemIndices.clear()\n      this.removedItemIndices = []\n    }\n  }\n\n  /**\n   * The uploadGeomItems method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  uploadGeomItems(renderstate) {\n    const gl = this.renderer.gl\n    if (!gl.floatTexturesSupported) {\n      return\n    }\n\n    let size = Math.round(Math.sqrt(this.glGeomItems.length * pixelsPerItem) + 0.5)\n    // Only support power 2 textures. Else we get strange corruption on some GPUs\n    // in some scenes.\n    size = MathFunctions.nextPow2(size)\n    // Size should be a multiple of pixelsPerItem, so each geom item is always contiguous\n    // in memory. (makes updating a lot easier. See __updateItemInstanceData below)\n    if (size % pixelsPerItem != 0) size += pixelsPerItem - (size % pixelsPerItem)\n\n    if (!this.glGeomItemsTexture) {\n      this.glGeomItemsTexture = new GLTexture2D(gl, {\n        format: 'RGBA',\n        type: 'FLOAT',\n        width: size,\n        height: size,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        mipMapped: false,\n      })\n      this.glGeomItemsTexture.clear()\n    } else if (this.glGeomItemsTexture.width != size) {\n      this.glGeomItemsTexture.resize(size, size)\n      this.dirtyItemIndices = Array((size * size) / pixelsPerItem)\n        .fill()\n        .map((v, i) => i)\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, this.glGeomItemsTexture.glTex)\n    const typeId = this.glGeomItemsTexture.getType()\n\n    for (let i = 0; i < this.dirtyItemIndices.length; i++) {\n      const indexStart = this.dirtyItemIndices[i]\n      const yoffset = Math.floor((indexStart * pixelsPerItem) / size)\n      let indexEnd = indexStart + 1\n      for (let j = i + 1; j < this.dirtyItemIndices.length; j++) {\n        const index = this.dirtyItemIndices[j]\n        if (Math.floor((index * pixelsPerItem) / size) != yoffset) {\n          break\n        }\n        if (index != indexEnd) {\n          break\n        }\n        indexEnd++\n      }\n\n      // TODO: for contiguous blocks, we create larger arrays and populate\n      // and upload them in one step.\n      const uploadCount = indexEnd - indexStart\n      const xoffset = (indexStart * pixelsPerItem) % size\n      const width = pixelsPerItem * uploadCount\n      const height = 1\n      const dataArray = new Float32Array(pixelsPerItem * 4 * uploadCount) // 4==RGBA pixels.\n\n      for (let j = indexStart; j < indexEnd; j++) {\n        this.populateDrawItemDataArray(j, j - indexStart, dataArray)\n      }\n\n      if (typeId == gl.FLOAT) {\n        this.glGeomItemsTexture.populate(dataArray, width, height, xoffset, yoffset, false)\n      } else {\n        const unit16s = MathFunctions.convertFloat32ArrayToUInt16Array(dataArray)\n        this.glGeomItemsTexture.populate(unit16s, width, height, xoffset, yoffset, false)\n      }\n\n      i += uploadCount - 1\n    }\n\n    this.removedItemIndices = []\n    this.dirtyItemIndices = []\n  }\n\n  /**\n   * Updates the GPU state if any update is needed.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bind(renderstate) {\n    if (this.dirtyWorkerItemIndices.size > 0 || this.removedItemIndices.length > 0) {\n      this.uploadGeomItemsToWorker(renderstate)\n    }\n    if (this.dirtyItemIndices.length > 0) {\n      this.uploadGeomItems(renderstate)\n    }\n\n    const gl = this.renderer.gl\n    const { instancesTexture, instancesTextureSize } = renderstate.unifs\n    if (instancesTexture) {\n      this.glGeomItemsTexture.bindToUniform(renderstate, instancesTexture)\n      gl.uniform1i(instancesTextureSize.location, this.glGeomItemsTexture.width)\n    }\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {}\n}\n\nexport { GLGeomItemLibrary }\n","/* eslint-disable guard-for-in */\nimport { TreeItem, GeomItem, ParameterOwner } from '../SceneTree/index'\nimport { SystemDesc } from '../SystemDesc'\nimport { create3DContext } from './GLContext'\nimport { GLScreenQuad } from './GLScreenQuad'\nimport { GLViewport } from './GLViewport'\nimport { Registry } from '../Registry'\nimport { VRViewport } from './VR/VRViewport'\nimport { POINTER_TYPES } from '../Utilities/EnumUtils'\nimport { GLMaterialLibrary } from './Drawing/GLMaterialLibrary.js'\nimport { GLGeomLibrary } from './Drawing/GLGeomLibrary.js'\nimport { GLGeomItemLibrary } from './Drawing/GLGeomItemLibrary.js'\n\nlet activeGLRenderer = undefined\nlet pointerIsDown = false\nlet pointerLeft = false\nconst registeredPasses = {}\n\n/**\n * Class representing a GL base renderer.\n *\n * @extends ParameterOwner\n */\nclass GLBaseRenderer extends ParameterOwner {\n  /**\n   * Create a GL base renderer.\n   * @param {HTMLElement|HTMLCanvasElement} $canvas - The canvas element.\n   * @param {object} options - The options value.\n   */\n  constructor($canvas, options = {}) {\n    super()\n\n    this.listenerIDs = {}\n    if (!SystemDesc.gpuDesc) {\n      console.warn('Unable to create renderer')\n      return\n    }\n\n    this.solidAngleLimit = 0.004\n\n    this.__shaders = {}\n    this.__passes = {}\n    this.__passesRegistrationOrder = []\n    this.__passCallbacks = []\n\n    this.__viewports = []\n    this.__activeViewport = undefined\n    this.__continuousDrawing = false\n    this.__redrawRequested = false\n    this.__isMobile = SystemDesc.isMobileDevice\n\n    this.__drawSuspensionLevel = 0\n    this.__shaderDirectives = {}\n    this.directives = {}\n\n    this.__xrViewportPresenting = false\n\n    this.setupWebGL($canvas, options.webglOptions ? { ...options, ...options.webglOptions } : options)\n    this.bindEventHandlers()\n    this.addViewport('main')\n\n    this.glMaterialLibrary = new GLMaterialLibrary(this)\n    this.glMaterialLibrary.on('updated', () => {\n      this.requestRedraw()\n    })\n    this.glGeomLibrary = new GLGeomLibrary(this)\n    this.glGeomLibrary.on('updated', () => {\n      this.requestRedraw()\n    })\n    this.glGeomItemLibrary = new GLGeomItemLibrary(this, options)\n    this.glGeomItemLibrary.on('updated', () => {\n      this.requestRedraw()\n    })\n\n    // eslint-disable-next-line guard-for-in\n    for (const passType in registeredPasses) {\n      for (const cls of registeredPasses[passType]) {\n        // eslint-disable-next-line new-cap\n        this.addPass(new cls(), passType, false)\n      }\n    }\n\n    // ////////////////////////////////////////////\n    // WebXR\n    this.__supportXR = options.supportXR !== undefined ? options.supportXR : true\n    this.__xrViewport = undefined\n    this.__xrViewportPromise = new Promise((resolve, reject) => {\n      if (this.__supportXR) {\n        // if(!navigator.xr && window.WebVRPolyfill != undefined) {\n        //     this.__vrpolyfill = new WebVRPolyfill();\n        // }\n        if (navigator.xr) {\n          const setupXRViewport = () => {\n            // Note: could cause a context loss on machines with\n            // multi-gpus (integrated Intel).\n            // This is because the may force the context to switch\n            // to the discrete GPU.\n            // TODO: Provide a system to re-load the GPU data.\n            // this.__gl.setCompatibleXRDevice(device);\n            this.__gl.makeXRCompatible().then(() => {\n              this.__xrViewport = this.__setupXRViewport()\n              this.emit('xrViewportSetup', {\n                xrViewport: this.__xrViewport,\n              })\n              resolve(this.__xrViewport)\n            })\n          }\n          navigator.xr\n            .isSessionSupported('immersive-vr')\n            .then((isSupported) => {\n              if (isSupported) {\n                setupXRViewport()\n              }\n            })\n            .catch((reason) => {\n              console.warn('Unable to setup XR:' + reason)\n            })\n          // TODO:\n          // navigator.xr.on('devicechange', checkForXRSupport);\n        }\n      }\n    })\n  }\n\n  /**\n   * The addShaderPreprocessorDirective method.\n   * @param {string} name - The name value.\n   * @param {string} value - The value param.\n   */\n  addShaderPreprocessorDirective(name, value) {\n    if (value) this.__shaderDirectives[name] = '#define ' + name + ' = ' + value\n    else this.__shaderDirectives[name] = '#define ' + name\n    const directives = []\n    // eslint-disable-next-line guard-for-in\n    for (const key in this.__shaderDirectives) {\n      directives.push(this.__shaderDirectives[key])\n    }\n    this.directives = directives\n    this.__gl.shaderopts = { directives } // used by zea-cad.\n  }\n\n  /**\n   * Returns HTMLCanvasElement's width\n   *\n   * @return {number} - The return value.\n   */\n  getWidth() {\n    return this.__glcanvas.width\n  }\n\n  /**\n   * Returns HTMLCanvasElement's Height\n   * @return {number} - The return value.\n   */\n  getHeight() {\n    return this.__glcanvas.height\n  }\n\n  // //////////////////////////////////////\n  // Viewports\n\n  /**\n   * Adds a new viewport(viewing region) to the scene.\n   *\n   * @param {string} name - The name of the viewport.\n   * @return {GLViewport} - The return value.\n   */\n  addViewport(name) {\n    const vp = new GLViewport(this, name, this.getWidth(), this.getHeight())\n\n    const updated = () => {\n      this.requestRedraw()\n    }\n    const viewChanged = (data) => {\n      if (!this.__xrViewportPresenting) {\n        this.emit('viewChanged', data)\n      }\n    }\n    vp.on('updated', updated)\n    vp.on('viewChanged', viewChanged)\n\n    this.__viewports.push(vp)\n    return vp\n  }\n\n  /**\n   * Returns a viewport element by specifying its index in the list of viewports.\n   *\n   * @param {number} index - The index value.\n   * @return {GLViewport} - The return value.\n   */\n  getViewport(index = 0) {\n    return this.__viewports[index]\n  }\n\n  /**\n   * Returns a viewport element under the specified XY coordinates.\n   *\n   * @param {number} offsetX - The viewport offset in the X axis.\n   * @param {number} offsetY - The viewport offset in the Y axis.\n   * @return {GLViewport} - The return value.\n   */\n  getViewportAtPos(offsetX, offsetY) {\n    for (const vp of this.__viewports) {\n      const x = vp.getPosX()\n      const y = vp.getPosY()\n      const width = vp.getWidth()\n      const height = vp.getHeight()\n      if (offsetX >= x && offsetY >= y && offsetX <= width + x && offsetY <= height + y) return vp\n    }\n    return undefined\n  }\n\n  /**\n   * Sets as `active` the specified viewport.\n   *\n   * @param {GLViewport} vp - The viewport.\n   */\n  activateViewport(vp) {\n    if (this.__activeViewport == vp) return\n\n    this.__activeViewport = vp\n  }\n\n  /**\n   * Sets as àctive` the viewport under the specified XY coordinates.\n   *\n   * @param {number} offsetX - The viewport offset in the X axis.\n   * @param {number} offsetY - The viewport offset in the Y axis.\n   */\n  activateViewportAtPos(offsetX, offsetY) {\n    if (this.__xrViewportPresenting) return\n    const vp = this.getViewportAtPos(offsetX, offsetY)\n    if (vp && vp != this.__activeViewport) this.activateViewport(vp)\n  }\n\n  /**\n   * Returns current active viewport.\n   *\n   * @return {GLViewport} - The return value.\n   */\n  getActiveViewport() {\n    return this.__activeViewport\n  }\n\n  /**\n   * The suspendDrawing method.\n   */\n  suspendDrawing() {\n    this.__drawSuspensionLevel++\n  }\n\n  /**\n   * The resumeDrawing method.\n   */\n  resumeDrawing() {\n    this.__drawSuspensionLevel--\n    if (this.__drawSuspensionLevel == 0) {\n      this.renderGeomDataFbos()\n      this.requestRedraw()\n    }\n  }\n\n  /**\n   * The renderGeomDataFbos method. Frame buffer (FBO).\n   */\n  renderGeomDataFbos() {\n    if (this.__renderGeomDataFbosRequested == true) return\n\n    this.__renderGeomDataFbosRequested = true\n    const onAnimationFrame = () => {\n      for (const vp of this.__viewports) vp.renderGeomDataFbo()\n      this.__renderGeomDataFbosRequested = false\n    }\n    window.requestAnimationFrame(onAnimationFrame)\n  }\n\n  // //////////////////////////////////////\n  // Scene\n\n  /**\n   * Sets up and displays the scene grid of a given size and resolution.\n   *\n   * @param {number} gridSize - The size of the grid.\n   * @param {Color} gridColor - The color of the grid.\n   * @param {number} resolution - The resolution of the grid.\n   * @param {number} lineThickness - The thickness of the grid lines.\n   * @return {GridTreeItem} - The return value.\n   * @deprecated\n   */\n  setupGrid(gridSize, gridColor, resolution, lineThickness) {\n    console.warn('@GLBaseRenderer#setupGrid - Deprecated Method. Please use scene.setupGrid')\n    return this.__scene.setupGrid(gridSize, resolution, gridColor)\n  }\n\n  /**\n   * Returns current scene(Environment where all assets live) object.\n   *\n   * @return {Scene} - The return value.\n   */\n  getScene() {\n    return this.__scene\n  }\n\n  /**\n   * Sets scene to the renderer.\n   *\n   * @param {Scene} scene - The scene value.\n   */\n  setScene(scene) {\n    this.__scene = scene\n    this.addTreeItem(this.__scene.getRoot())\n\n    if (this.__gizmoContext) this.__gizmoContext.setSelectionManager(scene.getSelectionManager())\n\n    this.emit('sceneSet', { scene: this.__scene })\n  }\n\n  /**\n   * Adds tree items to the renderer, selecting the correct pass to delegate rendering too, and listens to future changes in the tree.\n   *\n   * @param {TreeItem} treeItem - The tree item to add.\n   */\n  addTreeItem(treeItem) {\n    // Note: we can have BaseItems in the tree now.\n    if (!(treeItem instanceof TreeItem)) return\n\n    const id = treeItem.getId()\n    const listenerIDs = {}\n    this.listenerIDs[id] = listenerIDs\n\n    if (treeItem instanceof GeomItem) {\n      const geomParam = treeItem.getParameter('Geometry')\n      if (geomParam.getValue() == undefined) {\n        // we will add this geomItem once it receives its geom.\n        const geomAssigned = () => {\n          this.assignTreeItemToGLPass(treeItem)\n        }\n        listenerIDs['Geometry.valueChanged'] = geomParam.once('valueChanged', geomAssigned)\n      } else {\n        this.assignTreeItemToGLPass(treeItem)\n      }\n    } else {\n      this.assignTreeItemToGLPass(treeItem)\n    }\n\n    // Traverse the tree adding items until we hit the leaves (which are usually GeomItems.)\n    for (const childItem of treeItem.getChildren()) {\n      if (childItem) this.addTreeItem(childItem)\n    }\n\n    listenerIDs['childAdded'] = treeItem.on('childAdded', (event) => {\n      this.addTreeItem(event.childItem)\n    })\n    listenerIDs['childRemoved'] = treeItem.on('childRemoved', (event) => {\n      this.removeTreeItem(event.childItem)\n    })\n\n    this.renderGeomDataFbos()\n  }\n\n  /**\n   * Searches through the passes and finds the appropriate pass to draw the given tree items.\n   *\n   * @param {TreeItem} treeItem - The tree item to assign.\n   */\n  assignTreeItemToGLPass(treeItem) {\n    if (treeItem instanceof GeomItem) {\n      const geomItem = treeItem\n      this.glGeomItemLibrary.addGeomItem(geomItem)\n    }\n\n    let handled = false\n    for (let i = this.__passesRegistrationOrder.length - 1; i >= 0; i--) {\n      const pass = this.__passesRegistrationOrder[i]\n\n      const rargs = {\n        continueInSubTree: true,\n      }\n      handled = pass.itemAddedToScene(treeItem, rargs)\n      if (handled) {\n        if (!rargs.continueInSubTree) return\n        break\n      }\n    }\n\n    if (!handled) {\n      for (const passCbs of this.__passCallbacks) {\n        const rargs = {\n          continueInSubTree: true,\n        }\n        const handled = passCbs.itemAddedFn(treeItem, rargs)\n        if (handled) {\n          if (!rargs.continueInSubTree) return\n          break\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove tree items from the scene.\n   *\n   * @param {TreeItem} treeItem - The tree item to remove.\n   */\n  removeTreeItem(treeItem) {\n    // Note: we can have BaseItems in the tree now.\n    if (!(treeItem instanceof TreeItem)) return\n\n    const id = treeItem.getId()\n    const listenerIDs = this.listenerIDs[id]\n    delete this.listenerIDs[id]\n\n    treeItem.removeListenerById('childAdded', listenerIDs['childAdded'])\n    treeItem.removeListenerById('childRemoved', listenerIDs['childRemoved'])\n\n    for (let i = this.__passesRegistrationOrder.length - 1; i >= 0; i--) {\n      const pass = this.__passesRegistrationOrder[i]\n      const rargs = {\n        continueInSubTree: true,\n      }\n      const handled = pass.itemRemovedFromScene(treeItem, rargs)\n      if (handled) {\n        if (!rargs.continueInSubTree) return\n        break\n      }\n    }\n\n    for (const passCbs of this.__passCallbacks) {\n      if (!passCbs.itemRemovedFn) continue\n      const rargs = {\n        continueInSubTree: true,\n      }\n      const handled = passCbs.itemRemovedFn(treeItem, rargs)\n      if (handled) {\n        if (!rargs.continueInSubTree) return\n        break\n      }\n    }\n\n    // Traverse the tree adding items till we hit the leaves (which are usually GeomItems).\n    for (const childItem of treeItem.getChildren()) {\n      if (childItem) this.removeTreeItem(childItem)\n    }\n\n    if (treeItem instanceof GeomItem) {\n      const geomItem = treeItem\n      if (listenerIDs['Geometry.valueChanged']) {\n        const geomParam = treeItem.getParameter('Geometry')\n        geomParam.removeListenerById('valueChanged', listenerIDs['Geometry.valueChanged'])\n      }\n\n      this.glGeomItemLibrary.removeGeomItem(geomItem)\n    }\n\n    this.renderGeomDataFbos()\n  }\n\n  // ///////////////////////\n  // Renderer Setup\n\n  /**\n   * Getter for gl.\n   */\n  get gl() {\n    return this.__gl\n  }\n\n  /**\n   * The getGL method.\n   * @return {WebGLRenderingContext} - The return value.\n   */\n  getGL() {\n    return this.__gl\n  }\n\n  /**\n   * Handle the canvas's parent resizing.\n   *\n   * @param {number} width - The new width of the canvas.\n   * @param {number} height - The new height of the canvas.\n   *\n   * @private\n   */\n  handleResize(newWidth, newHeight) {\n    if (this.__xrViewportPresenting) {\n      return\n    }\n\n    if (newWidth != this.__glcanvas.width || newHeight != this.__glcanvas.height) {\n      this.__glcanvas.width = newWidth\n      this.__glcanvas.height = newHeight\n\n      for (const vp of this.__viewports) {\n        vp.resize(newWidth, newHeight)\n      }\n\n      this.emit('resized', {\n        width: newWidth,\n        height: newHeight,\n      })\n    }\n    this.requestRedraw()\n  }\n\n  /**\n   * Returns host div of the canvas element.\n   *\n   * @return {HTMLElement} - The return value.\n   */\n  getDiv() {\n    return this.__glcanvas.parentElement\n  }\n\n  /**\n   * Setups the WebGL configuration for the renderer, specifying the canvas element where our\n   *\n   * @param {HTMLCanvasElement|HTMLElement} $canvas - The $canvas element.\n   * @param {object} webglOptions - The webglOptions value.\n   */\n  setupWebGL($canvas, webglOptions) {\n    const { tagName } = $canvas\n\n    if (!['DIV', 'CANVAS'].includes(tagName)) {\n      throw new Error('Only CANVAS and DIV are valid root elements.')\n    }\n\n    const rootIsDiv = tagName === 'DIV'\n    this.__glcanvas = $canvas\n\n    if (rootIsDiv) {\n      console.warn(\n        '@GLBaseRenderer#setupWebGL.',\n        'Using a DIV as root element is deprecated.',\n        'Use a CANVAS instead.',\n        'See: https://docs.zea.live/zea-engine/#/getting-started/get-started-with-engine?id=basic-setup'\n      )\n\n      this.__glcanvas = document.createElement('canvas')\n\n      this.__div = $canvas\n      this.__div.appendChild(this.__glcanvas)\n    } else {\n      this.__glcanvas = $canvas\n    }\n    this.__glcanvas.style['touch-action'] = 'none'\n    this.__glcanvas.style.width = 'auto'\n    this.__glcanvas.style.height = 'auto'\n    this.__glcanvas.style.margin = '0px'\n\n    let lastResize = performance.now()\n    let timoutId = 0\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (!entry.contentRect) {\n          return\n        }\n        const calcPixelsAndResize = () => {\n          let width\n          let height\n          let dpr = window.devicePixelRatio\n          if (entry.devicePixelContentBoxSize) {\n            // NOTE: Only this path gives the correct answer\n            // The other paths are imperfect fallbacks\n            // for browsers that don't provide anyway to do this\n            width = entry.devicePixelContentBoxSize[0].inlineSize\n            height = entry.devicePixelContentBoxSize[0].blockSize\n            dpr = 1 // it's already in width and height\n          } else if (entry.contentBoxSize) {\n            if (entry.contentBoxSize[0]) {\n              width = entry.contentBoxSize[0].inlineSize\n              height = entry.contentBoxSize[0].blockSize\n            } else {\n              width = entry.contentBoxSize.inlineSize\n              height = entry.contentBoxSize.blockSize\n            }\n          } else {\n            width = entry.contentRect.width\n            height = entry.contentRect.height\n          }\n          const displayWidth = Math.round(width * dpr)\n          const displayHeight = Math.round(height * dpr)\n          this.handleResize(displayWidth, displayHeight)\n        }\n        // Note: Rapid resize events would cause WebGL to render black.\n        // There appeared nothing to indicate why we get black, but throttling\n        // the resizing of our canvas and buffers seems to work.\n        const now = performance.now()\n        if (now - lastResize > 100) {\n          lastResize = now\n          // If a delayed resize is scheduled, cancel it.\n          if (timoutId) {\n            clearTimeout(timoutId)\n            timoutId = 0\n          }\n          calcPixelsAndResize()\n        } else {\n          // Set a timer to see if we can delay this resize by a few ms.\n          // If a resize happens in the meantime that succeeds, then skip this one.\n          // This ensures that after a drag to resize, the final resize event\n          // should always eventually apply.\n          timoutId = setTimeout(() => {\n            const now = performance.now()\n            if (now - lastResize > 100) {\n              lastResize = now\n              calcPixelsAndResize()\n            }\n          }, 100)\n        }\n      }\n    })\n\n    this.handleResize(this.__glcanvas.parentElement.clientWidth, this.__glcanvas.parentElement.clientHeight)\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    try {\n      // only call us of the number of device pixels changed\n      resizeObserver.observe(this.__glcanvas.parentNode, { box: 'device-pixel-content-box' })\n    } catch (ex) {\n      // device-pixel-content-box is not supported so fallback to this\n      resizeObserver.observe(this.__glcanvas.parentNode, { box: 'content-box' })\n    }\n\n    webglOptions.preserveDrawingBuffer = true\n    webglOptions.antialias = webglOptions.antialias != undefined ? webglOptions.antialias : true\n    webglOptions.depth = true\n    webglOptions.stencil = false\n    webglOptions.alpha = webglOptions.alpha ? webglOptions.alpha : false\n    // Note: Due to a change in Chrome (version 88-89), providing true here caused a pause when creating\n    // an WebGL context, if the XR device was unplugged. We also call 'makeXRCompatible' when setting\n    // up the XRViewport, so we to get an XR Compatible context anyway.\n    webglOptions.xrCompatible = false\n\n    // Most applications of our engine will prefer the high-performance context by default.\n    webglOptions.powerPreference = webglOptions.powerPreference || 'high-performance'\n\n    this.__gl = create3DContext(this.__glcanvas, webglOptions)\n    if (!this.__gl) alert('Unable to create WebGL context. WebGL not supported.')\n    this.__gl.renderer = this\n\n    if (this.__gl.name == 'webgl2') {\n      this.addShaderPreprocessorDirective('ENABLE_ES3')\n    }\n    if (this.__gl.floatTexturesSupported) {\n      this.addShaderPreprocessorDirective('ENABLE_FLOAT_TEXTURES')\n    }\n\n    {\n      const ext = this.__gl.name == 'webgl2' ? this.__gl.getExtension('WEBGL_multi_draw') : null\n      if (ext && !webglOptions.disableMultiDraw) {\n        this.__gl.multiDrawArrays = ext.multiDrawArraysWEBGL.bind(ext)\n        this.__gl.multiDrawElements = ext.multiDrawElementsWEBGL.bind(ext)\n        this.__gl.multiDrawElementsInstanced = ext.multiDrawElementsInstancedWEBGL.bind(ext)\n        this.__gl.multiDrawArraysInstanced = ext.multiDrawArraysInstancedWEBGL.bind(ext)\n      } else {\n        this.addShaderPreprocessorDirective('EMULATE_MULTI_DRAW')\n      }\n    }\n\n    this.__gl.screenQuad = new GLScreenQuad(this.__gl)\n    this.__screenQuad = this.__gl.screenQuad\n\n    // Note: Mobile devices don't provide much support for reading data back from float textures,\n    // and checking compatibility is patchy at best.\n    // Note: We are now pushing on high-end mobile devices.\n    // Galaxy and above. We need this. We need to accurately determine\n    // if the float buffer is not supported.\n    this.__floatGeomBuffer =\n      webglOptions.floatGeomBuffer != undefined ? webglOptions.floatGeomBuffer : this.__gl.floatTexturesSupported\n    this.__gl.floatGeomBuffer = this.__floatGeomBuffer\n    // Note: the following returns UNSIGNED_BYTE even if the browser supports float.\n    // const implType = this.__gl.getParameter(this.__gl.IMPLEMENTATION_COLOR_READ_TYPE);\n    // this.__floatGeomBuffer = (implType == this.__gl.FLOAT);\n  }\n\n  /**\n   * Binds IO event handlers to the canvas\n   */\n  bindEventHandlers() {\n    // ////////////////////////////////\n    // Setup event handlers\n    const isValidCanvas = () => this.getWidth() > 0 && this.getHeight()\n\n    const prepareEvent = (event) => {\n      event.propagating = true\n      const sp = event.stopPropagation\n      event.stopPropagation = () => {\n        event.propagating = false\n        if (sp) sp.call(event)\n      }\n    }\n    const calcRendererCoords = (event) => {\n      const rect = this.__glcanvas.getBoundingClientRect()\n      // Disabling devicePixelRatio for now. See: __onResize\n      const DPR = 1.0 // window.devicePixelRatio\n      // Note: the rendererX/Y values are relative to the viewport,\n      // but are available outside the viewport. So when a mouse\n      // drag occurs, and drags outside the viewport, these values\n      // provide consistent coords.\n      // offsetX/Y are only valid inside the viewport and so cause\n      // jumps when the mouse leaves the viewport.\n      event.rendererX = (event.clientX - rect.left) * DPR\n      event.rendererY = (event.clientY - rect.top) * DPR\n    }\n\n    /** Mouse Events Start */\n    const isMobileSafariMouseEvent = (event) => {\n      if (SystemDesc.isMobileDevice && SystemDesc.browserName == 'Safari') {\n        console.warn('Mobile Safari is triggering mouse event:', event.type)\n        return true\n      }\n\n      return false\n    }\n\n    this.__glcanvas.addEventListener('mousedown', (event) => {\n      if (isMobileSafariMouseEvent(event)) {\n        return\n      }\n\n      prepareEvent(event)\n      calcRendererCoords(event)\n      pointerIsDown = true\n      activeGLRenderer = this\n      activeGLRenderer.activateViewportAtPos(event.rendererX, event.rendererY)\n      const viewport = activeGLRenderer.getActiveViewport()\n      if (viewport) {\n        event.pointerType = POINTER_TYPES.mouse\n        viewport.onPointerDown(event)\n      }\n\n      pointerLeft = false\n      return false\n    })\n\n    document.addEventListener('mouseup', (event) => {\n      if (isMobileSafariMouseEvent(event)) {\n        return\n      }\n\n      if (activeGLRenderer != this || !isValidCanvas()) return\n\n      prepareEvent(event)\n      calcRendererCoords(event)\n      pointerIsDown = false\n      const viewport = activeGLRenderer.getActiveViewport()\n      if (viewport) {\n        event.pointerType = POINTER_TYPES.mouse\n        viewport.onPointerUp(event)\n      }\n\n      if (pointerLeft) {\n        if (viewport) {\n          event.pointerType = POINTER_TYPES.mouse\n          viewport.onPointerLeave(event)\n        }\n\n        activeGLRenderer = undefined\n      }\n\n      return false\n    })\n\n    document.addEventListener('mousemove', (event) => {\n      if (isMobileSafariMouseEvent(event)) {\n        return\n      }\n\n      if (activeGLRenderer != this || !isValidCanvas()) return\n\n      prepareEvent(event)\n      calcRendererCoords(event)\n      if (!pointerIsDown) activeGLRenderer.activateViewportAtPos(event.rendererX, event.rendererY)\n\n      const viewport = activeGLRenderer.getActiveViewport()\n      if (viewport) {\n        event.pointerType = POINTER_TYPES.mouse\n        viewport.onPointerMove(event)\n      }\n      return false\n    })\n\n    this.__glcanvas.addEventListener('mouseenter', (event) => {\n      if (isMobileSafariMouseEvent(event)) {\n        return\n      }\n\n      if (!pointerIsDown) {\n        activeGLRenderer = this\n        event.pointerType = POINTER_TYPES.mouse\n\n        prepareEvent(event)\n        calcRendererCoords(event)\n        // TODO: Check mouse pos.\n        activeGLRenderer.activateViewportAtPos(event.rendererX, event.rendererY)\n\n        if (!pointerIsDown) {\n          const viewport = activeGLRenderer.getActiveViewport()\n          if (viewport) {\n            event.pointerType = POINTER_TYPES.mouse\n            viewport.onPointerEnter(event)\n          }\n        }\n\n        pointerLeft = false\n      }\n    })\n\n    this.__glcanvas.addEventListener('mouseleave', (event) => {\n      if (isMobileSafariMouseEvent(event)) {\n        return\n      }\n\n      if (activeGLRenderer != this || !isValidCanvas()) return\n\n      prepareEvent(event)\n      if (!pointerIsDown) {\n        const viewport = activeGLRenderer.getActiveViewport()\n        if (viewport) {\n          event.pointerType = POINTER_TYPES.mouse\n          viewport.onPointerLeave(event)\n        }\n        activeGLRenderer = undefined\n      } else {\n        pointerLeft = true\n      }\n    })\n\n    /** Mouse Events End */\n\n    /** Touch Events Start */\n    this.__glcanvas.addEventListener(\n      'touchstart',\n      (event) => {\n        event.stopPropagation()\n\n        // Touch events are passive and so cannot call prevent default\n        // replace with a stub here...\n        event.preventDefault = () => {}\n\n        prepareEvent(event)\n        for (let i = 0; i < event.touches.length; i++) {\n          calcRendererCoords(event.touches[i])\n        }\n\n        event.pointerType = POINTER_TYPES.touch\n        this.getViewport().onPointerDown(event)\n      },\n      { passive: true }\n    )\n\n    this.__glcanvas.addEventListener(\n      'touchend',\n      (event) => {\n        event.stopPropagation()\n\n        // Touch events are passive and so cannot call prevent default\n        // replace with a stub here...\n        event.preventDefault = () => {}\n\n        prepareEvent(event)\n        for (let i = 0; i < event.changedTouches.length; i++) {\n          calcRendererCoords(event.changedTouches[i])\n        }\n\n        event.pointerType = POINTER_TYPES.touch\n        this.getViewport().onPointerUp(event)\n      },\n      { passive: true }\n    )\n\n    this.__glcanvas.addEventListener(\n      'touchmove',\n      (event) => {\n        event.stopPropagation()\n\n        // Touch events are passive and so cannot call prevent default\n        // replace with a stub here...\n        event.preventDefault = () => {}\n\n        prepareEvent(event)\n        for (let i = 0; i < event.touches.length; i++) {\n          calcRendererCoords(event.touches[i])\n        }\n\n        event.pointerType = POINTER_TYPES.touch\n        this.getViewport().onPointerMove(event)\n      },\n      { passive: true }\n    )\n    /** Touch Events End */\n\n    const onWheel = (event) => {\n      if (activeGLRenderer != this || !isValidCanvas()) return\n      if (activeGLRenderer) {\n        prepareEvent(event)\n        calcRendererCoords(event)\n        const vp = activeGLRenderer.getActiveViewport()\n        if (vp) {\n          vp.onWheel(event)\n        }\n      }\n      return false\n    }\n    if (window.addEventListener)\n      /** DOMMouseScroll is for mozilla. */\n      window.addEventListener('wheel', onWheel, { passive: false })\n    else {\n      /** IE/Opera. */\n      window.onmousewheel = document.onmousewheel = onWheel\n    }\n\n    window.oncontextmenu = function () {\n      return false\n    }\n\n    document.addEventListener('keydown', (event) => {\n      if (activeGLRenderer != this || !isValidCanvas()) return\n      prepareEvent(event)\n      const vp = activeGLRenderer.getActiveViewport()\n      if (vp) {\n        vp.onKeyDown(event)\n      }\n    })\n\n    document.addEventListener('keyup', (event) => {\n      if (activeGLRenderer != this || !isValidCanvas()) return\n      prepareEvent(event)\n      const vp = activeGLRenderer.getActiveViewport()\n      if (vp) {\n        vp.onKeyUp(event)\n      }\n    })\n  }\n\n  /**\n   * Returns canvas that was used to generate the gl context.\n   *\n   * @return {HTMLCanvasElement} - The return value.\n   */\n  getGLCanvas() {\n    return this.__glcanvas\n  }\n\n  /**\n   * Frames the specified viewport to the entire scene.\n   * > See also: ${Viewport#frameView}\n   * @param {number} viewportIndex - The viewportIndex value. If multiple viewports are configured, a viewport index will need to be provided.\n   */\n  frameAll(viewportIndex = 0) {\n    this.__viewports[viewportIndex].frameView([this.__scene.getRoot()])\n  }\n\n  // ///////////////////////\n  // Render Items Setup\n\n  /**\n   * A factory function used to construct new shader objects. If that specified shader has already been constructed, it returns the existing shader.\n   * @param {string} shaderName - The shader name.\n   * @return {GLShader} - The return value.\n   */\n  getOrCreateShader(shaderName) {\n    let glShader = this.__shaders[shaderName]\n    if (!glShader) {\n      glShader = Registry.constructClass(shaderName, this.__gl)\n      if (!glShader)\n        console.error('@GLBaseRenderer#getOrCreateShader - Shader not registered with the Registry:', shaderName)\n      this.__shaders[shaderName] = glShader\n    }\n\n    return glShader\n  }\n\n  /**\n   * The addPass method.\n   * @param {GLPass} pass - The pass value.\n   * @param {number} passType - The passType value.\n   * @param {boolean} updateIndices - The updateIndices value.\n   * @return {number} - The return value.\n   */\n  addPass(pass, passType = -1, updateIndices = true) {\n    if (passType == -1) passType = pass.getPassType()\n    if (!this.__passes[passType]) this.__passes[passType] = []\n\n    let index = 0\n    for (const key in this.__passes) {\n      if (key == passType) break\n      index += this.__passes[key].length\n    }\n    index += this.__passes[passType].length\n\n    pass.on('updated', (event) => {\n      this.requestRedraw()\n\n      // If a pass is requesting an update, it is because geometry or\n      // visibility is changing and the geom data Fbo will also be out\n      // of date.\n      this.renderGeomDataFbos()\n    })\n    pass.init(this, index)\n    this.__passes[passType].push(pass)\n\n    if (updateIndices) {\n      // Now update all the  subsequent pass indices because the\n      // indices after will have changed.\n      let offset = 0\n      for (const key in this.__passes) {\n        const passSet = this.__passes[key]\n        passSet.forEach((pass, index) => {\n          pass.setPassIndex(offset + index)\n        })\n        offset += passSet.length\n      }\n    }\n    this.__passesRegistrationOrder.push(pass)\n    this.requestRedraw()\n    return index\n  }\n\n  /**\n   * The getPass method.\n   * @param {number} index - The index value.\n   * @return {GLPass} - The return value.\n   */\n  getPass(index) {\n    let offset = 0\n    for (const key in this.__passes) {\n      const passSet = this.__passes[key]\n      if (index - offset < passSet.length) return passSet[index - offset]\n      offset += passSet.length\n    }\n  }\n\n  // ///////////////////////\n  // VR Setup\n\n  /**\n   * The supportsVR method.\n   * @return {boolean} - The return value.\n   */\n  supportsVR() {\n    console.warn('@GLBaseRenderer#supportVR - Deprecated Method. Please instead connect to the vrViewportSetup signal.')\n    return this.__supportXR && navigator.xr != null\n  }\n\n  /**\n   * The __setupXRViewport method.\n   * @return {VRViewport} - The return value.\n   * @private\n   */\n  __setupXRViewport() {\n    // Always get the last display. Additional displays are added at the end.(e.g. [Polyfill, HMD])\n    const xrvp = new VRViewport(this)\n\n    const emitViewChanged = (event) => {\n      this.emit('viewChanged', event)\n    }\n\n    xrvp.on('presentingChanged', (event) => {\n      const state = event.state\n      this.__xrViewportPresenting = state\n      if (state) {\n        // Let the passes know that VR is starting.\n        // They can do things like optimize shaders.\n        for (const key in this.__passes) {\n          const passSet = this.__passes[key]\n          for (const pass of passSet) {\n            pass.startPresenting()\n          }\n        }\n\n        xrvp.on('viewChanged', emitViewChanged)\n      } else {\n        xrvp.off('viewChanged', emitViewChanged)\n        this.emit('updated', {})\n\n        for (const key in this.__passes) {\n          const passSet = this.__passes[key]\n          for (const pass of passSet) {\n            pass.stopPresenting()\n          }\n        }\n        const event = {\n          interfaceType: 'CameraAndPointer',\n          viewXfo: this.getViewport().getCamera().getParameter('GlobalXfo').getValue(),\n        }\n        this.emit('viewChanged', event)\n\n        this.requestRedraw()\n      }\n    })\n    return xrvp\n  }\n\n  /**\n   * The getVRViewport method.\n   * @return {VRViewport} - The return value.\n   */\n  getVRViewport() {\n    return this.__xrViewport\n  }\n\n  /**\n   * The getXRViewport method.\n   * @return {Promise} - The return value.\n   */\n  getXRViewport() {\n    return this.__xrViewportPromise\n  }\n\n  /**\n   * The isXRViewportPresenting method.\n   * @return {boolean} - The return value.\n   */\n  isXRViewportPresenting() {\n    return this.__xrViewportPresenting\n  }\n\n  // //////////////////////////\n  // Rendering\n\n  /**\n   * The isContinuouslyDrawing method.\n   * @return {boolean} - The return value.\n   */\n  isContinuouslyDrawing() {\n    return this.__continuousDrawing\n  }\n\n  /**\n   * The startContinuousDrawing method.\n   */\n  startContinuousDrawing() {\n    if (this.isContinuouslyDrawing() || this.__xrViewportPresenting) return\n\n    const onAnimationFrame = () => {\n      if (this.__continuousDrawing && !this.__xrViewportPresenting) window.requestAnimationFrame(onAnimationFrame)\n      for (const vp of this.__viewports) vp.draw()\n    }\n\n    this.__continuousDrawing = true\n    window.requestAnimationFrame(onAnimationFrame)\n  }\n\n  /**\n   * The stopContinuousDrawing method.\n   */\n  stopContinuousDrawing() {\n    this.__continuousDrawing = false\n  }\n\n  /**\n   * The toggleContinuousDrawing method.\n   */\n  toggleContinuousDrawing() {\n    if (!this.__continuousDrawing) {\n      this.startContinuousDrawing()\n    } else {\n      this.stopContinuousDrawing()\n    }\n  }\n\n  /**\n   * The drawItemChanged method.\n   */\n  drawItemChanged() {\n    for (const vp of this.__viewports) vp.invalidateGeomDataBuffer()\n    this.requestRedraw()\n  }\n\n  /**\n   * Request a single redraw, usually in response to a signal/event.\n   * @return {boolean} - The return value.\n   */\n  requestRedraw() {\n    // If a redraw has already been requested, then simply return and wait.\n    if (\n      this.__redrawRequested ||\n      this.__continuousDrawing ||\n      this.__xrViewportPresenting ||\n      this.__drawSuspensionLevel > 0\n    ) {\n      return false\n    }\n\n    const onAnimationFrame = () => {\n      this.__redrawRequested = false\n      for (const vp of this.__viewports) {\n        vp.draw()\n      }\n    }\n    window.requestAnimationFrame(onAnimationFrame)\n    this.__redrawRequested = true\n    return true\n  }\n\n  /**\n   * Forces a redraw of the viewports\n   */\n  forceRender() {\n    if (!this.__redrawRequested) {\n      console.warn('@GlBaseRenderer#forceRender - Scene is not dirty')\n      return\n    }\n\n    this.__redrawRequested = false\n    for (const vp of this.__viewports) {\n      vp.draw()\n    }\n  }\n\n  /**\n   * The bindGLBaseRenderer method.\n   * @param {object} renderState - The renderState value.\n   */\n  bindGLBaseRenderer(renderState) {\n    renderState.gl = this.__gl\n    renderState.shaderopts = { directives: this.directives } // we will start deprecating this in favor os a simpler directives\n    renderState.floatGeomBuffer = this.__floatGeomBuffer\n\n    const gl = this.__gl\n    if (!renderState.viewports || renderState.viewports.length == 1) {\n      renderState.bindRendererUnifs = (unifs) => {\n        const { cameraMatrix, viewMatrix, projectionMatrix, eye, isOrthographic } = unifs\n        if (cameraMatrix) {\n          gl.uniformMatrix4fv(cameraMatrix.location, false, renderState.cameraMatrix.asArray())\n        }\n\n        const vp = renderState.viewports[0]\n        if (viewMatrix) {\n          gl.uniformMatrix4fv(viewMatrix.location, false, vp.viewMatrix.asArray())\n        }\n\n        if (projectionMatrix) {\n          gl.uniformMatrix4fv(projectionMatrix.location, false, vp.projectionMatrix.asArray())\n        }\n\n        if (eye) {\n          // Left or right eye, when rendering sterio VR.\n          gl.uniform1i(eye.location, index)\n        }\n        if (isOrthographic) {\n          // Left or right eye, when rendering sterio VR.\n          gl.uniform1i(isOrthographic.location, vp.isOrthographic)\n        }\n      }\n      renderState.bindViewports = (unifs, cb) => cb()\n    } else {\n      renderState.bindRendererUnifs = (unifs) => {\n        // Note: the camera matrix should be the head position instead\n        // of the eye position. The inverse(viewMatrix) can be used\n        // when we want the eye pos.\n        const { cameraMatrix } = unifs\n        if (cameraMatrix) {\n          gl.uniformMatrix4fv(cameraMatrix.location, false, renderState.cameraMatrix.asArray())\n        }\n      }\n\n      renderState.bindViewports = (unifs, cb) => {\n        renderState.viewports.forEach((vp, index) => {\n          gl.viewport(...vp.region)\n\n          const { viewMatrix, projectionMatrix, eye, isOrthographic } = unifs\n          if (viewMatrix) {\n            gl.uniformMatrix4fv(viewMatrix.location, false, vp.viewMatrix.asArray())\n          }\n\n          if (projectionMatrix) {\n            gl.uniformMatrix4fv(projectionMatrix.location, false, vp.projectionMatrix.asArray())\n          }\n\n          if (eye) {\n            // Left or right eye, when rendering sterio VR.\n            gl.uniform1i(eye.location, index)\n          }\n          if (isOrthographic) {\n            // Left or right eye, when rendering sterio VR.\n            gl.uniform1i(isOrthographic.location, vp.isOrthographic)\n          }\n          cb()\n        })\n      }\n    }\n  }\n\n  /**\n   * The drawScene method.\n   * @param {object} renderState - The renderState value.\n   */\n  drawScene(renderState) {\n    // Bind already called by GLRenderer.\n\n    renderState.directives = [...this.directives, '#define DRAW_COLOR']\n    renderState.shaderopts.directives = renderState.directives\n\n    for (const key in this.__passes) {\n      const passSet = this.__passes[key]\n      for (const pass of passSet) {\n        if (pass.enabled) pass.draw(renderState)\n      }\n    }\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderState - The renderState value.\n   */\n  drawHighlightedGeoms(renderState) {\n    this.bindGLBaseRenderer(renderState)\n\n    renderState.directives = [...this.directives, '#define DRAW_HIGHLIGHT']\n    renderState.shaderopts.directives = renderState.directives\n\n    for (const key in this.__passes) {\n      const passSet = this.__passes[key]\n      for (const pass of passSet) {\n        if (pass.enabled) pass.drawHighlightedGeoms(renderState)\n      }\n    }\n  }\n\n  /**\n   * The drawSceneGeomData method.\n   * @param {object} renderState - The renderState value.\n   * @param {number} [mask=255] - The mask value\n   */\n  drawSceneGeomData(renderState, mask = 255) {\n    this.bindGLBaseRenderer(renderState)\n\n    renderState.directives = [...this.directives, '#define DRAW_GEOMDATA']\n    renderState.shaderopts.directives = renderState.directives\n\n    for (const key in this.__passes) {\n      // Skip pass categories that do not match\n      // the mask. E.g. we may not want to hit\n      // \"Overlay\" geoms such as labels,\n      // or we might be trying to move labels and don't\n      // want to grab normal geoms.\n      if ((Number.parseInt(key) & mask) == 0) continue\n      const passSet = this.__passes[key]\n      for (const pass of passSet) {\n        if (pass.enabled) pass.drawGeomData(renderState)\n      }\n    }\n  }\n\n  // ////////////////////////////////////////\n  // Static Methods\n\n  /**\n   * The registerPass method.\n   * @param {function} cls - The cls value.\n   * @param {PassType} passType - The passType value.\n   */\n  static registerPass(cls, passType) {\n    if (!registeredPasses[passType]) registeredPasses[passType] = []\n    registeredPasses[passType].push(cls)\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    super.destroy()\n\n    this.resizeObserver.unobserve()\n  }\n}\n\nexport { GLBaseRenderer }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport frag from './Highlights.frag'\nimport vert from './Highlights.vert'\nclass HighlightsShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { HighlightsShader }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\n\nimport frag from './Silhouette.frag'\nimport vert from './Silhouette.vert'\n\nclass SilhouetteShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { SilhouetteShader }\n","import { Vec3, Xfo, Mat4, Ray, Color } from '../Math/index'\nimport { Plane, EnvMap, BaseImage } from '../SceneTree/index'\nimport { GLFbo } from './GLFbo.js'\nimport { GLRenderTarget } from './GLRenderTarget.js'\nimport { GLHDRImage } from './GLHDRImage.js'\nimport { GLEnvMap } from './GLEnvMap.js'\nimport { GLBaseRenderer } from './GLBaseRenderer.js'\nimport { GLTexture2D } from './GLTexture2D.js'\nimport { PassType } from './Passes/GLPass.js'\nimport { EnvMapShader } from './Shaders/EnvMapShader.js'\nimport { HighlightsShader } from './Shaders/HighlightsShader.js'\nimport { SilhouetteShader } from './Shaders/SilhouetteShader.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\n\nconst ALL_PASSES = PassType.OPAQUE | PassType.TRANSPARENT | PassType.OVERLAY\n\n/** Class representing a GL renderer.\n * @extends GLBaseRenderer\n */\nclass GLRenderer extends GLBaseRenderer {\n  /**\n   * Create a GL renderer.\n   * @param {canvas} $canvas - The $canvas value.\n   * @param {object} options - The dictionary of options.\n   */\n  constructor($canvas, options = {}) {\n    super($canvas, options)\n\n    // ///////////////////////\n    // Renderer Setup\n    this.__exposure = 1.0\n    this.__tonemap = true\n    this.__gamma = 2.2\n\n    this.__glEnvMap = undefined\n    this.__glBackgroundMap = undefined\n\n    this.__displayEnvironment = true\n    this.__debugMode = 0\n    this._planeDist = 0.0\n    this.__cutPlaneNormal = new Vec3(1, 0, 0)\n    this.rayCastDist = 0\n    this.rayCastArea = 0\n\n    const gl = this.__gl\n    this.highlightsShader = new HighlightsShader(gl)\n    this.silhouetteShader = new SilhouetteShader(gl)\n    this.highlightOutlineThickness = 1.5\n    this.outlineThickness = 0\n    this.outlineColor = new Color(0.15, 0.15, 0.15, 1)\n    this.outlineSensitivity = 2\n    this.outlineDepthBias = 0.7\n\n    this.__debugTextures = [undefined]\n\n    this.addShaderPreprocessorDirective('ENABLE_INLINE_GAMMACORRECTION')\n    if (!options.disableTextures) {\n      this.addShaderPreprocessorDirective('ENABLE_TEXTURES')\n    }\n\n    if (options.debugGeomIds) {\n      this.addShaderPreprocessorDirective('DEBUG_GEOM_ID')\n    }\n  }\n\n  /**\n   * The __bindEnvMap method.\n   * @param {EnvMap|BaseImage} env - The env value.\n   * @private\n   */\n  __bindEnvMap(env) {\n    const gl = this.__gl\n    if (env instanceof EnvMap) {\n      // Note: Safari doesn't support rendering to floating\n      // point textures, so our PBR lighting pipeline doesn't work.\n      if (gl.name !== 'webgl2') {\n        return\n      }\n\n      this.__glEnvMap = env.getMetadata('gltexture')\n      if (!this.__glEnvMap) {\n        if (env.type === 'FLOAT') {\n          this.addShaderPreprocessorDirective('ENABLE_PBR')\n          this.__glEnvMap = new GLEnvMap(this, env)\n        } else if (env.isStreamAtlas()) {\n          this.__glEnvMap = new GLImageStream(gl, env)\n        } else {\n          this.__glEnvMap = new GLTexture2D(gl, env)\n        }\n      }\n    } else {\n      // Note: The difference between an EnvMap and a BackgroundMap, is that\n      // An EnvMap must be HDR, and can be convolved for reflections.\n      // A Background map can be simply an image.\n      const backgroundMap = env\n      this.__glBackgroundMap = backgroundMap.getMetadata('gltexture')\n      if (!this.__glBackgroundMap) {\n        if (backgroundMap.type === 'FLOAT') {\n          this.__glBackgroundMap = new GLHDRImage(gl, backgroundMap)\n        } else {\n          this.__glBackgroundMap = new GLTexture2D(gl, backgroundMap)\n        }\n      }\n      this.__glBackgroundMap.on('loaded', (event) => {\n        this.requestRedraw()\n      })\n      this.__glBackgroundMap.on('updated', (event) => {\n        this.requestRedraw()\n      })\n      if (!this.__backgroundMapShader) {\n        if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n        this.__backgroundMapShader = new EnvMapShader(gl)\n        // switch (backgroundMap.getMapping()) {\n        //   case 'octahedral':\n        //     break\n        //   case 'latlong':\n        //     break\n        //   case 'steriolatlong':\n        //     break\n        //   case 'dualfisheye':\n        //     break\n        //   case 'uv':\n        //   default:\n        //     break\n        // }\n        const shaderComp = this.__backgroundMapShader.compileForTarget()\n        this.__backgroundMapShaderBinding = generateShaderGeomBinding(\n          gl,\n          shaderComp.attrs,\n          gl.__quadattrbuffers,\n          gl.__quadIndexBuffer\n        )\n      }\n      // console.warn('Unsupported EnvMap:' + env)\n      return\n    }\n    this.__glEnvMap.on('loaded', (event) => {\n      this.requestRedraw()\n    })\n    this.__glEnvMap.on('updated', (event) => {\n      this.requestRedraw()\n    })\n\n    this.emit('envMapAssigned', { envMap: this.__glEnvMap })\n  }\n\n  /**\n   * The setScene method.\n   * @param {Scene} scene - The scene value.\n   */\n  setScene(scene) {\n    const envMapParam = scene.settings.getParameter('EnvMap')\n    if (envMapParam.getValue() != undefined) {\n      this.__bindEnvMap(envMapParam.getValue())\n    }\n    envMapParam.on('valueChanged', () => {\n      this.__bindEnvMap(envMapParam.getValue())\n    })\n\n    const displayEnvMapParam = scene.settings.getParameter('Display EnvMap')\n    this.__displayEnvironment = displayEnvMapParam.getValue()\n    displayEnvMapParam.on('valueChanged', () => {\n      this.__displayEnvironment = displayEnvMapParam.getValue()\n      this.requestRedraw()\n    })\n\n    super.setScene(scene)\n  }\n\n  /**\n   * The addViewport method.\n   * @param {string} name - The name value.\n   * @return {GLViewport} - The return value.\n   */\n  addViewport(name) {\n    const vp = super.addViewport(name)\n    return vp\n  }\n\n  // //////////////////////////\n  // GUI\n\n  /**\n   * Getter for exposure.\n   */\n  get exposure() {\n    return this.__exposure\n  }\n\n  /**\n   * Setter for exposure.\n   * @param {number} val - The val value.\n   */\n  set exposure(val) {\n    this.__exposure = val\n    this.requestRedraw()\n  }\n\n  /**\n   * Getter for gamma.\n   */\n  get gamma() {\n    return this.__gamma\n  }\n\n  /**\n   * Setter for gamma.\n   * @param {number} val - The val value.\n   */\n  set gamma(val) {\n    this.__gamma = val\n    this.requestRedraw()\n  }\n\n  /**\n   * Getter for displayEnvironment.\n   */\n  get displayEnvironment() {\n    return this.__displayEnvironment\n  }\n\n  /**\n   * Setter for displayEnvironment.\n   * @param {number} val - The val value.\n   */\n  set displayEnvironment(val) {\n    this.__displayEnvironment = val\n    this.requestRedraw()\n  }\n\n  // //////////////////////////\n  // Raycasting\n\n  /**\n   * Ray casting is implemented by rendering a small image from the position of the ray, and capturing geometries detected in the resulting image.\n   * This method takes a Ray value, and uses that base the ray cast operation.\n   *\n   * @param {Ray} ray - The ray to use in the raycast.\n   * @param {number} dist - The maximum distance to cast the ray\n   * @param {number} area - The area to use for the ray\n   * @param {number} mask - The mask to filter our certain pass types. Can be PassType.OPAQUE | PassType.TRANSPARENT | PassType.OVERLAY\n   * @return {object} - The object containing the ray cast results.\n   */\n  raycastWithRay(ray, dist, area = 0.01, mask = ALL_PASSES) {\n    const xfo = new Xfo()\n    xfo.setLookAt(ray.start, ray.start.add(ray.dir))\n    return this.raycast(xfo, ray, dist, area, mask)\n  }\n\n  /**\n   * Ray casting is implemented by rendering a small image from the position of the ray, and capturing geometries detected in the resulting image.\n   * This method takes an Xfo value, and uses that base the ray cast operation.\n   *\n   * @param {Xfo} xfo - The xfo to use in the raycast.\n   * @param {number} dist - The maximum distance to cast the ray\n   * @param {number} area - The area to use for the ray\n   * @param {number} mask - The mask to filter our certain pass types. Can be PassType.OPAQUE | PassType.TRANSPARENT | PassType.OVERLAY\n   * @return {object} - The object containing the ray cast results.\n   */\n  raycastWithXfo(xfo, dist, area = 0.01, mask = ALL_PASSES) {\n    const ray = new Ray(xfo.tr, xfo.ori.getZaxis().negate())\n    return this.raycast(xfo, ray, dist, area, mask)\n  }\n\n  /**\n   * Ray casting is implemented by rendering a small image from the position of the ray, and capturing geometries detected in the resulting image.\n   *\n   * @private\n   *\n   * @param {Xfo} xfo - The ray to use in the raycast.\n   * @param {Ray} ray - The ray to use in the raycast.\n   * @param {number} dist - The maximum distance to cast the ray\n   * @param {number} area - The area to use for the ray\n   * @param {number} mask - The mask to filter our certain pass types. Can be PassType.OPAQUE | PassType.TRANSPARENT | PassType.OVERLAY\n   * @return {object} - The object containing the ray cast results.\n   */\n  raycast(xfo, ray, dist, area = 0.01, mask = ALL_PASSES) {\n    const gl = this.__gl\n\n    if (!this.__rayCastRenderTarget) {\n      this.__rayCastRenderTarget = new GLRenderTarget(gl, {\n        type: 'FLOAT',\n        format: 'RGBA',\n        filter: 'NEAREST',\n        width: 3,\n        height: 3,\n        numColorChannels: 1,\n      })\n      this.__rayCastRenderTargetProjMatrix = new Mat4()\n    }\n\n    if (this.rayCastDist != dist || this.rayCastArea != area) {\n      this.__rayCastRenderTargetProjMatrix.setOrthographicMatrix(\n        area * -0.5,\n        area * 0.5,\n        area * -0.5,\n        area * 0.5,\n        0.0,\n        dist\n      )\n      this.rayCastDist = dist\n      this.rayCastArea = area\n    }\n\n    const region = [0, 0, 3, 3]\n    const renderstate = {\n      cameraMatrix: xfo.toMat4(),\n      viewports: [\n        {\n          region,\n          viewMatrix: xfo.inverse().toMat4(),\n          projectionMatrix: this.__rayCastRenderTargetProjMatrix,\n          isOrthographic: true,\n        },\n      ],\n    }\n\n    this.__rayCastRenderTarget.bindForWriting(renderstate, true)\n    gl.enable(gl.CULL_FACE)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.depthMask(true)\n\n    this.drawSceneGeomData(renderstate, mask)\n    gl.finish()\n    this.__rayCastRenderTarget.unbindForWriting()\n    this.__rayCastRenderTarget.bindForReading()\n\n    const geomDatas = new Float32Array(4 * 9)\n    gl.readPixels(0, 0, 3, 3, gl.RGBA, gl.FLOAT, geomDatas)\n    this.__rayCastRenderTarget.unbindForReading()\n\n    // ////////////////////////////////////\n    // We have a 3x3 grid of pixels, and we\n    // scan them to find if any geom was in the\n    // frustum.\n    // Starting with the center pixel (4),\n    // then left and right (3, 5)\n    // Then top bottom (1, 7)\n    const checkPixel = (id) => geomDatas[id * 4 + 3] != 0\n    const dataPixels = [4, 3, 5, 1, 7]\n    let geomData\n    for (const pixelID of dataPixels) {\n      if (checkPixel(pixelID)) {\n        geomData = geomDatas.subarray(pixelID * 4, pixelID * 4 + 4)\n        break\n      }\n    }\n    if (!geomData) return\n\n    // Mask the pass id to be only the first 6 bits of the integer.\n    const passId = Math.round(geomData[0]) & (64 - 1)\n    const geomItemAndDist = this.getPass(passId).getGeomItemAndDist(geomData)\n\n    if (geomItemAndDist) {\n      const intersectionPos = ray.start.add(ray.dir.scale(geomItemAndDist.dist))\n\n      return {\n        ray,\n        intersectionPos,\n        geomItem: geomItemAndDist.geomItem,\n        dist: geomItemAndDist.dist,\n        geomData,\n      }\n    }\n  }\n\n  /**\n   *\n   * @private\n   *\n   * @param {Xfo} xfo - The ray to use in the raycast.\n   * @param {Ray} ray - The ray to use in the raycast.\n   * @param {number} dist - The maximum distance to cast the ray\n   * @param {number} area - The area to use for the ray\n   * @param {number} mask - The mask to filter our certain pass types. Can be PassType.OPAQUE | PassType.TRANSPARENT | PassType.OVERLAY\n   * @return {object} - The object containing the ray cast results.\n   */\n  raycastCluster(xfo, ray, dist, area = 0.01, mask = ALL_PASSES) {\n    const gl = this.__gl\n\n    if (!this.__rayCastRenderTarget) {\n      this.__rayCastRenderTarget = new GLRenderTarget(gl, {\n        type: 'FLOAT',\n        format: 'RGBA',\n        filter: 'NEAREST',\n        width: 3,\n        height: 3,\n        numColorChannels: 1,\n      })\n      this.__rayCastRenderTargetProjMatrix = new Mat4()\n    }\n\n    if (this.rayCastDist != dist || this.rayCastArea != area) {\n      this.__rayCastRenderTargetProjMatrix.setOrthographicMatrix(\n        area * -0.5,\n        area * 0.5,\n        area * -0.5,\n        area * 0.5,\n        0.0,\n        dist\n      )\n      this.rayCastDist = dist\n      this.rayCastArea = area\n    }\n\n    const region = [0, 0, 3, 3]\n    const renderstate = {\n      cameraMatrix: xfo.toMat4(),\n      viewports: [\n        {\n          region,\n          viewMatrix: xfo.inverse().toMat4(),\n          projectionMatrix: this.__rayCastRenderTargetProjMatrix,\n          isOrthographic: true,\n        },\n      ],\n    }\n\n    this.__rayCastRenderTarget.bindForWriting(renderstate, true)\n    gl.enable(gl.CULL_FACE)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.depthMask(true)\n\n    this.drawSceneGeomData(renderstate, mask)\n    gl.finish()\n    this.__rayCastRenderTarget.unbindForWriting()\n    this.__rayCastRenderTarget.bindForReading()\n\n    const geomDatas = new Float32Array(4 * 9)\n    gl.readPixels(0, 0, 3, 3, gl.RGBA, gl.FLOAT, geomDatas)\n    this.__rayCastRenderTarget.unbindForReading()\n\n    // ////////////////////////////////////\n    // We have a 3x3 grid of pixels, and we\n    // scan them to find if any geom was in the\n    // frustum.\n    // Note: we return every intersection, because even multiple intersections\n    // on the same geometry will be at different distances.\n    // This method is often used to get an average distance.\n    const checkPixel = (id) => geomDatas[id * 4 + 3] != 0\n    const result = []\n    for (let i = 0; i < 9; i++) {\n      if (checkPixel(i)) {\n        const geomData = geomDatas.subarray(i * 4, i * 4 + 4)\n        // Mask the pass id to be only the first 6 bits of the integer.\n        const passId = Math.round(geomData[0]) & (64 - 1)\n        const geomItemAndDist = this.getPass(passId).getGeomItemAndDist(geomData)\n\n        if (geomItemAndDist) {\n          const intersectionPos = ray.start.add(ray.dir.scale(geomItemAndDist.dist))\n          result.push({\n            ray,\n            intersectionPos,\n            geomItem: geomItemAndDist.geomItem,\n            dist: geomItemAndDist.dist,\n            geomData,\n          })\n        }\n      }\n    }\n    return result\n  }\n\n  // //////////////////////////\n  // Rendering\n\n  /**\n   * The drawBackground method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawBackground(renderstate) {\n    if (this.__glBackgroundMap) {\n      if (!this.__glBackgroundMap.isLoaded()) return\n      const gl = this.__gl\n      gl.depthMask(false)\n      this.__backgroundMapShader.bind(renderstate)\n      const unifs = renderstate.unifs\n      this.__glBackgroundMap.bindToUniform(renderstate, unifs.backgroundImage)\n      this.__backgroundMapShaderBinding.bind(renderstate)\n      gl.drawQuad()\n    } else if (this.__glEnvMap && this.__glEnvMap.draw /* Note: video env maps cannot be drawn directly.*/) {\n      this.__glEnvMap.draw(renderstate)\n    }\n  }\n\n  /**\n   * The bindGLRenderer method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  bindGLRenderer(renderstate) {\n    super.bindGLBaseRenderer(renderstate)\n\n    renderstate.envMap = this.__glEnvMap\n    renderstate.exposure = this.__exposure\n    renderstate.gamma = this.__gamma\n  }\n\n  /**\n   * The drawScene method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawScene(renderstate) {\n    this.bindGLRenderer(renderstate)\n\n    if (this.__displayEnvironment) this.drawBackground(renderstate)\n\n    super.drawScene(renderstate)\n    // console.log(\"Draw Calls:\" + renderstate['drawCalls']);\n\n    this.emit('redrawOccurred', {})\n  }\n}\n\nexport { GLRenderer }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './Billboard.frag'\nimport vert from './Billboard.vert'\n\nclass BillboardShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { BillboardShader }\n","/* eslint-disable require-jsdoc */\nimport { Vec3 } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './EnvProjection.vert'\nimport LatLongEnvProjectionFrag from './LatLongEnvProjection.frag'\nimport OctahedralEnvProjectionFrag from './OctahedralEnvProjection.frag'\n\nclass EnvProjectionShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'projectionCenter',\n      defaultValue: new Vec3(0.0, 0.0, 1.7),\n    })\n    return paramDescs\n  }\n}\n\nclass OctahedralEnvProjectionShader extends EnvProjectionShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('FRAGMENT_SHADER', OctahedralEnvProjectionFrag)\n  }\n}\n\nRegistry.register('OctahedralEnvProjectionShader', OctahedralEnvProjectionShader)\n\nclass LatLongEnvProjectionShader extends EnvProjectionShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('FRAGMENT_SHADER', LatLongEnvProjectionFrag)\n  }\n}\n\nRegistry.register('LatLongEnvProjectionShader', LatLongEnvProjectionShader)\nexport { EnvProjectionShader, OctahedralEnvProjectionShader, LatLongEnvProjectionShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './FatLines.frag'\nimport vert from './FatLines.vert'\n\n/** Shader for drawing Fat lines\n * @extends GLShader\n * @private\n */\nclass FatLinesShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  bind(renderstate, key) {\n    if (super.bind(renderstate, key)) {\n      renderstate.supportsInstancing = false\n      return true\n    }\n    return false\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    paramDescs.push({ name: 'Opacity', defaultValue: 1.0 })\n    paramDescs.push({ name: 'LineThickness', defaultValue: 0.01 }) // TODO: geoms shader had 1.0\n    paramDescs.push({ name: 'Overlay', defaultValue: 0.0 })\n    return paramDescs\n  }\n\n  /**\n   * The supportsInstancing method.\n   * @return {boolean} - return false for shaders that cannot be rendered in instanced mode.\n   */\n  static supportsInstancing() {\n    return false\n  }\n}\n\nRegistry.register('FatLinesShader', FatLinesShader)\nexport { FatLinesShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/Color'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './FlatSurface.vert'\nimport frag from './FlatSurface.frag'\n\nclass FlatSurfaceShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n\n    this.setShaderStage('VERTEX_SHADER', vert)\n\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {string} key - The key value.\n   * @return {boolean} - The return value.\n   */\n  bind(renderstate, key) {\n    super.bind(renderstate, key)\n\n    // Note: The GLTransparentGeoms pass only  renders the font faces of objects because for complex geoms, this makes sense\n    // but flat surfaces should be double sided, as they are almost always labels, or UI elements.\n    const gl = this.__gl\n    gl.disable(gl.CULL_FACE)\n\n    return true\n  }\n\n  /**\n   * The unbind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @return {any} - The return value.\n   */\n  unbind(renderstate) {\n    super.unbind(renderstate)\n\n    const gl = this.__gl\n    gl.enable(gl.CULL_FACE)\n\n    return true\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    return paramDescs\n  }\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(8)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n    return matData\n  }\n\n  // static getGeomDataShaderName() {\n  //   return 'StandardSurfaceGeomDataShader'\n  // }\n\n  // static getSelectedShaderName() {\n  //   return 'StandardSurfaceSelectedGeomsShader'\n  // }\n}\n\nRegistry.register('FlatSurfaceShader', FlatSurfaceShader)\nexport { FlatSurfaceShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/Color'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './Lines.vert'\nimport frag from './Lines.frag'\nclass LinesShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl, 'LinesShader')\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n    this.finalize()\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({ name: 'BaseColor', defaultValue: new Color(1.0, 1.0, 0.5) })\n    paramDescs.push({ name: 'Opacity', defaultValue: 0.7 })\n    paramDescs.push({ name: 'Overlay', defaultValue: 0.000001 }) // Provide a slight overlay so lines draw over meshes.\n    paramDescs.push({ name: 'StippleScale', defaultValue: 0.01 })\n\n    // Note: a value of 0.0, means no stippling (solid). A value of 1.0 means invisible.\n    // Any value in between determines how much of the solid line is removed.\n    paramDescs.push({ name: 'StippleValue', defaultValue: 0, range: [0, 1] })\n    paramDescs.push({ name: 'OccludedStippleValue', defaultValue: 1.0, range: [0, 1] })\n    return paramDescs\n  }\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(12)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n    // Note: By avoiding calling this value 'Opacity', the lines will not be considered 'Transparent'\n    // Lines do not need to be depth sorted....\n    matData[4] = material.getParameter('Opacity').getValue()\n    matData[5] = material.getParameter('Overlay').getValue()\n    matData[6] = material.getParameter('StippleScale').getValue()\n    matData[7] = material.getParameter('StippleValue').getValue()\n\n    matData[8] = material.getParameter('OccludedStippleValue').getValue()\n    return matData\n  }\n}\n\nRegistry.register('LinesShader', LinesShader)\nexport { LinesShader }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './Normals.frag'\nimport vert from './Normals.vert'\n\nclass NormalsShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n    //  TODO: should a finalize() be here?\n  }\n}\n\nexport { NormalsShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './Points.frag'\nimport vert from './Points.vert'\nclass PointsShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n    //TODO: finalize needed here?\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    paramDescs.push({ name: 'PointSize', defaultValue: 2.0 })\n    paramDescs.push({ name: 'Overlay', defaultValue: 0.00002 })\n    return paramDescs\n  }\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(12)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n    matData[4] = material.getParameter('PointSize').getValue()\n    matData[5] = material.getParameter('Overlay').getValue()\n    return matData\n  }\n}\n\nRegistry.register('PointsShader', PointsShader)\n\nexport { PointsShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './FatPoints.vert'\nimport frag from './FatPoints.frag'\nclass FatPointsShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  bind(renderstate, key) {\n    if (super.bind(renderstate, key)) {\n      renderstate.supportsInstancing = false\n      return true\n    }\n    return false\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    paramDescs.push({ name: 'PointSize', defaultValue: 0.05 })\n    paramDescs.push({ name: 'Rounded', defaultValue: 1.0 })\n    paramDescs.push({ name: 'BorderWidth', defaultValue: 0.2 })\n    paramDescs.push({ name: 'Overlay', defaultValue: 0.0 })\n    return paramDescs\n  }\n\n  /**\n   * The supportsInstancing method.\n   * @return {boolean} - return false for shaders that cannot be rendered in instanced mode.\n   */\n  static supportsInstancing() {\n    return false\n  }\n}\n\nRegistry.register('FatPointsShader', FatPointsShader)\n\n// Note: due to a bug in webpack, if these classes are not exported,\n// then we get a mangling of the code _only_in_release_mode_.\n// The factory returns FatPointsSelectedShader\n// instead of FatPointsShader when the GLPAss tries to construct it.\nexport { FatPointsShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './SimpleSurface.frag'\nimport vert from './SimpleSurface.vert'\n\n/** A simple shader with no support for PBR or textures\n * @ignore\n */\nclass SimpleSurfaceShader extends GLShader {\n  /**\n   * Create a SimpleSurfaceShader\n   * @param {any} gl - gl context\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    paramDescs.push({ name: 'Opacity', defaultValue: 1.0, range: [0, 1] })\n    paramDescs.push({\n      name: 'EmissiveStrength',\n      defaultValue: 0.0,\n      range: [0, 1],\n    })\n    return paramDescs\n  }\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(8)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n    matData[4] = material.getParameter('Opacity').getValue()\n    matData[5] = material.getParameter('EmissiveStrength').getValue()\n    return matData\n  }\n\n  // static getGeomDataShaderName() {\n  //   return 'StandardSurfaceGeomDataShader'\n  // }\n\n  // static getSelectedShaderName() {\n  //   return 'StandardSurfaceSelectedGeomsShader'\n  // }\n}\n\nRegistry.register('SimpleSurfaceShader', SimpleSurfaceShader)\nexport { SimpleSurfaceShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/index'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './StandardSurface.vert'\nimport frag from './StandardSurface.frag'\n\n/** A standard shader handling Opaque and transparent items and PBR rendering.\n * @extends GLShader\n * @private\n */\nclass StandardSurfaceShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  /**\n   * Returns the parameters that this shader expects to be provided by the material.\n   * Note: the Material method setShaderName will retrieve these parameter declarations\n   * to initialize and configure the parameters for the Material instance.\n   * @return {array} - an array of param declarations that the shader expects the material tp provide.\n   */\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    paramDescs.push({ name: 'AmbientOcclusion', defaultValue: 1, range: [0, 1] })\n    paramDescs.push({ name: 'Metallic', defaultValue: 0.05, range: [0, 1] })\n    paramDescs.push({ name: 'Roughness', defaultValue: 0.5, range: [0, 1] })\n    paramDescs.push({ name: 'Reflectance', defaultValue: 0.5, range: [0, 1] })\n    paramDescs.push({ name: 'Normal', defaultValue: new Color(0.5, 0.5, 0.5) })\n    paramDescs.push({\n      name: 'EmissiveStrength',\n      defaultValue: 0.0,\n      range: [0, 1],\n    })\n    paramDescs.push({ name: 'Opacity', defaultValue: 1.0, range: [0, 1] })\n    return paramDescs\n  }\n\n  /**\n   * The bind method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {string} key - The key value.\n   * @return {any} - The return value.\n   */\n  bind(renderstate, key) {\n    super.bind(renderstate, key)\n\n    const gl = this.__gl\n    if (renderstate.envMap) {\n      renderstate.envMap.bind(renderstate)\n    }\n\n    const { exposure } = renderstate.unifs\n    if (exposure) {\n      gl.uniform1f(exposure.location, renderstate.exposure)\n    }\n    return true\n  }\n\n  // /////////////////////////////\n  // Parameters\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(12)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n\n    matData[4] = material.getParameter('AmbientOcclusion').getValue()\n    matData[5] = material.getParameter('Metallic').getValue()\n    matData[6] = material.getParameter('Roughness').getValue()\n    matData[7] = material.getParameter('Reflectance').getValue()\n\n    matData[8] = material.getParameter('EmissiveStrength').getValue()\n    matData[9] = material.getParameter('Opacity').getValue()\n    return matData\n  }\n}\n\nRegistry.register('StandardSurfaceShader', StandardSurfaceShader)\nRegistry.register('TransparentSurfaceShader', StandardSurfaceShader)\nexport { StandardSurfaceShader }\n","/* eslint-disable require-jsdoc */\nimport { Color } from '../../Math/Color'\nimport { Registry } from '../../Registry'\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './ScreenSpace.frag'\nimport vert from './ScreenSpace.vert'\n\nclass ScreenSpaceShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n\n  static isOverlay() {\n    return true\n  }\n\n  static getParamDeclarations() {\n    const paramDescs = super.getParamDeclarations()\n    paramDescs.push({\n      name: 'BaseColor',\n      defaultValue: new Color(1.0, 1.0, 0.5),\n    })\n    return paramDescs\n  }\n\n  /**\n   * The getPackedMaterialData method.\n   * @param {any} material - The material param.\n   * @return {any} - The return value.\n   */\n  static getPackedMaterialData(material) {\n    const matData = new Float32Array(8)\n    const baseColor = material.getParameter('BaseColor').getValue()\n    matData[0] = baseColor.r\n    matData[1] = baseColor.g\n    matData[2] = baseColor.b\n    matData[3] = baseColor.a\n    return matData\n  }\n}\n\nRegistry.register('ScreenSpaceShader', ScreenSpaceShader)\nexport { ScreenSpaceShader }\n","import { GLPass } from './GLPass'\n\nimport { Vec4 } from '../../Math/index'\n\nimport { GeomItem, Points, Lines, Mesh, PointsProxy, LinesProxy, MeshProxy } from '../../SceneTree/index'\nimport { GLPoints, GLLines, GLMesh, GLMaterial, GLGeomItemChangeType, GLGeomItem } from '../Drawing/index.js'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\n\nconst pixelsPerItem = 6 // The number of RGBA pixels per draw item.\n\n/** This class abstracts the rendering of a collection of geometries to screen.\n * @extends GLPass\n */\nclass GLStandardGeomsPass extends GLPass {\n  /**\n   * Create a GL pass.\n   */\n  constructor() {\n    super()\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n  }\n\n  /**\n   * The itemAddedToScene method is called on each pass when a new item\n   * is added to the scene, and the renderer must decide how to render it.\n   * It allows Passes to select geometries to handle the drawing of.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * The object contains a parameter 'continueInSubTree', which can be set to false,\n   * so the subtree of this node will not be traversed after this node is handled.\n   * @return {Boolean} - Returns true if the item is now added to the pass.\n   */\n  itemAddedToScene(treeItem, rargs) {\n    if (treeItem instanceof GeomItem) {\n      const geomItem = treeItem\n      {\n        {\n          if (this.filterGeomItem(geomItem)) {\n            this.addGeomItem(geomItem)\n\n            geomItem.setMetadata('glpass', this)\n            return true\n          } else {\n            return false\n          }\n        }\n      }\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * The itemRemovedFromScene method is called on each pass when aa item\n   * is removed to the scene, and the pass must handle cleaning up any resources.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * @return {Boolean} - The return value.\n   */\n  itemRemovedFromScene(treeItem, rargs) {\n    if (treeItem instanceof GeomItem && treeItem.getMetadata('glpass') == this) {\n      return this.removeGeomItem(treeItem)\n    }\n    return false\n  }\n\n  /**\n   * The filterGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {any} - The return value.\n   */\n  filterGeomItem(geomItem) {\n    return true\n  }\n\n  /**\n   * The constructShaders method.\n   * Given a material, generate the various shaders required to render objects\n   * using this material. There should always be at least a single glShader\n   * and optionally a glgeomdatashader for rendering the goem data buffer\n   * and a glselectedshader for rendering selection hilghlights\n   * @param {string} shaderName - The name of the base shader.\n   * @return {object} - The object containing the shader instances.\n   */\n  constructShaders(shaderName) {\n    let glgeomdatashader\n    let glselectedshader\n\n    const glShader = this.__renderer.getOrCreateShader(shaderName)\n    if (glShader.constructor.getGeomDataShaderName()) {\n      glgeomdatashader = this.__renderer.getOrCreateShader(glShader.constructor.getGeomDataShaderName())\n    } else {\n      glgeomdatashader = glShader\n    }\n    if (glShader.constructor.getSelectedShaderName()) {\n      glselectedshader = this.__renderer.getOrCreateShader(glShader.constructor.getSelectedShaderName())\n    } else {\n      glselectedshader = glShader\n    }\n    return {\n      glShader,\n      glgeomdatashader,\n      glselectedshader,\n    }\n  }\n\n  /**\n   * The getGeomItemAndDist method.\n   * @param {any} geomData - The geomData value.\n   * @return {any} - The return value.\n   */\n  getGeomItemAndDist(geomData) {\n    let itemId\n    let dist\n    if (geomData instanceof Float32Array) {\n      itemId = Math.round(geomData[1])\n      dist = geomData[3]\n    } else {\n      itemId = geomData[0] + ((geomData[1] & 63) << 8)\n      dist = MathFunctions.decode16BitFloatFrom2xUInt8([geomData[2], geomData[3]])\n    }\n\n    const geomItem = this.renderer.glGeomItemLibrary.getGeomItem(itemId)\n    if (geomItem) {\n      return {\n        geomItem,\n        dist,\n      }\n    }\n  }\n}\n\nexport { GLStandardGeomsPass }\n","import '../../SceneTree/GeomItem.js'\n\nimport { EventEmitter, MathFunctions } from '../../Utilities/index'\nimport { GLTexture2D } from '../GLTexture2D.js'\n\n/** This class abstracts the rendering of a collection of geometries to screen.\n * @extends EventEmitter\n * @private\n */\nclass GLGeomItemSetMultiDraw extends EventEmitter {\n  /**\n   * Create a GL geom item set.\n   * @param {GLBaseRenderer} renderer - The renderer object.\n   */\n  constructor(renderer) {\n    super()\n    this.renderer = renderer\n    this.gl = renderer.gl\n    this.glGeomItems = []\n    this.glGeomIdsMapping = {}\n    this.glgeomItemEventHandlers = []\n    this.freeIndices = []\n\n    this.drawElementCounts = new Int32Array(0)\n    this.drawElementOffsets = new Int32Array(0)\n    this.highlightElementCounts = new Int32Array(0)\n    this.highlightElementOffsets = new Int32Array(0)\n\n    this.reserved = 0\n    this.visibleItems = []\n    this.drawIdsArray = new Float32Array(0)\n    this.drawIdsBufferDirty = true\n    this.drawIdsTexture = null\n\n    this.highlightedItems = []\n    this.highlightedIdsArray = null\n    this.highlightedIdsTexture = null\n    this.highlightedIdsBufferDirty = true\n\n    this.renderer.glGeomLibrary.on('geomDataChanged', (event) => {\n      const geomItemIndices = this.glGeomIdsMapping[event.index]\n      if (geomItemIndices != undefined) {\n        geomItemIndices.forEach((index) => {\n          const glGeomItem = this.glGeomItems[index]\n          if (glGeomItem.isVisible()) {\n            const index = this.visibleItems.indexOf(glGeomItem)\n            const offsetAndCount = this.renderer.glGeomLibrary.getGeomOffsetAndCount(glGeomItem.geomId)\n\n            this.drawElementOffsets[index] = offsetAndCount[0]\n            this.drawElementCounts[index] = offsetAndCount[1]\n            const highlightIndex = this.highlightedItems.indexOf(glGeomItem)\n            if (highlightIndex != -1) {\n              this.highlightElementOffsets[highlightIndex] = offsetAndCount[0]\n              this.highlightElementCounts[highlightIndex] = offsetAndCount[1]\n            }\n          }\n        })\n      }\n    })\n  }\n\n  /**\n   * The addGLGeomItem method.\n   * @param {any} glGeomItem - The glGeomItem value.\n   */\n  addGLGeomItem(glGeomItem) {\n    const index = this.freeIndices.length > 0 ? this.freeIndices.pop() : this.glGeomItems.length\n\n    // Keep track of which geomitems use which geoms, so we can update the offset and count array if they change.\n    if (!this.glGeomIdsMapping[glGeomItem.geomId]) {\n      this.glGeomIdsMapping[glGeomItem.geomId] = [index]\n    } else {\n      this.glGeomIdsMapping[glGeomItem.geomId].push(index)\n    }\n\n    const eventHandlers = {}\n\n    // //////////////////////////////\n    // Visibility\n    if (glGeomItem.visible) {\n      this.visibleItems.push(glGeomItem)\n    }\n    eventHandlers.visibilityChanged = (event) => {\n      if (event.visible) {\n        this.visibleItems.push(glGeomItem)\n      } else {\n        this.visibleItems.splice(this.visibleItems.indexOf(glGeomItem), 1)\n      }\n      // console.log(this.constructor.name, ' visibleItems', this.visibleItems.length)\n      if (!this.drawIdsBufferDirty) {\n        this.drawIdsBufferDirty = true\n        this.emit('updated')\n      }\n    }\n    glGeomItem.on('visibilityChanged', eventHandlers.visibilityChanged)\n\n    // //////////////////////////////\n    // Highlighted\n    if (glGeomItem.geomItem.isHighlighted()) {\n      this.highlightedItems.push(glGeomItem)\n      this.highlightedIdsBufferDirty = true\n    }\n\n    eventHandlers.highlightChanged = (event) => {\n      if (event && event.name) {\n        // Note: highlightChanged is fired when the color changes\n        // or another highlight is added over the top. We avoid\n        // adding the same index again here. (TODO: use Set?)\n        if (this.highlightedItems.includes(glGeomItem)) return\n        this.highlightedItems.push(glGeomItem)\n      } else {\n        this.highlightedItems.splice(this.highlightedItems.indexOf(glGeomItem), 1)\n      }\n      // console.log(\"highlightChanged:\", glGeomItem.geomItem.getName(), glGeomItem.geomItem.isHighlighted(), this.highlightedItems)\n      this.highlightedIdsBufferDirty = true\n      this.emit('updated')\n    }\n    glGeomItem.geomItem.on('highlightChanged', eventHandlers.highlightChanged)\n\n    this.glGeomItems[index] = glGeomItem\n    this.glgeomItemEventHandlers[index] = eventHandlers\n\n    this.drawIdsBufferDirty = true\n\n    this.emit('updated')\n  }\n\n  /**\n   * The removeGLGeomItem method.\n   * @param {any} glGeomItem - The glGeomItem value.\n   */\n  removeGLGeomItem(glGeomItem) {\n    const index = this.glGeomItems.indexOf(glGeomItem)\n    const geomItemIndices = this.glGeomIdsMapping[glGeomItem.geomId]\n    geomItemIndices.splice(geomItemIndices.indexOf(index), 1)\n    if (geomItemIndices.length == 0) {\n      delete this.glGeomIdsMapping[glGeomItem.geomId]\n    }\n\n    const eventHandlers = this.glgeomItemEventHandlers[index]\n    glGeomItem.geomItem.off('highlightChanged', eventHandlers.highlightChanged)\n    glGeomItem.off('visibilityChanged', eventHandlers.visibilityChanged)\n\n    this.glGeomItems[index] = null\n    this.glgeomItemEventHandlers[index] = null\n    this.drawIdsArray[index] = 0\n    this.drawElementOffsets[index] = 0\n    this.drawElementCounts[index] = 0\n    this.freeIndices.push(index)\n\n    if (glGeomItem.isVisible()) {\n      const visibleItemIndex = this.visibleItems.indexOf(glGeomItem)\n      this.visibleItems.splice(visibleItemIndex, 1)\n      this.drawIdsBufferDirty = true\n    }\n    if (glGeomItem.geomItem.isHighlighted()) {\n      const highlightIndex = this.highlightedItems.indexOf(glGeomItem)\n      this.highlightedItems.splice(highlightIndex, 1)\n      this.highlightedIdsBufferDirty = true\n    }\n    this.emit('updated')\n  }\n\n  // ////////////////////////////////////\n  // Draw Ids\n\n  // ////////////////////////////////////\n  // Instance Ids\n\n  /**\n   * The updateDrawIDsBuffer method.\n   * @param {object} renderstate - The object used to track state changes during rendering.\n   */\n  updateDrawIDsBuffer(renderstate) {\n    {\n      if (!this.drawIdsArray || this.visibleItems.length > this.drawIdsArray.length) {\n        this.drawIdsArray = new Float32Array(this.visibleItems.length)\n        this.drawElementOffsets = new Int32Array(this.visibleItems.length)\n        this.drawElementCounts = new Int32Array(this.visibleItems.length)\n      }\n\n      this.visibleItems.forEach((glGeomItem, index) => {\n        const offsetAndCount = this.renderer.glGeomLibrary.getGeomOffsetAndCount(glGeomItem.geomId)\n        this.drawElementOffsets[index] = offsetAndCount[0]\n        this.drawElementCounts[index] = offsetAndCount[1]\n        this.drawIdsArray[index] = glGeomItem.drawItemId\n      })\n    }\n\n    const gl = this.renderer.gl\n    if (!gl.multiDrawElements) {\n      return\n    }\n\n    const unit = renderstate.boundTextures++\n    gl.activeTexture(gl.TEXTURE0 + unit)\n\n    const drawIdsTextureSize = MathFunctions.nextPow2(Math.ceil(Math.sqrt(this.visibleItems.length))) * 2\n    if (!this.drawIdsTexture) {\n      this.drawIdsTexture = new GLTexture2D(gl, {\n        format: gl.name == 'webgl2' ? 'RED' : 'ALPHA',\n        type: 'FLOAT',\n        width: drawIdsTextureSize,\n        height: drawIdsTextureSize,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        mipMapped: false,\n      })\n    } else if (this.drawIdsTexture.width < drawIdsTextureSize || this.drawIdsTexture.height < drawIdsTextureSize) {\n      this.drawIdsTexture.resize(drawIdsTextureSize, drawIdsTextureSize)\n    }\n    {\n      const tex = this.drawIdsTexture\n      const texWidth = this.drawIdsTexture.width\n      gl.bindTexture(gl.TEXTURE_2D, tex.glTex)\n      const level = 0\n      const xoffset = 0\n      const height = 1\n      const format = tex.__format\n      const type = tex.__type\n      const rows = Math.ceil((xoffset + this.visibleItems.length) / texWidth)\n\n      let consumed = 0\n      let remaining = this.visibleItems.length\n      let rowStart = xoffset\n      for (let i = 0; i < rows; i++) {\n        let width\n        if (rowStart + remaining > texWidth) {\n          width = texWidth - rowStart\n          rowStart = 0\n        } else {\n          width = remaining\n        }\n        const x = consumed % texWidth\n        const y = Math.floor(consumed / texWidth)\n        const data = this.drawIdsArray.subarray(consumed, consumed + width)\n        gl.texSubImage2D(gl.TEXTURE_2D, level, x, y, width, height, format, type, data)\n        consumed += width\n        remaining -= width\n      }\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n    renderstate.boundTextures--\n\n    this.drawIdsBufferDirty = false\n  }\n\n  // ////////////////////////////////////\n  // Selected Items\n\n  /**\n   * The updateHighlightedIDsBuffer method.\n   * @param {object} renderstate - The object used to track state changes during rendering.\n   */\n  updateHighlightedIDsBuffer(renderstate) {\n    if (this.highlightedIdsBufferDirty) {\n      if (!this.highlightedIdsArray || this.highlightedItems.length > this.highlightedIdsArray.length) {\n        this.highlightedIdsArray = new Float32Array(this.highlightedItems.length)\n        this.highlightElementOffsets = new Uint32Array(this.highlightedItems.length)\n        this.highlightElementCounts = new Uint32Array(this.highlightedItems.length)\n      }\n\n      // Collect all visible geom ids into the instanceIds array.\n      // Note: the draw count can be less than the number of instances\n      // we re-use the same buffer and simply invoke fewer draw calls.\n      this.highlightedItems.forEach((glGeomItem, index) => {\n        this.highlightedIdsArray[index] = glGeomItem.drawItemId\n        const offsetAndCount = this.renderer.glGeomLibrary.getGeomOffsetAndCount(glGeomItem.geomId)\n        this.highlightElementOffsets[index] = offsetAndCount[0]\n        this.highlightElementCounts[index] = offsetAndCount[1]\n      })\n      for (let i = this.highlightedItems.length; i < this.highlightElementCounts.length; i++) {\n        this.highlightElementOffsets[i] = 0\n        this.highlightElementCounts[i] = 0\n      }\n\n      this.highlightedIdsBufferDirty = false\n    }\n\n    const gl = this.renderer.gl\n    if (!gl.multiDrawElements) {\n      return\n    }\n\n    const unit = renderstate.boundTextures++\n    gl.activeTexture(gl.TEXTURE0 + unit)\n    const highlightIdsTextureSize = MathFunctions.nextPow2(Math.ceil(Math.sqrt(this.highlightedItems.length)))\n\n    if (!this.highlightedIdsTexture) {\n      this.highlightedIdsTexture = new GLTexture2D(gl, {\n        format: gl.name == 'webgl2' ? 'RED' : 'ALPHA',\n        type: 'FLOAT',\n        width: highlightIdsTextureSize,\n        height: highlightIdsTextureSize,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        mipMapped: false,\n      })\n    } else if (\n      this.highlightedIdsTexture.width < highlightIdsTextureSize ||\n      this.highlightedIdsTexture.height < highlightIdsTextureSize\n    ) {\n      this.highlightedIdsTexture.resize(highlightIdsTextureSize, highlightIdsTextureSize)\n    }\n    {\n      const tex = this.highlightedIdsTexture\n      const texWidth = this.highlightedIdsTexture.width\n      gl.bindTexture(gl.TEXTURE_2D, tex.glTex)\n\n      const level = 0\n      const xoffset = 0\n      const height = 1\n      const format = tex.__format\n      const type = tex.__type\n      const rows = Math.ceil((xoffset + this.highlightedIdsArray.length) / texWidth)\n\n      let consumed = 0\n      let remaining = this.highlightedIdsArray.length\n      let rowStart = xoffset\n      for (let i = 0; i < rows; i++) {\n        let width\n        if (rowStart + remaining > texWidth) {\n          width = texWidth - rowStart\n          rowStart = 0\n        } else {\n          width = remaining\n        }\n        const x = consumed % texWidth\n        const y = Math.floor(consumed / texWidth)\n        const data = this.highlightedIdsArray.subarray(consumed, consumed + width)\n        gl.texSubImage2D(gl.TEXTURE_2D, level, x, y, width, height, format, type, data)\n        consumed += width\n        remaining -= width\n      }\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null)\n    renderstate.boundTextures--\n  }\n  // ////////////////////////////////////\n  // Drawing\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    // console.log(this.constructor.name, ' draw visibleItems', this.visibleItems.length)\n    if (this.visibleItems.length == 0) {\n      return\n    }\n    if (this.drawIdsBufferDirty) {\n      this.updateDrawIDsBuffer(renderstate)\n    }\n    if (this.drawIdsTexture) {\n      const { drawIdsTexture } = renderstate.unifs\n      this.drawIdsTexture.bindToUniform(renderstate, drawIdsTexture)\n    }\n\n    this.__bindAndRender(\n      renderstate,\n      this.drawIdsArray,\n      this.drawElementCounts,\n      this.drawElementOffsets,\n      this.visibleItems.length\n    )\n  }\n\n  /**\n   * The drawHighlighted method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlighted(renderstate) {\n    if (this.highlightedItems.length == 0) {\n      return\n    }\n    if (this.highlightedIdsBufferDirty) {\n      this.updateHighlightedIDsBuffer(renderstate)\n    }\n    if (this.highlightedIdsTexture) {\n      const { drawIdsTexture } = renderstate.unifs\n      this.highlightedIdsTexture.bindToUniform(renderstate, drawIdsTexture)\n    }\n\n    this.__bindAndRender(\n      renderstate,\n      this.highlightedIdsArray,\n      this.highlightElementCounts,\n      this.highlightElementOffsets,\n      this.highlightedItems.length\n    )\n  }\n\n  /**\n   * The __bindAndRender method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {Array} counts - the counts for each element drawn in by this draw call.\n   * @param {Array} offsets - the offsets for each element drawn in by this draw call.\n   * @private\n   */\n  __bindAndRender(renderstate, drawIdsArray, counts, offsets, drawCount) {\n    const gl = this.gl\n    const unifs = renderstate.unifs\n\n    // Specify an instanced draw to the shader so it knows how\n    // to retrieve the modelmatrix.\n    if (unifs.instancedDraw) {\n      gl.uniform1i(renderstate.unifs.instancedDraw.location, 1)\n    }\n\n    renderstate.bindViewports(unifs, () => {\n      this.multiDraw(renderstate, drawIdsArray, counts, offsets, drawCount)\n    })\n  }\n\n  /**\n   * Sorts the drawn items in order furthest to nearest when rendering transparent objects.\n   * @param {Vec3} viewPos - The position of the camera that we are sorting relative to.\n   */\n  sortItems(viewPos) {\n    const distances = []\n    const indices = []\n    this.visibleItems.forEach((glGeomItem, index) => {\n      if (glGeomItem) {\n        const mat4 = glGeomItem.geomItem.getGeomMat4()\n        const dist = mat4.translation.distanceTo(viewPos)\n        distances.push(dist)\n        indices.push(index)\n      }\n    })\n    indices.sort((a, b) => distances[b] - distances[a])\n\n    const visibleItems = []\n    const drawElementCounts = new Int32Array(this.drawElementCounts.length)\n    const drawElementOffsets = new Int32Array(this.drawElementOffsets.length)\n    indices.forEach((tgtIndex, srcIndex) => {\n      visibleItems[srcIndex] = this.visibleItems[tgtIndex]\n      drawElementCounts[srcIndex] = this.drawElementCounts[tgtIndex]\n      drawElementOffsets[srcIndex] = this.drawElementOffsets[tgtIndex]\n      this.drawIdsArray[srcIndex] = this.visibleItems[tgtIndex].drawItemId\n    })\n    this.visibleItems = visibleItems\n    this.drawElementCounts = drawElementCounts\n    this.drawElementOffsets = drawElementOffsets\n    this.drawIdsBufferDirty = true\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    if (this.drawIdsTexture) {\n      this.drawIdsTexture.destroy()\n    }\n\n    if (this.highlightedIdsTexture) {\n      this.highlightedIdsTexture.destroy()\n    }\n\n    this.emit('destructing')\n  }\n}\n\nexport { GLGeomItemSetMultiDraw }\n","import { GLGeomItemSetMultiDraw } from './GLGeomItemSetMultiDraw.js'\nimport '../../SceneTree/Geometry/Mesh.js'\n\n/** Class representing a GL mesh.\n * @extends GLGeom\n * @private\n */\nclass GLLinesItemSet extends GLGeomItemSetMultiDraw {\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} count - the element count for this draw call.\n   * @param {number} offset - the element offset for this draw call.\n   */\n  singleDraw(renderstate, count, offset) {\n    const gl = this.gl\n    const { occluded } = renderstate.unifs\n    if (occluded) {\n      gl.uniform1i(occluded.location, 0)\n    }\n\n    gl.drawElements(gl.LINES, count, gl.UNSIGNED_INT, offset)\n\n    if (occluded) {\n      gl.uniform1i(occluded.location, 1)\n      gl.depthFunc(gl.GREATER)\n      gl.multiDrawElements(gl.LINES, counts, 0, gl.UNSIGNED_INT, offsets, 0, counts.length)\n      gl.depthFunc(gl.LEQUAL)\n    }\n  }\n\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {Int32Array} drawIds - the draw id for each element drawn in by this draw call.\n   * @param {Int32Array} counts - the geom element count for each element drawn in by this draw call.\n   * @param {Int32Array} offsets - the geom element offset for each element drawn in by this draw call.\n   * @param {number} drawCount - the number of active draw calls in the counts and offsets arrays.\n   */\n  multiDraw(renderstate, drawIds, counts, offsets, drawCount) {\n    // console.log('GLLinesItemSet:', counts.length)\n    const gl = this.gl\n    if (gl.multiDrawArrays) {\n      const { occluded } = renderstate.unifs\n      if (occluded) {\n        gl.uniform1i(occluded.location, 0)\n      }\n\n      gl.multiDrawElements(gl.LINES, counts, 0, gl.UNSIGNED_INT, offsets, 0, drawCount)\n\n      if (occluded) {\n        gl.uniform1i(occluded.location, 1)\n        gl.depthFunc(gl.GREATER)\n        gl.multiDrawElements(gl.LINES, counts, 0, gl.UNSIGNED_INT, offsets, 0, drawCount)\n        gl.depthFunc(gl.LEQUAL)\n      }\n    } else {\n      const { drawId, occluded } = renderstate.unifs\n      if (occluded) {\n        gl.uniform1i(occluded.location, 0)\n      }\n\n      for (let i = 0; i < counts.length; i++) {\n        gl.uniform1i(drawId.location, drawIds[i])\n        gl.drawElements(gl.LINES, counts[i], gl.UNSIGNED_INT, offsets[i])\n      }\n\n      if (occluded) {\n        gl.uniform1i(occluded.location, 1)\n        gl.depthFunc(gl.GREATER)\n        for (let i = 0; i < counts.length; i++) {\n          gl.uniform1i(drawId.location, drawIds[i])\n          gl.drawElements(gl.LINES, counts[i], gl.UNSIGNED_INT, offsets[i])\n        }\n        gl.depthFunc(gl.LEQUAL)\n      }\n    }\n  }\n}\n\nexport { GLLinesItemSet }\n","import { GLGeomItemSetMultiDraw } from './GLGeomItemSetMultiDraw.js'\nimport '../../SceneTree/Geometry/Mesh.js'\n\n/** Class representing a GL mesh.\n * @extends GLGeom\n * @private\n */\nclass GLPointsItemSet extends GLGeomItemSetMultiDraw {\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} count - the element count for this draw call.\n   * @param {number} offset - the element offset for this draw call.\n   */\n  singleDraw(renderstate, count, offset) {\n    const gl = this.gl\n    gl.drawArrays(gl.POINTS, offset, count)\n  }\n\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {Int32Array} drawIds - the draw id for each element drawn in by this draw call.\n   * @param {Int32Array} counts - the geom element count for each element drawn in by this draw call.\n   * @param {Int32Array} offsets - the geom element offset for each element drawn in by this draw call.\n   * @param {number} drawCount - the number of active draw calls in the counts and offsets arrays.\n   */\n  multiDraw(renderstate, drawIds, counts, offsets, drawCount) {\n    const gl = this.gl\n    if (gl.multiDrawArrays) {\n      gl.multiDrawArrays(gl.POINTS, offsets, 0, counts, 0, drawCount)\n    } else {\n      const { drawId } = renderstate.unifs\n      for (let i = 0; i < drawCount; i++) {\n        gl.uniform1i(drawId.location, drawIds[i])\n        gl.drawArrays(gl.TRIANGLES, offsets[i], counts[i])\n      }\n    }\n  }\n}\n\nexport { GLPointsItemSet }\n","import { GLGeomItemSetMultiDraw } from './GLGeomItemSetMultiDraw.js'\nimport '../../SceneTree/Geometry/Mesh.js'\n\n/** Class representing a GL mesh.\n * @extends GLGeom\n * @private\n */\nclass GLMeshItemSet extends GLGeomItemSetMultiDraw {\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {number} count - the element count for this draw call.\n   * @param {number} offset - the element offset for this draw call.\n   */\n  singleDraw(renderstate, count, offset) {\n    const gl = this.gl\n    gl.drawElements(gl.TRIANGLES, count, gl.UNSIGNED_INT, offset)\n  }\n\n  /**\n   * Draw an item to screen.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {Int32Array} drawIds - the draw id for each element drawn in by this draw call.\n   * @param {Int32Array} counts - the geom element count for each element drawn in by this draw call.\n   * @param {Int32Array} offsets - the geom element offset for each element drawn in by this draw call.\n   * @param {number} drawCount - the number of active draw calls in the counts and offsets arrays.\n   */\n  multiDraw(renderstate, drawIds, counts, offsets, drawCount) {\n    const gl = this.gl\n    if (gl.multiDrawElements) {\n      gl.multiDrawElements(gl.TRIANGLES, counts, 0, gl.UNSIGNED_INT, offsets, 0, drawCount)\n    } else {\n      const { drawId } = renderstate.unifs\n      for (let i = 0; i < drawCount; i++) {\n        gl.uniform1i(drawId.location, drawIds[i])\n        gl.drawElements(gl.TRIANGLES, counts[i], gl.UNSIGNED_INT, offsets[i])\n      }\n    }\n  }\n}\n\nexport { GLMeshItemSet }\n","/* eslint-disable guard-for-in */\nimport { EventEmitter } from '../../Utilities/index'\nimport { GeomItem, Points, Lines, Mesh, PointsProxy, LinesProxy, MeshProxy } from '../../SceneTree/index'\nimport { GLLinesItemSet } from '../Drawing/GLLinesItemSet.js'\nimport { GLPointsItemSet } from '../Drawing/GLPointsItemSet.js'\nimport { GLMeshItemSet } from '../Drawing/GLMeshItemSet.js'\n\n/** Class representing GL shader materials.\n * @private\n */\nclass GLShaderGeomSets extends EventEmitter {\n  /**\n   * Create a GL shader material.\n   * @param {GLPass} pass - The pass that owns this object.\n   * @param {WebGL2RenderingContext} gl - The glShader value.\n   * @param {object} shaders - The shader value.\n   */\n  constructor(pass, gl, shaders) {\n    super()\n    this.pass = pass\n    this.gl = gl\n    // this.shaderAttrSpec = {}\n    this.glShader = shaders.glShader\n    this.glGeomDataShader = shaders.glgeomdatashader ? shaders.glgeomdatashader : shaders.glShader\n    this.glHighlightShader = shaders.glselectedshader ? shaders.glselectedshader : shaders.glShader\n    this.glGeomItemSets = {}\n\n    this.glShaderKey = shaders.glShader.getId() + 'multidraw-draw'\n\n    if (this.glGeomDataShader) this.glGeomDataShaderKey = this.glGeomDataShader.getId() + 'multidraw-geomdata'\n    if (this.glHighlightShader) this.glHighlightShaderKey = this.glHighlightShader.getId() + 'multidraw-highlight'\n  }\n\n  /**\n   * Given a GeomItem, constructs the GLGeomItemSet that handles drawing that type of geometry.\n   * @param {BaseGeom} geom - The geomitem value.\n   * @return {GLGeomItemSet} - The return value.\n   * */\n  getOrCreateGLGeomItemSet(geom) {\n    let glGeomItemSet\n    if (geom instanceof Mesh || geom instanceof MeshProxy) {\n      if (this.glGeomItemSets['GLMesh']) return this.glGeomItemSets['GLMesh']\n      glGeomItemSet = new GLMeshItemSet(this.pass.renderer)\n      this.glGeomItemSets['GLMesh'] = glGeomItemSet\n    } else if (geom instanceof Lines || geom instanceof LinesProxy) {\n      if (this.glGeomItemSets['GLLines']) return this.glGeomItemSets['GLLines']\n      glGeomItemSet = new GLLinesItemSet(this.pass.renderer)\n      this.glGeomItemSets['GLLines'] = glGeomItemSet\n    } else if (geom instanceof Points || geom instanceof PointsProxy) {\n      if (this.glGeomItemSets['GLPoints']) return this.glGeomItemSets['GLPoints']\n      glGeomItemSet = new GLPointsItemSet(this.pass.renderer)\n      this.glGeomItemSets['GLPoints'] = glGeomItemSet\n    } else {\n      throw new Error('Unsupported geom type:' + geom.constructor.name)\n    }\n\n    glGeomItemSet.on('updated', () => {\n      this.emit('updated')\n    })\n    return glGeomItemSet\n  }\n\n  /**\n   * The addGLGeomItem method.\n   * @param {GLGeomItem} glGeomItem - The glGeomItem value.\n   */\n  addGLGeomItem(glGeomItem) {\n    const geomItem = glGeomItem.geomItem\n    const geom = geomItem.getParameter('Geometry').getValue()\n    const material = glGeomItem.geomItem.getParameter('Material').getValue()\n\n    const geomItemParamChanged = (event) => {\n      this.pass.removeGeomItem(geomItem)\n      this.pass.__renderer.assignTreeItemToGLPass(geomItem)\n    }\n    material.on('transparencyChanged', geomItemParamChanged)\n    geomItem.getParameter('Material').on('valueChanged', geomItemParamChanged)\n    geomItem.getParameter('Geometry').on('valueChanged', geomItemParamChanged)\n\n    const glGeomItemSet = this.getOrCreateGLGeomItemSet(geom)\n    glGeomItem.material = material\n    glGeomItem.GLGeomItemSet = glGeomItemSet\n    glGeomItem.geomItemParamChanged = geomItemParamChanged\n    glGeomItemSet.addGLGeomItem(glGeomItem)\n  }\n\n  /**\n   *  Called by the GLPass to remove an item from this GLShaderGeomSets object.\n   * @param {GLGeomItem} glGeomItem - The glGeomItem value.\n   */\n  removeGLGeomItem(glGeomItem) {\n    const geomItem = glGeomItem.geomItem\n    const material = glGeomItem.material\n    const geomItemParamChanged = glGeomItem.geomItemParamChanged\n    material.off('transparencyChanged', geomItemParamChanged)\n    geomItem.getParameter('Material').off('valueChanged', geomItemParamChanged)\n    geomItem.getParameter('Geometry').off('valueChanged', geomItemParamChanged)\n    glGeomItem.material = null\n    glGeomItem.geomItemParamChanged = null\n\n    const glGeomItemSet = glGeomItem.GLGeomItemSet\n    glGeomItemSet.removeGLGeomItem(glGeomItem)\n    glGeomItem.GLGeomItemSet = null\n  }\n\n  /**\n   * Binds one of its shaders for rendering, and also the other textures and values needed.\n   * @param {object} glShader - The shader to bind\n   * @param {object} renderstate - The render state for the current draw traversal\n   * @param {string} key - The key to use to cache the shader binding.\n   * @private\n   */\n  bindShader(glShader, renderstate, key) {\n    if (!glShader.isCompiledForTarget(key)) {\n      if (this.gl.multiDrawElements) {\n        renderstate.shaderopts.directives.push('#define ENABLE_MULTI_DRAW\\n#extension GL_ANGLE_multi_draw : enable')\n      } else {\n        renderstate.shaderopts.directives.push('#define ENABLE_MULTI_DRAW')\n      }\n      glShader.compileForTarget(key, renderstate.shaderopts)\n      renderstate.shaderopts.directives.pop()\n    }\n\n    if (!glShader.bind(renderstate, key)) {\n      throw new Error('Unable to bind shader:' + glShader)\n    }\n\n    this.pass.renderer.glGeomItemLibrary.bind(renderstate)\n    this.pass.renderer.glGeomLibrary.bind(renderstate)\n    this.pass.renderer.glMaterialLibrary.bind(renderstate)\n  }\n\n  /**\n   * Draws all elements, binding the shader and continuing into the GLGLGeomSetGeomItemSets\n   * @param {object} renderstate - The render state for the current draw traversal\n   */\n  draw(renderstate) {\n    this.bindShader(this.glShader, renderstate, this.glShaderKey)\n\n    for (const elementType in this.glGeomItemSets) {\n      this.glGeomItemSets[elementType].draw(renderstate)\n    }\n\n    this.glShader.unbind(renderstate)\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {\n    if (!this.glHighlightShader) return\n    this.bindShader(this.glHighlightShader, renderstate, this.glHighlightShaderKey)\n\n    for (const elementType in this.glGeomItemSets) {\n      this.glGeomItemSets[elementType].drawHighlighted(renderstate)\n    }\n    this.glHighlightShader.unbind(renderstate)\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    this.bindShader(this.glGeomDataShader, renderstate, this.glGeomDataShaderKey)\n\n    const gl = renderstate.gl\n    const { floatGeomBuffer, passId } = renderstate.unifs\n    if (floatGeomBuffer) {\n      gl.uniform1i(floatGeomBuffer.location, renderstate.floatGeomBuffer ? 1 : 0)\n    }\n    if (passId) {\n      gl.uniform1i(passId.location, renderstate.passIndex)\n    }\n\n    for (const elementType in this.glGeomItemSets) {\n      this.glGeomItemSets[elementType].draw(renderstate)\n    }\n\n    this.glGeomDataShader.unbind(renderstate)\n  }\n\n  /**\n   * Sorts the drawn items in order furthest to nearest when rendering transparent objects.\n   * @param {Vec3} viewPos - The position of the camera that we are sorting relative to.\n   */\n  sortItems(viewPos) {\n    // Note: sorting here will not sort geometries of different types.\n    // this is a flawed solution that only sorts geomemtries of the same\n    // time and same shader against each other. Given that this is the data 99% o\n    // of the time, this is an acceptable tradeoff\n    for (const elementType in this.glGeomItemSets) {\n      this.glGeomItemSets[elementType].sortItems(viewPos)\n    }\n  }\n}\n\nexport { GLShaderGeomSets }\n","import { PassType } from './GLPass.js'\nimport { GLStandardGeomsPass } from './GLStandardGeomsPass.js'\nimport { GLRenderer } from '../GLRenderer.js'\nimport { Registry } from '../../Registry'\n\nimport { MathFunctions } from '../../Utilities/MathFunctions'\nimport { Points, Lines, PointsProxy, LinesProxy } from '../../SceneTree/index'\nimport { GLShaderMaterials } from '../Drawing/GLShaderMaterials.js'\nimport { GLShaderGeomSets } from '../Drawing/GLShaderGeomSets.js'\n\n/** Class representing a GL opaque geoms pass.\n * @extends GLStandardGeomsPass\n * @private\n */\nclass GLOpaqueGeomsPass extends GLStandardGeomsPass {\n  /**\n   * Create a GL opaque geoms pass.\n   */\n  constructor() {\n    super()\n\n    // Optimized Render Tree\n    // Structured like so for efficient render traversial.\n    // {GLShaders}[GLMaterials][GLGeoms][GLGeomItems]\n    this.__glshadermaterials = {}\n    this.__glShaderGeomSets = {}\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n  }\n\n  /**\n   * Returns the pass type. OPAQUE passes are always rendered first, followed by TRANSPARENT passes, and finally OVERLAY.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.OPAQUE\n  }\n\n  // ///////////////////////////////////\n  // Bind to Render Tree\n\n  /**\n   * The filterGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  filterGeomItem(geomItem) {\n    const material = geomItem.getParameter('Material').getValue()\n    return this.checkMaterial(material)\n  }\n\n  /**\n   * Checks the material to see if it is not transparent.\n   * @param {Material} material - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  checkMaterial(material) {\n    return !material.isTransparent()\n  }\n\n  /**\n   * Removes the GeomITem from this pass, and then asks the renderer to re-add it.\n   * @param {GeomItem} geomItem - The geomItem value.\n   */\n  removeAndReAddGeomItem(geomItem) {\n    this.removeGeomItem(geomItem)\n    this.__renderer.assignTreeItemToGLPass(geomItem)\n  }\n\n  /**\n   * The addGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  addGeomItem(geomItem) {\n    const materialParam = geomItem.getParameter('Material')\n    const material = materialParam.getValue()\n\n    if (!material.isTextured()) {\n      const shaderName = material.getShaderName()\n      const shader = Registry.getBlueprint(shaderName)\n      if (shader.supportsInstancing() && shader.getPackedMaterialData) {\n        let glShaderGeomSets = this.__glShaderGeomSets[shaderName]\n        if (!glShaderGeomSets) {\n          const shaders = this.constructShaders(shaderName)\n          glShaderGeomSets = new GLShaderGeomSets(this, this.__gl, shaders)\n          glShaderGeomSets.on('updated', () => {\n            this.__renderer.requestRedraw()\n          })\n          this.__glShaderGeomSets[shaderName] = glShaderGeomSets\n        }\n\n        // const glGeomItem = this.constructGLGeomItem(geomItem)\n        const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n        glShaderGeomSets.addGLGeomItem(glGeomItem)\n\n        glGeomItem.GLShaderGeomSets = glShaderGeomSets\n        this.emit('updated')\n        return true\n      }\n    }\n\n    const glGeom = this.renderer.glGeomLibrary.constructGLGeom(geomItem.getParameter('Geometry').getValue())\n    const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n\n    // ////////////////////////////////////\n    // Tracking Material Transparency changes...\n    // In the case that a geometry material changes, we may need to\n    // select a different pass. e.g. if the new material is transparent.\n\n    const materialChanged = () => {\n      this.removeGeomItem(geomItem)\n      this.__renderer.assignTreeItemToGLPass(geomItem)\n    }\n    materialParam.on('valueChanged', materialChanged)\n    glGeomItem.materialChanged = materialChanged\n\n    // ////////////////////////////////////\n    // Shaders\n    const shaderName = material.getShaderName()\n    const glMaterial = this.renderer.glMaterialLibrary.getGLMaterial(material)\n\n    let glshaderMaterials = this.__glshadermaterials[shaderName]\n    if (!glshaderMaterials) {\n      const shaders = this.constructShaders(shaderName)\n      glshaderMaterials = new GLShaderMaterials(this.__gl, this, shaders)\n      this.__glshadermaterials[shaderName] = glshaderMaterials\n\n      glshaderMaterials.on('updated', () => {\n        this.__renderer.requestRedraw()\n      })\n    }\n\n    glshaderMaterials.addGLGeomItem(glGeomItem, glGeom, glMaterial)\n\n    return true\n  }\n\n  /**\n   * The removeGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  removeGeomItem(geomItem) {\n    const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n\n    if (glGeomItem.GLShaderGeomSets) {\n      const glShaderGeomSets = glGeomItem.GLShaderGeomSets\n      glShaderGeomSets.removeGLGeomItem(glGeomItem)\n      glGeomItem.GLShaderGeomSets = null\n      return true\n    }\n\n    const materialParam = geomItem.getParameter('Material')\n    const materialChanged = glGeomItem.materialChanged\n    if (materialParam && materialChanged) {\n      materialParam.off('valueChanged', materialChanged)\n      glGeomItem.materialChanged = null\n    }\n\n    if (glGeomItem.GLGeomItemSet) {\n      const glGeomItemSet = glGeomItem.GLGeomItemSet\n      glGeomItemSet.removeGLGeomItem(glGeomItem)\n      glGeomItem.GLGeomItemSet = null\n      return true\n    }\n\n    return true\n  }\n\n  /**\n   * The removeMaterial method.\n   * @param {any} material - The material value.\n   */\n  removeMaterial(material) {\n    const glshaderMaterials = this.__glshadermaterials[material.hash]\n    if (!glshaderMaterials || glshaderMaterials != material.getMetadata('glshaderMaterials')) {\n      console.warn('Material not found in pass')\n      return\n    }\n\n    const glMaterialGeomItemSets = material.getMetadata('glMaterialGeomItemSets')\n    glshaderMaterials.removeMaterialGeomItemSets(glMaterialGeomItemSets)\n  }\n\n  /**\n   * The __traverseTreeAndDraw method.\n   * @param {object} renderstate - The renderstate value.\n   * @private\n   */\n  __traverseTreeAndDraw(renderstate) {\n    // renderstate.drawItemsTexture = this.__drawItemsTexture\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].draw(renderstate)\n    }\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glshadermaterials) {\n      this.__glshadermaterials[shaderName].draw(renderstate)\n    }\n\n    if (renderstate.glGeom) {\n      renderstate.glGeom.unbind(renderstate)\n    }\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    const gl = this.__gl\n    gl.disable(gl.BLEND)\n\n    // Note: our zcad files can contain surfaces with flipped normals.\n    // This is due to re-using geoms on various sides of a mesh, while applying\n    // a -1 scale on one of the axes to flip. We need 2-sided rendering enabled\n    // by default.\n    if (true) {\n      // 2-sided rendering.\n      gl.disable(gl.CULL_FACE)\n    } else {\n      gl.enable(gl.CULL_FACE)\n      gl.cullFace(gl.BACK)\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.depthMask(true)\n\n    this.__traverseTreeAndDraw(renderstate)\n\n    renderstate.viewport.drawSilhouettes(renderstate)\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {\n    const gl = this.__gl\n    gl.disable(gl.CULL_FACE) // 2-sided rendering.\n\n    renderstate.drawItemsTexture = this.__drawItemsTexture\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].drawHighlightedGeoms(renderstate)\n    }\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glshadermaterials) {\n      const glshaderMaterials = this.__glshadermaterials[shaderName]\n      glshaderMaterials.drawHighlightedGeoms(renderstate)\n    }\n\n    if (renderstate.glGeom) {\n      renderstate.glGeom.unbind(renderstate)\n    }\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    renderstate.passIndex = this.passIndex\n\n    const gl = this.__gl\n    gl.disable(gl.BLEND)\n    gl.disable(gl.CULL_FACE)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.depthMask(true)\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].drawGeomData(renderstate)\n    }\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glshadermaterials) {\n      const glshaderMaterials = this.__glshadermaterials[shaderName]\n      glshaderMaterials.drawGeomData(renderstate)\n    }\n\n    if (renderstate.glGeom) {\n      renderstate.glGeom.unbind(renderstate)\n    }\n  }\n}\n\nGLRenderer.registerPass(GLOpaqueGeomsPass, PassType.OPAQUE)\n\nexport { GLOpaqueGeomsPass }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './FattenLines.vert'\nimport frag from './FattenLines.frag'\n\nclass FattenLinesShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { FattenLinesShader }\n","import { PassType } from './GLPass.js'\nimport { GLOpaqueGeomsPass } from './GLOpaqueGeomsPass.js'\nimport { GLRenderer } from '../GLRenderer.js'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { Lines, LinesProxy, Points, PointsProxy } from '../../SceneTree/index'\nimport { FattenLinesShader } from '../Shaders/FattenLinesShader.js'\nimport { Plane } from '../../SceneTree/index'\nimport { GLMesh } from '../Drawing/GLMesh.js'\n\n/** Class representing a GL opaque geoms pass.\n * @extends GLOpaqueGeomsPass\n * @private\n */\nclass GLLinesPass extends GLOpaqueGeomsPass {\n  /**\n   * Create a GL opaque geoms pass.\n   */\n  constructor() {\n    super()\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n  }\n  /**\n   * The filterGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  filterGeomItem(geomItem) {\n    const geom = geomItem.getParameter('Geometry').getValue()\n    if (geom instanceof Lines || geom instanceof LinesProxy || geom instanceof Points || geom instanceof PointsProxy) {\n      return true\n    }\n  }\n\n  /**\n   * The __checkFramebuffer method.\n   * @private\n   */\n  __checkFramebuffer(renderstate) {\n    const gl = this.__gl\n\n    let check\n    if (gl.name == 'webgl2') check = gl.checkFramebufferStatus(gl.DRAW_FRAMEBUFFER)\n    else check = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n    if (check !== gl.FRAMEBUFFER_COMPLETE) {\n      gl.bindTexture(gl.TEXTURE_2D, null)\n      if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\n      else gl.bindFramebuffer(gl.FRAMEBUFFER, null)\n      console.warn('Error creating Fbo width:', renderstate.width, ', height:', renderstate.height)\n      switch (check) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          throw new Error(\n            'The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.'\n          )\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          throw new Error('There is no attachment.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error('Height and width of the attachment are not the same.')\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw new Error(\n            'The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.'\n          )\n        case 36061: // gl.GL_FRAMEBUFFER_UNSUPPORTED:\n          throw new Error('The framebuffer is unsupported')\n        default:\n          throw new Error('Incomplete Frambuffer')\n      }\n    }\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    const gl = this.__gl\n\n    gl.enable(gl.BLEND)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LEQUAL)\n    gl.depthMask(true)\n\n    this.__traverseTreeAndDraw(renderstate)\n\n    gl.disable(gl.BLEND)\n  }\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    const gl = this.__gl\n    //  Note: lines in VR are not fattened...\n    if (renderstate.geomDataFbo) {\n      if (!this.linesGeomDataBuffer) {\n        this.linesGeomDataBuffer = new GLTexture2D(gl, {\n          type: this.__renderer.floatGeomBuffer ? 'FLOAT' : 'UNSIGNED_BYTE',\n          format: 'RGBA',\n          filter: 'NEAREST',\n          width: 1,\n          height: 2,\n        })\n        this.fattenLinesShader = new FattenLinesShader(gl)\n        this.quad = new GLMesh(gl, new Plane(1, 1))\n      }\n\n      const geomDataFbo = renderstate.geomDataFbo\n      const width = geomDataFbo.width\n      const height = geomDataFbo.height\n\n      if (this.linesGeomDataBuffer.width != width || this.linesGeomDataBuffer.height != height) {\n        if (this.fbo) {\n          gl.deleteFramebuffer(this.fbo)\n          this.fbo = null\n        }\n\n        this.linesGeomDataBuffer.resize(width, height)\n\n        this.fbo = gl.createFramebuffer()\n\n        const colorTex = this.linesGeomDataBuffer.glTex\n        const depthBuffer = geomDataFbo.__depthTexture // Share the existing depth buffer.\n        if (gl.name == 'webgl2') {\n          gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fbo)\n          gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTex, 0)\n          gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0)\n        } else {\n          gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo)\n          gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTex, 0)\n          gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthBuffer, 0)\n        }\n        this.__checkFramebuffer(renderstate)\n      } else {\n        if (gl.name == 'webgl2') gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this.fbo)\n        else gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo)\n      }\n\n      gl.colorMask(true, true, true, true)\n      gl.clearColor(0, 0, 0, 0)\n      gl.clear(gl.COLOR_BUFFER_BIT)\n    }\n    super.drawGeomData(renderstate)\n\n    if (renderstate.geomDataFbo) {\n      renderstate.geomDataFbo.bindForWriting(renderstate)\n\n      this.fattenLinesShader.bind(renderstate)\n\n      const { colorTexture, screenSize } = renderstate.unifs\n      this.linesGeomDataBuffer.bindToUniform(renderstate, colorTexture)\n\n      const geomDataFbo = renderstate.geomDataFbo\n      gl.uniform2f(screenSize.location, geomDataFbo.width, geomDataFbo.height)\n\n      this.quad.bindAndDraw(renderstate)\n    }\n  }\n}\n\nGLRenderer.registerPass(GLLinesPass, PassType.OPAQUE)\n\nexport { GLLinesPass }\n","import { Vec3 } from '../../Math/Vec3'\nimport { PassType } from './GLPass.js'\nimport { Points, Lines, PointsProxy, LinesProxy } from '../../SceneTree/index'\nimport { GLStandardGeomsPass } from './GLStandardGeomsPass.js'\nimport { GLRenderer } from '../GLRenderer.js'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\nimport { GLShaderGeomSets } from '../Drawing/GLShaderGeomSets.js'\nimport { Registry } from '../../Registry'\n\n/** Class representing a GL transparent geoms pass.\n * @extends GLStandardGeomsPass\n * @private\n */\nclass GLTransparentGeomsPass extends GLStandardGeomsPass {\n  /**\n   * Create GL transparent geoms pass.\n   */\n  constructor() {\n    super()\n\n    this.listenerIDs = {}\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n\n    this.itemCount = 0\n    this.__glShaderGeomSets = {}\n    this.transparentItems = []\n    this.transparentItemIndices = {}\n    this.freeList = []\n    this.visibleItems = []\n    this.prevSortCameraPos = new Vec3(999, 999, 999)\n    this.sortCameraMovementDistance = 0.25 // meters\n    this.reSort = false\n  }\n\n  /**\n   * Returns the pass type. OPAQUE passes are always rendered first, followed by TRANSPARENT passes, and finally OVERLAY.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.TRANSPARENT\n  }\n\n  /**\n   * The init method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {boolean} - The return value.\n   */\n  filterGeomItem(geomItem) {\n    const geom = geomItem.getParameter('Geometry').getValue()\n    if (geom instanceof Lines || geom instanceof Points || geom instanceof PointsProxy || geom instanceof LinesProxy)\n      return false\n    const material = geomItem.getParameter('Material').getValue()\n    return material.isTransparent()\n  }\n\n  /**\n   * When an item visibility changes, we trigger this method, as new items become visible\n   */\n  resortNeeded() {\n    this.reSort = true\n  }\n\n  /**\n   * The addGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   */\n  addGeomItem(geomItem) {\n    this.itemCount++\n\n    const listenerIDs = {}\n    this.listenerIDs[geomItem.getId()] = listenerIDs\n\n    const materialParam = geomItem.getParameter('Material')\n    const material = materialParam.getValue()\n    const shaderName = material.getShaderName()\n\n    if (!material.isTextured()) {\n      const shader = Registry.getBlueprint(shaderName)\n      if (shader.supportsInstancing() && shader.getPackedMaterialData) {\n        let glShaderGeomSets = this.__glShaderGeomSets[shaderName]\n        if (!glShaderGeomSets) {\n          const shaders = this.constructShaders(shaderName)\n          glShaderGeomSets = new GLShaderGeomSets(this, this.__gl, shaders)\n          glShaderGeomSets.on('updated', () => {\n            this.__renderer.requestRedraw()\n          })\n          this.__glShaderGeomSets[shaderName] = glShaderGeomSets\n        }\n        const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n        glShaderGeomSets.addGLGeomItem(glGeomItem)\n\n        listenerIDs['glGeomItem.visibilityChanged'] = glGeomItem.on('visibilityChanged', (event) => {\n          this.resortNeeded()\n        })\n        this.emit('updated')\n\n        glGeomItem.GLShaderGeomSets = glShaderGeomSets\n\n        // force a reSort.\n        this.reSort = true\n        return\n      }\n    }\n\n    const glGeom = this.renderer.glGeomLibrary.constructGLGeom(geomItem.getParameter('Geometry').getValue())\n\n    // const glGeomItem = this.constructGLGeomItem(geomItem)\n    const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n    const shaders = this.constructShaders(shaderName)\n\n    // @todo - make sure we remove materials and GeomItems from the base pass.\n    // This code will leak memory for these classes as we are not cleaning them up.\n    const glMaterial = this.renderer.glMaterialLibrary.getGLMaterial(material)\n\n    // ////////////////////////////////////\n    // Tracking Material Transparency changes...\n    // In the case that a geometry material changes, we may need to\n    // select a different pass. e.g. if the new material is not transparent\n    // then the object moves to the OpaqueGeomsPass\n    const materialChanged = () => {\n      material.removeListenerById('valueChanged', listenerIDs['material.valueChanged'])\n      material.removeListenerById('transparencyChanged', listenerIDs['material.transparencyChanged'])\n      materialParam.removeListenerById('valueChanged', listenerIDs['materialParam.valueChanged'])\n      this.removeGeomItem(geomItem)\n      this.__renderer.assignTreeItemToGLPass(geomItem)\n    }\n    listenerIDs['material.valueChanged'] = material.on('valueChanged', materialChanged)\n    listenerIDs['material.transparencyChanged'] = material.on('transparencyChanged', materialChanged)\n    listenerIDs['materialParam.valueChanged'] = materialParam.on('valueChanged', materialChanged)\n\n    // ////////////////////////////////////\n    // Tracking visibility changes.\n    const visibilityChanged = (event) => {\n      if (event.visible) {\n        this.visibleItems.push(item)\n      } else {\n        const index = this.visibleItems.indexOf(item)\n        this.visibleItems.splice(index, 1)\n      }\n      this.reSort = true\n    }\n    listenerIDs['glGeomItem.visibilityChanged'] = glGeomItem.on('visibilityChanged', visibilityChanged)\n\n    // ////////////////////////////////////\n    // Tracking GeomMat changes.\n    const geomMatChanged = () => {\n      this.reSort = true\n    }\n    listenerIDs['GeomMat.valueChanged'] = geomItem.getParameter('GeomMat').on('valueChanged', geomMatChanged)\n\n    const item = {\n      geomItem,\n      shaders,\n      glGeom,\n      glMaterial,\n      glGeomItem,\n      material,\n    }\n    let itemindex\n    if (this.freeList.length > 0) itemindex = this.freeList.pop()\n    else itemindex = this.transparentItems.length\n    this.transparentItems[itemindex] = item\n    this.transparentItemIndices[geomItem.getId()] = itemindex\n    if (geomItem.isVisible()) {\n      this.visibleItems.push(item)\n    }\n\n    // force a reSort.\n    this.reSort = true\n  }\n\n  /**\n   * The removeGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   */\n  removeGeomItem(geomItem) {\n    this.itemCount--\n\n    const listenerIDs = this.listenerIDs[geomItem.getId()]\n    delete this.listenerIDs[geomItem.getId()]\n\n    const glGeomItem = this.renderer.glGeomItemLibrary.getGLGeomItem(geomItem)\n    const materialParam = geomItem.getParameter('Material')\n    const material = materialParam.getValue()\n    glGeomItem.removeListenerById('visibilityChanged', listenerIDs['glGeomItem.visibilityChanged'])\n\n    if (glGeomItem.GLShaderGeomSets) {\n      const glShaderGeomSets = glGeomItem.GLShaderGeomSets\n      glShaderGeomSets.removeGLGeomItem(glGeomItem)\n      glGeomItem.GLShaderGeomSets = null\n      return\n    }\n    {\n      const itemindex = this.transparentItemIndices[geomItem.getId()]\n      const item = this.transparentItems[itemindex]\n      delete this.transparentItemIndices[geomItem.getId()]\n\n      material.removeListenerById('valueChanged', listenerIDs['material.valueChanged'])\n      material.removeListenerById('transparencyChanged', listenerIDs['material.transparencyChanged'])\n      materialParam.removeListenerById('valueChanged', listenerIDs['materialParam.valueChanged'])\n      geomItem.getParameter('GeomMat').removeListenerById('valueChanged', listenerIDs['GeomMat.valueChanged'])\n\n      this.transparentItems[itemindex] = null\n      this.freeList.push(itemindex)\n\n      const visibleindex = this.visibleItems.indexOf(item)\n      if (visibleindex != -1) this.visibleItems.splice(visibleindex, 1)\n    }\n\n    this.emit('updated')\n  }\n\n  /**\n   * Sorts the drawn items in order furthest to nearest when rendering transparent objects.\n   * @param {Vec3} viewPos - The position of the camera that we are sorting relative to.\n   */\n  sortItems(viewPos) {\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].sortItems(viewPos)\n    }\n\n    for (const transparentItem of this.visibleItems) {\n      const mat4 = transparentItem.glGeomItem.geomItem.getGeomMat4()\n      transparentItem.dist = mat4.translation.distanceTo(viewPos)\n    }\n    this.visibleItems.sort((a, b) => (a.dist > b.dist ? -1 : a.dist < b.dist ? 1 : 0))\n    this.reSort = false\n  }\n\n  /**\n   * Draw n individual item, binding the shader and material if necessary.\n   * @param {object} renderstate - current renderstad\n   * @param {object} transparentItem - current item to render\n   * @param {object} cache - cache tracking which material/shader is currently bound.\n   */\n  _drawItem(renderstate, transparentItem, cache) {\n    if (cache.currentGLMaterial != transparentItem.glMaterial) {\n      cache.currentGLMaterial = transparentItem.glMaterial\n      if (!cache.currentGLMaterial.bind(renderstate)) {\n        return\n      }\n    }\n\n    if (cache.currentGLGeom != transparentItem.glGeom) {\n      cache.currentGLGeom = transparentItem.glGeom\n      if (!cache.currentGLGeom.bind(renderstate)) {\n        return\n      }\n    }\n\n    const glGeomItem = transparentItem.glGeomItem\n    if (glGeomItem.bind(renderstate)) {\n      renderstate.bindViewports(renderstate.unifs, () => {\n        cache.currentGLGeom.draw(renderstate)\n      })\n    }\n  }\n\n  /**\n   * The _drawItems method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @private\n   */\n  _drawItems(renderstate) {\n    // Note: sorting here will not sort geometries of different types.\n    // this is a flawed solution that only sorts geomemtries of the same\n    // time and same shader against each other. Given that this is the data 99% o\n    // of the time, this is an acceptable tradeoff\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].draw(renderstate)\n    }\n\n    const cache = {\n      currentglShader: null,\n      currentGLMaterial: null,\n      currentGLGeom: null,\n    }\n    for (const transparentItem of this.visibleItems) {\n      const glShader = transparentItem.shaders.glShader\n      if (cache.currentglShader != glShader) {\n        // Some passes, like the depth pass, bind custom uniforms.\n        // Note: No 'unbind' here before binding the next shader.\n        // That is to support a simple hack. LinesShader enables blend\n        // each time it is bound, and then disables on unbind.\n        if (!glShader.bind(renderstate, 'color')) {\n          continue\n        }\n\n        // Specify an non-instanced draw to the shader\n        const gl = this.__gl\n\n        const unifs = renderstate.unifs\n        if (unifs.instancedDraw) {\n          gl.uniform1i(unifs.instancedDraw.location, 0)\n        }\n        // Note: this disables the attribute location, which must be enabled again for\n        // the next geom, which might use a different attribute location.\n        // e.g.\n        // one shader might specify attributes ['positions', 'instancedIds]\n        // another  might specify attributes ['positions', 'texCoords' 'instancedIds]\n        // In this case, we should re-enabled location 2 and then disable 3.\n        // if (renderstate.attrs.instancedIds && renderstate.attrs.instancedIds.location != -1) {\n        //   gl.disableVertexAttribArray(renderstate.attrs.instancedIds.location)\n        // }\n\n        this.renderer.glGeomItemLibrary.bind(renderstate)\n\n        cache.currentglShader = glShader\n      }\n\n      this._drawItem(renderstate, transparentItem, cache)\n    }\n\n    // if (cache.currentGLGeom) cache.currentGLGeom.unbind(renderstate)\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    if (this.itemCount == 0) return\n\n    const gl = this.__gl\n\n    const viewPos = renderstate.viewXfo.tr\n    // Avoid sorting if the camera did not move more than the specified tolerance.\n    if (this.reSort || viewPos.distanceTo(this.prevSortCameraPos) > this.sortCameraMovementDistance) {\n      this.sortItems(viewPos)\n\n      this.prevSortCameraPos = viewPos\n      if (renderstate.vrviewport) {\n        // Adapt the sort tolerance to the focal distance.\n        // In a tiny scene, we want to sort more frequently.\n        this.sortCameraMovementDistance = renderstate.viewScale * 0.2\n      } else if (renderstate.viewport) {\n        // Adapt the sort tolerance to the focal distance.\n        // In a tiny scene, we want to sort more frequently.\n        const camera = renderstate.viewport.getCamera()\n        this.sortCameraMovementDistance = camera.getFocalDistance() * 0.3\n      }\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LESS)\n\n    gl.enable(gl.BLEND)\n    gl.blendEquation(gl.FUNC_ADD)\n    // Complex transparent surfaces require multiple passes.\n    // First the multiply pass tints the background color, simulating\n    // light passing through the surface, and then the add layer\n    // adds new color to the backbuffer to simulate light bouncing off\n    // the surface.\n\n    // TODO: Optimise this system.\n    // After depth sorting, we should split the items into 2 groups.\n    // Multiply items, and Add  items. (Many items will be in both)\n    // Then we can simply check if we have any multiply items here\n    // before rendering all items.\n\n    // for Multiply pass, we can use front and back surfaces to calculate depth and how much\n    // of the background layer to let through.\n    // gl.disable(gl.CULL_FACE)\n\n    // gl.blendFunc(gl.DST_COLOR, gl.ZERO) // For multiply, select this.\n    // this._drawItems(renderstate)\n\n    // for the Add\n    renderstate.pass = 'ADD'\n    // https://google.github.io/filament/Filament.html#lighting/transparencyandtranslucencylighting/transparency\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    // Only draw font faces. BEcause all faces are drawn, it can make a mess to see the back faces through the front faces.\n    // e.g. we might see the triangles on the other side of a sphere rendered over the top of triangles on the near side.\n    gl.enable(gl.CULL_FACE)\n    gl.cullFace(gl.BACK)\n\n    this._drawItems(renderstate)\n\n    gl.disable(gl.BLEND)\n    gl.depthMask(true)\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {\n    const gl = this.__gl\n    gl.disable(gl.CULL_FACE) // 2-sided rendering.\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].drawHighlightedGeoms(renderstate)\n    }\n\n    const cache = {\n      currentglShader: null,\n      currentGLMaterial: null,\n      currentGLGeom: null,\n    }\n    for (const transparentItem of this.visibleItems) {\n      if (!transparentItem.geomItem.isHighlighted()) continue\n      if (!transparentItem.shaders.glselectedshader) continue\n      const shaders = transparentItem.shaders\n      if (cache.currentglShader != shaders.glselectedshader) {\n        // Some passes, like the depth pass, bind custom uniforms.\n        if (!shaders.glselectedshader.bind(renderstate, 'highlight')) {\n          continue\n        }\n        cache.currentglShader = shaders.glselectedshader\n      }\n\n      const { floatGeomBuffer, passId, instancedDraw } = renderstate.unifs\n      if (floatGeomBuffer) {\n        gl.uniform1i(floatGeomBuffer.location, gl.floatGeomBuffer ? 1 : 0)\n      }\n      if (passId) {\n        gl.uniform1i(passId.location, this.passIndex)\n      }\n      if (instancedDraw) {\n        gl.uniform1i(instancedDraw.location, 0)\n      }\n\n      this.renderer.glGeomItemLibrary.bind(renderstate)\n\n      this._drawItem(renderstate, transparentItem, cache)\n    }\n\n    if (cache.currentGLGeom) cache.currentGLGeom.unbind(renderstate)\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    const gl = this.__gl\n    gl.disable(gl.BLEND)\n    gl.disable(gl.CULL_FACE)\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LESS)\n    gl.depthMask(true)\n\n    // eslint-disable-next-line guard-for-in\n    for (const shaderName in this.__glShaderGeomSets) {\n      this.__glShaderGeomSets[shaderName].drawGeomData(renderstate)\n    }\n\n    const cache = {\n      currentglShader: null,\n      currentGLMaterial: null,\n      currentGLGeom: null,\n    }\n    for (const transparentItem of this.visibleItems) {\n      if (!transparentItem.glGeomItem.geomItem.getSelectable()) continue\n\n      const shaders = transparentItem.shaders\n      if (!shaders.glgeomdatashader) {\n        continue\n      }\n      if (cache.currentglShader != shaders.glgeomdatashader) {\n        // Some passes, like the depth pass, bind custom uniforms.\n        if (!shaders.glgeomdatashader.bind(renderstate, 'geomdata')) {\n          continue\n        }\n        cache.currentglShader = shaders.glgeomdatashader\n      }\n\n      const { floatGeomBuffer, passId, instancedDraw } = renderstate.unifs\n      if (floatGeomBuffer) {\n        gl.uniform1i(floatGeomBuffer.location, gl.floatGeomBuffer ? 1 : 0)\n      }\n      if (passId) {\n        gl.uniform1i(passId.location, this.passIndex)\n      }\n      if (instancedDraw) {\n        gl.uniform1i(instancedDraw.location, 0)\n      }\n\n      this.renderer.glGeomItemLibrary.bind(renderstate)\n\n      this._drawItem(renderstate, transparentItem, cache)\n    }\n\n    if (cache.currentGLGeom) cache.currentGLGeom.unbind(renderstate)\n  }\n}\n\nGLRenderer.registerPass(GLTransparentGeomsPass, PassType.TRANSPARENT)\n\nexport { GLTransparentGeomsPass }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport vert from './AtlasLayout.vert'\nimport frag from './AtlasLayout.frag'\n// eslint-disable-next-line require-jsdoc\nclass AtlasLayoutShader extends GLShader {\n  /**\n   * Create an atlas layout shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\n// Registry.register('AtlasLayoutShader', AtlasLayoutShader)\nexport { AtlasLayoutShader }\n","import { Vec2, Vec4, Color } from '../Math/index'\n\nimport { GrowingPacker } from '../Utilities/index'\n\nimport { BaseImage } from '../SceneTree/index'\n\nimport { GLTexture2D } from './GLTexture2D.js'\nimport { GLRenderTarget } from './GLRenderTarget.js'\nimport { generateShaderGeomBinding } from './Drawing/GeomShaderBinding.js'\nimport { MathFunctions } from '../Utilities/MathFunctions'\nimport { AtlasLayoutShader } from './Shaders/AtlasLayoutShader'\n\n/**\n * An Image Atlas lays out multiple smaller images within a larger image atlas, and tracks their positions.\n * @private\n */\nclass GLImageAtlas extends GLRenderTarget {\n  /**\n   * Create an image atlas..\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   * @param {string} name - The name value.\n   * @param {string} format - The format value.\n   * @param {string} type - The type value.\n   */\n  constructor(gl, name, format = 'RGBA', type = 'FLOAT') {\n    super(gl)\n    this.__name = name\n    this.__formatParam = format\n    this.__typeParam = type\n    this.clearColor = new Color(0, 0, 0, 0)\n    this.__subImages = []\n    this.__layoutNeedsRegeneration = false\n    this.__asyncCount = 0\n    this.loaded = false\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  incAsyncCount(count = 1) {\n    this.__asyncCount += count\n    this.ready = false\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  decAsyncCount() {\n    if (this.__asyncCount > 0) {\n      this.__asyncCount--\n      if (this.__asyncCount == 0) {\n        this.loaded = true\n        this.emit('loaded', {})\n      }\n    }\n  }\n\n  /**\n   * The isLoaded method.\n   * @return {boolean} - The return value.\n   */\n  isLoaded() {\n    return this.__asyncCount == 0\n  }\n\n  /**\n   * The getMainImage method.\n   * @return {BaseImage} - The return value.\n   */\n  getMainImage() {\n    return this.super\n  }\n\n  /**\n   * The addSubImage method.\n   * @param {BaseImage} subImage - The subImage value.\n   * @return {number} - The return value.\n   */\n  addSubImage(subImage) {\n    if (subImage instanceof BaseImage) {\n      const gltexture = new GLTexture2D(this.__gl, subImage)\n      if (!subImage.isLoaded()) {\n        this.incAsyncCount()\n        subImage.on('loaded', () => {\n          this.decAsyncCount()\n        })\n      }\n      subImage.setMetadata('ImageAtlas_gltex', gltexture)\n      gltexture.addRef(this)\n\n      const updated = () => {\n        // TODO: Check to see if the new dimensions\n        // do not match the previous. If not, then we\n        // need to relayout. wE could also avlid a complete\n        // relaout by reremoving and re-adding this image.\n        this.__layoutNeedsRegeneration = true\n        this.renderAtlas()\n      }\n      subImage.on('updated', updated)\n      this.__subImages.push(gltexture)\n    } else {\n      subImage.addRef(this) // subImage is a GLTexture2D\n      this.__subImages.push(subImage)\n    }\n\n    this.__layoutNeedsRegeneration = true\n    return this.__subImages.length - 1\n  }\n\n  /**\n   * The removeSubImage method.\n   * @param {BaseImage} subImage - The subImage value.\n   */\n  removeSubImage(subImage) {\n    let index\n    if (subImage instanceof BaseImage) {\n      const gltext = subImage.getMetadata('ImageAtlas_gltex')\n      index = this.__subImages.indexOf(gltext)\n      subImage.deleteMetadata('ImageAtlas_gltex')\n    } else {\n      index = this.__subImages.indexOf(subImage)\n    }\n    const gltexture = this.__subImages[index]\n    gltexture.removeRef(this)\n\n    this.__subImages.splice(index, 1)\n\n    this.__layoutNeedsRegeneration = true\n  }\n\n  /**\n   * The getSubImage method.\n   * @param {number} index - The index value.\n   * @return {BaseImage} - The image value.\n   */\n  getSubImage(index) {\n    return this.__subImages[index]\n  }\n\n  /**\n   * The numSubImages method.\n   * @return {number} - The return value.\n   */\n  numSubImages() {\n    if (this.__layout) return this.__layout.length\n    return this.__subImages.length\n  }\n\n  /**\n   * The generateAtlasLayout method.\n   */\n  generateAtlasLayout() {\n    if (this.__subImages.length == 0) {\n      this.__layoutNeedsRegeneration = false\n      return\n    }\n    const border = 2\n\n    // We must lay out the sub images in order of size.\n    // else the paker might have trouble.\n    const blocks = []\n    this.__subImages.forEach((subImage, index) => {\n      blocks.push({\n        w: subImage.width + border * 2,\n        h: subImage.height + border * 2,\n        area: subImage.width * subImage.height,\n        index,\n      })\n    })\n\n    blocks.sort((a, b) => (a.area > b.area ? -1 : a.area < b.area ? 1 : 0))\n\n    const packer = new GrowingPacker()\n    packer.fit(blocks)\n\n    this.__layout = []\n    blocks.forEach((block, index) => {\n      // const subImage = this.__subImages[block.index]\n      if (block.fit) {\n        this.__layout[block.index] = {\n          pos: new Vec2(block.fit.x + border, block.fit.y + border),\n          size: new Vec2(block.w, block.h),\n        }\n      } else {\n        console.warn('Unable to fit image')\n      }\n    })\n\n    const width = packer.root.w\n    const height = packer.root.h\n\n    // console.log(this.__name + \" Atlas Texture size:\" + width.toFixed() + \", \" + height.toFixed());\n\n    // Note: only RGBA Float textures can be rendered to on Firefox.(Not RGB)\n    this.configure({\n      width,\n      height,\n      format: this.__typeParam == 'FLOAT' && this.__formatParam == 'RGB' ? 'RGBA' : this.__formatParam,\n      type: this.__typeParam,\n      filter: 'LINEAR',\n    })\n\n    const gl = this.__gl\n    // this.__fbo = new GLFbo(gl, this)\n    // this.__fbo.setClearColor(this.__clearColor)\n\n    if (!gl.__quadVertexIdsBuffer) gl.setupInstancedQuad()\n\n    if (!gl.__atlasLayoutShader) {\n      gl.__atlasLayoutShader = new AtlasLayoutShader(gl)\n      const shaderComp = gl.__atlasLayoutShader.compileForTarget('GLImageAtlas')\n      gl.__atlasLayoutShaderBinding = generateShaderGeomBinding(\n        gl,\n        shaderComp.attrs,\n        gl.__quadattrbuffers,\n        gl.__quadIndexBuffer\n      )\n    }\n\n    const pixelsPerItem = 1\n    let size = Math.round(Math.sqrt(this.__layout.length * pixelsPerItem) + 0.5)\n    // Only support power 2 textures. Else we get strange corruption on some GPUs\n    // in some scenes.\n    size = MathFunctions.nextPow2(size)\n    // Size should be a multiple of pixelsPerItem, so each geom item is always contiguous\n    // in memory. (makes updating a lot easier. See __updateItemInstanceData below)\n    if (size % pixelsPerItem != 0) size += pixelsPerItem - (size % pixelsPerItem)\n\n    if (!gl.floatTexturesSupported) {\n      this.__layoutVec4s = []\n      this.__layout.forEach((layoutItem, index) => {\n        this.__layoutVec4s[index] = [\n          layoutItem.pos.x / width,\n          layoutItem.pos.y / height,\n          layoutItem.size.x / width,\n          layoutItem.size.y / height,\n        ]\n      })\n    } else {\n      const dataArray = new Float32Array(size * size * 4) /* each pixel has 4 floats*/\n      for (let i = 0; i < this.__layout.length; i++) {\n        const layoutItem = this.__layout[i]\n        const vec4 = Vec4.createFromBuffer(dataArray.buffer, i * 4 * 4)\n        vec4.set(\n          layoutItem.pos.x / width,\n          layoutItem.pos.y / height,\n          layoutItem.size.x / width,\n          layoutItem.size.y / height\n        )\n      }\n      if (\n        !this.__atlasLayoutTexture ||\n        this.__atlasLayoutTexture.width != size ||\n        this.__atlasLayoutTexture.height != size\n      ) {\n        if (this.__atlasLayoutTexture) this.__atlasLayoutTexture.destroy()\n        this.__atlasLayoutTexture = new GLTexture2D(gl, {\n          format: 'RGBA',\n          type: 'FLOAT',\n          filter: 'NEAREST',\n          wrap: 'CLAMP_TO_EDGE',\n          mipMapped: false,\n          width: size,\n          height: size,\n          data: dataArray,\n        })\n      } else {\n        this.__atlasLayoutTexture.bufferData(dataArray, size, size)\n      }\n    }\n\n    this.textureDesc[0] = this.width\n    this.textureDesc[1] = this.height\n    this.textureDesc[2] = this.__atlasLayoutTexture.width\n    // this.textureDesc[3] // flags\n\n    this.__layoutNeedsRegeneration = false\n  }\n\n  /**\n   * The getLayoutData method.\n   * @param {number} index - The index value.\n   * @return {object} - The return value.\n   */\n  getLayoutData(index) {\n    return this.__layoutVec4s[index]\n  }\n\n  /**\n   * The renderAtlas method.\n   * @param {boolean} cleanup - The cleanup value.\n   * @param {number} off - The off value.\n   */\n  renderAtlas(cleanup = false, off = 0) {\n    if (this.__subImages.length == 0) {\n      return\n    }\n    if (this.__layoutNeedsRegeneration) {\n      this.generateAtlasLayout()\n    }\n    const gl = this.__gl\n    const renderstate = {}\n    this.bindForWriting(renderstate, true)\n\n    gl.__atlasLayoutShader.bind(renderstate, 'GLImageAtlas')\n    gl.__atlasLayoutShaderBinding.bind(renderstate)\n    const scl = new Vec2(1.0 / this.width, 1.0 / this.height)\n\n    const unifs = renderstate.unifs\n    for (let j = off; j < this.__subImages.length; j++) {\n      const glimage = this.__subImages[j]\n\n      const layoutItem = this.__layout[j]\n      // Some images may not have fully loaded yet, so skip those.\n      if (!glimage.bindToUniform(renderstate, unifs.srctexture)) continue\n      gl.uniform2fv(unifs.pos.location, layoutItem.pos.multiply(scl).asArray())\n      gl.uniform2fv(unifs.size.location, layoutItem.size.multiply(scl).asArray())\n      gl.uniform2f(unifs.srctextureDim.location, glimage.width, glimage.height)\n      gl.uniform1i(unifs.alphaFromLuminance.location, glimage.alphaFromLuminance)\n      gl.uniform1i(unifs.invert.location, glimage.invert)\n      gl.drawQuad()\n\n      // After rendering the texture, we can reuse the texture unit.\n      renderstate.boundTextures--\n    }\n\n    if (cleanup) {\n      this.cleanup()\n    }\n\n    this.unbind(renderstate)\n    // this.__fbo.unbind()\n    this.emit('updated', {})\n  }\n\n  /**\n   * The isReady method.\n   * @return {boolean} - The return value.\n   */\n  isReady() {\n    return this.__atlasLayoutTexture != undefined\n  }\n\n  /**\n   * The bindToUniform method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {WebGLUniformLocation} unif - The WebGL uniform\n   * @return {boolean} - The return value.\n   */\n  bindToUniform(renderstate, unif) {\n    super.bindToUniform(renderstate, unif)\n\n    const unifs = renderstate.unifs\n\n    if (this.__atlasLayoutTexture) {\n      const atlasLayoutUnif = unifs[unif.name + '_layout']\n      if (atlasLayoutUnif) this.__atlasLayoutTexture.bindToUniform(renderstate, atlasLayoutUnif)\n\n      const atlasDescUnif = unifs[unif.name + '_desc']\n      if (atlasDescUnif) {\n        this.__gl.uniform4fv(atlasDescUnif.location, this.textureDesc)\n      }\n    } else {\n      const atlasDescUnif = unifs[unif.name + '_desc']\n      if (atlasDescUnif) this.__gl.uniform4f(atlasDescUnif.location, this.width, this.height, 0.0, 0.0)\n    }\n    return true\n  }\n\n  /**\n   * The cleanup method.\n   */\n  cleanup() {\n    for (const glimage of this.__subImages) {\n      glimage.removeRef(this)\n    }\n    this.__subImages = []\n    this.destroy()\n  }\n\n  /**\n   * The destroy is called by the system to cause explicit resources cleanup.\n   * Users should never need to call this method directly.\n   */\n  destroy() {\n    this.cleanup()\n    super.destroy()\n  }\n}\n\nexport { GLImageAtlas }\n","import { Vec3, Vec4 } from '../../Math/index'\nimport { BillboardItem } from '../../SceneTree/index'\nimport { BillboardShader } from '../Shaders/BillboardShader.js'\nimport { GLPass, PassType } from './GLPass.js'\nimport { GLImageAtlas } from '../GLImageAtlas.js'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { GLRenderer } from '../GLRenderer.js'\nimport { generateShaderGeomBinding, GLMesh } from '../Drawing/index'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\n\nconst pixelsPerItem = 7 // The number of pixels per draw item.\n\n/** Class representing a GL billboards pass.\n * @extends GLPass\n * @private\n */\nclass GLBillboardsPass extends GLPass {\n  /**\n   * Create a GL billboards pass.\n   */\n  constructor() {\n    super()\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n\n    this.billboards = []\n    this.dirtyBillboards = new Set()\n    this.freeIndices = []\n    this.drawCount = 0\n    this.threshold = 0.0\n    this.updateRequested = false\n\n    this.prevSortCameraPos = new Vec3()\n\n    this.atlas = new GLImageAtlas(this.renderer.gl, 'Billboards', 'RGBA', 'UNSIGNED_BYTE', [1, 1, 1, 0])\n    const emitUpdated = (event) => this.emit('updated', event)\n    this.atlas.on('loaded', emitUpdated)\n    this.atlas.on('updated', emitUpdated)\n  }\n\n  /**\n   * Returns the pass type. OPAQUE passes are always rendered first, followed by TRANSPARENT passes, and finally OVERLAY.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.TRANSPARENT\n  }\n\n  /**\n   * The itemAddedToScene method is called on each pass when a new item\n   * is added to the scene, and the renderer must decide how to render it.\n   * It allows Passes to select geometries to handle the drawing of.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * The object contains a parameter 'continueInSubTree', which can be set to false,\n   * so the subtree of this node will not be traversed after this node is handled.\n   * @return {Boolean} - The return value.\n   */\n  itemAddedToScene(treeItem, rargs) {\n    if (treeItem instanceof BillboardItem) {\n      this.addBillboard(treeItem)\n      return true\n    }\n    return false\n  }\n\n  /**\n   * The itemRemovedFromScene method is called on each pass when aa item\n   * is removed to the scene, and the pass must handle cleaning up any resources.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * @return {Boolean} - The return value.\n   */\n  itemRemovedFromScene(treeItem, rargs) {\n    if (treeItem instanceof BillboardItem) {\n      this.removeBillboard(treeItem)\n      return true\n    }\n    return false\n  }\n\n  // ///////////////////////////////////\n  // Bind to Render Tree\n\n  /**\n   * The filterRenderTree method.\n   */\n  filterRenderTree() {}\n\n  /**\n   * The addBillboard method.\n   * @param {any} billboard - The billboard value.\n   */\n  addBillboard(billboard) {\n    const imageParam = billboard.getParameter('Image')\n    const image = imageParam.getValue()\n    if (!image) {\n      imageParam.on('valueChanged', () => this.addBillboard(billboard))\n      return\n    }\n    let index\n    if (this.freeIndices.length > 0) index = this.freeIndices.pop()\n    else index = this.billboards.length\n\n    const imageIndex = this.atlas.addSubImage(image)\n    billboard.setMetadata('GLBillboardsPass_Index', index)\n\n    const visibilityChanged = () => {\n      if (billboard.isVisible()) {\n        this.drawCount++\n        // The billboard Xfo might have changed while it was\n        // not visible. We need to update here.\n        this.dirtyBillboards.add(index)\n      } else this.drawCount--\n      this.reqUpdateIndexArray()\n    }\n    billboard.on('visibilityChanged', visibilityChanged)\n\n    const updateBillboard = () => {\n      if (billboard.isVisible()) {\n        this.dirtyBillboards.add(index)\n        this.emit('updated', {})\n      }\n    }\n    billboard.getParameter('GlobalXfo').on('valueChanged', updateBillboard)\n    billboard.getParameter('Alpha').on('valueChanged', updateBillboard)\n    billboard.on('highlightChanged', updateBillboard)\n\n    if (billboard.isVisible()) this.drawCount++\n\n    this.billboards[index] = {\n      billboard,\n      imageIndex,\n      visibilityChanged,\n      updateBillboard,\n    }\n\n    this.indexArrayUpdateNeeded = true\n    this.requestUpdate()\n  }\n\n  /**\n   * The removeBillboard method.\n   * @param {any} billboard - The billboard value.\n   */\n  removeBillboard(billboard) {\n    const index = billboard.getMetadata('GLBillboardsPass_Index')\n    if (index == -1) {\n      console.warn('Billboard already removed.')\n      return\n    }\n    const billboardData = this.billboards[index]\n\n    // Currently we are getting errors when trying to re-generate the Fbo\n    // after removing and then adding images back to the atlas.\n    // I don't have time to figure it out, so simply adding images\n    // to the atlas. (for the Zahner demo)\n    // Eventually we need to clean up the atlas, so debug this using the\n    // survey-point-calibration 190528_Dummy_Srvy_Data.vlexe test\n    const image = billboardData.billboard.getParameter('Image').getValue()\n    this.atlas.removeSubImage(image)\n\n    billboard.off('visibilityChanged', billboardData.visibilityChanged)\n    billboard.off('highlightChanged', billboardData.updateBillboard)\n    billboard.getParameter('GlobalXfo').off('valueChanged', billboardData.updateBillboard)\n    billboard.getParameter('Alpha').off('valueChanged', billboardData.updateBillboard)\n\n    this.billboards[index] = null\n    this.freeIndices.push(index)\n\n    if (billboard.isVisible()) this.drawCount--\n\n    this.indexArrayUpdateNeeded = true\n    this.requestUpdate()\n  }\n\n  /**\n   * The populateBillboardDataArray method.\n   * @param {any} billboardData - The billboardData value.\n   * @param {number} index - The index value.\n   * @param {any} dataArray - The dataArray value.\n   * @private\n   */\n  populateBillboardDataArray(billboardData, index, dataArray) {\n    const billboard = billboardData.billboard\n    const mat4 = billboard.getParameter('GlobalXfo').getValue().toMat4()\n    const ppm = billboard.getParameter('PixelsPerMeter').getValue()\n    const pivot = billboard.getParameter('Pivot').getValue()\n    const scale = 1 / ppm\n\n    // Until webgl2 is standard, we will avoid using bit flags.\n    // instead, we will use decimals.\n    let flags = 0\n    if (billboard.getParameter('AlignedToCamera').getValue()) flags |= 1 << 2\n    if (billboard.getParameter('DrawOnTop').getValue()) flags |= 1 << 3\n    if (billboard.getParameter('FixedSizeOnscreen').getValue()) flags |= 1 << 4\n    const alpha = billboard.getParameter('Alpha').getValue()\n    const color = billboard.getParameter('Color').getValue()\n    const offset = index * pixelsPerItem * 4\n    const col0 = Vec4.createFromBuffer(dataArray.buffer, offset * 4)\n    const col1 = Vec4.createFromBuffer(dataArray.buffer, (offset + 4) * 4)\n    const col2 = Vec4.createFromBuffer(dataArray.buffer, (offset + 8) * 4)\n    const col3 = Vec4.createFromBuffer(dataArray.buffer, (offset + 12) * 4)\n    col0.set(mat4.xAxis.x, mat4.yAxis.x, mat4.zAxis.x, mat4.translation.x)\n    col1.set(mat4.xAxis.y, mat4.yAxis.y, mat4.zAxis.y, mat4.translation.y)\n    col2.set(mat4.xAxis.z, mat4.yAxis.z, mat4.zAxis.z, mat4.translation.z)\n    col3.set(scale, flags, billboardData.imageIndex, alpha)\n\n    const col4 = Vec4.createFromBuffer(dataArray.buffer, (offset + 16) * 4)\n    col4.set(pivot.x, pivot.y, 0, 0)\n\n    const col5 = Vec4.createFromBuffer(dataArray.buffer, (offset + 20) * 4)\n    col5.set(color.r, color.g, color.b, color.a)\n\n    // /////////////////////////\n    // Hilight\n    if (billboard.isHighlighted()) {\n      const highlight = billboard.getHighlight()\n      const col6 = Vec4.createFromBuffer(dataArray.buffer, (offset + 24) * 4)\n      col6.set(highlight.r, highlight.g, highlight.b, highlight.a)\n    }\n  }\n\n  /**\n   * The requestUpdate method.\n   * @private\n   */\n  requestUpdate() {\n    if (!this.updateRequested) {\n      this.updateRequested = true\n      this.emit('updated')\n    }\n  }\n\n  /**\n   * The reqUpdateIndexArray method.\n   * @private\n   */\n  reqUpdateIndexArray() {\n    if (this.indexArrayUpdateNeeded) return\n    this.indexArrayUpdateNeeded = true\n    this.emit('updated')\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  updateIndexArray() {\n    const gl = this.__gl\n    // Note: When the camera moves, this array is sorted and re-upload.\n    if (this.indexArray && this.indexArray.length != this.drawCount) {\n      gl.deleteBuffer(this.instanceIdsBuffer)\n      this.instanceIdsBuffer = null\n    }\n\n    this.indexArray = new Float32Array(this.drawCount)\n    let offset = 0\n    for (let i = 0; i < this.billboards.length; i++) {\n      if (this.billboards[i] && this.billboards[i].billboard.isVisible()) {\n        this.indexArray[offset] = i\n        offset++\n      }\n    }\n    if (!this.instanceIdsBuffer) this.instanceIdsBuffer = gl.createBuffer()\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.instanceIdsBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.indexArray, gl.STATIC_DRAW)\n    this.indexArrayUpdateNeeded = false\n  }\n\n  /**\n   * The updateBillboards method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @private\n   */\n  updateBillboards(renderstate) {\n    const doIt = () => {\n      if (this.indexArrayUpdateNeeded) this.updateIndexArray()\n\n      const gl = this.__gl\n      if (!this.glshader) {\n        if (!gl.__quadVertexIdsBuffer) {\n          gl.setupInstancedQuad()\n        }\n        this.glshader = new BillboardShader(gl)\n        const shaderComp = this.glshader.compileForTarget('GLBillboardsPass', renderstate.shaderopts)\n\n        this.shaderBinding = generateShaderGeomBinding(gl, shaderComp.attrs, gl.__quadattrbuffers, gl.__quadIndexBuffer)\n      }\n\n      // Note: Maybe the atlas is alreadu up to date. It should\n      // maintain its own coherencey by listening to the sub images.\n      this.atlas.renderAtlas()\n\n      if (!gl.floatTexturesSupported || !gl.drawElementsInstanced) {\n        this.modelMatrixArray = []\n        this.billboardDataArray = []\n        this.tintColorArray = []\n        this.indexArray.forEach((index) => {\n          // if (index == -1) return;\n          const billboardData = this.billboards[index]\n          const billboard = billboardData.billboard\n          const mat4 = billboard.getParameter('GlobalXfo').getValue().toMat4()\n          const ppm = billboard.getParameter('PixelsPerMeter').getValue()\n          const scale = 1 / ppm\n          let flags = 0\n          if (billboard.getParameter('AlignedToCamera').getValue()) flags |= 1 << 2\n          if (billboard.getParameter('DrawOnTop').getValue()) flags |= 1 << 3\n          if (billboard.getParameter('FixedSizeOnscreen').getValue()) flags |= 1 << 4\n          const alpha = billboard.getParameter('Alpha').getValue()\n          const color = billboard.getParameter('Color').getValue()\n\n          this.modelMatrixArray[index] = mat4.asArray()\n          this.billboardDataArray[index] = [scale, flags, billboardData.imageIndex, alpha]\n          this.tintColorArray[index] = [color.r, color.g, color.b, color.a]\n        })\n        this.updateRequested = false\n        return\n      }\n\n      let size = Math.round(Math.sqrt((this.billboards.length - this.freeIndices.length) * pixelsPerItem) + 0.5)\n      // Note: the following few lines need a cleanup.\n      // We should be using power of 2 textures. The problem is that pot texture sizes don't\n      // align with the 6 pixels per draw item. So we need to upload a slightly bigger texture\n      // but upload the 'usable' size.\n\n      // Only support power 2 textures. Else we get strange corruption on some GPUs\n      // in some scenes.\n      // Size should be a multiple of pixelsPerItem, so each geom item is always contiguous\n      // in memory. (makes updating a lot easier. See __updateItemInstanceData below)\n      // size = Math.nextPow2(size);\n\n      if (size % pixelsPerItem != 0) size += pixelsPerItem - (size % pixelsPerItem)\n\n      this.width = size\n      // if((this.width % pixelsPerItem) != 0)\n      //     this.width -= (this.width % pixelsPerItem);\n\n      if (!this.drawItemsTexture) {\n        this.drawItemsTexture = new GLTexture2D(gl, {\n          format: 'RGBA',\n          type: 'FLOAT',\n          width: size,\n          height: size,\n          filter: 'NEAREST',\n          wrap: 'CLAMP_TO_EDGE',\n          mipMapped: false,\n        })\n        this.drawItemsTexture.clear()\n      } else {\n        this.drawItemsTexture.resize(size, size)\n      }\n\n      this.indexArray.forEach((index) => {\n        if (index != -1) this.updateBillboard(index)\n      })\n\n      this.updateRequested = false\n    }\n\n    if (this.atlas.isLoaded()) {\n      doIt()\n    } else {\n      this.atlas.on('loaded', doIt)\n    }\n  }\n\n  /**\n   * The updateBillboard method.\n   * @param {number} index - The index of the Billboard to update .\n   * @private\n   */\n  updateBillboard(index) {\n    if (this.drawCount == 0 || !this.drawItemsTexture) {\n      return\n    }\n\n    const billboardData = this.billboards[index]\n    if (!billboardData.billboard.isVisible()) return\n\n    const gl = this.__gl\n\n    const dataArray = new Float32Array(pixelsPerItem * 4)\n    this.populateBillboardDataArray(billboardData, 0, dataArray)\n\n    gl.bindTexture(gl.TEXTURE_2D, this.drawItemsTexture.glTex)\n    const xoffset = (index * pixelsPerItem) % this.width\n    const yoffset = Math.floor((index * pixelsPerItem) / this.width)\n\n    const width = pixelsPerItem\n    const height = 1\n    const type = this.drawItemsTexture.getType()\n    const format = this.drawItemsTexture.getFormat()\n\n    if (type == gl.FLOAT) {\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, xoffset, yoffset, width, height, format, type, dataArray)\n    } else {\n      const unit16s = MathFunctions.convertFloat32ArrayToUInt16Array(dataArray)\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, xoffset, yoffset, width, height, format, type, unit16s)\n    }\n  }\n\n  /**\n   * The sort method.\n   * @param {any} cameraPos - The cameraPos value.\n   */\n  sort(cameraPos) {\n    for (const billboardData of this.billboards) {\n      const { billboard } = billboardData\n      if (billboard && billboard.isVisible()) {\n        const xfo = billboard.getParameter('GlobalXfo').getValue()\n        billboardData.dist = xfo.tr.distanceTo(cameraPos)\n      }\n    }\n    this.indexArray.sort((a, b) => {\n      if (a == -1) return 1\n      if (b == -1) return -1\n      return this.billboards[a].dist > this.billboards[b].dist\n        ? -1\n        : this.billboards[a].dist < this.billboards[b].dist\n        ? 1\n        : 0\n    })\n\n    const gl = this.__gl\n    if (gl.floatTexturesSupported && this.instanceIdsBuffer) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.instanceIdsBuffer)\n      gl.bufferData(gl.ARRAY_BUFFER, this.indexArray, gl.STATIC_DRAW)\n    }\n  }\n\n  /**\n   * The sort method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   * @param {string} key - The key to cache the compiler results against.\n   */\n  __draw(renderstate, key) {\n    const gl = this.__gl\n    if (!this.glshader) return\n    this.glshader.bind(renderstate, key)\n    this.shaderBinding.bind(renderstate)\n\n    const unifs = renderstate.unifs\n\n    const { atlasBillboards, passId, floatGeomBuffer, inVR } = renderstate.unifs\n\n    if (atlasBillboards) {\n      this.atlas.bindToUniform(renderstate, unifs.atlasBillboards)\n    }\n\n    if (floatGeomBuffer) {\n      gl.uniform1i(floatGeomBuffer.location, renderstate.floatGeomBuffer ? 1 : 0)\n    }\n    if (passId) {\n      gl.uniform1i(passId.location, this.passIndex)\n    }\n    if (inVR) gl.uniform1i(inVR.location, inVR)\n\n    if (!gl.floatTexturesSupported || !gl.drawElementsInstanced) {\n      const { modelMatrix, billboardData, tintColor, layoutData } = renderstate.unifs\n      const len = this.indexArray.length\n      for (let i = 0; i < len; i++) {\n        gl.uniformMatrix4fv(modelMatrix.location, false, this.modelMatrixArray[i])\n        gl.uniform4fv(billboardData.location, this.billboardDataArray[i])\n        gl.uniform4fv(tintColor.location, this.tintColorArray[i])\n        gl.uniform4fv(layoutData.location, this.atlas.getLayoutData(this.billboards[i].imageIndex))\n\n        renderstate.bindViewports(unifs, () => {\n          gl.drawQuad()\n        })\n      }\n    } else {\n      const { instancesTexture, instancesTextureSize } = renderstate.unifs\n      this.drawItemsTexture.bindToUniform(renderstate, instancesTexture)\n      gl.uniform1i(instancesTextureSize.location, this.width)\n\n      {\n        // The instance billboard ids are bound as an instanced attribute.\n        const location = renderstate.attrs.instanceIds.location\n        gl.enableVertexAttribArray(location)\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.instanceIdsBuffer)\n        gl.vertexAttribPointer(location, 1, gl.FLOAT, false, 4, 0)\n        gl.vertexAttribDivisor(location, 1) // This makes it instanced\n      }\n\n      renderstate.bindViewports(unifs, () => {\n        gl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0, this.drawCount)\n      })\n    }\n  }\n\n  /**\n   * The sort method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    if (this.drawCount == 0) return\n    if (this.updateRequested) {\n      this.updateBillboards(renderstate)\n    }\n\n    if (this.dirtyBillboards.size > 0) {\n      this.dirtyBillboards.forEach((index) => {\n        this.updateBillboard(index)\n      })\n      this.dirtyBillboards.clear()\n    }\n\n    if (this.indexArrayUpdateNeeded) this.updateIndexArray()\n\n    const cameraPos = renderstate.viewXfo.tr\n    const dist = cameraPos.distanceTo(this.prevSortCameraPos)\n    // Avoid sorting if the camera did not move more than 3 meters.\n    if (dist > this.threshold) {\n      this.sort(cameraPos)\n      this.prevSortCameraPos = cameraPos.clone()\n      if (this.drawCount > 1) {\n        const v0 = this.billboards[this.indexArray[this.indexArray.length - 1]].billboard\n          .getParameter('GlobalXfo')\n          .getValue().tr\n        const v1 = this.billboards[this.indexArray[this.indexArray.length - 2]].billboard\n          .getParameter('GlobalXfo')\n          .getValue().tr\n        this.threshold = v0.distanceTo(v1)\n      } else {\n        this.threshold = 9999\n      }\n    }\n\n    const gl = this.__gl\n\n    gl.depthMask(false)\n    gl.disable(gl.CULL_FACE)\n\n    gl.enable(gl.BLEND)\n    gl.blendEquation(gl.FUNC_ADD)\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.__draw(renderstate, 'DRAW_COLOR')\n\n    gl.disable(gl.BLEND)\n    gl.depthMask(true)\n  }\n\n  /**\n   * The drawHighlightedGeoms method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawHighlightedGeoms(renderstate) {\n    if (this.drawCount == 0) return\n    this.__draw(renderstate, 'DRAW_HIGHLIGHT')\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    if (this.drawCount == 0) return\n    this.__draw(renderstate, 'DRAW_GEOMDATA')\n  }\n\n  /**\n   * The getGeomItem method.\n   * @param {number} index - The index value.\n   * @return {GLGeomItem} - The GLGeomItem that wraps the provided GeomItem\n   */\n  getGeomItem(index) {\n    if (index >= this.billboards.length) {\n      console.warn('Invalid Draw Item id:' + index + ' NumBillboards:' + (this.billboards.length - 1))\n      return undefined\n    }\n    return this.billboards[index].billboard\n  }\n\n  /**\n   * The getGeomItemAndDist method.\n   * @param {any} geomData - The geomData value.\n   * @return {any} - The return value.\n   */\n  getGeomItemAndDist(geomData) {\n    let itemId\n    let dist\n    if (geomData instanceof Float32Array) {\n      itemId = Math.round(geomData[1])\n      dist = geomData[3]\n    } else {\n      itemId = geomData[0] + ((geomData[1] & 63) << 8)\n      dist = MathFunctions.decode16BitFloatFrom2xUInt8([geomData[2], geomData[3]])\n    }\n\n    if (itemId >= this.billboards.length) {\n      console.warn('Invalid Draw Item id:' + itemId + ' NumBillboards:' + (this.billboards.length - 1))\n      return undefined\n    }\n    return {\n      geomItem: this.billboards[itemId].billboard,\n      dist,\n    }\n  }\n}\n\nGLRenderer.registerPass(GLBillboardsPass, PassType.TRANSPARENT)\n\nexport { GLBillboardsPass }\n","import { PassType } from './GLPass.js'\nimport { GLOpaqueGeomsPass } from './GLOpaqueGeomsPass.js'\nimport { GLRenderer } from '../GLRenderer.js'\n\n/** Class representing a GL overlay pass.\n * @extends GLOpaqueGeomsPass\n */\nclass GLOverlayPass extends GLOpaqueGeomsPass {\n  /**\n   * Create a GL overlay pass.\n   * @param {string} name - The name value.\n   */\n  constructor() {\n    super()\n  }\n\n  /**\n   * Returns the pass type. OPAQUE passes are always rendered first, followed by TRANSPARENT passes, and finally OVERLAY.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.OVERLAY\n  }\n\n  // ///////////////////////////////////\n  // Bind to Render Tree\n\n  /**\n   * The filterGeomItem method.\n   * @param {GeomItem} geomItem - The geomItem value.\n   * @return {any} - The return value.\n   */\n  filterGeomItem(geomItem) {\n    if (geomItem.isOverlay()) return true\n    const shaderClass = geomItem.getParameter('Material').getValue().getShaderClass()\n    if (shaderClass) {\n      if (shaderClass.isOverlay()) return true\n    }\n    return false\n  }\n\n  /**\n   * The draw method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    const gl = this.__gl\n\n    // Clear the depth buffer so handls are always drawn over the top.\n    gl.clear(gl.DEPTH_BUFFER_BIT)\n\n    if (false)\n      // 2-sided rendering.\n      gl.disable(gl.CULL_FACE)\n    // 2-sided rendering.\n    else {\n      gl.enable(gl.CULL_FACE)\n      gl.cullFace(gl.BACK)\n    }\n    gl.enable(gl.BLEND)\n    gl.blendEquation(gl.FUNC_ADD)\n\n    renderstate.pass = 'ADD'\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // For add\n\n    this.__traverseTreeAndDraw(renderstate)\n\n    gl.disable(gl.BLEND)\n    // gl.enable(gl.DEPTH_TEST);\n  }\n\n  /**\n   * The drawGeomData method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  drawGeomData(renderstate) {\n    const gl = this.__gl\n\n    // Clear the depth buffer so handls are always drawn over the top.\n    gl.clear(gl.DEPTH_BUFFER_BIT)\n\n    gl.enable(gl.CULL_FACE)\n    gl.cullFace(gl.BACK)\n\n    gl.enable(gl.BLEND)\n    gl.blendEquation(gl.FUNC_ADD)\n\n    renderstate.pass = 'ADD'\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // For add\n\n    super.drawGeomData(renderstate)\n\n    gl.disable(gl.BLEND)\n    gl.enable(gl.DEPTH_TEST)\n  }\n}\n\nGLRenderer.registerPass(GLOverlayPass, PassType.OVERLAY)\n\nexport { GLOverlayPass }\n","/* eslint-disable require-jsdoc */\nimport { GLShader } from '../GLShader.js'\n\nimport './GLSL/index'\nimport frag from './BoundingBox.frag'\nimport vert from './BoundingBox.vert'\n\nclass BoundingBoxShader extends GLShader {\n  /**\n   * Create a GL shader.\n   * @param {WebGLRenderingContext} gl - The webgl rendering context.\n   */\n  constructor(gl) {\n    super(gl)\n    this.setShaderStage('VERTEX_SHADER', vert)\n\n    this.setShaderStage('FRAGMENT_SHADER', frag)\n  }\n}\n\nexport { BoundingBoxShader }\n","/* eslint-disable valid-jsdoc */\nimport { Color, Vec3, Vec4 } from '../../Math/index'\nimport { LinesCuboid, TreeItem } from '../../SceneTree/index'\nimport { BoundingBoxShader } from '../Shaders/BoundingBoxShader.js'\nimport { GLLines } from '../Drawing/GLLines.js'\nimport { GLPass, PassType } from './GLPass.js'\nimport { GLTexture2D } from '../GLTexture2D.js'\nimport { MathFunctions } from '../../Utilities/MathFunctions'\n\nconst pixelsPerItem = 6 // The number of pixels per draw item.\n\n/** Class representing a GL treeitems pass.\n * @extends GLPass\n * @private\n */\nclass GLBoundingBoxPass extends GLPass {\n  /**\n   * Create a GL treeitems pass.\n   */\n  constructor() {\n    super()\n    this.boxes = []\n    this.dirtyBoxes = new Set()\n    this.freeIndices = []\n    this.drawCount = 0\n\n    this.indexArrayUpdateNeeded = false\n    this.__updateRequested = false\n\n  }\n\n  /**\n   * The getPassType method.\n   * @return {number} - The pass type value.\n   */\n  getPassType() {\n    return PassType.OPAQUE\n  }\n\n  /**\n   * The init method.\n   * @param {GLBaseRenderer} renderer - The renderer value.\n   * @param {number} passIndex - The index of the pass in the GLBAseRenderer\n   */\n  init(renderer, passIndex) {\n    super.init(renderer, passIndex)\n\n    const gl = this.__renderer.gl\n    this.glgeom = new GLLines(gl, new LinesCuboid(1, 1, 1))\n    this.glshader = new BoundingBoxShader(gl)\n  }\n\n  /**\n   * The itemAddedToScene method is called on each pass when a new item\n   * is added to the scene, and the renderer must decide how to render it.\n   * It allows Passes to select geometries to handle the drawing of.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * The object contains a parameter 'continueInSubTree', which can be set to false,\n   * so the subtree of this node will not be traversed after this node is handled.\n   * @return {Boolean} - The return value.\n   */\n  itemAddedToScene(treeItem, rargs) {\n    // if (treeItem instanceof TreeItem) {\n    //   this.bindTreeItem(treeItem)\n    //   return false\n    // }\n    return false\n  }\n\n  /**\n   * The itemRemovedFromScene method is called on each pass when aa item\n   * is removed to the scene, and the pass must handle cleaning up any resources.\n   * @param {TreeItem} treeItem - The treeItem value.\n   * @param {object} rargs - Extra return values are passed back in this object.\n   * @return {Boolean} - The return value.\n   */\n  itemRemovedFromScene(treeItem, rargs) {\n    // if (treeItem instanceof TreeItem) {\n    //   this.unbindTreeItem(treeItem)\n    //   return true\n    // }\n    return false\n  }\n\n  // ///////////////////////////////////\n  // Bind to Render Tree\n\n  /**\n   * Adds tree items to the renderer, selecting the correct pass to delegate rendering too, and listens to future changes in the tree.\n   *\n   * @param {TreeItem} treeItem - The tree item to add.\n   */\n  addTreeItem(treeItem, continueIntoSubTree = true) {\n    // Note: we can have BaseItems in the tree now.\n    if (!(treeItem instanceof TreeItem)) return\n\n    this.bindTreeItem(treeItem)\n\n    if (continueIntoSubTree) {\n      // Traverse the tree adding items until we hit the leaves (which are usually GeomItems.)\n      for (const childItem of treeItem.getChildren()) {\n        if (childItem) this.addTreeItem(childItem)\n      }\n\n      treeItem.on('childAdded', (event) => {\n        this.addTreeItem(event.childItem)\n      })\n      treeItem.on('childRemoved', (event) => {\n        this.unbindTreeItem(event.childItem)\n      })\n    }\n  }\n\n  /**\n   * The bindTreeItem method.\n   * @param {any} treeitem - The treeitem value.\n   */\n  bindTreeItem(treeitem) {\n    let index\n    if (this.freeIndices.length > 0) index = this.freeIndices.pop()\n    else index = this.boxes.length\n    treeitem.setMetadata('GLBoundingBoxPass_Index', index)\n\n    const visibilityChanged = () => {\n      if (treeitem.isVisible()) {\n        this.drawCount++\n        // The treeitem Xfo might have changed while it was\n        // not visible. We need to update here.\n        this.dirtyBoxes.add(index)\n      } else this.drawCount--\n      this.indexArrayUpdateNeeded = true\n    }\n    treeitem.on('visibilityChanged', visibilityChanged)\n\n    const xfoChanged = () => {\n      if (treeitem.isVisible()) {\n        this.dirtyBoxes.add(index)\n        this.emit('updated', {})\n      }\n    }\n    treeitem.getParameter('GlobalXfo').on('valueChanged', xfoChanged)\n    treeitem.getParameter('BoundingBox').on('valueChanged', xfoChanged)\n\n    if (treeitem.isVisible()) this.drawCount++\n\n    this.boxes[index] = {\n      treeitem,\n      visibilityChanged,\n      xfoChanged,\n    }\n\n    this.indexArrayUpdateNeeded = true\n    this.__updateRequested = true\n    this.emit('updated')\n  }\n\n  /**\n   * The unbindTreeItem method.\n   * @param {any} treeitem - The treeitem value.\n   */\n  unbindTreeItem(treeitem) {\n    const index = treeitem.getMetadata('GLBoundingBoxPass_Index')\n    if (index == -1) {\n      console.warn('Billboard already removed.')\n      return\n    }\n    const treeitemData = this.boxes[index]\n\n    treeitem.off('visibilityChanged', treeitemData.visibilityChanged)\n    treeitem.getParameter('GlobalXfo').off('valueChanged', treeitemData.xfoChanged)\n    treeitem.getParameter('BoundingBox').off('valueChanged', treeitemData.xfoChanged)\n\n    this.boxes[index] = null\n    this.freeIndices.push(index)\n\n    if (treeitem.isVisible()) this.drawCount--\n\n    this.indexArrayUpdateNeeded = true\n\n    this.__updateRequested = true\n    this.__updateBoxes()\n    this.emit('updated')\n  }\n\n  /**\n   * The __populateBoxesDataArray method.\n   * @param {any} treeitemData - The treeitemData value.\n   * @param {number} index - The index value.\n   * @param {any} dataArray - The dataArray value.\n   * @private\n   */\n  __populateBoxesDataArray(treeitemData, index, dataArray) {\n    const treeitem = treeitemData.treeitem\n    const globalXfoParam = treeitem.getParameter('GlobalXfo')\n    const geomMatParam = treeitem.getParameter('GeomMat')\n    const color = geomMatParam ? new Color(1, 0, 0, 1) : new Color(0, 0, 1, 1)\n    const mat4 = geomMatParam ? geomMatParam.getValue() : globalXfoParam.getValue().toMat4()\n    const bbox = treeitem.getParameter('BoundingBox').getValue()\n\n    const offset = index * pixelsPerItem * 4\n    const pixel0 = Vec4.createFromBuffer(dataArray.buffer, offset * 4)\n    const pixel1 = Vec4.createFromBuffer(dataArray.buffer, (offset + 4) * 4)\n    const pixel2 = Vec4.createFromBuffer(dataArray.buffer, (offset + 8) * 4)\n    const pixel3 = Vec4.createFromBuffer(dataArray.buffer, (offset + 12) * 4)\n    const pixel4 = Vec4.createFromBuffer(dataArray.buffer, (offset + 16) * 4)\n    const pixel5 = Vec4.createFromBuffer(dataArray.buffer, (offset + 20) * 4)\n\n    pixel0.set(mat4.xAxis.x, mat4.yAxis.x, mat4.zAxis.x, mat4.translation.x)\n    pixel1.set(mat4.xAxis.y, mat4.yAxis.y, mat4.zAxis.y, mat4.translation.y)\n    pixel2.set(mat4.xAxis.z, mat4.yAxis.z, mat4.zAxis.z, mat4.translation.z)\n    pixel3.set(bbox.p0.x, bbox.p0.y, bbox.p0.z, 0.0)\n    pixel4.set(bbox.p1.x, bbox.p1.y, bbox.p1.z, 0.0)\n    pixel5.set(color.r, color.g, color.b, color.a)\n  }\n\n  // eslint-disable-next-line require-jsdoc\n  __updateIndexArray() {\n    const gl = this.__gl\n    // Note: When the camera moves, this array is sorted and re-upload.\n    if (this.__indexArray && this.__indexArray.length != this.drawCount) {\n      gl.deleteBuffer(this.__instanceIdsBuffer)\n      this.__instanceIdsBuffer = null\n    }\n\n    this.__indexArray = new Float32Array(this.drawCount)\n    let offset = 0\n    for (let i = 0; i < this.boxes.length; i++) {\n      if (this.boxes[i] && this.boxes[i].treeitem.isVisible()) {\n        this.__indexArray[offset] = i\n        offset++\n      }\n    }\n    if (!this.__instanceIdsBuffer) this.__instanceIdsBuffer = gl.createBuffer()\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.__instanceIdsBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, this.__indexArray, gl.STATIC_DRAW)\n    this.indexArrayUpdateNeeded = false\n  }\n\n  /**\n   * The __updateBoxes method.\n   * @private\n   */\n  __updateBoxes() {\n    if (this.indexArrayUpdateNeeded) this.__updateIndexArray()\n\n    const gl = this.__renderer.gl\n    if (!gl.floatTexturesSupported || !gl.drawElementsInstanced) {\n      this.__modelMatrixArray = []\n      this.__treeitemDataArray = []\n      this.__tintColorArray = []\n      this.__indexArray.forEach((index) => {\n        const treeitemData = this.boxes[index]\n        const treeitem = treeitemData.treeitem\n        const mat4 = treeitem.getParameter('GlobalXfo').getValue().toMat4()\n        const ppm = treeitem.getParameter('PixelsPerMeter').getValue()\n        const scale = 1 / ppm\n        let flags = 0\n        if (treeitem.getParameter('AlignedToCamera').getValue()) flags |= 1 << 2\n        if (treeitem.getParameter('DrawOnTop').getValue()) flags |= 1 << 3\n        if (treeitem.getParameter('FixedSizeOnscreen').getValue()) flags |= 1 << 4\n        const alpha = treeitem.getParameter('Alpha').getValue()\n        const color = treeitem.getParameter('Color').getValue()\n\n        this.__modelMatrixArray[index] = mat4.asArray()\n        this.__treeitemDataArray[index] = [scale, flags, treeitemData.imageIndex, alpha]\n        this.__tintColorArray[index] = [color.r, color.g, color.b, color.a]\n      })\n      this.__updateRequested = false\n      return\n    }\n\n    let size = Math.round(Math.sqrt((this.boxes.length - this.freeIndices.length) * pixelsPerItem) + 0.5)\n    // Note: the following few lines need a cleanup.\n    // We should be using power of 2 textures. The problem is that pot texture sizes don't\n    // align with the 6 pixels per draw item. So we need to upload a slightly bigger texture\n    // but upload the 'usable' size.\n\n    // Only support power 2 textures. Else we get strange corruption on some GPUs\n    // in some scenes.\n    // Size should be a multiple of pixelsPerItem, so each geom item is always contiguous\n    // in memory. (makes updating a lot easier. See __updateItemInstanceData below)\n    // size = Math.nextPow2(size);\n\n    if (size % pixelsPerItem != 0) size += pixelsPerItem - (size % pixelsPerItem)\n\n    this.__width = size\n    // if((this.__width % pixelsPerItem) != 0)\n    //     this.__width -= (this.__width % pixelsPerItem);\n\n    if (!this.__drawItemsTexture) {\n      this.__drawItemsTexture = new GLTexture2D(gl, {\n        format: 'RGBA',\n        type: 'FLOAT',\n        width: size,\n        height: size,\n        filter: 'NEAREST',\n        wrap: 'CLAMP_TO_EDGE',\n        mipMapped: false,\n      })\n      this.__drawItemsTexture.clear()\n    } else {\n      this.__drawItemsTexture.resize(size, size)\n    }\n\n    this.__indexArray.forEach((index) => {\n      if (index != -1) this.__updateBox(index)\n    })\n\n    this.__updateRequested = false\n  }\n\n  /**\n   * The __updateBoxes method.\n   * @param {number} index - The index value.\n   * @private\n   */\n  __updateBox(index) {\n    if (this.drawCount == 0 || !this.__drawItemsTexture) {\n      return\n    }\n\n    const treeitemData = this.boxes[index]\n    if (!treeitemData.treeitem.isVisible()) return\n\n    const gl = this.__gl\n\n    const dataArray = new Float32Array(pixelsPerItem * 4)\n    this.__populateBoxesDataArray(treeitemData, 0, dataArray)\n\n    gl.bindTexture(gl.TEXTURE_2D, this.__drawItemsTexture.glTex)\n    const xoffset = (index * pixelsPerItem) % this.__width\n    const yoffset = Math.floor((index * pixelsPerItem) / this.__width)\n\n    const width = pixelsPerItem\n    const height = 1\n    const type = this.__drawItemsTexture.getType()\n    const format = this.__drawItemsTexture.getFormat()\n\n    if (type == gl.FLOAT) {\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, xoffset, yoffset, width, height, format, type, dataArray)\n    } else {\n      const unit16s = MathFunctions.convertFloat32ArrayToUInt16Array(dataArray)\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, xoffset, yoffset, width, height, format, type, unit16s)\n    }\n  }\n\n  /**\n   * The sort method.\n   * @param {object} renderstate - The object tracking the current state of the renderer\n   */\n  draw(renderstate) {\n    if (this.drawCount == 0) {\n      return\n    }\n    if (this.__updateRequested) {\n      this.__updateBoxes()\n    }\n\n    if (this.dirtyBoxes.size > 0) {\n      this.dirtyBoxes.forEach((index) => {\n        this.__updateBox(index)\n      })\n      this.dirtyBoxes.clear()\n    }\n\n    if (this.indexArrayUpdateNeeded) this.__updateIndexArray()\n\n    const gl = this.__gl\n\n    // gl.disable(gl.CULL_FACE)\n    // gl.enable(gl.BLEND)\n    // gl.blendEquation(gl.FUNC_ADD)\n    // gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\n    this.glshader.bind(renderstate)\n    this.glgeom.bind(renderstate)\n\n    const unifs = renderstate.unifs\n\n    if (!gl.floatTexturesSupported || !gl.drawElementsInstanced) {\n      const len = this.__indexArray.length\n      for (let i = 0; i < len; i++) {\n        // gl.uniformMatrix4fv(unifs.modelMatrix.location, false, this.__modelMatrixArray[i])\n        // gl.uniform4fv(unifs.treeitemData.location, this.__treeitemDataArray[i])\n        // gl.uniform4fv(unifs.tintColor.location, this.__tintColorArray[i])\n\n        renderstate.bindViewports(unifs, () => {\n          gl.drawQuad()\n        })\n      }\n    } else {\n      this.__drawItemsTexture.bindToUniform(renderstate, unifs.instancesTexture)\n      gl.uniform1i(unifs.instancesTextureSize.location, this.__width)\n\n      {\n        // The instance transform ids are bound as an instanced attribute.\n        const location = renderstate.attrs.instanceIds.location\n        gl.enableVertexAttribArray(location)\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.__instanceIdsBuffer)\n        gl.vertexAttribPointer(location, 1, gl.FLOAT, false, 4, 0)\n        gl.vertexAttribDivisor(location, 1) // This makes it instanced\n      }\n\n      renderstate.bindViewports(unifs, () => {\n        this.glgeom.drawInstanced(renderstate, this.drawCount)\n      })\n    }\n\n    // gl.disable(gl.BLEND)\n  }\n}\n\nexport { GLBoundingBoxPass }\n","import packageJson from '../package.json'\n\nimport { zeaDebug } from './helpers/zeaDebug'\nimport { LibsRegistry } from './LibsRegistry'\n\nimport { SystemDesc } from './SystemDesc'\nimport { Registry } from './Registry'\nimport * as Math from './Math/index'\nimport * as Utilities from './Utilities/index'\nimport * as SceneTree from './SceneTree/index'\nimport * as Renderer from './Renderer/index'\n\nconst libsRegistry = new LibsRegistry(packageJson.version)\nconst ZeaEngine = {\n  libsRegistry,\n  SystemDesc,\n  Registry,\n  ...Math,\n  ...Utilities,\n  ...SceneTree,\n  ...Renderer,\n}\n\nzeaDebug('Zea Engine version %s', packageJson.version)\n\nexport * from './SystemDesc'\nexport * from './Registry'\nexport * from './Math/index'\nexport * from './Utilities/index'\nexport * from './SceneTree/index'\nexport * from './Renderer/index'\n\nexport { libsRegistry, packageJson, ZeaEngine }\n\nglobalThis.zeaEngine = ZeaEngine\n","import semver from 'semver'\n\nimport { zeaDebug } from './helpers/zeaDebug'\n\n/**\n * Libraries registry.\n */\nclass LibsRegistry {\n  /**\n   * Construct a new libraries registry for the specific version.\n   * @param {string} version - The version of the Zea Engine that will be validated against the registered libraries.\n   */\n  constructor(version) {\n    this.version = version\n    this.registry = {}\n  }\n\n  /**\n   * Validate and register a library.\n   * @param {object} packageJson - The package.json of the library to register.\n   */\n  registerLib(packageJson) {\n    const libName = packageJson.name\n    const libVersion = packageJson.version\n    const expected = packageJson.dependencies['@zeainc/zea-engine']\n\n    const thisVersion = this.version.split('-')[0] // remove a tag name if it exists.\n    if (semver.satisfies(thisVersion, expected)) {\n      this.registry[libName] = libVersion\n      zeaDebug(\"Registered lib '%s' v%s\", libName, libVersion)\n      return\n    }\n\n    throw new Error(\n      `The library '${libName}' is not compatible with this version of the Zea Engine (${this.version}). It expects version '${expected}'.`\n    )\n  }\n\n  /**\n   * List the registered libraries with their versions.\n   * @return {object} Libraries list.\n   */\n  listLibs() {\n    return this.registry\n  }\n}\n\nexport { LibsRegistry }\n"],"names":["global","self","window","defaultSetTimout","Error","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","prototype","apply","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","startTime","browser$1","nextTick","args","Array","arguments","i","push","title","browser","env","argv","version","versions","binding","name","cwd","chdir","dir","umask","hrtime","previousTimestamp","clocktime","seconds","Math","floor","nanoseconds","platform","release","config","uptime","s","m","h","d","w","y","val","options","type","str","String","match","exec","n","parseFloat","toLowerCase","parse","isFinite","long","ms","msAbs","abs","plural","fmtLong","round","fmtShort","JSON","stringify","isPlural","createDebug","namespace","prevTime","debug","enabled","curr","Number","diff","prev","coerce","unshift","index","replace","format","formatter","formatters","splice","formatArgs","log","useColors","color","selectColor","destroy","extend","init","instances","indexOf","delimiter","newDebug","toNamespace","regexp","toString","substring","default","stack","message","disable","namespaces","names","map","skips","join","enable","save","split","RegExp","substr","instance","test","humanize","require$$0","Object","keys","forEach","key","hash","charCodeAt","colors","load","zeaDebug","exports","module","c","lastC","storage","setItem","removeItem","error","r","getItem","process","DEBUG","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","$1","localStorage","localstorage","j","v","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","NODE_DEBUG","re","src","t","R","createToken","value","isGlobal","undefined","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","LONECARET","opts","loose","filter","k","reduce","numeric","compareIdentifiers","a","b","anum","bnum","rcompareIdentifiers","require$$1","require$$2","SemVer","[object Object]","parseOptions","includePrerelease","TypeError","trim","LOOSE","FULL","raw","major","minor","patch","prerelease","id","num","build","other","compareMain","comparePre","identifier","inc","isNaN","er","compare","version1","version2","eq","v1","v2","hasPre","prefix","defaultResult","parsed","versionA","versionB","compareBuild","list","sort","op","neq","gt","gte","lt","lte","rtl","next","COERCERTL","lastIndex","Yallist","tail","head","item","l","insert","node","inserted","Node","create","removeNode","unshiftNode","pushNode","pop","res","shift","fn","thisp","walker","forEachReverse","get","getReverse","mapReverse","initial","acc","reduceReverse","toArray","arr","toArrayReverse","slice","from","to","ret","sliceReverse","start","deleteCount","nodes","reverse","p","Symbol","iterator","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","hit","isStale","del","maxAge","delete","Entry","forEachStep","max","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","Map","has","set","expiresAt","Range","range","Comparator","parseRange","first","isNullSet","isAny","comps","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","COMPARATORLOOSE","COMPARATOR","rangeList","comp","parseComparator","replaceGTE0","rangeMap","size","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","intersects","testSet","LRU","comparators","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","_","M","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","semver","ANY","allowed","operator","cmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","satisfies","high","low","outside","r1","r2","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","internalRe","tokens","require$$3","valid","require$$4","clean","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","rcompare","require$$13","compareLoose","require$$14","require$$15","require$$16","rsort","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","toComparators","require$$29","maxSatisfying","require$$30","minSatisfying","require$$31","minVersion","require$$32","validRange","require$$33","require$$34","gtr","require$$35","ltr","require$$36","require$$37","simplifyRange","ranges","simplified","original","subset","require$$39","SystemDesc","globalThis","isMobileDevice","isIOSDevice","browserName","webGLSupported","gpuDesc","deviceCategory","hardwareConcurrency","isMobile","browserDesc","nAgt","nameOffset","verOffset","ix","appName","fullVersion","appVersion","majorVersion","brave","lastIndexOf","toUpperCase","getBrowserDesc","webgl","webgl2","createElement","getContext","debugInfo","getExtension","warn","vendor","renderer","gpuVendor","maxTextureSize","supportsWebGL2","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","MAX_TEXTURE_SIZE","getGPUDesc","parts","gtxIdx","model","endsWith","includes","radeonIdx","rxIdx","modelNumber","ZeaSystemDesc","MathFunctions","rad","PI","deg","number","ceil","random","v0","pow","log10","fract","log2","exp","start1","end1","start2","end2","edge0","edge1","x","clamp","iexp","norm","mantissa","Uint8Array","signum","rest","exponent","limit","msb","lsb","float32Array","Float32Array","bits","toUInt16","Int32Array","buffer","f","NaN","unit16s","Uint16Array","int32View","_registeredBlueprints","_blueprintNames","_blueprints","Registry","register","blueprintName","blueprint","callbacks","blueprintIndex","getBlueprint","getBlueprintName","blueprintInstance","constructor","blueprintId","constructClass","blueprintData","flush","StringFunctions","pattern","replacement","space","precision","toFixed","chr","AttrValue","__data","offset","byteOffset","stringifyJSONWithFixedPrecision","toJSON","Vec2","super","Uint32Array","ArrayBuffer","fromJSON","isEqual","notEqual","EPSILON","scalar","sqrt","lengthSquared","cosine","normalize","dot","acos","angle","angleTo","cross","cosA","cos","sinA","sin","ax","ay","scale","zScale","createFromBuffer","reader","loadFloat32","p1","p2","p3","p4","u1","u4","u2x","u3x","u2y","u3y","Vec3","xy","yz","vec3","tmp","currLen","scl","az","bx","by","bz","json","Vec4","xyz","at","bt","tempA","tempB","glMatrix","RANDOM","out","RGBA","g","startsWith","setFromHex","setFromCSSColorName","hex","rgb","hexToRgb","colour","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colourNameToHex","componentToHex","int","gamma","ar","ag","ab","aa","gammaOffset","randomAlpha","Color","toHex","EulerAngles","order","Mat3","m00","m01","m02","m10","m11","m12","m20","m21","m22","xAxis","yAxis","zAxis","mat","up","zLen","setIdentity","scaleInPlace","xLen","yLen","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","loadFloat32Array","Mat4","m03","m13","m23","m30","m31","m32","m33","translation","mat4","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","asArray","b0","b1","b2","b3","v3","pos","target","subtract","axis","vec","fovY","aspect","near","far","rangeInv","left","right","bottom","top","lr","nf","m3x4","Quat","isArray","eulerAngles","ordered","ti","tj","tk","ci","cj","ck","si","sj","sk","cc","cs","sc","ss","ai","aj","ak","rotationOrder","euler","atan2","sqx","sqy","sqz","asin","halfAngle","mat3","setFromDirectionAndUpvector","setFromMat3","normalizeInPlace","fTrace","fRoot","getAngle","conjugate","aw","bw","vq","pq","multiply","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","xz","yw","zw","xw","axisIndex","dotProduct","lambda","theta","st","sut","coeff1","coeff2","Ray","point","c1","c2","p0","u","v_len","distanceTo","closestPoint","D","this_t","seg_t","dist","ray","ray_t","plane","N","PRECISION","sI","box3","tolerance","invDir","sign","bounds","diag","diagonal","tMin","tMax","tyMin","tyMax","tzMin","tzMax","clone","Xfo","tr","ori","setFromFloat32Array","isNull","isIdentity","is111","approxEqual","xfo","this_sc","rotateVec3","inverse","negate","rot","toMat4","trn","setFromMat4","float32array","readBinary","Box2","POSITIVE_INFINITY","NEGATIVE_INFINITY","addInPlace","SphereType","radius","Sphere","box","intersectsSphere","Box3","addPoint","transformVec3","scx","scy","scz","center","sphere","distanceToSquared","normal","constant","isNumeric","PlaneType","inverseNormalLength","Plane","Frustum","p5","planes","distanceToPoint","counter","EventEmitter","listeners","__id","eventName","listener","cb","event","removeListenerById","ids","GrowingPacker","root","blocks","resized","width","height","block","fit","__addBlock","findNode","splitNode","growNode","used","down","canGrowDown","canGrowRight","shouldGrowRight","shouldGrowDown","growRight","growDown","Allocation1D","Allocator1D","freeList","allocations","allocationsMap","allocatedSpace","reservedSpace","freeSpace","allocation","splitBlockSize","addBlock","freeBlock","nextIndex","removeBlock","consumed","freeItemIndex","freeIndex","freeItem","reserved","nextPow2","prevIndex","nextAllocation","POINTER_TYPES","mouse","touch","xr","RefCounted","__refs","__destroyed","referer","ParameterOwner","__params","__paramMapping","deprecatedParamMapping","__paramEventListenerIDs","getNumParameters","paramName","newParamName","param","insertParameter","getName","removeParameter","setOwner","newEvent","__parameterValueChanged","context","paramsJSON","savedParams","paramJSON","params","pj","paramPath","resolvePath","replaceParameter","reason","numProps","loadUInt32","propType","loadStr","propName","addParameter","srcParam","getParameterByIndex","loadValue","getValue","BinReader","data","__byteOffset","__dataView","DataView","__isMobileDevice","utf8decoder","TextDecoder","byteLength","remainingByteLength","getUint8","getUint16","getUint32","getInt32","uint16","loadUInt16","decode16BitFloat","loadFloat16","getFloat16","loadUFloat16","getFloat32","readPad","numChars","chars","decode","loadSInt32","loadUInt8","loadFloat32Vec2","loadFloat32Vec3","stride","pad","numBaseItems","BaseItem","__name","__path","__ownerItem","__selectable","__selected","__metaData","oldName","__updatePath","newName","getPath","path","ownerItem","sel","selected","metaData","setName","copyFrom","getFileFolder","filePath","loadFile","url","responseType","onSucceed","onFail","onProgress","xhr","XMLHttpRequest","addEventListener","readyState","status","statusText","open","send","err","loadTextfile","responseText","loadJSONfile","response","loadXMLfile","responseXML","loadBinfile","OperatorOutputMode","OP_WRITE","OP_READ_WRITE","Parameter","dataType","__value","__dataType","__boundOps","__dirtyOpIndex","__cleaning","prevName","operatorOutput","setParamBindIndex","__findFirstOP_WRITE","setDirty","mode","getParamBindIndex","__firstOP_WRITE","getMode","newDirtyIndex","getOperator","thisClassName","opClassName","_clean","evaluate","backPropagateValue","clonedValue","NumberParameter","step","__range","__step","MultiChoiceParameter","choices","setValue","BooleanParameter","Vec2Parameter","Vec3Parameter","Vec4Parameter","ColorParameter","loadRGBAFloat32Color","applyGamma","QuatParameter","Mat3Parameter","Mat4Parameter","XfoParameter","ImageParameter","imageType","StringListParameter","multiLine","loadStrArray","StringParameter","CodeParameter","lang","ListParameter","elem","__filter","items","clonedParam","removeElement","StructParameter","__members","parameter","member","members","TreeItemParameter","filterFn","__filterFn","listenerIDs","owner","__owner","treeItem","__emitTreeItemGlobalXfoChanged","makeRelative","ItemSetParameter","__items","emitValueChanged","addItem","clear","GeometryParameter","__emitBoundingBoxDirtied","OperatorInput","_param","_op","_paramValueChanged","setParam","detached","OperatorOutput","operatorOutputMode","_mode","_paramBindIndex","unbindOperator","bindOperatorOutput","getValueFromOp","setCleanFromOp","paramBindIndex","Operator","__inputs","__outputs","output","input","setOperator","getInput","getParam","getOutput","inputs","outputs","inputJson","addInput","getInputByIndex","outputJson","addOutput","getOutputByIndex","detach","reattach","rebind","CalcGlobalXfoOperator","globalXfoParam","localXfoParam","parentGlobalInput","isConnected","parentGlobalXfo","localXfo","globalXfoOutput","setClean","BoundingBoxParameter","dirty","_cleanBoundingBox","TreeItem","disableBoundingBox","__visibleCounter","__visible","__highlightMapping","__highlights","__childItems","__childItemsEventHandlers","__childItemsMapping","__visibleParam","__localXfoParam","__globalXfoParam","__boundingBoxParam","globalXfoOp","_setBoundingBoxDirty","__updateVisibility","parentItem","isVisible","getChildIndex","__unbindChild","childItem","getOwner","visible","propagateVisibility","propagateToChildren","addHighlight","nextName","nextColor","removeHighlight","boundingBox","getBoundingBox","bbox","addBox3","uniqueName","suffix","maintainXfo","fixCollisions","generateUniqueName","newLocalXfo","_childNameChanged","globalXfo","childGlobalXfo","__updateMapping","insertChild","removeChild","childName","getChildByName","callback","includeThis","__c","depth","children","getChildren","__t","propagating","onPointerDown","onPointerUp","onPointerMove","onPointerEnter","onPointerLeave","onWheel","childItemsJSON","childJSON","numTreeItems","childrenJson","childJson","addChild","itemFlags","setVisible","loadFloat32Quat","numChildren","toc","loadUInt32Array","seek","childType","cloned","srcChildItem","numCores","resourceLoader","__adapter","__totalWork","__doneWork","plugins","systemUrls","baseUrl","__commonResources","adapter","plugin","getType","resolveFileId","resolveFilename","resolveURL","resourceId","addLoadWork","loadUrl","loadArchive","then","entries","incrementWorkload","promise","incrementWorkDone","resource","getCommonResource","amount","percent","archiveUnpackerPlugin","__callbacks","__workers","__nextWorker","Promise","resolve","reject","worker","ArchiveUnpackerWorker","postMessage","onmessage","__onFinishedReceiveFileData","__constructWorker","terminate","fetch","ok","checkStatus","arrayBuffer","__getWorker","fileData","workerPromise","registerPlugin","jsonLoaderPlugin","textLoaderPlugin","text","binaryLoaderPlugin","Version","versionStr","numbers","branch","BinWriter","dataSize","__reserved","newSize","unit8Array","old_unit8Array","__grow","byteCount","__reserve","setUint8","__offset","setUint16","setUint32","setInt32","encode16BitFloat","writeUInt16","setFloat32","writeSize","count","writeUInt32","writeUInt8","writeFloat32","writeSInt32","writeFloat16","writeFloat32Vec2","writeFloat32Vec3","bytes","numBytes","FilePathParameter","getFilepath","filename","getFilename","suffixSt","getFile","getUrl","BaseImage","wrapS","wrapT","minFilter","magFilter","mipMapped","loaded","MaterialFloatParam","__image","disconnectImage","setImage","textureName","materialLibrary","getImage","MaterialColorParam","__imageUpdated","generateParameterInstance","defaultValue","texturable","Material","shaderName","__isTransparent","__isTextured","setShaderName","__shaderName","shaderClass","paramDescs","getParamDeclarations","paramMap","desc","__checkTransparency","textures","isTransparent","opacity","baseColor","isTextured","__checkTextures","getShaderName","paramValues","shader","numParams","string","charAt","hasImage","MaterialParameter","material","__valueParameterValueChanged","onlyPath","assetItem","getMaterialLibrary","getMaterial","Attribute","expectedSize","normalized","numElements","__dimension","obj","__defaultElementValue","MAX_VALUE","initRange","prevLength","newLength","numElems","setFromOther","dataElement","VertexAttribute","geom","defaultScalarValue","__geom","__splits","__splitValues","resize","face","faceVertex","vertex","getFaceVertexIndex","getValueRef","setFaceVertexValue_ByVertexIndex","valueRef","isValid","vertexSplitIds","fid","splitId","faceGroup","splitIndex","splitCount","splitIndices","numUnSplitValues","faces","tgt","splits","splitValues","jsonVal","dateTypeInstance","numSplitValues","vertexId","numSplits","faceId","dim","__numFloat32Elements","createFromFloat32Array","BaseGeom","__numVertices","__boundingBox","__boundingBoxDirty","__vertexAttributes","addVertexAttribute","setNumVertices","positions","getVertexAttribute","attr","vertexAttributes","vertices","setBoundingBoxDirty","delta","updateBoundingBox","numVerts","attrBuffers","attrName","numVertices","flags","debugColor","loadRGBFloat32Color","positionsAttr","normalsAttr","texCoordsAttr","parse8BitPositionsArray","sclVec","positions8bit","multiplyInPlace","parse8BitNormalsArray","normals8bit","parse8BitTextureCoordsArray","texCoords8bit","textureCoord","numClusters","loadUInt8Array","loadSplitValues","box2","clusters","clusterData","normalsRange","texCoordsRange","skipTopology","skipAttributes","attrJSON","Points","bboxMat","posAttr8bit","loadUInt32Vec2","loadBaseGeomBinary","Lines","__indices","setNumSegments","numOfSegments","getNumSegments","indices","setSegmentVertexIndices","line","lineVertex","buffers","genBuffers","loadUInt16Array","Mesh","__faceCounts","__faceVertexIndices","__faceAttributes","__edgeAttributes","__logTopologyWarnings","edgeVerts","vertexEdges","numEdges","edgeAngles","edgeVecs","numFaces","fc","faceCounts","numFacesVertices","numVertsPerFace","getNumFaces","faceVertexIndices","startSrc","startTgt","endSrc","faceIndex","idx","vertexIndices","faceVertexCount","getFaceVertexCount","getFaceVertexOffset","setFaceCounts","getNumEdges","connectedVertices","edgeFaces","faceEdges","getEdgeIndex","tmp0","tmp1","edgeVec","edgeData","edgeIndex","addEdge","edgeFaceIndex","faceVerts","getFaceVertexIndices","faceNormals","addFaceAttribute","faceNormal","pn","genTopologyInfo","computeFaceNormals","getFaceAttribute","n0","n1","hardAngle","calculateEdgeAngles","faceNormalsBuffer","getFaceNormal","vertexNormalsArray","setVertexNormal","getConnectedEdgeVecs","vertexIndex","e0","e1","edges","faceGroups","addFaceToGroup","inGroup","f0","f1","f0groupIndex","f1groupIndex","groupIndex","firstVertex","weight","setSplitVertexValues","hardEdges","attrSplits","getSplits","polygon","numUnSplitVertices","totalNumVertices","includeIndices","generateTriangulatedIndices","generateSplitValues","dimension","numRenderVerts","includeVertexNeighbors","vertexNeighbors","sortFanEdges","fanEdges","feA","feB","checkFanEdges","fe","neigVert","trisCount","computeNumTriangles","triangulatedIndices","triangleVertex","addTriangleVertexIndex","faceVertexCounts","offsetRange","loadSInt32Vec2","faceVertexIndexDeltas","numFaceVerts","faceOffsetsByCount","srcOffset","prevCount","faceOffsets","prevFaceVertex","hasVertexAttribute","computeVertexNormals","BaseProxy","__buffers","geomBuffers","attrData","PointsProxy","LinesProxy","MeshProxy","ProceduralPoints","dirtyTopology","dirtyVertices","topologyParams","rebuild","update","getNumVertices","ProceduralLines","ProceduralMesh","computeHardEdgesIndices","PointGrid","xDivisions","yDivisions","addTextureCoords","__x","__y","__xDivisions","__yDivisions","xCount","yCount","texCoords","xSize","ySize","Rect","Circle","sides","__radius","__angle","__sides","segs","arc","Cross","__sizeParam","LinesCuboid","baseZAtZero","__z","__baseZAtZero","zOff","Grid","skipCenterLines","__xParam","__yParam","__xDivisionsParam","__yDivisionsParam","__skipCenterLinesParam","Cone","detail","cap","addNormals","__radiusParam","__heightParam","__detailParam","__capParam","nbSides","tipPoint","basePoint","setFaceVertexIndices","tri","setFaceVertexValue","__cap","Cuboid","normals","__zParam","__baseZAtZeroParam","zoff","Cylinder","loops","caps","__sidesParam","__loopsParam","__capsParam","nbLoops","phi","normal1","normal2","Disc","SizeX","SizeY","DetailX","DetailY","__sizeXParam","__sizeYParam","__detailXParam","__detailYParam","detailX","detailY","quadId","vOff","sizeX","sizeY","numTris","numQuads","uv0","uv1","uv2","Torus","innerRadius","outerRadius","arcAngle","__innerRadiusParam","__outerRadiusParam","__arcAngleParam","nbSlices","ip","jp","ctheta","stheta","sphi","cphi","DataImage","__loaded","getParams","imageDataLibrary","FileImage","__crossOrigin","fileParam","stem","getStem","decorator","setFilepath","crossOrigin","imageElem","getDOMElement","__imageDataLibrary","complete","Image","basePath","FileImage2D","LDRImage","LDRVideo","setRange","videoElem","display","preload","getAudioSource","body","appendChild","muteParam","muted","loopParam","loop","videoHeight","videoWidth","prevFrame","timerCallback","paused","ended","currentFrame","currentTime","play","catch","ByteStream","DataParser","stream","readByte","peekByte","readBytes","peekBytes","readString","fromCharCode","readBitArray","bite","readUnsigned","littleEndian","schema","parseParts","part","parsePart","label","requires","parser","skip","parseBits","details","Parsers","countFunc","parent","subBlocks","gce","codes","future","disposal","userInput","transparentColorGiven","image","exists","interlaced","descriptor","lct","blockSize","frames","nextCode","gifSchema","resolution","lsd","gct","GIF","hasImages","decompressFrame","buildPatch","frame","totalPixels","pixels","minCodeSize","pixelCount","available","code_mask","code_size","end_of_information","in_code","old_code","code","datum","data_size","bi","pi","MAX_STACK_SIZE","nullCode","npix","dstPixels","pixelStack","lzw","newPixels","rows","cpRow","toRow","fromRow","fromPixels","offsets","steps","pass","deinterlace","dims","colorTable","delay","disposalType","extras","transparentIndex","transparentColorIndex","patchData","Uint8ClampedArray","colorIndex","generatePatch","decompressFrames","GIFImage","__streamAtlas","frameParam","playing","incrementFrame","numFrames","getFrameDelay","__resourcePromise","getRange","stop","__unpackedData","frameDelays","sideLength","atlasSize","tempCanvas","tempCtx","gifCanvas","gifCtx","atlasCanvas","atlasCtx","frameImageData","renderFrame","createImageData","putImageData","clearRect","drawImage","imageData","getImageData","frameRange","msg","unpackedData","VLHImage","filepath","__exposure","__ambientLightFactor","__hdrTint","__stream","__domElement","ldr","cdm","blob","Blob","ldrPic","onload","URL","createObjectURL","__decodeData","hdrTint","resourcePath","lod","lodPath","resourceAvailable","EnvMap","shCoeffs","samples","luminanceData","luminance","labelManager","__labelLibraries","__language","searchParams","URLSearchParams","location","search","nav","browserLanguagePropertyKeys","language","languages","getLanguage","__foundLabelLibraries","library","XLSX","unit8array","workbook","read","SheetNames","sheetName","utils","sheet_to_row_object_array","Sheets","row","Identifier","libraryName","labelName","labelText","ln","Label","__canvasElem","libraryParam","fontSize","loadLabelData","__requestedReRender","__needsRender","all","isLibraryFound","getLibraryText","getLabelText","isLibraryLoaded","loadText","fonts","font","loadFont","ctx2d","alpha","fontColor","margin","borderWidth","borderRadius","outline","outlineColor","background","backgroundColor","fillBackground","strokeBackgroundOutline","marginAndBorder","lines","measureText","fontHeight","canvas","fillStyle","fillRect","strokeStyle","ctx","fill","stroke","strokeWidth","tl","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","lineWidth","roundRect","textAlign","textBaseline","fillText","strokeText","renderLabelToImage","__getLabelText","VideoStreamImage2D","rearCamera","video","frameRate","ideal","facingMode","exact","domElement","mediaDevices","getUserMedia","audio","mediaStream","srcObject","onloadedmetadata","clearInterval","__intervalId","setInterval","flipY","InstanceItem","__srcTree","clonedTree","setSrcTree","onDone","BaseGeomItem","overlay","__cutAway","__cutAwayVector","__cutAwayDist","__layers","state","cutAwayVector","cutAwayDist","materialName","addMaterial","layer","addGeomToLayer","calculatePreciseBoundingBoxes","CalcGeomMatOperator","geomOffsetXfoParam","geomMatParam","geomOffsetXfo","geomMatOutput","globalMat4","geomOffsetMat4","GeomItem","geometry","__geomParam","__materialParam","addParameterDeprecationMapping","__geomOffsetXfoParam","__geomMatParam","geomIndex","calcGeomMatOperator","geomBBox","getGeomMat4","getVertex","subarray","numGeomItems","geomLibrary","getGeometryLibrary","getGeom","onGeomLoaded","onGeomLoadedListenerID","__cleanGeomMat","AssetLoadContext","units","assets","resources","folder","sdk","postLoadCallbacks","asyncCount","postLoadCallback","BaseGroup","searchRoot","__itemsParam","__bindItem","__unbindItem","__itemsEventHandlers","paths","clearItems","setItems","setPaths","treeItems","__loadDone","SelectionSet","__highlightedParam","__updateHighlight","highlightColorParam","highlighted","isSelected","getId","setSelected","traverse","setCutawayEnabled","workerId","workers","getWorker","geomLibraryId","__workerId","GeomParserWorker","GeomLibrary","__streamInfos","__genBuffersOpts","loadCount","geomFileID","geomsData","readBinaryBuffer","loadContext","__loadedCount","__numGeoms","geoms","incrementProgress","geomFileUrl","streamFileParsedListenerID","geomLibraryJSON","numGeomFiles","numGeomsPerFile","numGeoms","loadGeomFile","expectedNumGeoms","fileUrl","loadBin","geomIndexOffset","total","done","geomCount","numGeomsPerWorkload","bufferSliceStart","bufferSliceEnd","geomsRange","bufferSlice","__receiveGeomDatas","genBuffersOpts","geomDatas","storedRange","geomData","proxy","className","streamInfo","MaterialLibrary","__images","__materials","Default","assert","getMaterialNames","getImageNames","ontimeout","numMaterials","getNumMaterials","texture","materials","numTextures","getUnitsFactor","AssetItem","__geomLibrary","__engineDataVersion","__unitsScale","loadUnits","__units","unitsFactor","contextUnitsFactor","layerRoot","layers","geomItem","group","addPLCB","assetPath","relativePath","srcLocalXfo","BillboardItem","imageParam","Camera","__isOrthographicParam","__fovParam","__nearParam","__farParam","__focalDistanceParam","emitProjChanged","setPositionAndTarget","setLensFocalLength","adjustNearAndFarPlanesToFocalDist","nearDistFactor","farDistFactor","frameOnBoundingSphere","viewHeight","mapping","10mm","11mm","12mm","14mm","15mm","17mm","18mm","19mm","20mm","24mm","28mm","30mm","35mm","45mm","50mm","55mm","60mm","70mm","75mm","80mm","85mm","90mm","100mm","105mm","120mm","125mm","135mm","150mm","170mm","180mm","210mm","300mm","400mm","500mm","600mm","800mm","degToRad","duration","__orthoIntervalId","fov","focalDistance","prevValue","applyMovement","lerpValue","lerp","__focusIntervalId","position","setFocalDistance","setLookAt","getZaxis","viewport","aspectRatio","getWidth","getHeight","fovX","atan","newFocalDistance","targetOffset","currTarget","pan","boundaryPoints","getNumChildren","angleX","isOrthographic","angleY","frustumPlaneNormals","XPos","XNeg","YPos","YNeg","ZPos","ZNeg","frustumPlaneNormalsWs","frustumPlaneOffsets","centroid","planeOffset","dolly","zrange","viewWidth","frameBorder","xP0","xP1","xP2","xP3","xP","intersectionOfLines","yP0","yP1","yP2","yP3","yP","frameBorderAdjustment","orthoMat","halfHeight","setOrthographicMatrix","setPerspectiveMatrix","GroupTransformXfoOperator","groupGlobalXfoParam","groupTransformXfoParam","bindXfo","invBindXfo","groupTransformOutput","groupGlobalXfo","GroupMemberXfoOperator","memberXfoGlobalParam","_enabled","memberGlobalXfoOutput","memberGlobalXfo","groupTransformXfo","GROUP_XFO_MODES","disabled","manual","average","globalOri","Group","groupXfoDirty","calculatingGroupXfo","_bindXfoDirty","memberXfoOps","__initialXfoModeParam","calcGroupXfo","__updateMaterial","__updateCutaway","groupTransformParam","groupTransformOp","INITIAL_XFO_MODES","initialXfoMode","itemXfo","setBindXfo","hasParameter","__backupMaterial","cutEnabled","setCutVector","setCutDist","memberGlobalXfoParam","memberXfoOp","KinematicGroup","getHighlight","MaterialGroup","CuttingPlaneOperator","cuttingPlaneParam","cuttingPlaneOutput","CuttingPlane","booleanParam","vec4Parameter","cutPlaneOp","getSelectable","borderMaterial","border","cutPlane","sizex","sizey","getChild","SceneSettings","GridTreeItem","gridSize","gridColor","setSelectable","gridMaterial","grid","gridItem","axisLine","gridXAxisMaterial","gridXAxis","gridYAxisMaterial","zAxisLineItem","geomOffset","setFromAxisAndAngle","setGeomOffsetXfo","bBox","defaultGridColor","Scene","settings","envMap","gridTreeItem","plcbs","plcb","VLAAsset","__fileParam","numGeomsFiles","setNumGeoms","treeReader","tree2","entry","tree","loadGeomFilesStream","loadAssetJSON","DataFilePath","__datafileLoaded","filePathJSON","ObjAsset","fileFolder","parseMtlData","mtlFileData","WHITESPACE_RE","parseColor","elements","parseMap","specular","roughness","loadMtlFile","mtlFile","parseObjData","async","currGeom","currMtl","newGeom","verticesRemapping","texCoordsRemapping","normalsRemapping","texCoordIndices","normalIndices","numTexCoords","numNormals","splitGroupsIntoObjects","resolveFilepath","v_poly","vt_poly","vn_poly","eleLen","v_index","vt","vn","buildChildItems","geomName","buildChildItem","mesh","unitsConversion","vsrc","vtgt","loadedFaces","hasMaterial","defaultShader","loadObjData","RouterOperator","__input","inputValue","BaseTool","__activated","activated","PassType","OPAQUE","TRANSPARENT","OVERLAY","GLPass","passIndex","enabledParam","requestRedraw","__gl","gl","__renderer","__passIndex","rargs","renderstate","MANIPULATION_MODES","focussing","look","turntable","tumbler","trackball","CameraManipulator","appData","__defaultManipulationState","__manipulationState","__pointerDown","__dragging","aimFocusOnTouchTap","aimFocusOnMouseClick","enabledWASDWalkMode","__keyboardMovement","__keysPressed","__velocity","__prevVelocityIntegrationTime","__ongoingTouches","__orbitRateParam","__dollySpeedParam","__mouseWheelDollySpeedParam","activateTool","prevCursor","getGLCanvas","cursor","deactivateTool","manipulationMode","dragVec","camera","getCamera","orbitRate","orbit","rotateZ","pitch","rotateX","cameraTargetOffset","__orbitTarget","xVec","getXaxis","yVec","getYaxis","zVec","rotateAxis","dragVecLength","frustumHeight","getFrustumHeight","frustumWidth","getFocalDistance","getFov","cameraPlaneHeight","cameraPlaneWidth","cameraXfo","dollyDist","applyViewScale","zoomDist","setFrustumHeight","pointerPos","setCapture","orbitAroundCursor","intersectionData","intersectionPos","__prevPointerPos","getCapture","releaseCapture","distance","initalMode","prevGlobalXfo","initialDist","currDist","targetGlobalXfo","currDir","newDir","setFrom2Vectors","subtractInPlace","roll","displacement","initialGlobalXfo","initialTarget","getTargetPosition","dirToPosition","currDistToPosition","targetPos","pointerType","aimTarget","pointerRay","aimFocus","aimDistance","stopPropagation","preventDefault","endDrag","initDrag","button","ctrlKey","altKey","_onTouchStart","_onMouseMove","_onTouchMove","touches","touchPos","clientX","clientY","touchData","touch0","touchData0","touch1","touchData1","touch0Pos","touch1Pos","separationDist","touch0Drag","touch1Drag","dragDist","vecPrev","vecNow","deltaAngle","changedTouches","__endTouch","mouseWheelDollySpeed","modulator","shiftKey","viewVec","direction","deltaY","wheelDelta","__mouseWheelMovementDist","__mouseWheelZoomCount","__mouseWheelZoomId","time","timeDelta","speed","movement","newXfo","headHeight","area","raycastXfo","results","getRenderer","raycastCluster","avgDist","animationFrame","integrateVelocityChange","requestAnimationFrame","keyIndex","__startTouch","sgFactory","registerClass","create3DContext","opt_attribs","webglContextType","sizeInBytes","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","floatTexturesSupported","__ext_float_linear","__ext_texture_half_float_linear","__ext_color_buffer_float","__ext_float","__ext_half_float","HALF_FLOAT","HALF_FLOAT_OES","__ext_std_derivatives","__ext_Inst","vertexAttribDivisor","vertexAttribDivisorANGLE","bind","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","__ext_VAO","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","__ext_element_index_uint","__ext_WEBGL_depth_texture","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","DRAW_FRAMEBUFFER","FRAMEBUFFER","__ext_frag_depth","setupInstancedQuad","vertexIDs","__quadVertexIdsBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","__quadIndexBuffer","ELEMENT_ARRAY_BUFFER","__quadattrbuffers","shared","drawQuad","drawElements","TRIANGLES","setupLineSegAttrBuffers","vertexIdsBuffer","__linesegattrbuffers","processTextureParams","maxSize","getGLConst","nameOrValue","processParam","LINEAR","wrap","CLAMP_TO_EDGE","NEAREST","channels","RGB","__ext_sRGB","internalFormat","RED","R32F","RG","RG32F","RGB32F","RGBA32F","R16F","RGB16F","RGBA16F","R8","RGB8","RGBA8","depthFormat","depthType","depthInternalFormat","DEPTH_COMPONENT16","GLTexture2D","ready","textureType","textureDesc","__bound","setMetadata","imageUpdated","isLoaded","configure","__internalFormat","__type","__format","__wrapParam","__mipMapped","__minFilter","__magFilter","__wrapS","__wrapT","__flipY","invert","alphaFromLuminance","__gltex","deleteTexture","createTexture","__updateGLTexParams","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","ImageData","HTMLCanvasElement","HTMLImageElement","HTMLVideoElement","texImage2D","numPixels","numChannels","RED_INTEGER","ALPHA","LUMINANCE","LUMINANCE_ALPHA","pixelStorei","UNPACK_ALIGNMENT","__formatParam","__typeParam","convertFloat32ArrayToUInt16Array","generateMipmap","UInt8Array","UInt16Array","preserveData","gltex","fbo","createFramebuffer","bindFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","copyTexImage2D","deleteFramebuffer","dataArray","offsetX","offsetY","texSubImage2D","glTex","unif","bindToUniform","unifs","textureTypeUnif","textureDescUnif","bindings","unit","boundTextures","activeTexture","TEXTURE0","uniform1i","uniform4fv","glslTypes","bool","Boolean","uint","float","ivec2","ivec3","ivec4","vec2","vec4","sampler2D","samplerCube","shaderLibrary","__shaderModules","shaderNames","instanced","attributes","includeFile","lineNumber","includedGLSL","reursiveResult","parseShaderHelper","glsl","numLines","uniforms","addLine","trimmedLine","handleImport","parseAttr","typeIndex","typeName","membersStr","structDesc","memberparts","shaderInstanceId","GLShader","__shaderStagesGLSL","__shaderStages","__shaderProgramHdls","__gltextures","stageName","clearProgramsCache","shaderProgramkey","shaderCompilationResult","shaderKey","shaderHdls","deleteShader","deleteProgram","shaderProgramHdl","stageID","shaderopts","repl","replaceAll","directives","shaderHdl","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorLines","lineNum","numberedLinesWithErrors","padStart","__shaderCompilationAttempted","createProgram","parseShader","vertexShaderGLSL","vertexShader","__compileShaderStage","VERTEX_SHADER","attachShader","fragmentShaderGLSL","fragshaderopts","assign","frag","defines","fragmentShader","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","info","getProgramInfoLog","debugExt","hlsl","getTranslatedShaderSource","__extractAttributeAndUniformLocations","attrs","getAttributes","getAttribLocation","attrDesc","getUniforms","uniformName","unifType","structMemberName","getUniformLocation","shaderStageBlock","unifName","shaderkey","__createProgram","compileForTarget","glShader","useProgram","glGeom","bindRendererUnifs","supportsInstancing","GLFbo","colorTexture","createDepthTexture","__colorTexture","__createDepthTexture","__clearColor","__depthTexture","colorTextureResizeEventId","setup","clearColor","depthTextureGL","__fbo","DEPTH_COMPONENT24","DEPTH_COMPONENT","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","__checkFramebuffer","resizeTexture","check","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","__prevBoundFbo","boundRendertarget","bindForWriting","unbindForWriting","READ_FRAMEBUFFER","colorMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","GLRenderTarget","textureTargets","depthTexture","frameBuffer","numColorChannels","drawBuffers","__ext_draw_buffers","drawBuffersWEBGL","MAX_COLOR_ATTACHMENTS","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_DRAW_BUFFERS","MAX_DRAW_BUFFERS_WEBGL","bufferIds","checkFramebuffer","clearDepth","channelId","bindForReading","unbindForReading","texId","setShaderModule","UnpackHDRShader","setShaderStage","genDataTypeDesc","attrDataType","elementSize","GeomShaderBinding","shaderAttrs","geomAttrBuffers","indexBuffer","__shaderAttrs","__glattrbuffers","__indexBuffer","shaderAttrDesc","geomAttrBuffer","disableVertexAttribArray","geomAttrDesc","enableVertexAttribArray","vertexAttribPointer","VAOGeomShaderBinding","__vao","deleteBuffer","__indexBuffe","generateShaderGeomBinding","GLHDRImage","hdrImage","__hdrImage","loadImage","__unpackHDRImage","hdrImageParams","__srcLDRTex","__srcCDMTex","setClearColor","__unpackHDRShader","shaderComp","__shaderBinding","bindAndClear","ldrSampler","cdmSampler","srcRegion","unbind","disconnectScope","updated","PreComputeBRDFShader","ConvolveIrradianceShader","ConvolveSpecularShader","GLProbe","maxFragmentShaderTextureUnits","MAX_TEXTURE_IMAGE_UNITS","__convolved","__fbos","srcGLTex","brdfLUTTexture","RG16F","brdfShader","brdfShaderBinding","brdfFboId","convolveIrradianceShader","convolveIrradianceShaderBinding","irradianceCubeTex","TEXTURE_CUBE_MAP","LINEAR_MIPMAP_LINEAR","TEXTURE_WRAP_R","TEXTURE_CUBE_MAP_POSITIVE_X","irradianceFboId","convolverShader","covolverShaderBinding","specularCubetex","maxMipLevels","mip","mipWidth","mipHeight","fboId","uniform1f","irradianceMap","prefilterMap","brdfLUT","envMapFlags","EnvMapShader","GLEnvMap","__envMap","__backgroundFocus","__srcGLTex","__envMapShader","envMapShaderComp","__envMapShaderBinding","headlightParam","updateHeadlightModeFlag","convolveProbe","focus","exposure","depthMask","bindViewports","ScreenQuadShader","GLScreenQuad","__pos","__size","__glshader","__quadBinding","uniform2fv","GLGeom","__shaderBindings","buffersDirty","dirtyBuffers","clearBuffers","genBufferOpts","updateBuffers","shaderBinding","instanceCount","draw","glbuffer","deleteMetadata","GLMesh","__numTriIndices","__indexDataType","__numTriangles","__numRenderVerts","attrBuffer","glattr","__wireframesVao","__ext","wireframeIndexBuffer","wireframeIndices","positionsBuffer","__numWireIndices","LINES","__hardEdgesVao","hardEdgeIndexBuffer","hardEdgeIndices","__numEdgeIndices","drawArrays","POINTS","MSAA_RENDERBUFFER","COLORBUFFER","DEPTHBUFFER","GLBaseViewport","__doubleClickTimeMSParam","__ongoingPointers","__backgroundColor","quad","offscreenBuffer","DEPTH_STENCIL","DEPTH24_STENCIL8","highlightedGeomsBuffer","highlightedGeomsBufferFbo","sceneSet","bgColorParam","getScene","processBGValue","__backgroundTexture","__backgroundGLTexture","offscreenBufferFbo","__width","__height","canvasWidth","canvasHeight","__canvasWidth","__canvasHeight","resizeRenderTargets","outlineThickness","colorRenderbuffer","deleteRenderbuffer","renderbufferStorageMultisample","prevRendertarget","DEPTH_TEST","drawScene","drawHighlights","clearBufferfv","COLOR","blitFramebuffer","screenQuad","bindShader","BLEND","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","silhouetteShader","uniform2f","screenSize","uniform4f","outlineSensitivity","outlineDepthBias","depthRange","bindAndDraw","depthFunc","LESS","drawHighlightedGeoms","highlightsShader","highlightOutlineThickness","highlightDataTexture","highlightDataTextureSize","region","manipulator","tool","pointerId","findIndex","pointer","GLViewport","__projectionMatrix","__frustumDim","__bl","__tr","__prevDownTime","__geomDataBuffer","__geomDataBufferSizeFactor","__geomDataBufferFbo","debugGeomShader","__floatGeomBuffer","setCamera","setManipulator","__camera","__updateProjectionMatrix","renderGeomDataFbo","getNear","getFar","getCameraParams","__cameraXfo","__cameraMat","__viewMat","invalidateGeomDataBuffer","interfaceType","viewXfo","fieldOfView","updateProjectionMatrix","frustumH","frustumW","activeViewport","frameView","screenPos","topy","sx","sy","cameraMat","projInv","rayStart","rayDirection","cameraSpaceOffset","__initRenderState","geomDataFbo","drawSceneGeomData","__geomDataBufferInvalid","__screenPos","__intersectionData","finish","bufferWidth","bufferHeight","passId","readPixels","getPass","geomItemAndDist","getGeomItemAndDist","calcRayFromScreenPos","widthFactor","heightFactor","tlX","tlY","brX","brY","rectBottom","rectLeft","rectWidth","rectHeight","geomItems","rendererX","rendererY","getPosX","getPosY","capturedItem","__preparePointerEvent","__getPointerPos","getGeomDataAtPos","downTime","onPointerDoublePress","touchRay","pointerOverItem","leftGeometry","onKeyDown","onKeyUp","onTouchCancel","viewScale","cameraMatrix","viewports","viewMatrix","projectionMatrix","viewportFrustumSize","debugHighlightedGeomsBuffer","VRHead","xrvp","stageTreeItem","__xrvp","__treeItem","__mat4","__localXfo","hmdGeomItem","getAsset","pose","setDataArray","transform","matrix","fromMat4","VRController","inputSource","__inputSource","buttonPressed","__xfo","handedness","__tip","tipXfo","getTreeItem","__activeVolumeSize","targetRayMode","profiles","loadHMDResources","srcControllerTree","controllerTree","tick","__touchpadValue","__buttonPressed","refSpace","xrFrame","inputPose","getPose","gripSpace","__geomAtTip","__hitTested","getGeomItemAtTip","vol","raycastWithXfo","VRViewManipulator","__controllerTriggersHeld","vrControllerToolTip","vrControllerToolTipMat","controller","getTipItem","removeAllChildren","getControllers","addIconToController","__grabPos","getControllerTipStageLocalXfo","stageXfo__GrabStart","getXfo","__invOri","__grabDir","__grabDist","__grab_to_stage","__initMoveStage","stageXfo","setXfo","grabPos","deltaXfo","grabDir","grabDist","rotateY","oriTrDelta","deltaSc","deltaTr","onVRControllerButtonDown","onVRPoseChanged","onVRControllerButtonUp","onVRControllerDoubleClicked","VRViewport","__projectionMatricesUpdated","__stageTreeItem","addTreeItem","__vrhead","controllersMap","controllers","controllerPointerDownTime","spectatorMode","__leftViewMatrix","__leftProjectionMatrix","__rightViewMatrix","__rightProjectionMatrix","__vrAsset","__stageXfo","__stageMatrix","__stageScale","__canPresent","session","drawingBufferWidth","drawingBufferHeight","onAnimationFrame","drawXRFrame","hmd","__hmd","__hmdAssetPromise","hmdAssetId","asset","setCommonResource","materialNames","setSpectatorMode","requestSession","requiredFeatures","optionalFeatures","__xrViewportPresenting","getViewport","createController","ev","added","glLayer","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","__region","onRefSpaceCreated","__refSpace","__startSession","requestReferenceSpace","startPresenting","end","stopPresenting","__hmdCanvasSize","inputSources","updatePose","renderState","getViewerPose","views","__projectionMatrices","__viewMatrices","__cameraMatrices","view","projMat","framebuffer","depthNear","depthFar","vrviewport","vp","vrPresenting","preparePointerEvent","updateControllers","capturedElement","SimpleUniformBinding","glMaterial","textureUnif","uniformXX","uniform1ui","bindValue","genGLTex","gltexture","getMetadata","texBinding","preBind","addRef","boundImage","imageLoaded","connectImage","removeRef","ComplexUniformBinding","uniform3fv","vals","MatrixUniformBinding","uniformMatrixXXX","uniformMatrix3fv","uniformMatrix4fv","ColorUniformBinding","logged","MaterialShaderBinding","warnMissingUnifs","uniformBindings","bindParam","getParameters","uniformBinding","GLMaterial","__material","__boundTexturesBeforeMaterial","GLMaterialLibrary","refCounts","materialIndices","glMaterials","freeIndices","dirtyIndices","materialsAllocator","matData","getShaderClass","getPackedMaterialData","allocate","getOrCreateShader","getAllocation","deallocate","materialsTextureSize","materialsTexture","tex","texWidth","xoffset","remaining","rowStart","dirtyItemIndices","uploadGeomItems","drawItemsTexture","glGeomItemsTexture","uploadMaterials","uniform2i","GLPoints","points","__vboState","numVertsChanged","PointSize","attrbuffers","GLLines","__numSegIndices","__fatBuffersNeedUpload","fatBuffers","positionsTexture","glattrbuffers","segmentIndices","drawCount","getVertexAttributes","lineThicknessAttr","lineThickness","getFloat32Value","makeIndices","indexArray","seqentialIndex","topologyChanged","__buffersNeedUpload","LineThickness","genFatBuffers","positionsTextureSize","occluded","GREATER","LEQUAL","GLGeomItemChangeType","GEOMITEM_CHANGED","GEOM_CHANGED","VISIBILITY_CHANGED","HIGHLIGHT_CHANGED","GLGeomItemFlags","GEOMITEM_FLAG_CUTAWAY","GEOMITEM_INVISIBLE_IN_GEOMDATA","GLGeomItem","drawItemId","geomId","materialId","supportInstancing","geomVisible","culled","updateVisibility","cutDataChanged","cutData","isCutawayEnabled","geomMatrixDirty","modelMatrixunif","modelMatrix","modelMatrixArray","drawItemDataunif","drawItemData","cutawayDataUnif","cutawayData","getCutVector","getCutDist","GLGeomItemSet","glGeomItems","glgeomItems_freeIndices","glgeomItemEventHandlers","drawIdsArray","drawIdsBuffer","drawIdsBufferDirty","highlightedIdsArray","highlightedIdsBuffer","highlightedIdsBufferDirty","visibleItems","highlightedItems","glGeomItem","change","isHighlighted","eventHandlers","highlightChanged","visibilityChanged","getDrawIdsArray","tgtIndex","getDrawItemId","getHighlightedIdsArray","updateDrawIDsBuffer","__bindAndRender","updateHighlightedIDsBuffer","itemIndices","instancedDraw","instancedIds","drawInstanced","GLMaterialGeomItemSets","glGeomItemSets","materialChanged","glGeomItemSet","removeGeomItem","assignTreeItemToGLPass","geomItemSet","addGeomItemSet","addGLGeomItem","checkMaterial","getGLGeom","listenerID","drawCountChanged","drawHighlighted","GLShaderMaterials","shaders","glgeomdatashader","glselectedshader","glMaterialGeomItemSets","matGeomItemSet","findMaterialGeomItemSets","addMaterialGeomItemSets","destructing","glGeomItemLibrary","glMaterialGeomItemSet","floatGeomBuffer","drawGeomData","resizeIntArray","intArray","newArray","GLGeomLibrary","shaderAttrSpec","freeGeomIndices","geomRefCounts","geomsDict","glGeomsDict","geomBuffersTmp","shaderBindings","bufferNeedsRealloc","attributesAllocator","dirtyGeomIndices","geomVertexOffsets","geomVertexCounts","numIndices","indicesAllocator","indicesCounts","indicesOffsets","glgeom","attrSpec","numValues","glattrbuffer","dstByteOffsetInBytes","bufferSubData","attributesAllocation","offsettedIndices","allocateBuffers","uploadBuffers","cleanGeomBuffers","GLGeomItemLibrary","glGeomItemEventHandlers","glGeomItemsMap","glGeomItemsIndexFreeList","dirtyWorkerItemIndices","removedItemIndices","enableFrustumCulling","setupCullingWorker","GLGeomItemLibraryCullingWorker","workerReady","applyCullResults","viewportChanged","solidAngleLimit","frustumHalfAngleY","frustumHalfAngleX","xrViewport","cullFreq","cameraPos","cameraOri","forceViewChanged","materialParam","matIndex","glMaterialLibrary","removeMaterial","geomItemChanged","geomParm","glGeomLibrary","addGeom","geomChanged","removeGeom","drawItemChanged","workerItemDataChanged","newlyCulled","newlyUnCulled","setCulled","handlers","subIndex","pixelsPerItem","pix0","getMaterialAllocation","pix1","pix2","pix3","pix4","highlight","pix5","boundingRadius","cullable","fixedSizeParam","geomItemsUpdateToCullingWorker","getCullingWorkerData","typeId","indexStart","yoffset","indexEnd","uploadCount","populateDrawItemDataArray","populate","uploadGeomItemsToWorker","instancesTexture","instancesTextureSize","activeGLRenderer","pointerIsDown","pointerLeft","registeredPasses","GLBaseRenderer","$canvas","__shaders","__passes","__passesRegistrationOrder","__passCallbacks","__viewports","__activeViewport","__continuousDrawing","__redrawRequested","__isMobile","__drawSuspensionLevel","__shaderDirectives","setupWebGL","webglOptions","bindEventHandlers","addViewport","passType","cls","addPass","__supportXR","supportXR","__xrViewport","__xrViewportPromise","setupXRViewport","makeXRCompatible","__setupXRViewport","isSessionSupported","isSupported","__glcanvas","getViewportAtPos","activateViewport","renderGeomDataFbos","__renderGeomDataFbosRequested","__scene","setupGrid","scene","getRoot","__gizmoContext","setSelectionManager","getSelectionManager","geomParam","geomAssigned","removeTreeItem","addGeomItem","handled","continueInSubTree","itemAddedToScene","passCbs","itemAddedFn","itemRemovedFromScene","itemRemovedFn","newWidth","newHeight","parentElement","tagName","rootIsDiv","__div","lastResize","timoutId","resizeObserver","ResizeObserver","contentRect","calcPixelsAndResize","dpr","devicePixelRatio","devicePixelContentBoxSize","inlineSize","contentBoxSize","displayWidth","displayHeight","handleResize","clientWidth","clientHeight","observe","parentNode","ex","preserveDrawingBuffer","antialias","stencil","xrCompatible","powerPreference","alert","addShaderPreprocessorDirective","ext","disableMultiDraw","multiDrawArrays","multiDrawArraysWEBGL","multiDrawElements","multiDrawElementsWEBGL","multiDrawElementsInstanced","multiDrawElementsInstancedWEBGL","multiDrawArraysInstanced","multiDrawArraysInstancedWEBGL","__screenQuad","isValidCanvas","prepareEvent","sp","calcRendererCoords","rect","getBoundingClientRect","isMobileSafariMouseEvent","activateViewportAtPos","getActiveViewport","passive","onmousewheel","oncontextmenu","viewportIndex","updateIndices","getPassType","passSet","setPassIndex","emitViewChanged","isContinuouslyDrawing","stopContinuousDrawing","startContinuousDrawing","eye","bindGLBaseRenderer","mask","unobserve","HighlightsShader","SilhouetteShader","ALL_PASSES","GLRenderer","__tonemap","__gamma","__glEnvMap","__glBackgroundMap","__displayEnvironment","__debugMode","_planeDist","__cutPlaneNormal","rayCastDist","rayCastArea","__debugTextures","disableTextures","debugGeomIds","isStreamAtlas","GLImageStream","backgroundMap","__backgroundMapShader","__backgroundMapShaderBinding","envMapParam","__bindEnvMap","displayEnvMapParam","setScene","displayEnvironment","raycast","__rayCastRenderTarget","__rayCastRenderTargetProjMatrix","CULL_FACE","dataPixels","pixelID","backgroundImage","bindGLRenderer","drawBackground","BillboardShader","EnvProjectionShader","OctahedralEnvProjectionShader","LatLongEnvProjectionShader","FatLinesShader","FlatSurfaceShader","LinesShader","finalize","NormalsShader","PointsShader","FatPointsShader","SimpleSurfaceShader","StandardSurfaceShader","ScreenSpaceShader","GLStandardGeomsPass","filterGeomItem","getGeomDataShaderName","getSelectedShaderName","itemId","decode16BitFloatFrom2xUInt8","getGeomItem","GLGeomItemSetMultiDraw","glGeomIdsMapping","drawElementCounts","drawElementOffsets","highlightElementCounts","highlightElementOffsets","drawIdsTexture","highlightedIdsTexture","geomItemIndices","offsetAndCount","getGeomOffsetAndCount","highlightIndex","visibleItemIndex","drawIdsTextureSize","level","highlightIdsTextureSize","counts","multiDraw","viewPos","distances","srcIndex","GLLinesItemSet","drawIds","drawId","GLPointsItemSet","GLMeshItemSet","GLShaderGeomSets","glGeomDataShader","glHighlightShader","glShaderKey","glGeomDataShaderKey","glHighlightShaderKey","geomItemParamChanged","getOrCreateGLGeomItemSet","removeGLGeomItem","isCompiledForTarget","elementType","sortItems","GLOpaqueGeomsPass","__glshadermaterials","__glShaderGeomSets","glShaderGeomSets","constructShaders","getGLGeomItem","constructGLGeom","getGLMaterial","glshaderMaterials","removeMaterialGeomItemSets","__traverseTreeAndDraw","drawSilhouettes","__drawItemsTexture","registerPass","FattenLinesShader","GLLinesPass","linesGeomDataBuffer","fattenLinesShader","colorTex","GLTransparentGeomsPass","transparentItems","transparentItemIndices","prevSortCameraPos","sortCameraMovementDistance","reSort","resortNeeded","itemindex","visibleindex","transparentItem","currentGLMaterial","currentGLGeom","currentglShader","_drawItem","cullFace","BACK","_drawItems","AtlasLayoutShader","GLImageAtlas","__subImages","__layoutNeedsRegeneration","__asyncCount","subImage","incAsyncCount","decAsyncCount","renderAtlas","gltext","__layout","packer","__atlasLayoutShader","__atlasLayoutShaderBinding","layoutItem","__atlasLayoutTexture","__layoutVec4s","cleanup","generateAtlasLayout","glimage","srctexture","srctextureDim","atlasLayoutUnif","atlasDescUnif","GLBillboardsPass","billboards","dirtyBillboards","threshold","updateRequested","atlas","emitUpdated","addBillboard","removeBillboard","billboard","imageIndex","addSubImage","reqUpdateIndexArray","updateBillboard","indexArrayUpdateNeeded","requestUpdate","billboardData","removeSubImage","ppm","pivot","col0","col1","col2","col3","instanceIdsBuffer","doIt","updateIndexArray","glshader","billboardDataArray","tintColorArray","populateBillboardDataArray","getFormat","atlasBillboards","inVR","instanceIds","tintColor","layoutData","getLayoutData","updateBillboards","__draw","GLOverlayPass","isOverlay","BoundingBoxShader","GLBoundingBoxPass","boxes","dirtyBoxes","__updateRequested","continueIntoSubTree","bindTreeItem","unbindTreeItem","treeitem","xfoChanged","treeitemData","__updateBoxes","pixel0","pixel1","pixel2","pixel3","pixel4","pixel5","__indexArray","__instanceIdsBuffer","__updateIndexArray","__modelMatrixArray","__treeitemDataArray","__tintColorArray","__updateBox","__populateBoxesDataArray","libsRegistry","registry","packageJson","libName","libVersion","expected","dependencies","thisVersion","ZeaEngine","Utilities","SceneTree","Renderer","zeaEngine"],"mappings":"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"}